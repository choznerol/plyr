{"version":3,"sources":["src/js/utils/is.js","src/js/utils/events.js","src/js/utils/elements.js","src/js/utils/animation.js","src/js/utils/browser.js","src/js/support.js","src/js/html5.js","src/js/utils/arrays.js","src/js/utils/objects.js","src/js/utils/strings.js","src/js/utils/i18n.js","src/js/storage.js","src/js/utils/fetch.js","src/js/utils/loadSprite.js","src/js/utils/time.js","src/js/controls.js","src/js/utils/urls.js","src/js/captions.js","src/js/config/defaults.js","src/js/config/states.js","src/js/config/types.js","src/js/console.js","src/js/fullscreen.js","src/js/hahowCustomControl.js","src/js/utils/loadImage.js","src/js/ui.js","src/js/listeners.js","src/js/logo.js","node_modules/loadjs/dist/loadjs.umd.js","src/js/utils/loadScript.js","src/js/plugins/vimeo.js","src/js/plugins/youtube.js","src/js/media.js","src/js/plugins/ads.js","src/js/plugins/lectureNote.js","src/js/source.js","src/js/plyr.js"],"names":["getConstructor","input","constructor","instanceOf","Boolean","isNullOrUndefined","isObject","Object","isString","String","isArray","Array","isNodeList","NodeList","isEmpty","length","keys","is","nullOrUndefined","object","number","Number","isNaN","string","boolean","function","Function","array","weakMap","WeakMap","nodeList","element","Element","textNode","Text","event","Event","keyboardEvent","KeyboardEvent","cue","window","TextTrackCue","VTTCue","track","TextTrack","kind","url","URL","startsWith","concat","hostname","e","empty","supportsPassiveListeners","supported","options","defineProperty","get","addEventListener","removeEventListener","toggleListener","callback","_this","this","toggle","arguments","undefined","passive","capture","events","split","forEach","type","eventListeners","push","on","call","off","once","onceCallback","_len","args","_key","apply","triggerEvent","bubbles","detail","CustomEvent","assign","plyr","dispatchEvent","err","Error","JSON","stringify","wrap","elements","wrapper","targets","from","reverse","index","child","cloneNode","parent","parentNode","sibling","nextSibling","appendChild","insertBefore","setAttributes","attributes","entries","filter","_ref","value","_slicedToArray","_ref3","_ref4","key","setAttribute","createElement","text","document","innerText","insertElement","removeElement","removeChild","emptyElement","childNodes","lastChild","replaceElement","newChild","oldChild","replaceChild","getAttributesFromSelector","sel","existingAttributes","existing","s","selector","trim","className","replace","parts","charAt","class","id","toggleHidden","hidden","hide","removeAttribute","toggleClass","force","map","method","classList","contains","hasClass","matches","prototype","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","querySelectorAll","includes","getElements","container","getElement","querySelector","setFocus","tabFocus","focus","config","classNames","transitionEndEvent","WebkitTransition","MozTransition","OTransition","transition","find","style","repaint","setTimeout","offsetHeight","range","browser","isIE","documentMode","isWebkit","documentElement","test","navigator","userAgent","isIPhone","platform","isIos","defaultCodecs","audio/ogg","audio/wav","video/webm","video/mp4","video/ogg","support","audio","video","check","provider","playsinline","canPlayInline","api","ui","rangeInput","pip","webkitSetPresentationMode","pictureInPictureEnabled","disablePictureInPicture","airplay","WebKitPlaybackTargetAvailabilityEvent","mime","inputType","mediaType","isHTML5","media","canPlayType","textTracks","touch","transitions","reducedMotion","matchMedia","html5","getSources","source","getAttribute","getQualityOptions","extend","player","configurable","set","_player$media","currentTime","paused","preload","readyState","pause","src","play","load","speed","storage","controls","updateSetting","quality","cancelRequests","sources","blankVideo","debug","log","dedupe","item","indexOf","getDeep","path","reduce","obj","target","shift","_defineProperty","format","toString","match","i","replaceAll","RegExp","toTitleCase","toUpperCase","substr","toLowerCase","toCamelCase","toPascalCase","slice","getHTML","innerHTML","resources","vimeo","youtube","i18n","{seektime}","seekTime","{title}","title","_ref2","Storage","_classCallCheck","enabled","store","localStorage","getItem","json","parse","setItem","removeItem","fetch","responseType","Promise","resolve","reject","request","XMLHttpRequest","responseText","response","status","open","send","loadSprite","hasId","exists","getElementById","update","data","body","insertAdjacentElement","useStorage","cached","content","then","result","catch","getHours","parseInt","getMinutes","getSeconds","formatTime","time","displayHours","inverted","hours","mins","secs","getIconUrl","cors","iconUrl","location","host","svg4everybody","findElements","selectors","buttons","restart","rewind","fastForward","mute","settings","captions","fullscreen","progress","inputs","seek","volume","display","buffer","duration","seekTooltip","tooltip","error","warn","toggleNativeControls","createIcon","iconPath","iconPrefix","icon","createElementNS","role","focusable","use","setAttributeNS","createLabel","attr","join","createBadge","badge","menu","createButton","buttonType","props","label","labelPressed","iconPressed","control","button","createRange","min","max","step","autocomplete","aria-label","aria-valuemin","aria-valuemax","aria-valuenow","updateRangeFill","createProgress","aria-hidden","suffixKey","played","suffix","createTime","bindMenuItemShortcuts","menuItem","which","preventDefault","stopPropagation","isRadioButton","showMenuPanel","nextElementSibling","firstElementChild","previousElementSibling","lastElementChild","focusFirstMenuItem","createMenuItem","_this2","list","_ref$badge","_ref$checked","checked","aria-checked","flex","enumerable","children","node","listeners","bind","currentTrack","parseFloat","updateTimeDisplay","updateVolume","setRange","muted","pressed","updateProgress","_this3","current","toFixed","getElementsByTagName","nodeValue","setProgress","buffered","percent","setProperty","updateSeekTooltip","_this4","tooltips","clientRect","getBoundingClientRect","visible","width","pageX","left","timeUpdate","invert","invertTime","seeking","durationUpdate","Math","pow","hasDuration","displayDuration","toggleMenuButton","setting","pane","panels","setCaptionsPositionMenu","default","getLabel","setQualityMenu","_this5","checkMenu","sort","a","b","sorting","getBadge","setCaptionsMenu","_this6","tracks","getTracks","toggled","language","unshift","_this7","panes","toggleTab","position","setSpeedMenu","_this8","isVimeo","values","some","popup","firstItem","toggleMenu","show","isMenuItem","getMenuSize","tab","clone","opacity","scrollWidth","height","scrollHeight","_this9","size","restore","propertyName","setDownloadLink","download","create","_this10","aria-haspopup","aria-controls","aria-expanded","inner","home","backButton","href","urls","isEmbed","inject","_this11","floor","random","seektime","addProperty","controlPressed","_this$config","labels","parseUrl","parser","buildUrlParams","params","URLSearchParams","setup","isVideo","isYouTube","protocol","blob","createObjectURL","languages","userLanguage","active","setPosition","captionPosition","trackEvents","_this$captions","meta","currentTrackNode","languageExists","mode","updateCues","setLanguage","customMenu","caption","activeClass","findTrack","_toConsumableArray","embed","enableTextTrack","has","sortIsDefault","sorted","every","getCurrentTrack","cues","activeCues","getCueAsHTML","cueText","setDefault","defaultLanguage","captionsActive","captionsLanguage","findLanguageList","defaults","autoplay","autopause","toggleInvert","ratio","clickToPlay","hideControls","resetOnEnd","disableContextMenu","logo","link","fullscreenContainer","loop","selected","keyboard","focused","global","fallback","iosNative","seekLabel","unmute","enableCaptions","disableCaptions","enterFullscreen","exitFullscreen","enterZoom","exitZoom","frameTitle","noCaptions","caption-position","captionPositionLabel","top","bottom","menuBack","normal","start","end","all","reset","disabled","advertisement","qualityBadge","2160","1440","1080","720","576","480","sdk","iframe","googleIMA","editable","layer","topLayer","bottomLayer","right","zoom","embedContainer","poster","posterEnabled","ads","playing","stopped","loading","hover","isTouch","uiSupported","noTransition","outerContainer","google","publisherId","providers","types","noop","Console","console","onChange","isZoom","zoomActive","isIosNative","isOutterContainerSet","first","last","keyCode","activeElement","shiftKey","toggleFallback","scrollPosition","x","scrollX","y","scrollY","scrollTo","overflow","viewport","head","property","hasProperty","cleanupViewport","part","Fullscreen","prefix","native","toggleZoom","webkitEnterFullscreen","requestFullscreen","webkitExitFullscreen","action","cancelFullScreen","exit","enter","fullscreenElement","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","pre","hahow","createControls","bottomLeft","bottomRight","addLecturneNoteBtn","lectureNote","addLectureNote","form","aria-labelled-by","tabindex","tabs","back","loadImage","minWidth","image","Image","handler","onload","onerror","naturalWidth","addStyleHook","addStylehookToFullscreenContainer","build","ready","checkPlaying","setTitle","setPoster","togglePoster","enable","backgroundImage","backgroundSize","toggleControls","checkLoading","clearTimeout","timers","recentTouchSeek","lastSeekTime","Date","now","Listeners","lastKey","focusTimer","lastKeyDown","handleKey","setTabFocus","firstTouch","code","repeat","altKey","ctrlKey","metaKey","togglePlay","increaseVolume","decreaseVolume","forward","toggleCaptions","isLoadedLectureNote","addLectureNoteButtonStatus","timeStamp","wasKeyDown","delay","hasAudio","initialized","managerPromise","isAudio","ended","proxyEvents","_event$detail","defaultHandler","customHandlerKey","customHandler","returned","hasCustomHandler","proxy","inputEvent","rect","currentTarget","hasAttribute","done","seekTo","webkitDirectionInvertedFromDevice","_map2","deltaX","deltaY","direction","sign","abs","logoContainer","imageContainer","linkElement","logoElement","factory","devnull","bundleIdCache","bundleResultCache","bundleCallbackQueue","publish","bundleId","pathsNotFound","q","splice","executeCallbacks","depsNotFound","success","loadFile","callbackFn","numTries","isCss","doc","async","maxTries","numRetries","beforeCallbackFn","before","pathStripped","rel","onbeforeload","ev","sheet","cssText","defaultPrevented","loadjs","paths","arg1","arg2","fn","numWaiting","loadFiles","deps","bundleIds","r","subscribe","isDefined","module","exports","loadScript","assurePlaybackState","hasPlayed","setAspectRatio","Vimeo","_split2","padding","paddingBottom","offset","transform","byline","portrait","transparent","gesture","$2","thumbnail_large","pathname","Player","disableTextTrack","stop","restorePause","setVolume","setCurrentTime","setPlaybackRate","name","currentSrc","setLoop","getVideoUrl","getVideoWidth","getVideoHeight","dimensions","getRatio","w","h","getAspectRatio","setAutopause","state","getVideoTitle","getCurrentTime","getDuration","getTextTracks","_ref$cues","strippedCues","fragment","createDocumentFragment","firstChild","getPaused","seconds","YT","onYouTubeReadyCallbacks","onYouTubeIframeAPIReady","getTitle","videoId","getVideoData","items","snippet","currentId","posterSrc","playerVars","hl","showinfo","iv_load_policy","modestbranding","disablekb","widget_referrer","cc_load_policy","cc_lang_pref","onError","message","2","5","100","101","150","onPlaybackRateChange","instance","playbackRate","getPlaybackRate","onReady","playVideo","pauseVideo","stopVideo","getAvailablePlaybackRates","clearInterval","buffering","setInterval","getVideoLoadedFraction","lastBuffered","onStateChange","unMute","Ads","displayContainer","manager","loader","cuePoints","safetyTimer","countdownTimer","ima","trigger","startSafetyTimer","clearSafetyTimer","setupIMA","setVpaidMode","ImaSdkSettings","VpaidMode","ENABLED","setLocale","AdDisplayContainer","requestAds","AdsLoader","AdsManagerLoadedEvent","Type","ADS_MANAGER_LOADED","onAdsManagerLoaded","AdErrorEvent","AD_ERROR","onAdError","AdsRequest","adTagUrl","tagUrl","linearAdSlotWidth","offsetWidth","linearAdSlotHeight","nonLinearAdSlotWidth","nonLinearAdSlotHeight","forceNonLinearFullSlot","setAdWillPlayMuted","getRemainingTime","AdsRenderingSettings","restoreCustomPlaybackStateOnAdBreakComplete","enablePreloading","getAdsManager","getCuePoints","cuePoint","seekElement","cuePercentage","AdEvent","onAdEvent","ad","getAd","LOADED","pollCountdown","isLinear","ALL_ADS_COMPLETED","loadAds","CONTENT_PAUSE_REQUESTED","pauseContent","CONTENT_RESUME_REQUESTED","resumeContent","STARTED","MIDPOINT","COMPLETE","IMPRESSION","CLICK","cancel","contentComplete","seekedTime","discardAdBreak","resize","ViewMode","NORMAL","initialize","init","adError","zIndex","destroy","handlers","_this12","AV_PUBLISHERID","AV_CHANNELID","AV_URL","cb","AV_WIDTH","AV_HEIGHT","AV_CDIM2","LectureNoteModel","showStatus","ShowStatus","Edit","noteStatus","NoteStatus","Create","note","Hide","Normal","AddLectureNoteButtonStatus","Enable","Disable","Hidden","LectureNote","lectureNoteList","lectureNoteContainer","beforeAddLectureNotePlayerState","beforeEditLectureNotePlayerState","hiddenLectureNote","updateAddLectureNoteButtonUI","addLectureNoteButton","getContainer","isLectureNoteExists","_id","lectureNoteDOM","generateLectureNoteDOM","lectureNotes","setupUI","enableLectureNote","round","getSameTimeLectureNote","contentContianer","clickEvent","disableLectureNote","newLectureNote","parentElement","progresses","lectureNoteId","cancelTimeout","data-id","mark","contentContainer","contentTextarea","placeholder","maxLength","rows","contentShowText","trashIconWrapper","trashIcon","removeLectureNote","isInComposition","group","groupEnd","leftLimit","insertElements","attribute","change","clear","prevType","prevProvider","_sources$","_sources$$provider","tagName","crossorigin","defaultCaption","defaultTracks","srclang","Plyr","failed","jQuery","original","getProviderByUrl","search","truthy","searchParams","webkitShowPlaybackTargetPicker","isHidden","hiding","eventName","soft","unload","inputIsValid","fauxDuration","realDuration","Infinity","mozHasAudio","webkitAudioDecodedByteCount","audioTracks","prev","curr","closest","requestPictureInPicture","exitPictureInPicture","webkitPresentationMode","pictureInPictureElement","inline","t"],"mappings":"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","file":"plyr.min.js","sourcesContent":["// ==========================================================================\n// Type checking utils\n// ==========================================================================\n\nconst getConstructor = input => (input !== null && typeof input !== 'undefined' ? input.constructor : null);\nconst instanceOf = (input, constructor) => Boolean(input && constructor && input instanceof constructor);\nconst isNullOrUndefined = input => input === null || typeof input === 'undefined';\nconst isObject = input => getConstructor(input) === Object;\nconst isNumber = input => getConstructor(input) === Number && !Number.isNaN(input);\nconst isString = input => getConstructor(input) === String;\nconst isBoolean = input => getConstructor(input) === Boolean;\nconst isFunction = input => getConstructor(input) === Function;\nconst isArray = input => Array.isArray(input);\nconst isWeakMap = input => instanceOf(input, WeakMap);\nconst isNodeList = input => instanceOf(input, NodeList);\nconst isElement = input => instanceOf(input, Element);\nconst isTextNode = input => getConstructor(input) === Text;\nconst isEvent = input => instanceOf(input, Event);\nconst isKeyboardEvent = input => instanceOf(input, KeyboardEvent);\nconst isCue = input => instanceOf(input, window.TextTrackCue) || instanceOf(input, window.VTTCue);\nconst isTrack = input => instanceOf(input, TextTrack) || (!isNullOrUndefined(input) && isString(input.kind));\n\nconst isEmpty = input =>\n    isNullOrUndefined(input) ||\n    ((isString(input) || isArray(input) || isNodeList(input)) && !input.length) ||\n    (isObject(input) && !Object.keys(input).length);\n\nconst isUrl = input => {\n    // Accept a URL object\n    if (instanceOf(input, window.URL)) {\n        return true;\n    }\n\n    // Must be string from here\n    if (!isString(input)) {\n        return false;\n    }\n\n    // Add the protocol if required\n    let string = input;\n    if (!input.startsWith('http://') || !input.startsWith('https://')) {\n        string = `http://${input}`;\n    }\n\n    try {\n        return !isEmpty(new URL(string).hostname);\n    } catch (e) {\n        return false;\n    }\n};\n\nexport default {\n    nullOrUndefined: isNullOrUndefined,\n    object: isObject,\n    number: isNumber,\n    string: isString,\n    boolean: isBoolean,\n    function: isFunction,\n    array: isArray,\n    weakMap: isWeakMap,\n    nodeList: isNodeList,\n    element: isElement,\n    textNode: isTextNode,\n    event: isEvent,\n    keyboardEvent: isKeyboardEvent,\n    cue: isCue,\n    track: isTrack,\n    url: isUrl,\n    empty: isEmpty,\n};\n","// ==========================================================================\n// Event utils\n// ==========================================================================\n\nimport is from './is';\n\n// Check for passive event listener support\n// https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n// https://www.youtube.com/watch?v=NPM6172J22g\nconst supportsPassiveListeners = (() => {\n    // Test via a getter in the options object to see if the passive property is accessed\n    let supported = false;\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get() {\n                supported = true;\n                return null;\n            },\n        });\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n        // Do nothing\n    }\n\n    return supported;\n})();\n\n// Toggle event listener\nexport function toggleListener(element, event, callback, toggle = false, passive = true, capture = false) {\n    // Bail if no element, event, or callback\n    if (!element || !('addEventListener' in element) || is.empty(event) || !is.function(callback)) {\n        return;\n    }\n\n    // Allow multiple events\n    const events = event.split(' ');\n\n    // Build options\n    // Default to just the capture boolean for browsers with no passive listener support\n    let options = capture;\n\n    // If passive events listeners are supported\n    if (supportsPassiveListeners) {\n        options = {\n            // Whether the listener can be passive (i.e. default never prevented)\n            passive,\n            // Whether the listener is a capturing listener or not\n            capture,\n        };\n    }\n\n    // If a single node is passed, bind the event listener\n    events.forEach(type => {\n        if (this && this.eventListeners && toggle) {\n            // Cache event listener\n            this.eventListeners.push({ element, type, callback, options });\n        }\n\n        element[toggle ? 'addEventListener' : 'removeEventListener'](type, callback, options);\n    });\n}\n\n// Bind event handler\nexport function on(element, events = '', callback, passive = true, capture = false) {\n    toggleListener.call(this, element, events, callback, true, passive, capture);\n}\n\n// Unbind event handler\nexport function off(element, events = '', callback, passive = true, capture = false) {\n    toggleListener.call(this, element, events, callback, false, passive, capture);\n}\n\n// Bind once-only event handler\nexport function once(element, events = '', callback, passive = true, capture = false) {\n    function onceCallback(...args) {\n        off(element, events, onceCallback, passive, capture);\n        callback.apply(this, args);\n    }\n\n    toggleListener.call(this, element, events, onceCallback, true, passive, capture);\n}\n\n// Trigger event\nexport function triggerEvent(element, type = '', bubbles = false, detail = {}) {\n    // Bail if no element\n    if (!is.element(element) || is.empty(type)) {\n        return;\n    }\n\n    // Create and dispatch the event\n    const event = new CustomEvent(type, {\n        bubbles,\n        detail: Object.assign({}, detail, {\n            plyr: this,\n        }),\n    });\n\n    // Dispatch the event\n    try {\n        element.dispatchEvent(event);\n    } catch (err) {\n        throw new Error(`CustomEvent ${event.type}: ${JSON.stringify(event.detail)}`);\n    }\n}\n\n// Unbind all cached event listeners\nexport function unbindListeners() {\n    if (this && this.eventListeners) {\n        this.eventListeners.forEach(item => {\n            const { element, type, callback, options } = item;\n            element.removeEventListener(type, callback, options);\n        });\n\n        this.eventListeners = [];\n    }\n}\n\n// Run method when / if player is ready\nexport function ready() {\n    return new Promise(\n        resolve => (this.ready ? setTimeout(resolve, 0) : on.call(this, this.elements.container, 'ready', resolve)),\n    ).then(() => {});\n}\n","// ==========================================================================\n// Element utils\n// ==========================================================================\n\nimport { toggleListener } from './events';\nimport is from './is';\n\n// Wrap an element\nexport function wrap(elements, wrapper) {\n    // Convert `elements` to an array, if necessary.\n    const targets = elements.length ? elements : [elements];\n\n    // Loops backwards to prevent having to clone the wrapper on the\n    // first element (see `child` below).\n    Array.from(targets)\n        .reverse()\n        .forEach((element, index) => {\n            const child = index > 0 ? wrapper.cloneNode(true) : wrapper;\n\n            // Cache the current parent and sibling.\n            const parent = element.parentNode;\n            const sibling = element.nextSibling;\n\n            // Wrap the element (is automatically removed from its current\n            // parent).\n            child.appendChild(element);\n\n            // If the element had a sibling, insert the wrapper before\n            // the sibling to maintain the HTML structure; otherwise, just\n            // append it to the parent.\n            if (sibling) {\n                parent.insertBefore(child, sibling);\n            } else {\n                parent.appendChild(child);\n            }\n        });\n}\n\n// Set attributes\nexport function setAttributes(element, attributes) {\n    if (!is.element(element) || is.empty(attributes)) {\n        return;\n    }\n\n    // Assume null and undefined attributes should be left out,\n    // Setting them would otherwise convert them to \"null\" and \"undefined\"\n    Object.entries(attributes)\n        .filter(([, value]) => !is.nullOrUndefined(value))\n        .forEach(([key, value]) => element.setAttribute(key, value));\n}\n\n// Create a DocumentFragment\nexport function createElement(type, attributes, text) {\n    // Create a new <element>\n    const element = document.createElement(type);\n\n    // Set all passed attributes\n    if (is.object(attributes)) {\n        setAttributes(element, attributes);\n    }\n\n    // Add text node\n    if (is.string(text)) {\n        element.innerText = text;\n    }\n\n    // Return built element\n    return element;\n}\n\n// Inaert an element after another\nexport function insertAfter(element, target) {\n    if (!is.element(element) || !is.element(target)) {\n        return;\n    }\n\n    target.parentNode.insertBefore(element, target.nextSibling);\n}\n\n// Insert a DocumentFragment\nexport function insertElement(type, parent, attributes, text) {\n    if (!is.element(parent)) {\n        return;\n    }\n\n    parent.appendChild(createElement(type, attributes, text));\n}\n\n// Remove element(s)\nexport function removeElement(element) {\n    if (is.nodeList(element) || is.array(element)) {\n        Array.from(element).forEach(removeElement);\n        return;\n    }\n\n    if (!is.element(element) || !is.element(element.parentNode)) {\n        return;\n    }\n\n    element.parentNode.removeChild(element);\n}\n\n// Remove all child elements\nexport function emptyElement(element) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    let { length } = element.childNodes;\n\n    while (length > 0) {\n        element.removeChild(element.lastChild);\n        length -= 1;\n    }\n}\n\n// Replace element\nexport function replaceElement(newChild, oldChild) {\n    if (!is.element(oldChild) || !is.element(oldChild.parentNode) || !is.element(newChild)) {\n        return null;\n    }\n\n    oldChild.parentNode.replaceChild(newChild, oldChild);\n\n    return newChild;\n}\n\n// Get an attribute object from a string selector\nexport function getAttributesFromSelector(sel, existingAttributes) {\n    // For example:\n    // '.test' to { class: 'test' }\n    // '#test' to { id: 'test' }\n    // '[data-test=\"test\"]' to { 'data-test': 'test' }\n\n    if (!is.string(sel) || is.empty(sel)) {\n        return {};\n    }\n\n    const attributes = {};\n    const existing = existingAttributes;\n\n    sel.split(',').forEach(s => {\n        // Remove whitespace\n        const selector = s.trim();\n        const className = selector.replace('.', '');\n        const stripped = selector.replace(/[[\\]]/g, '');\n\n        // Get the parts and value\n        const parts = stripped.split('=');\n        const key = parts[0];\n        const value = parts.length > 1 ? parts[1].replace(/[\"']/g, '') : '';\n\n        // Get the first character\n        const start = selector.charAt(0);\n\n        switch (start) {\n            case '.':\n                // Add to existing classname\n                if (is.object(existing) && is.string(existing.class)) {\n                    existing.class += ` ${className}`;\n                }\n\n                attributes.class = className;\n                break;\n\n            case '#':\n                // ID selector\n                attributes.id = selector.replace('#', '');\n                break;\n\n            case '[':\n                // Attribute selector\n                attributes[key] = value;\n\n                break;\n\n            default:\n                break;\n        }\n    });\n\n    return attributes;\n}\n\n// Toggle hidden\nexport function toggleHidden(element, hidden) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    let hide = hidden;\n\n    if (!is.boolean(hide)) {\n        hide = !element.hidden;\n    }\n\n    if (hide) {\n        element.setAttribute('hidden', '');\n    } else {\n        element.removeAttribute('hidden');\n    }\n}\n\n// Mirror Element.classList.toggle, with IE compatibility for \"force\" argument\nexport function toggleClass(element, className, force) {\n    if (is.nodeList(element)) {\n        return Array.from(element).map(e => toggleClass(e, className, force));\n    }\n\n    if (is.element(element)) {\n        let method = 'toggle';\n        if (typeof force !== 'undefined') {\n            method = force ? 'add' : 'remove';\n        }\n\n        element.classList[method](className);\n        return element.classList.contains(className);\n    }\n\n    return false;\n}\n\n// Has class name\nexport function hasClass(element, className) {\n    return is.element(element) && element.classList.contains(className);\n}\n\n// Element matches selector\nexport function matches(element, selector) {\n    const prototype = { Element };\n\n    function match() {\n        return Array.from(document.querySelectorAll(selector)).includes(this);\n    }\n\n    const matches =\n        prototype.matches ||\n        prototype.webkitMatchesSelector ||\n        prototype.mozMatchesSelector ||\n        prototype.msMatchesSelector ||\n        match;\n\n    return matches.call(element, selector);\n}\n\n// Find all elements\nexport function getElements(selector) {\n    return this.elements.container.querySelectorAll(selector);\n}\n\n// Find a single element\nexport function getElement(selector) {\n    return this.elements.container.querySelector(selector);\n}\n\n// Trap focus inside container\nexport function trapFocus(element = null, toggle = false) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    const focusable = getElements.call(this, 'button:not(:disabled), input:not(:disabled), [tabindex]');\n    const first = focusable[0];\n    const last = focusable[focusable.length - 1];\n\n    const trap = event => {\n        // Bail if not tab key or not fullscreen\n        if (event.key !== 'Tab' || event.keyCode !== 9) {\n            return;\n        }\n\n        // Get the current focused element\n        const focused = document.activeElement;\n\n        if (focused === last && !event.shiftKey) {\n            // Move focus to first element that can be tabbed if Shift isn't used\n            first.focus();\n            event.preventDefault();\n        } else if (focused === first && event.shiftKey) {\n            // Move focus to last element that can be tabbed if Shift is used\n            last.focus();\n            event.preventDefault();\n        }\n    };\n\n    toggleListener.call(this, this.elements.container, 'keydown', trap, toggle, false);\n}\n\n// Set focus and tab focus class\nexport function setFocus(element = null, tabFocus = false) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    // Set regular focus\n    element.focus();\n\n    // If we want to mimic keyboard focus via tab\n    if (tabFocus) {\n        toggleClass(element, this.config.classNames.tabFocus);\n    }\n}\n","// ==========================================================================\n// Animation utils\n// ==========================================================================\n\nimport { toggleHidden } from './elements';\nimport is from './is';\n\nexport const transitionEndEvent = (() => {\n    const element = document.createElement('span');\n\n    const events = {\n        WebkitTransition: 'webkitTransitionEnd',\n        MozTransition: 'transitionend',\n        OTransition: 'oTransitionEnd otransitionend',\n        transition: 'transitionend',\n    };\n\n    const type = Object.keys(events).find(event => element.style[event] !== undefined);\n\n    return is.string(type) ? events[type] : false;\n})();\n\n// Force repaint of element\nexport function repaint(element) {\n    setTimeout(() => {\n        try {\n            toggleHidden(element, true);\n            element.offsetHeight; // eslint-disable-line\n            toggleHidden(element, false);\n        } catch (e) {\n            // Do nothing\n        }\n    }, 0);\n}\n","// ==========================================================================\n// Browser sniffing\n// Unfortunately, due to mixed support, UA sniffing is required\n// ==========================================================================\n\nconst browser = {\n    isIE: /* @cc_on!@ */ false || !!document.documentMode,\n    isWebkit: 'WebkitAppearance' in document.documentElement.style && !/Edge/.test(navigator.userAgent),\n    isIPhone: /(iPhone|iPod)/gi.test(navigator.platform),\n    isIos: /(iPad|iPhone|iPod)/gi.test(navigator.platform),\n};\n\nexport default browser;\n","// ==========================================================================\n// Plyr support checks\n// ==========================================================================\n\nimport { transitionEndEvent } from './utils/animation';\nimport browser from './utils/browser';\nimport { createElement } from './utils/elements';\nimport is from './utils/is';\n\n// Default codecs for checking mimetype support\nconst defaultCodecs = {\n    'audio/ogg': 'vorbis',\n    'audio/wav': '1',\n    'video/webm': 'vp8, vorbis',\n    'video/mp4': 'avc1.42E01E, mp4a.40.2',\n    'video/ogg': 'theora',\n};\n\n// Check for feature support\nconst support = {\n    // Basic support\n    audio: 'canPlayType' in document.createElement('audio'),\n    video: 'canPlayType' in document.createElement('video'),\n\n    // Check for support\n    // Basic functionality vs full UI\n    check(type, provider, playsinline) {\n        const canPlayInline = browser.isIPhone && playsinline && support.playsinline;\n        const api = support[type] || provider !== 'html5';\n        const ui = api && support.rangeInput && (type !== 'video' || !browser.isIPhone || canPlayInline);\n\n        return {\n            api,\n            ui,\n        };\n    },\n\n    // Picture-in-picture support\n    // Safari & Chrome only currently\n    pip: (() => {\n        if (browser.isIPhone) {\n            return false;\n        }\n\n        // Safari\n        // https://developer.apple.com/documentation/webkitjs/adding_picture_in_picture_to_your_safari_media_controls\n        if (is.function(createElement('video').webkitSetPresentationMode)) {\n            return true;\n        }\n\n        // Chrome\n        // https://developers.google.com/web/updates/2018/10/watch-video-using-picture-in-picture\n        if (document.pictureInPictureEnabled && !createElement('video').disablePictureInPicture) {\n            return true;\n        }\n\n        return false;\n    })(),\n\n    // Airplay support\n    // Safari only currently\n    airplay: is.function(window.WebKitPlaybackTargetAvailabilityEvent),\n\n    // Inline playback support\n    // https://webkit.org/blog/6784/new-video-policies-for-ios/\n    playsinline: 'playsInline' in document.createElement('video'),\n\n    // Check for mime type support against a player instance\n    // Credits: http://diveintohtml5.info/everything.html\n    // Related: http://www.leanbackplayer.com/test/h5mt.html\n    mime(inputType) {\n        const [mediaType] = inputType.split('/');\n        if (!this.isHTML5 || mediaType !== this.type) {\n            return false;\n        }\n\n        let type;\n        if (inputType && inputType.includes('codecs=')) {\n            // Use input directly\n            type = inputType;\n        } else if (inputType === 'audio/mpeg') {\n            // Skip codec\n            type = 'audio/mpeg;';\n        } else if (inputType in defaultCodecs) {\n            // Use codec\n            type = `${inputType}; codecs=\"${defaultCodecs[inputType]}\"`;\n        }\n\n        try {\n            return Boolean(type && this.media.canPlayType(type).replace(/no/, ''));\n        } catch (err) {\n            return false;\n        }\n    },\n\n    // Check for textTracks support\n    textTracks: 'textTracks' in document.createElement('video'),\n\n    // <input type=\"range\"> Sliders\n    rangeInput: (() => {\n        const range = document.createElement('input');\n        range.type = 'range';\n        return range.type === 'range';\n    })(),\n\n    // Touch\n    // NOTE: Remember a device can be mouse + touch enabled so we check on first touch event\n    touch: 'ontouchstart' in document.documentElement,\n\n    // Detect transitions support\n    transitions: transitionEndEvent !== false,\n\n    // Reduced motion iOS & MacOS setting\n    // https://webkit.org/blog/7551/responsive-design-for-motion/\n    reducedMotion: 'matchMedia' in window && window.matchMedia('(prefers-reduced-motion)').matches,\n};\n\nexport default support;\n","// ==========================================================================\n// Plyr HTML5 helpers\n// ==========================================================================\n\nimport controls from './controls';\nimport is from './utils/is';\nimport support from './support';\nimport { removeElement } from './utils/elements';\nimport { triggerEvent } from './utils/events';\n\nconst html5 = {\n    getSources() {\n        if (!this.isHTML5) {\n            return [];\n        }\n\n        const sources = Array.from(this.media.querySelectorAll('source'));\n\n        // Filter out unsupported sources\n        return sources.filter(source => support.mime.call(this, source.getAttribute('type')));\n    },\n\n    // Get quality levels\n    getQualityOptions() {\n        // Get sizes from <source> elements\n        return html5.getSources\n            .call(this)\n            .map(source => Number(source.getAttribute('size')))\n            .filter(Boolean);\n    },\n\n    extend() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        const player = this;\n\n        // Quality\n        Object.defineProperty(player.media, 'quality', {\n            configurable: true,\n            get() {\n                // Get sources\n                const sources = html5.getSources.call(player);\n                const source = sources.find(source => source.getAttribute('src') === player.source);\n\n                // Return size, if match is found\n                return source && Number(source.getAttribute('size'));\n            },\n            set(input) {\n                // Get sources\n                const sources = html5.getSources.call(player);\n\n                // Get first match for requested size\n                const source = sources.find(source => Number(source.getAttribute('size')) === input);\n\n                // No matching source found\n                if (!source) {\n                    return;\n                }\n\n                // Get current state\n                const { currentTime, paused, preload, readyState } = player.media;\n\n                player.pause();\n\n                setTimeout(() => {\n                    // Set new source\n                    player.media.src = source.getAttribute('src');\n\n                    // Prevent loading if preload=\"none\" and the current source isn't loaded (#1044)\n                    if (preload !== 'none' || readyState) {\n                        // Restore time\n                        player.once('loadedmetadata', () => {\n                            if (player.currentTime === 0) {\n                                player.currentTime = currentTime;\n                            }\n\n                            // Resume playing\n                            if (!paused) {\n                                player.play();\n                            }\n                        });\n\n                        // Load new source\n                        player.media.load();\n                    }\n\n                    // restore speed\n                    const speed = player.storage.get('speed');\n                    if (is.number(speed)) {\n                        player.speed = speed;\n                        controls.updateSetting.call(player, 'speed', speed);\n                    }\n\n                    // Trigger change event\n                    triggerEvent.call(player, player.media, 'qualitychange', false, {\n                        quality: input,\n                    });\n                }, 0);\n            },\n        });\n    },\n\n    // Cancel current network requests\n    // See https://github.com/sampotts/plyr/issues/174\n    cancelRequests() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        const sources = html5.getSources.call(this);\n        if (sources && sources.length > 0) {\n            // set source to blank string to avoid memory leak\n            sources.forEach((source) => {\n                source.setAttribute('src', '');\n            });\n            this.media.load();\n        }\n        // Remove child sources\n        removeElement(sources);\n\n        // Set blank video src attribute\n        // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\n        // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\n        this.media.setAttribute('src', this.config.blankVideo);\n\n        // Load the new empty source\n        // This will cancel existing requests\n        // See https://github.com/sampotts/plyr/issues/174\n        this.media.load();\n\n        // Debugging\n        this.debug.log('Cancelled network requests');\n    },\n};\n\nexport default html5;\n","// ==========================================================================\n// Array utils\n// ==========================================================================\n\nimport is from './is';\n\n// Remove duplicates in an array\nexport function dedupe(array) {\n    if (!is.array(array)) {\n        return array;\n    }\n\n    return array.filter((item, index) => array.indexOf(item) === index);\n}\n\n// Get the closest value in an array\nexport function closest(array, value) {\n    if (!is.array(array) || !array.length) {\n        return null;\n    }\n\n    return array.reduce((prev, curr) => (Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev));\n}\n","// ==========================================================================\n// Object utils\n// ==========================================================================\n\nimport is from './is';\n\n// Clone nested objects\nexport function cloneDeep(object) {\n    return JSON.parse(JSON.stringify(object));\n}\n\n// Get a nested value in an object\nexport function getDeep(object, path) {\n    return path.split('.').reduce((obj, key) => obj && obj[key], object);\n}\n\n// Deep extend destination object with N more objects\nexport function extend(target = {}, ...sources) {\n    if (!sources.length) {\n        return target;\n    }\n\n    const source = sources.shift();\n\n    if (!is.object(source)) {\n        return target;\n    }\n\n    Object.keys(source).forEach(key => {\n        if (is.object(source[key])) {\n            if (!Object.keys(target).includes(key)) {\n                Object.assign(target, { [key]: {} });\n            }\n\n            extend(target[key], source[key]);\n        } else {\n            Object.assign(target, { [key]: source[key] });\n        }\n    });\n\n    return extend(target, ...sources);\n}\n","// ==========================================================================\n// String utils\n// ==========================================================================\n\nimport is from './is';\n\n// Generate a random ID\nexport function generateId(prefix) {\n    return `${prefix}-${Math.floor(Math.random() * 10000)}`;\n}\n\n// Format string\nexport function format(input, ...args) {\n    if (is.empty(input)) {\n        return input;\n    }\n\n    return input.toString().replace(/{(\\d+)}/g, (match, i) => args[i].toString());\n}\n\n// Get percentage\nexport function getPercentage(current, max) {\n    if (current === 0 || max === 0 || Number.isNaN(current) || Number.isNaN(max)) {\n        return 0;\n    }\n\n    return ((current / max) * 100).toFixed(2);\n}\n\n// Replace all occurances of a string in a string\nexport function replaceAll(input = '', find = '', replace = '') {\n    return input.replace(\n        new RegExp(find.toString().replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1'), 'g'),\n        replace.toString(),\n    );\n}\n\n// Convert to title case\nexport function toTitleCase(input = '') {\n    return input.toString().replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase());\n}\n\n// Convert string to pascalCase\nexport function toPascalCase(input = '') {\n    let string = input.toString();\n\n    // Convert kebab case\n    string = replaceAll(string, '-', ' ');\n\n    // Convert snake case\n    string = replaceAll(string, '_', ' ');\n\n    // Convert to title case\n    string = toTitleCase(string);\n\n    // Convert to pascal case\n    return replaceAll(string, ' ', '');\n}\n\n// Convert string to pascalCase\nexport function toCamelCase(input = '') {\n    let string = input.toString();\n\n    // Convert to pascal case\n    string = toPascalCase(string);\n\n    // Convert first character to lowercase\n    return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\n// Remove HTML from a string\nexport function stripHTML(source) {\n    const fragment = document.createDocumentFragment();\n    const element = document.createElement('div');\n    fragment.appendChild(element);\n    element.innerHTML = source;\n    return fragment.firstChild.innerText;\n}\n\n// Like outerHTML, but also works for DocumentFragment\nexport function getHTML(element) {\n    const wrapper = document.createElement('div');\n    wrapper.appendChild(element);\n    return wrapper.innerHTML;\n}\n","// ==========================================================================\n// Plyr internationalization\n// ==========================================================================\n\nimport is from './is';\nimport { getDeep } from './objects';\nimport { replaceAll } from './strings';\n\n// Skip i18n for abbreviations and brand names\nconst resources = {\n    pip: 'PIP',\n    airplay: 'AirPlay',\n    html5: 'HTML5',\n    vimeo: 'Vimeo',\n    youtube: 'YouTube',\n};\n\nconst i18n = {\n    get(key = '', config = {}) {\n        if (is.empty(key) || is.empty(config)) {\n            return '';\n        }\n\n        let string = getDeep(config.i18n, key);\n\n        if (is.empty(string)) {\n            if (Object.keys(resources).includes(key)) {\n                return resources[key];\n            }\n\n            return '';\n        }\n\n        const replace = {\n            '{seektime}': config.seekTime,\n            '{title}': config.title,\n        };\n\n        Object.entries(replace).forEach(([key, value]) => {\n            string = replaceAll(string, key, value);\n        });\n\n        return string;\n    },\n};\n\nexport default i18n;\n","// ==========================================================================\n// Plyr storage\n// ==========================================================================\n\nimport is from './utils/is';\nimport { extend } from './utils/objects';\n\nclass Storage {\n    constructor(player) {\n        this.enabled = player.config.storage.enabled;\n        this.key = player.config.storage.key;\n    }\n\n    // Check for actual support (see if we can use it)\n    static get supported() {\n        try {\n            if (!('localStorage' in window)) {\n                return false;\n            }\n\n            const test = '___test';\n\n            // Try to use it (it might be disabled, e.g. user is in private mode)\n            // see: https://github.com/sampotts/plyr/issues/131\n            window.localStorage.setItem(test, test);\n            window.localStorage.removeItem(test);\n\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    get(key) {\n        if (!Storage.supported || !this.enabled) {\n            return null;\n        }\n\n        const store = window.localStorage.getItem(this.key);\n\n        if (is.empty(store)) {\n            return null;\n        }\n\n        const json = JSON.parse(store);\n\n        return is.string(key) && key.length ? json[key] : json;\n    }\n\n    set(object) {\n        // Bail if we don't have localStorage support or it's disabled\n        if (!Storage.supported || !this.enabled) {\n            return;\n        }\n\n        // Can only store objectst\n        if (!is.object(object)) {\n            return;\n        }\n\n        // Get current storage\n        let storage = this.get();\n\n        // Default to empty object\n        if (is.empty(storage)) {\n            storage = {};\n        }\n\n        // Update the working copy of the values\n        extend(storage, object);\n\n        // Update storage\n        window.localStorage.setItem(this.key, JSON.stringify(storage));\n    }\n}\n\nexport default Storage;\n","// ==========================================================================\n// Fetch wrapper\n// Using XHR to avoid issues with older browsers\n// ==========================================================================\n\nexport default function fetch(url, responseType = 'text') {\n    return new Promise((resolve, reject) => {\n        try {\n            const request = new XMLHttpRequest();\n\n            // Check for CORS support\n            if (!('withCredentials' in request)) {\n                return;\n            }\n\n            request.addEventListener('load', () => {\n                if (responseType === 'text') {\n                    try {\n                        resolve(JSON.parse(request.responseText));\n                    } catch (e) {\n                        resolve(request.responseText);\n                    }\n                } else {\n                    resolve(request.response);\n                }\n            });\n\n            request.addEventListener('error', () => {\n                throw new Error(request.status);\n            });\n\n            request.open('GET', url, true);\n\n            // Set the required response type\n            request.responseType = responseType;\n\n            request.send();\n        } catch (e) {\n            reject(e);\n        }\n    });\n}\n","// ==========================================================================\n// Sprite loader\n// ==========================================================================\n\nimport Storage from '../storage';\nimport fetch from './fetch';\nimport is from './is';\n\n// Load an external SVG sprite\nexport default function loadSprite(url, id) {\n    if (!is.string(url)) {\n        return;\n    }\n\n    const prefix = 'cache';\n    const hasId = is.string(id);\n    let isCached = false;\n\n    const exists = () => document.getElementById(id) !== null;\n\n    const update = (container, data) => {\n        container.innerHTML = data;\n\n        // Check again incase of race condition\n        if (hasId && exists()) {\n            return;\n        }\n\n        // Inject the SVG to the body\n        document.body.insertAdjacentElement('afterbegin', container);\n    };\n\n    // Only load once if ID set\n    if (!hasId || !exists()) {\n        const useStorage = Storage.supported;\n\n        // Create container\n        const container = document.createElement('div');\n        container.setAttribute('hidden', '');\n\n        if (hasId) {\n            container.setAttribute('id', id);\n        }\n\n        // Check in cache\n        if (useStorage) {\n            const cached = window.localStorage.getItem(`${prefix}-${id}`);\n            isCached = cached !== null;\n\n            if (isCached) {\n                const data = JSON.parse(cached);\n                update(container, data.content);\n            }\n        }\n\n        // Get the sprite\n        fetch(url)\n            .then(result => {\n                if (is.empty(result)) {\n                    return;\n                }\n\n                if (useStorage) {\n                    window.localStorage.setItem(\n                        `${prefix}-${id}`,\n                        JSON.stringify({\n                            content: result,\n                        }),\n                    );\n                }\n\n                update(container, result);\n            })\n            .catch(() => {});\n    }\n}\n","// ==========================================================================\n// Time utils\n// ==========================================================================\n\nimport is from './is';\n\n// Time helpers\nexport const getHours = value => parseInt((value / 60 / 60) % 60, 10);\nexport const getMinutes = value => parseInt((value / 60) % 60, 10);\nexport const getSeconds = value => parseInt(value % 60, 10);\n\n// Format time to UI friendly string\nexport function formatTime(time = 0, displayHours = false, inverted = false) {\n    // Bail if the value isn't a number\n    if (!is.number(time)) {\n        return formatTime(null, displayHours, inverted);\n    }\n\n    // Format time component to add leading zero\n    const format = value => `0${value}`.slice(-2);\n\n    // Breakdown to hours, mins, secs\n    let hours = getHours(time);\n    const mins = getMinutes(time);\n    const secs = getSeconds(time);\n\n    // Do we need to display hours?\n    if (displayHours || hours > 0) {\n        hours = `${hours}:`;\n    } else {\n        hours = '';\n    }\n\n    // Render\n    return `${inverted && time > 0 ? '-' : ''}${hours}${format(mins)}:${format(secs)}`;\n}\n","// ==========================================================================\n// Plyr controls\n// TODO: This needs to be split into smaller files and cleaned up\n// ==========================================================================\n\nimport captions from './captions';\nimport html5 from './html5';\nimport support from './support';\nimport { repaint, transitionEndEvent } from './utils/animation';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport { createElement, emptyElement, getAttributesFromSelector, getElement, getElements, hasClass, matches, removeElement, setAttributes, setFocus, toggleClass, toggleHidden } from './utils/elements';\nimport { off, on } from './utils/events';\nimport i18n from './utils/i18n';\nimport is from './utils/is';\nimport loadSprite from './utils/loadSprite';\nimport { extend } from './utils/objects';\nimport { getPercentage, replaceAll, toCamelCase, toTitleCase } from './utils/strings';\nimport { formatTime, getHours } from './utils/time';\n\n// TODO: Don't export a massive object - break down and create class\nconst controls = {\n    // Get icon URL\n    getIconUrl() {\n        const url = new URL(this.config.iconUrl, window.location);\n        const cors = url.host !== window.location.host || (browser.isIE && !window.svg4everybody);\n\n        return {\n            url: this.config.iconUrl,\n            cors,\n        };\n    },\n\n    // Find the UI controls\n    findElements() {\n        try {\n            this.elements.controls = getElement.call(this, this.config.selectors.controls.wrapper);\n\n            // Buttons\n            this.elements.buttons = {\n                play: getElements.call(this, this.config.selectors.buttons.play),\n                pause: getElement.call(this, this.config.selectors.buttons.pause),\n                restart: getElement.call(this, this.config.selectors.buttons.restart),\n                rewind: getElement.call(this, this.config.selectors.buttons.rewind),\n                fastForward: getElement.call(this, this.config.selectors.buttons.fastForward),\n                mute: getElement.call(this, this.config.selectors.buttons.mute),\n                pip: getElement.call(this, this.config.selectors.buttons.pip),\n                airplay: getElement.call(this, this.config.selectors.buttons.airplay),\n                settings: getElement.call(this, this.config.selectors.buttons.settings),\n                captions: getElement.call(this, this.config.selectors.buttons.captions),\n                fullscreen: getElement.call(this, this.config.selectors.buttons.fullscreen),\n            };\n\n            // Progress\n            this.elements.progress = getElement.call(this, this.config.selectors.progress);\n\n            // Inputs\n            this.elements.inputs = {\n                seek: getElement.call(this, this.config.selectors.inputs.seek),\n                volume: getElement.call(this, this.config.selectors.inputs.volume),\n            };\n\n            // Display\n            this.elements.display = {\n                buffer: getElement.call(this, this.config.selectors.display.buffer),\n                currentTime: getElement.call(this, this.config.selectors.display.currentTime),\n                duration: getElement.call(this, this.config.selectors.display.duration),\n            };\n\n            // Seek tooltip\n            if (is.element(this.elements.progress)) {\n                this.elements.display.seekTooltip = this.elements.progress.querySelector(\n                    `.${this.config.classNames.tooltip}`,\n                );\n            }\n\n            return true;\n        } catch (error) {\n            // Log it\n            this.debug.warn('It looks like there is a problem with your custom controls HTML', error);\n\n            // Restore native video controls\n            this.toggleNativeControls(true);\n\n            return false;\n        }\n    },\n\n    // Create <svg> icon\n    createIcon(type, attributes) {\n        const namespace = 'http://www.w3.org/2000/svg';\n        const iconUrl = controls.getIconUrl.call(this);\n        const iconPath = `${!iconUrl.cors ? iconUrl.url : ''}#${this.config.iconPrefix}`;\n\n        // Create <svg>\n        const icon = document.createElementNS(namespace, 'svg');\n        setAttributes(\n            icon,\n            extend(attributes, {\n                role: 'presentation',\n                focusable: 'false',\n            }),\n        );\n\n        // Create the <use> to reference sprite\n        const use = document.createElementNS(namespace, 'use');\n        const path = `${iconPath}-${type}`;\n\n        // Set `href` attributes\n        // https://github.com/sampotts/plyr/issues/460\n        // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:href\n        if ('href' in use) {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\n        }\n\n        // Always set the older attribute even though it's \"deprecated\" (it'll be around for ages)\n        use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', path);\n\n        // Add <use> to <svg>\n        icon.appendChild(use);\n\n        return icon;\n    },\n\n    // Create hidden text label\n    createLabel(key, attr = {}) {\n        const text = i18n.get(key, this.config);\n\n        const attributes = Object.assign({}, attr, {\n            class: [attr.class, this.config.classNames.hidden].filter(Boolean).join(' '),\n        });\n\n        return createElement('span', attributes, text);\n    },\n\n    // Create a badge\n    createBadge(text) {\n        if (is.empty(text)) {\n            return null;\n        }\n\n        const badge = createElement('span', {\n            class: this.config.classNames.menu.value,\n        });\n\n        badge.appendChild(\n            createElement(\n                'span',\n                {\n                    class: this.config.classNames.menu.badge,\n                },\n                text,\n            ),\n        );\n\n        return badge;\n    },\n\n    // Create a <button>\n    createButton(buttonType, attr) {\n        const attributes = Object.assign({}, attr);\n        let type = toCamelCase(buttonType);\n\n        const props = {\n            element: 'button',\n            toggle: false,\n            label: null,\n            icon: null,\n            labelPressed: null,\n            iconPressed: null,\n        };\n\n        ['element', 'icon', 'label'].forEach(key => {\n            if (Object.keys(attributes).includes(key)) {\n                props[key] = attributes[key];\n                delete attributes[key];\n            }\n        });\n\n        // Default to 'button' type to prevent form submission\n        if (props.element === 'button' && !Object.keys(attributes).includes('type')) {\n            attributes.type = 'button';\n        }\n\n        // Set class name\n        if (Object.keys(attributes).includes('class')) {\n            if (!attributes.class.includes(this.config.classNames.control)) {\n                attributes.class += ` ${this.config.classNames.control}`;\n            }\n        } else {\n            attributes.class = this.config.classNames.control;\n        }\n\n        // Large play button\n        switch (buttonType) {\n            case 'play':\n                props.toggle = true;\n                props.label = 'play';\n                props.labelPressed = 'pause';\n                props.icon = 'play';\n                props.iconPressed = 'pause';\n                break;\n\n            case 'mute':\n                props.toggle = true;\n                props.label = 'mute';\n                props.labelPressed = 'unmute';\n                props.icon = 'volume';\n                props.iconPressed = 'muted';\n                break;\n\n            case 'captions':\n                props.toggle = true;\n                props.label = 'enableCaptions';\n                props.labelPressed = 'disableCaptions';\n                props.icon = 'captions-off';\n                props.iconPressed = 'captions-on';\n                break;\n\n            case 'zoom':\n                props.toggle = true;\n                props.label = 'enterZoom';\n                props.labelPressed = 'exitZoom';\n                props.icon = 'enter-zoom';\n                props.iconPressed = 'exit-zoom';\n                break;\n\n            case 'fullscreen':\n                props.toggle = true;\n                props.label = 'enterFullscreen';\n                props.labelPressed = 'exitFullscreen';\n                props.icon = 'enter-fullscreen';\n                props.iconPressed = 'exit-fullscreen';\n                break;\n\n            case 'play-large':\n                attributes.class += ` ${this.config.classNames.control}--overlaid`;\n                type = 'play';\n                props.label = 'play';\n                props.icon = 'play';\n                break;\n\n            case 'add-lecture-note':\n                type = 'add-lecture-note';\n                props.label = '筆記標註';\n                props.icon = 'add-lecture-note';\n\n            default:\n                if (is.empty(props.label)) {\n                    props.label = type;\n                }\n                if (is.empty(props.icon)) {\n                    props.icon = buttonType;\n                }\n        }\n\n        const button = createElement(props.element);\n\n        // Setup toggle icon and labels\n        if (props.toggle) {\n            // Icon\n            button.appendChild(\n                controls.createIcon.call(this, props.iconPressed, {\n                    class: 'icon--pressed',\n                }),\n            );\n            button.appendChild(\n                controls.createIcon.call(this, props.icon, {\n                    class: 'icon--not-pressed',\n                }),\n            );\n\n            // Label/Tooltip\n            button.appendChild(\n                controls.createLabel.call(this, props.labelPressed, {\n                    class: 'label--pressed',\n                }),\n            );\n            button.appendChild(\n                controls.createLabel.call(this, props.label, {\n                    class: 'label--not-pressed',\n                }),\n            );\n        } else {\n            button.appendChild(controls.createIcon.call(this, props.icon));\n            button.appendChild(controls.createLabel.call(this, props.label));\n        }\n\n        // Merge and set attributes\n        extend(attributes, getAttributesFromSelector(this.config.selectors.buttons[type], attributes));\n        setAttributes(button, attributes);\n\n        // We have multiple play buttons\n        if (type === 'play') {\n            if (!is.array(this.elements.buttons[type])) {\n                this.elements.buttons[type] = [];\n            }\n\n            this.elements.buttons[type].push(button);\n        } else {\n            this.elements.buttons[type] = button;\n        }\n\n        return button;\n    },\n\n    // Create an <input type='range'>\n    createRange(type, attributes) {\n        // Seek input\n        const input = createElement(\n            'input',\n            extend(\n                getAttributesFromSelector(this.config.selectors.inputs[type]),\n                {\n                    type: 'range',\n                    min: 0,\n                    max: 100,\n                    step: 0.01,\n                    value: 0,\n                    autocomplete: 'off',\n                    // A11y fixes for https://github.com/sampotts/plyr/issues/905\n                    role: 'slider',\n                    'aria-label': i18n.get(type, this.config),\n                    'aria-valuemin': 0,\n                    'aria-valuemax': 100,\n                    'aria-valuenow': 0,\n                },\n                attributes,\n            ),\n        );\n\n        this.elements.inputs[type] = input;\n\n        // Set the fill for webkit now\n        controls.updateRangeFill.call(this, input);\n\n        return input;\n    },\n\n    // Create a <progress>\n    createProgress(type, attributes) {\n        const progress = createElement(\n            'progress',\n            extend(\n                getAttributesFromSelector(this.config.selectors.display[type]),\n                {\n                    min: 0,\n                    max: 100,\n                    value: 0,\n                    role: 'presentation',\n                    'aria-hidden': true,\n                },\n                attributes,\n            ),\n        );\n\n        // Create the label inside\n        if (type !== 'volume') {\n            progress.appendChild(createElement('span', null, '0'));\n\n            const suffixKey = {\n                played: 'played',\n                buffer: 'buffered',\n            }[type];\n            const suffix = suffixKey ? i18n.get(suffixKey, this.config) : '';\n\n            progress.innerText = `% ${suffix.toLowerCase()}`;\n        }\n\n        this.elements.display[type] = progress;\n\n        return progress;\n    },\n\n    // Create time display\n    createTime(type) {\n        const attributes = getAttributesFromSelector(this.config.selectors.display[type]);\n\n        const container = createElement(\n            'div',\n            extend(attributes, {\n                class: `${this.config.classNames.display.time} ${attributes.class ? attributes.class : ''}`.trim(),\n                'aria-label': i18n.get(type, this.config),\n            }),\n            '00:00',\n        );\n\n        // Reference for updates\n        this.elements.display[type] = container;\n\n        return container;\n    },\n\n    // Bind keyboard shortcuts for a menu item\n    // We have to bind to keyup otherwise Firefox triggers a click when a keydown event handler shifts focus\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n    bindMenuItemShortcuts(menuItem, type) {\n        // Navigate through menus via arrow keys and space\n        on(\n            menuItem,\n            'keydown keyup',\n            event => {\n                // We only care about space and ⬆️ ⬇️️ ➡️\n                if (![32, 38, 39, 40].includes(event.which)) {\n                    return;\n                }\n\n                // Prevent play / seek\n                event.preventDefault();\n                event.stopPropagation();\n\n                // We're just here to prevent the keydown bubbling\n                if (event.type === 'keydown') {\n                    return;\n                }\n\n                const isRadioButton = matches(menuItem, '[role=\"menuitemradio\"]');\n\n                // Show the respective menu\n                if (!isRadioButton && [32, 39].includes(event.which)) {\n                    controls.showMenuPanel.call(this, type, true);\n                } else {\n                    let target;\n\n                    if (event.which !== 32) {\n                        if (event.which === 40 || (isRadioButton && event.which === 39)) {\n                            target = menuItem.nextElementSibling;\n\n                            if (!is.element(target)) {\n                                target = menuItem.parentNode.firstElementChild;\n                            }\n                        } else {\n                            target = menuItem.previousElementSibling;\n\n                            if (!is.element(target)) {\n                                target = menuItem.parentNode.lastElementChild;\n                            }\n                        }\n\n                        setFocus.call(this, target, true);\n                    }\n                }\n            },\n            false,\n        );\n\n        // Enter will fire a `click` event but we still need to manage focus\n        // So we bind to keyup which fires after and set focus here\n        on(menuItem, 'keyup', event => {\n            if (event.which !== 13) {\n                return;\n            }\n\n            controls.focusFirstMenuItem.call(this, null, true);\n        });\n    },\n\n    // Create a settings menu item\n    createMenuItem({ value, list, type, title, badge = null, checked = false }) {\n        const attributes = getAttributesFromSelector(this.config.selectors.inputs[type]);\n\n        const menuItem = createElement(\n            'button',\n            extend(attributes, {\n                type: 'button',\n                role: 'menuitemradio',\n                class: `${this.config.classNames.control} ${attributes.class ? attributes.class : ''}`.trim(),\n                'aria-checked': checked,\n                value,\n            }),\n        );\n\n        const flex = createElement('span');\n\n        // We have to set as HTML incase of special characters\n        flex.innerHTML = title;\n\n        if (is.element(badge)) {\n            flex.appendChild(badge);\n        }\n\n        menuItem.appendChild(flex);\n\n        // Replicate radio button behaviour\n        Object.defineProperty(menuItem, 'checked', {\n            enumerable: true,\n            get() {\n                return menuItem.getAttribute('aria-checked') === 'true';\n            },\n            set(checked) {\n                // Ensure exclusivity\n                if (checked) {\n                    Array.from(menuItem.parentNode.children)\n                        .filter(node => matches(node, '[role=\"menuitemradio\"]'))\n                        .forEach(node => node.setAttribute('aria-checked', 'false'));\n                }\n\n                menuItem.setAttribute('aria-checked', checked ? 'true' : 'false');\n            },\n        });\n\n        this.listeners.bind(\n            menuItem,\n            'click keyup',\n            event => {\n                if (is.keyboardEvent(event) && event.which !== 32) {\n                    return;\n                }\n\n                event.preventDefault();\n                event.stopPropagation();\n\n                menuItem.checked = true;\n\n                switch (type) {\n                    case 'language':\n                        this.currentTrack = Number(value);\n                        break;\n\n                    case 'quality':\n                        this.quality = value;\n                        break;\n\n                    case 'speed':\n                        this.speed = parseFloat(value);\n                        break;\n\n                    default:\n                        break;\n                }\n\n                controls.showMenuPanel.call(this, 'home', is.keyboardEvent(event));\n            },\n            type,\n            false,\n        );\n\n        controls.bindMenuItemShortcuts.call(this, menuItem, type);\n\n        list.appendChild(menuItem);\n    },\n\n    // Format a time for display\n    formatTime(time = 0, inverted = false) {\n        // Bail if the value isn't a number\n        if (!is.number(time)) {\n            return time;\n        }\n\n        // Always display hours if duration is over an hour\n        const forceHours = getHours(this.duration) > 0;\n\n        return formatTime(time, forceHours, inverted);\n    },\n\n    // Update the displayed time\n    updateTimeDisplay(target = null, time = 0, inverted = false) {\n        // Bail if there's no element to display or the value isn't a number\n        if (!is.element(target) || !is.number(time)) {\n            return;\n        }\n\n        // eslint-disable-next-line no-param-reassign\n        target.innerText = controls.formatTime(time, inverted);\n    },\n\n    // Update volume UI and storage\n    updateVolume() {\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Update range\n        if (is.element(this.elements.inputs.volume)) {\n            controls.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume);\n        }\n\n        // Update mute state\n        if (is.element(this.elements.buttons.mute)) {\n            this.elements.buttons.mute.pressed = this.muted || this.volume === 0;\n        }\n    },\n\n    // Update seek value and lower fill\n    setRange(target, value = 0) {\n        if (!is.element(target)) {\n            return;\n        }\n\n        // eslint-disable-next-line\n        target.value = value;\n\n        // Webkit range fill\n        controls.updateRangeFill.call(this, target);\n    },\n\n    // Update <progress> elements\n    updateProgress(event) {\n        if (!this.supported.ui || !is.event(event)) {\n            return;\n        }\n\n        let value = 0;\n\n        const setProgress = (target, input) => {\n            const value = is.number(input) ? input : 0;\n            const progress = is.element(target) ? target : this.elements.display.buffer;\n\n            // Update value and label\n            if (is.element(progress)) {\n                progress.value = value;\n\n                // Update text label inside\n                const label = progress.getElementsByTagName('span')[0];\n                if (is.element(label)) {\n                    label.childNodes[0].nodeValue = value;\n                }\n            }\n        };\n\n        if (event) {\n            switch (event.type) {\n                // Video playing\n                case 'timeupdate':\n                case 'seeking':\n                case 'seeked':\n                    value = getPercentage(this.currentTime, this.duration);\n\n                    // Set seek range value only if it's a 'natural' time event\n                    if (event.type === 'timeupdate') {\n                        controls.setRange.call(this, this.elements.inputs.seek, value);\n                    }\n\n                    break;\n\n                // Check buffer status\n                case 'playing':\n                case 'progress':\n                    setProgress(this.elements.display.buffer, this.buffered * 100);\n\n                    break;\n\n                default:\n                    break;\n            }\n        }\n    },\n\n    // Webkit polyfill for lower fill range\n    updateRangeFill(target) {\n        // Get range from event if event passed\n        const range = is.event(target) ? target.target : target;\n\n        // Needs to be a valid <input type='range'>\n        if (!is.element(range) || range.getAttribute('type') !== 'range') {\n            return;\n        }\n\n        // Set aria values for https://github.com/sampotts/plyr/issues/905\n        if (matches(range, this.config.selectors.inputs.seek)) {\n            range.setAttribute('aria-valuenow', this.currentTime);\n            const currentTime = controls.formatTime(this.currentTime);\n            const duration = controls.formatTime(this.duration);\n            const format = i18n.get('seekLabel', this.config);\n            range.setAttribute(\n                'aria-valuetext',\n                format.replace('{currentTime}', currentTime).replace('{duration}', duration),\n            );\n        } else if (matches(range, this.config.selectors.inputs.volume)) {\n            const percent = range.value * 100;\n            range.setAttribute('aria-valuenow', percent);\n            range.setAttribute('aria-valuetext', `${percent.toFixed(1)}%`);\n        } else {\n            range.setAttribute('aria-valuenow', range.value);\n        }\n\n        // WebKit only\n        if (!browser.isWebkit) {\n            return;\n        }\n\n        // Set CSS custom property\n        range.style.setProperty('--value', `${range.value / range.max * 100}%`);\n    },\n\n    // Update hover tooltip for seeking\n    updateSeekTooltip(event) {\n        // Bail if setting not true\n        if (\n            !this.config.tooltips.seek ||\n            !is.element(this.elements.inputs.seek) ||\n            !is.element(this.elements.display.seekTooltip) ||\n            this.duration === 0\n        ) {\n            return;\n        }\n\n        // Calculate percentage\n        let percent = 0;\n        const clientRect = this.elements.progress.getBoundingClientRect();\n        const visible = `${this.config.classNames.tooltip}--visible`;\n\n        const toggle = toggle => {\n            toggleClass(this.elements.display.seekTooltip, visible, toggle);\n        };\n\n        // Hide on touch\n        if (this.touch) {\n            toggle(false);\n            return;\n        }\n\n        // Determine percentage, if already visible\n        if (is.event(event)) {\n            percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n        } else if (hasClass(this.elements.display.seekTooltip, visible)) {\n            percent = parseFloat(this.elements.display.seekTooltip.style.left, 10);\n        } else {\n            return;\n        }\n\n        // Set bounds\n        if (percent < 0) {\n            percent = 0;\n        } else if (percent > 100) {\n            percent = 100;\n        }\n\n        // Display the time a click would seek to\n        controls.updateTimeDisplay.call(this, this.elements.display.seekTooltip, this.duration / 100 * percent);\n\n        // Set position\n        this.elements.display.seekTooltip.style.left = `${percent}%`;\n\n        // Show/hide the tooltip\n        // If the event is a moues in/out and percentage is inside bounds\n        if (is.event(event) && ['mouseenter', 'mouseleave'].includes(event.type)) {\n            toggle(event.type === 'mouseenter');\n        }\n    },\n\n    // Handle time change event\n    timeUpdate(event) {\n        // Only invert if only one time element is displayed and used for both duration and currentTime\n        const invert = !is.element(this.elements.display.duration) && this.config.invertTime;\n\n        // Duration\n        controls.updateTimeDisplay.call(\n            this,\n            this.elements.display.currentTime,\n            invert ? this.duration - this.currentTime : this.currentTime,\n            invert,\n        );\n\n        // Ignore updates while seeking\n        if (event && event.type === 'timeupdate' && this.media.seeking) {\n            return;\n        }\n\n        // Playing progress\n        controls.updateProgress.call(this, event);\n    },\n\n    // Show the duration on metadataloaded or durationchange events\n    durationUpdate() {\n        // Bail if no UI or durationchange event triggered after playing/seek when invertTime is false\n        if (!this.supported.ui || (!this.config.invertTime && this.currentTime)) {\n            return;\n        }\n\n        // If duration is the 2**32 (shaka), Infinity (HLS), DASH-IF (Number.MAX_SAFE_INTEGER || Number.MAX_VALUE) indicating live we hide the currentTime and progressbar.\n        // https://github.com/video-dev/hls.js/blob/5820d29d3c4c8a46e8b75f1e3afa3e68c1a9a2db/src/controller/buffer-controller.js#L415\n        // https://github.com/google/shaka-player/blob/4d889054631f4e1cf0fbd80ddd2b71887c02e232/lib/media/streaming_engine.js#L1062\n        // https://github.com/Dash-Industry-Forum/dash.js/blob/69859f51b969645b234666800d4cb596d89c602d/src/dash/models/DashManifestModel.js#L338\n        if (this.duration >= 2 ** 32) {\n            toggleHidden(this.elements.display.currentTime, true);\n            toggleHidden(this.elements.progress, true);\n            return;\n        }\n\n        // Update ARIA values\n        if (is.element(this.elements.inputs.seek)) {\n            this.elements.inputs.seek.setAttribute('aria-valuemax', this.duration);\n        }\n\n        // If there's a spot to display duration\n        const hasDuration = is.element(this.elements.display.duration);\n\n        // If there's only one time display, display duration there\n        if (!hasDuration && this.config.displayDuration && this.paused) {\n            controls.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration);\n        }\n\n        // If there's a duration element, update content\n        if (hasDuration) {\n            controls.updateTimeDisplay.call(this, this.elements.display.duration, this.duration);\n        }\n\n        // Update the tooltip (if visible)\n        controls.updateSeekTooltip.call(this);\n    },\n\n    // Hide/show a tab\n    toggleMenuButton(setting, toggle) {\n        toggleHidden(this.elements.settings.buttons[setting], !toggle);\n    },\n\n    // Update the selected setting\n    updateSetting(setting, container, input) {\n        const pane = this.elements.settings.panels[setting];\n        let value = null;\n        let list = container;\n\n        if (setting === 'captions') {\n            value = this.currentTrack;\n        } else if (setting === 'caption-position') {\n            value = this.setCaptionsPositionMenu;\n        } else {\n            value = !is.empty(input) ? input : this[setting];\n\n            // Get default\n            if (is.empty(value)) {\n                value = this.config[setting].default;\n            }\n\n            // Unsupported value\n            if (!is.empty(this.options[setting]) && !this.options[setting].includes(value)) {\n                this.debug.warn(`Unsupported value of '${value}' for ${setting}`);\n                return;\n            }\n\n            // Disabled value\n            // We generate resolution option from real contents.\n            // Therefore, bypasss checking on ‘quality’ config.\n            if (setting !== 'quality' && !this.config[setting].options.includes(value)) {\n                this.debug.warn(`Disabled value of '${value}' for ${setting}`);\n                return;\n            }\n        }\n\n        // Get the list if we need to\n        if (!is.element(list)) {\n            list = pane && pane.querySelector('[role=\"menu\"]');\n        }\n\n        // If there's no list it means it's not been rendered...\n        if (!is.element(list)) {\n            return;\n        }\n\n        // Update the label\n        const label = this.elements.settings.buttons[setting].querySelector(`.${this.config.classNames.menu.value}`);\n        label.innerHTML = controls.getLabel.call(this, setting, value);\n\n        // Find the radio option and check it\n        const target = list && list.querySelector(`[value=\"${value}\"]`);\n\n        if (is.element(target)) {\n            target.checked = true;\n        }\n    },\n\n    // Translate a value into a nice label\n    getLabel(setting, value) {\n        switch (setting) {\n            case 'speed':\n                return value === 1 ? i18n.get('normal', this.config) : `${value}&times;`;\n\n            case 'quality':\n                if (is.number(value)) {\n                    const label = i18n.get(`qualityLabel.${value}`, this.config);\n\n                    if (!label.length) {\n                        return `${value}p`;\n                    }\n\n                    return label;\n                }\n\n                return toTitleCase(value);\n\n            case 'captions':\n                return captions.getLabel.call(this);\n\n            case 'caption-position':\n                return i18n.get(`captionPositionLabel.${value}`, this.config)\n\n            default:\n                return null;\n        }\n    },\n\n    // Set the quality menu\n    setQualityMenu(options) {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.quality)) {\n            return;\n        }\n\n        const type = 'quality';\n        const list = this.elements.settings.panels.quality.querySelector('[role=\"menu\"]');\n\n        // Set options if passed and filter based on uniqueness and config\n        if (is.array(options)) {\n            this.options.quality = dedupe(options).filter(quality => this.config.quality.options.includes(quality));\n        }\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.quality) && this.options.quality.length > 1;\n        controls.toggleMenuButton.call(this, type, toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Get the badge HTML for HD, 4K etc\n        const getBadge = quality => {\n            const label = i18n.get(`qualityBadge.${quality}`, this.config);\n\n            if (!label.length) {\n                return null;\n            }\n\n            return controls.createBadge.call(this, label);\n        };\n\n        // Sort options by the config and then render options\n        this.options.quality\n            .sort((a, b) => {\n                const sorting = this.config.quality.options;\n                return sorting.indexOf(a) > sorting.indexOf(b) ? 1 : -1;\n            })\n            .forEach(quality => {\n                controls.createMenuItem.call(this, {\n                    value: quality,\n                    list,\n                    type,\n                    title: controls.getLabel.call(this, 'quality', quality),\n                    badge: getBadge(quality),\n                });\n            });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set the looping options\n    /* setLoopMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.loop)) {\n            return;\n        }\n\n        const options = ['start', 'end', 'all', 'reset'];\n        const list = this.elements.settings.panels.loop.querySelector('[role=\"menu\"]');\n\n        // Show the pane and tab\n        toggleHidden(this.elements.settings.buttons.loop, false);\n        toggleHidden(this.elements.settings.panels.loop, false);\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.loop.options);\n        controls.toggleMenuButton.call(this, 'loop', toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        options.forEach(option => {\n            const item = createElement('li');\n\n            const button = createElement(\n                'button',\n                extend(getAttributesFromSelector(this.config.selectors.buttons.loop), {\n                    type: 'button',\n                    class: this.config.classNames.control,\n                    'data-plyr-loop-action': option,\n                }),\n                i18n.get(option, this.config)\n            );\n\n            if (['start', 'end'].includes(option)) {\n                const badge = controls.createBadge.call(this, '00:00');\n                button.appendChild(badge);\n            }\n\n            item.appendChild(button);\n            list.appendChild(item);\n        });\n    }, */\n\n    // Get current selected caption language\n    // TODO: rework this to user the getter in the API?\n\n    // Set a list of available captions languages\n    setCaptionsMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.captions)) {\n            return;\n        }\n\n        // TODO: Captions or language? Currently it's mixed\n        const type = 'captions';\n        const list = this.elements.settings.panels.captions.querySelector('[role=\"menu\"]');\n        const tracks = captions.getTracks.call(this);\n        const toggle = Boolean(tracks.length);\n\n        // Toggle the pane and tab\n        controls.toggleMenuButton.call(this, type, toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If there's no captions, bail\n        if (!toggle) {\n            return;\n        }\n\n        // Generate options data\n        const options = tracks.map((track, value) => ({\n            value,\n            checked: this.captions.toggled && this.currentTrack === value,\n            title: captions.getLabel.call(this, track),\n            badge: track.language && controls.createBadge.call(this, track.language.toUpperCase()),\n            list,\n            type: 'language',\n        }));\n\n        // Add the \"Disabled\" option to turn off captions\n        options.unshift({\n            value: -1,\n            checked: !this.captions.toggled,\n            title: i18n.get('disabled', this.config),\n            list,\n            type: 'language',\n        });\n\n        // Generate options\n        options.forEach(controls.createMenuItem.bind(this));\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    setCaptionsPositionMenu() {\n        if (!this.config.controls.includes('caption-position')) {\n            return;\n        }\n\n        if (!is.element(this.elements.settings.panes['caption-position'])) {\n            return;\n        }\n\n        const type = 'caption-position';\n\n        controls.toggleTab.call(this, type, true);\n\n        // Get the list to populate\n        const list = this.elements.settings.panes['caption-position'].querySelector('ul');\n\n        // Empty the menu\n        emptyElement(list);\n\n        const positions = ['top', 'bottom'];\n\n        // Create items\n        positions.forEach(position => {\n            controls.createMenuItem.call(this, {\n                value: position,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'caption-position', position),\n            });\n        });\n        controls.updateSetting.call(this, type, list);\n    },\n\n    setSpeedMenu(options) {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.speed)) {\n            return;\n        }\n\n        const type = 'speed';\n        const list = this.elements.settings.panels.speed.querySelector('[role=\"menu\"]');\n\n        // Set the speed options\n        if (is.array(options)) {\n            this.options.speed = options;\n        } else if (this.isHTML5 || this.isVimeo) {\n            this.options.speed = [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\n        }\n\n        // Set options if passed and filter based on config\n        this.options.speed = this.options.speed.filter(speed => this.config.speed.options.includes(speed));\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.speed) && this.options.speed.length > 1;\n        controls.toggleMenuButton.call(this, type, toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Create items\n        this.options.speed.forEach(speed => {\n            controls.createMenuItem.call(this, {\n                value: speed,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'speed', speed),\n            });\n        });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Check if we need to hide/show the settings menu\n    checkMenu() {\n        const { buttons } = this.elements.settings;\n        const visible = !is.empty(buttons) && Object.values(buttons).some(button => !button.hidden);\n\n        toggleHidden(this.elements.settings.menu, !visible);\n    },\n\n    // Focus the first menu item in a given (or visible) menu\n    focusFirstMenuItem(pane, tabFocus = false) {\n        if (this.elements.settings.popup.hidden) {\n            return;\n        }\n\n        let target = pane;\n\n        if (!is.element(target)) {\n            target = Object.values(this.elements.settings.panels).find(pane => !pane.hidden);\n        }\n\n        const firstItem = target.querySelector('[role^=\"menuitem\"]');\n\n        setFocus.call(this, firstItem, tabFocus);\n    },\n\n    // Show/hide menu\n    toggleMenu(input) {\n        const { popup } = this.elements.settings;\n        const button = this.elements.buttons.settings;\n\n        // Menu and button are required\n        if (!is.element(popup) || !is.element(button)) {\n            return;\n        }\n\n        // True toggle by default\n        const { hidden } = popup;\n        let show = hidden;\n\n        if (is.boolean(input)) {\n            show = input;\n        } else if (is.keyboardEvent(input) && input.which === 27) {\n            show = false;\n        } else if (is.event(input)) {\n            const isMenuItem = popup.contains(input.target);\n\n            // If the click was inside the menu or if the click\n            // wasn't the button or menu item and we're trying to\n            // show the menu (a doc click shouldn't show the menu)\n            if (isMenuItem || (!isMenuItem && input.target !== button && show)) {\n                return;\n            }\n        }\n\n        // Set button attributes\n        button.setAttribute('aria-expanded', show);\n\n        // Show the actual popup\n        toggleHidden(popup, !show);\n\n        // Add class hook\n        toggleClass(this.elements.container, this.config.classNames.menu.open, show);\n\n        // Focus the first item if key interaction\n        if (show && is.keyboardEvent(input)) {\n            controls.focusFirstMenuItem.call(this, null, true);\n        } else if (!show && !hidden) {\n            // If closing, re-focus the button\n            setFocus.call(this, button, is.keyboardEvent(input));\n        }\n    },\n\n    // Get the natural size of a menu panel\n    getMenuSize(tab) {\n        const clone = tab.cloneNode(true);\n        clone.style.position = 'absolute';\n        clone.style.opacity = 0;\n        clone.removeAttribute('hidden');\n\n        // Append to parent so we get the \"real\" size\n        tab.parentNode.appendChild(clone);\n\n        // Get the sizes before we remove\n        const width = clone.scrollWidth;\n        const height = clone.scrollHeight;\n\n        // Remove from the DOM\n        removeElement(clone);\n\n        return {\n            width,\n            height,\n        };\n    },\n\n    // Show a panel in the menu\n    showMenuPanel(type = '', tabFocus = false) {\n        const target = document.getElementById(`plyr-settings-${this.id}-${type}`);\n\n        // Nothing to show, bail\n        if (!is.element(target)) {\n            return;\n        }\n\n        // Hide all other panels\n        const container = target.parentNode;\n        const current = Array.from(container.children).find(node => !node.hidden);\n\n        // If we can do fancy animations, we'll animate the height/width\n        if (support.transitions && !support.reducedMotion) {\n            // Set the current width as a base\n            container.style.width = `${current.scrollWidth}px`;\n            container.style.height = `${current.scrollHeight}px`;\n\n            // Get potential sizes\n            const size = controls.getMenuSize.call(this, target);\n\n            // Restore auto height/width\n            const restore = event => {\n                // We're only bothered about height and width on the container\n                if (event.target !== container || !['width', 'height'].includes(event.propertyName)) {\n                    return;\n                }\n\n                // Revert back to auto\n                container.style.width = '';\n                container.style.height = '';\n\n                // Only listen once\n                off.call(this, container, transitionEndEvent, restore);\n            };\n\n            // Listen for the transition finishing and restore auto height/width\n            on.call(this, container, transitionEndEvent, restore);\n\n            // Set dimensions to target\n            container.style.width = `${size.width}px`;\n            container.style.height = `${size.height}px`;\n        }\n\n        // Set attributes on current tab\n        toggleHidden(current, true);\n\n        // Set attributes on target\n        toggleHidden(target, false);\n\n        // Focus the first item\n        controls.focusFirstMenuItem.call(this, target, tabFocus);\n    },\n\n    // Set the download link\n    setDownloadLink() {\n        const button = this.elements.buttons.download;\n\n        // Bail if no button\n        if (!is.element(button)) {\n            return;\n        }\n\n        // Set download link\n        button.setAttribute('href', this.download);\n    },\n\n    // Build the default HTML\n    // TODO: Set order based on order in the config.controls array?\n    create(data) {\n        // Create the container\n        const container = createElement('div', getAttributesFromSelector(this.config.selectors.controls.wrapper));\n\n        // Restart button\n        if (this.config.controls.includes('restart')) {\n            container.appendChild(controls.createButton.call(this, 'restart'));\n        }\n\n        // Rewind button\n        if (this.config.controls.includes('rewind')) {\n            container.appendChild(controls.createButton.call(this, 'rewind'));\n        }\n\n        // Play/Pause button\n        if (this.config.controls.includes('play')) {\n            container.appendChild(controls.createButton.call(this, 'play'));\n        }\n\n        // Fast forward button\n        if (this.config.controls.includes('fast-forward')) {\n            container.appendChild(controls.createButton.call(this, 'fast-forward'));\n        }\n\n        // Progress\n        if (this.config.controls.includes('progress')) {\n            const progress = createElement('div', getAttributesFromSelector(this.config.selectors.progress));\n\n            // Seek range slider\n            progress.appendChild(\n                controls.createRange.call(this, 'seek', {\n                    id: `plyr-seek-${data.id}`,\n                }),\n            );\n\n            // Buffer progress\n            progress.appendChild(controls.createProgress.call(this, 'buffer'));\n\n            // TODO: Add loop display indicator\n\n            // Seek tooltip\n            if (this.config.tooltips.seek) {\n                const tooltip = createElement(\n                    'span',\n                    {\n                        class: this.config.classNames.tooltip,\n                    },\n                    '00:00',\n                );\n\n                progress.appendChild(tooltip);\n                this.elements.display.seekTooltip = tooltip;\n            }\n\n            this.elements.progress = progress;\n            container.appendChild(this.elements.progress);\n        }\n\n        // Media current time display\n        if (this.config.controls.includes('current-time')) {\n            container.appendChild(controls.createTime.call(this, 'currentTime'));\n        }\n\n        // Media duration display\n        if (this.config.controls.includes('duration')) {\n            container.appendChild(controls.createTime.call(this, 'duration'));\n        }\n\n        // Volume controls\n        if (this.config.controls.includes('mute') || this.config.controls.includes('volume')) {\n            const volume = createElement('div', {\n                class: 'plyr__volume',\n            });\n\n            // Toggle mute button\n            if (this.config.controls.includes('mute')) {\n                volume.appendChild(controls.createButton.call(this, 'mute'));\n            }\n\n            // Volume range control\n            if (this.config.controls.includes('volume')) {\n                // Set the attributes\n                const attributes = {\n                    max: 1,\n                    step: 0.05,\n                    value: this.config.volume,\n                };\n\n                // Create the volume range slider\n                volume.appendChild(\n                    controls.createRange.call(\n                        this,\n                        'volume',\n                        extend(attributes, {\n                            id: `plyr-volume-${data.id}`,\n                        }),\n                    ),\n                );\n\n                this.elements.volume = volume;\n            }\n\n            container.appendChild(volume);\n        }\n\n        // Toggle captions button\n        if (this.config.controls.includes('captions')) {\n            container.appendChild(controls.createButton.call(this, 'captions'));\n        }\n\n        // Settings button / menu\n        if (this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\n            const control = createElement('div', {\n                class: 'plyr__menu',\n                hidden: '',\n            });\n\n            control.appendChild(\n                controls.createButton.call(this, 'settings', {\n                    'aria-haspopup': true,\n                    'aria-controls': `plyr-settings-${data.id}`,\n                    'aria-expanded': false,\n                }),\n            );\n\n            const popup = createElement('div', {\n                class: 'plyr__menu__container',\n                id: `plyr-settings-${data.id}`,\n                hidden: '',\n            });\n\n            const inner = createElement('div');\n\n            const home = createElement('div', {\n                id: `plyr-settings-${data.id}-home`,\n            });\n\n            // Create the menu\n            const menu = createElement('div', {\n                role: 'menu',\n            });\n\n            home.appendChild(menu);\n            inner.appendChild(home);\n            this.elements.settings.panels.home = home;\n\n            // Build the menu items\n            this.config.settings.forEach(type => {\n                // TODO: bundle this with the createMenuItem helper and bindings\n                const menuItem = createElement(\n                    'button',\n                    extend(getAttributesFromSelector(this.config.selectors.buttons.settings), {\n                        type: 'button',\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\n                        role: 'menuitem',\n                        'aria-haspopup': true,\n                        hidden: '',\n                    }),\n                );\n\n                // Bind menu shortcuts for keyboard users\n                controls.bindMenuItemShortcuts.call(this, menuItem, type);\n\n                // Show menu on click\n                on(menuItem, 'click', () => {\n                    controls.showMenuPanel.call(this, type, false);\n                });\n\n                const flex = createElement('span', null, i18n.get(type, this.config));\n\n                const value = createElement('span', {\n                    class: this.config.classNames.menu.value,\n                });\n\n                // Speed contains HTML entities\n                value.innerHTML = data[type];\n\n                flex.appendChild(value);\n                menuItem.appendChild(flex);\n                menu.appendChild(menuItem);\n\n                // Build the panes\n                const pane = createElement('div', {\n                    id: `plyr-settings-${data.id}-${type}`,\n                    hidden: '',\n                });\n\n                // Back button\n                const backButton = createElement('button', {\n                    type: 'button',\n                    class: `${this.config.classNames.control} ${this.config.classNames.control}--back`,\n                });\n\n                // Visible label\n                backButton.appendChild(\n                    createElement(\n                        'span',\n                        {\n                            'aria-hidden': true,\n                        },\n                        i18n.get(type, this.config),\n                    ),\n                );\n\n                // Screen reader label\n                backButton.appendChild(\n                    createElement(\n                        'span',\n                        {\n                            class: this.config.classNames.hidden,\n                        },\n                        i18n.get('menuBack', this.config),\n                    ),\n                );\n\n                // Go back via keyboard\n                on(\n                    pane,\n                    'keydown',\n                    event => {\n                        // We only care about <-\n                        if (event.which !== 37) {\n                            return;\n                        }\n\n                        // Prevent seek\n                        event.preventDefault();\n                        event.stopPropagation();\n\n                        // Show the respective menu\n                        controls.showMenuPanel.call(this, 'home', true);\n                    },\n                    false,\n                );\n\n                // Go back via button click\n                on(backButton, 'click', () => {\n                    controls.showMenuPanel.call(this, 'home', false);\n                });\n\n                // Add to pane\n                pane.appendChild(backButton);\n\n                // Menu\n                pane.appendChild(\n                    createElement('div', {\n                        role: 'menu',\n                    }),\n                );\n\n                inner.appendChild(pane);\n\n                this.elements.settings.buttons[type] = menuItem;\n                this.elements.settings.panels[type] = pane;\n            });\n\n            popup.appendChild(inner);\n            control.appendChild(popup);\n            container.appendChild(control);\n\n            this.elements.settings.popup = popup;\n            this.elements.settings.menu = control;\n        }\n\n        // Picture in picture button\n        if (this.config.controls.includes('pip') && support.pip) {\n            container.appendChild(controls.createButton.call(this, 'pip'));\n        }\n\n        // Airplay button\n        if (this.config.controls.includes('airplay') && support.airplay) {\n            container.appendChild(controls.createButton.call(this, 'airplay'));\n        }\n\n        // Download button\n        if (this.config.controls.includes('download')) {\n            const attributes = {\n                element: 'a',\n                href: this.download,\n                target: '_blank',\n            };\n\n            const { download } = this.config.urls;\n\n            if (!is.url(download) && this.isEmbed) {\n                extend(attributes, {\n                    icon: `logo-${this.provider}`,\n                    label: this.provider,\n                });\n            }\n\n            container.appendChild(controls.createButton.call(this, 'download', attributes));\n        }\n\n        // Toggle zoom button\n        if (this.config.controls.includes('zoom')) {\n            container.appendChild(controls.createButton.call(this, 'zoom'));\n        }\n\n        // Toggle fullscreen button\n        if (this.config.controls.includes('fullscreen')) {\n            container.appendChild(controls.createButton.call(this, 'fullscreen'));\n        }\n\n        // Larger overlaid play button\n        if (this.config.controls.includes('play-large')) {\n            this.elements.container.appendChild(controls.createButton.call(this, 'play-large'));\n        }\n\n        this.elements.controls = container;\n\n        // Set available quality levels\n        if (this.isHTML5) {\n            controls.setQualityMenu.call(this, html5.getQualityOptions.call(this));\n        }\n\n        controls.setSpeedMenu.call(this);\n\n        return container;\n    },\n\n    // Insert controls\n    inject() {\n        // Sprite\n        if (this.config.loadSprite) {\n            const icon = controls.getIconUrl.call(this);\n\n            // Only load external sprite using AJAX\n            if (icon.cors) {\n                loadSprite(icon.url, 'sprite-plyr');\n            }\n        }\n\n        // Create a unique ID\n        this.id = Math.floor(Math.random() * 10000);\n\n        // Null by default\n        let container = null;\n        this.elements.controls = null;\n\n        // Set template properties\n        const props = {\n            id: this.id,\n            seektime: this.config.seekTime,\n            title: this.config.title,\n        };\n        let update = true;\n\n        // If function, run it and use output\n        if (is.function(this.config.controls)) {\n            this.config.controls = this.config.controls.call(this.props);\n        }\n\n        // Convert falsy controls to empty array (primarily for empty strings)\n        if (!this.config.controls) {\n            this.config.controls = [];\n        }\n\n        if (is.element(this.config.controls) || is.string(this.config.controls)) {\n            // HTMLElement or Non-empty string passed as the option\n            container = this.config.controls;\n        } else {\n            // Create controls\n            container = controls.create.call(this, {\n                id: this.id,\n                seektime: this.config.seekTime,\n                speed: this.speed,\n                quality: this.quality,\n                captions: captions.getLabel.call(this),\n                // TODO: Looping\n                // loop: 'None',\n            });\n            update = false;\n        }\n\n        // Replace props with their value\n        const replace = input => {\n            let result = input;\n\n            Object.entries(props).forEach(([key, value]) => {\n                result = replaceAll(result, `{${key}}`, value);\n            });\n\n            return result;\n        };\n\n        // Update markup\n        if (update) {\n            if (is.string(this.config.controls)) {\n                container = replace(container);\n            } else if (is.element(container)) {\n                container.innerHTML = replace(container.innerHTML);\n            }\n        }\n\n        // Controls container\n        let target;\n\n        // Inject to custom location\n        if (is.string(this.config.selectors.controls.container)) {\n            target = document.querySelector(this.config.selectors.controls.container);\n        }\n\n        // Inject into the container by default\n        if (!is.element(target)) {\n            target = this.elements.container;\n        }\n\n        // Inject controls HTML (needs to be before captions, hence \"afterbegin\")\n        const insertMethod = is.element(container) ? 'insertAdjacentElement' : 'insertAdjacentHTML';\n        target[insertMethod]('afterbegin', container);\n\n        // Find the elements if need be\n        if (!is.element(this.elements.controls)) {\n            controls.findElements.call(this);\n        }\n\n        // Add pressed property to buttons\n        if (!is.empty(this.elements.buttons)) {\n            const addProperty = button => {\n                const className = this.config.classNames.controlPressed;\n                Object.defineProperty(button, 'pressed', {\n                    enumerable: true,\n                    get() {\n                        return hasClass(button, className);\n                    },\n                    set(pressed = false) {\n                        toggleClass(button, className, pressed);\n                    },\n                });\n            };\n\n            // Toggle classname when pressed property is set\n            Object.values(this.elements.buttons)\n                .filter(Boolean)\n                .forEach(button => {\n                    if (is.array(button) || is.nodeList(button)) {\n                        Array.from(button).filter(Boolean).forEach(addProperty);\n                    } else {\n                        addProperty(button);\n                    }\n                });\n        }\n\n        // Edge sometimes doesn't finish the paint so force a redraw\n        if (window.navigator.userAgent.includes('Edge')) {\n            repaint(target);\n        }\n\n        // Setup tooltips\n        if (this.config.tooltips.controls) {\n            const { classNames, selectors } = this.config;\n            const selector = `${selectors.controls.wrapper} ${selectors.labels} .${classNames.hidden}`;\n            const labels = getElements.call(this, selector);\n\n            Array.from(labels).forEach(label => {\n                toggleClass(label, this.config.classNames.hidden, false);\n                toggleClass(label, this.config.classNames.tooltip, true);\n            });\n        }\n    },\n};\n\nexport default controls;\n","// ==========================================================================\n// URL utils\n// ==========================================================================\n\nimport is from './is';\n\n/**\n * Parse a string to a URL object\n * @param {string} input - the URL to be parsed\n * @param {boolean} safe - failsafe parsing\n */\nexport function parseUrl(input, safe = true) {\n    let url = input;\n\n    if (safe) {\n        const parser = document.createElement('a');\n        parser.href = url;\n        url = parser.href;\n    }\n\n    try {\n        return new URL(url);\n    } catch (e) {\n        return null;\n    }\n}\n\n// Convert object to URLSearchParams\nexport function buildUrlParams(input) {\n    const params = new URLSearchParams();\n\n    if (is.object(input)) {\n        Object.entries(input).forEach(([key, value]) => {\n            params.set(key, value);\n        });\n    }\n\n    return params;\n}\n","// ==========================================================================\n// Plyr Captions\n// TODO: Create as class\n// ==========================================================================\n\nimport controls from './controls';\nimport support from './support';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport {\n    createElement,\n    emptyElement,\n    getAttributesFromSelector,\n    insertAfter,\n    removeElement,\n    toggleClass,\n    hasClass,\n} from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport fetch from './utils/fetch';\nimport i18n from './utils/i18n';\nimport is from './utils/is';\nimport { getHTML } from './utils/strings';\nimport { parseUrl } from './utils/urls';\n\nconst captions = {\n    // Setup captions\n    setup() {\n        // Requires UI support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Only Vimeo and HTML5 video supported at this point\n        if (!this.isVideo || this.isYouTube || (this.isHTML5 && !support.textTracks)) {\n            // Clear menu and hide\n            if (\n                is.array(this.config.controls) &&\n                this.config.controls.includes('settings') &&\n                this.config.settings.includes('captions')\n            ) {\n                controls.setCaptionsMenu.call(this);\n                controls.setCaptionsPositionMenu.call(this);\n            }\n\n            return;\n        }\n\n        // Inject the container\n        if (!is.element(this.elements.captions)) {\n            this.elements.captions = createElement('div', getAttributesFromSelector(this.config.selectors.captions));\n\n            insertAfter(this.elements.captions, this.elements.wrapper);\n        }\n\n        // Fix IE captions if CORS is used\n        // Fetch captions and inject as blobs instead (data URIs not supported!)\n        if (browser.isIE && window.URL) {\n            const elements = this.media.querySelectorAll('track');\n\n            Array.from(elements).forEach(track => {\n                const src = track.getAttribute('src');\n                const url = parseUrl(src);\n\n                if (\n                    url !== null &&\n                    url.hostname !== window.location.href.hostname &&\n                    ['http:', 'https:'].includes(url.protocol)\n                ) {\n                    fetch(src, 'blob')\n                        .then(blob => {\n                            track.setAttribute('src', window.URL.createObjectURL(blob));\n                        })\n                        .catch(() => {\n                            removeElement(track);\n                        });\n                }\n            });\n        }\n\n        // Get and set initial data\n        // The \"preferred\" options are not realized unless / until the wanted language has a match\n        // * languages: Array of user's browser languages.\n        // * language:  The language preferred by user settings or config\n        // * active:    The state preferred by user settings or config\n        // * toggled:   The real captions state\n\n        const browserLanguages = navigator.languages || [navigator.language || navigator.userLanguage || 'en'];\n        const languages = dedupe(browserLanguages.map(language => language.split('-')[0]));\n\n        let language = (this.storage.get('language') || this.config.captions.language || 'auto').toLowerCase();\n\n        // Use first browser language when language is 'auto'\n        if (language === 'auto') {\n            [language] = languages;\n        }\n\n        let active = this.storage.get('captions');\n        if (!is.boolean(active)) {\n            ({ active } = this.config.captions);\n        }\n\n        Object.assign(this.captions, {\n            toggled: false,\n            active,\n            language,\n            languages,\n        });\n\n        captions.setPosition.call(this, this.captionPosition);\n\n        // Watch changes to textTracks and update captions menu\n        if (this.isHTML5) {\n            const trackEvents = this.config.captions.update ? 'addtrack removetrack' : 'removetrack';\n            on.call(this, this.media.textTracks, trackEvents, captions.update.bind(this));\n        }\n\n        // Update available languages in list next tick (the event must not be triggered before the listeners)\n        setTimeout(captions.update.bind(this), 0);\n    },\n\n    // Update available language options in settings based on tracks\n    update() {\n        const tracks = captions.getTracks.call(this, true);\n        // Get the wanted language\n        const { active, language, meta, currentTrackNode } = this.captions;\n        const languageExists = Boolean(tracks.find(track => track.language === language));\n\n        // Handle tracks (add event listener and \"pseudo\"-default)\n        if (this.isHTML5 && this.isVideo) {\n            tracks.filter(track => !meta.get(track)).forEach(track => {\n                this.debug.log('Track added', track);\n                // Attempt to store if the original dom element was \"default\"\n                meta.set(track, {\n                    default: track.mode === 'showing',\n                });\n\n                // Turn off native caption rendering to avoid double captions\n                track.mode = 'hidden';\n\n                // Add event listener for cue changes\n                on.call(this, track, 'cuechange', () => captions.updateCues.call(this));\n            });\n        }\n\n        // Update language first time it matches, or if the previous matching track was removed\n        if ((languageExists && this.language !== language) || !tracks.includes(currentTrackNode)) {\n            captions.setLanguage.call(this, language);\n            captions.toggle.call(this, active && languageExists);\n        }\n\n        // Enable or disable captions based on track length\n        toggleClass(this.elements.container, this.config.classNames.captions.enabled, !is.empty(tracks));\n\n        // for custom control\n        if (is.string(this.config.controls) || is.function(this.config.controls)) {\n            if (this.config.customMenu && is.function(this.config.customMenu.caption)) {\n                this.config.customMenu.caption.call(this);\n            }\n        } else if ((this.config.controls || []).includes('settings') && this.config.settings.includes('captions')) {\n            // Update available languages in list\n            controls.setCaptionsMenu.call(this);\n        }\n    },\n\n    // Toggle captions display\n    // Used internally for the toggleCaptions method, with the passive option forced to false\n    toggle(input, passive = true) {\n        // If there's no full support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        const { toggled } = this.captions; // Current state\n        const activeClass = this.config.classNames.captions.active;\n\n        // Get the next state\n        // If the method is called without parameter, toggle based on current value\n        const active = is.nullOrUndefined(input) ? !toggled : input;\n\n        // Update state and trigger event\n        if (active !== toggled) {\n            // When passive, don't override user preferences\n            if (!passive) {\n                this.captions.active = active;\n                this.storage.set({ captions: active });\n            }\n\n            // Force language if the call isn't passive and there is no matching language to toggle to\n            if (!this.language && active && !passive) {\n                const tracks = captions.getTracks.call(this);\n                const track = captions.findTrack.call(this, [this.captions.language, ...this.captions.languages], true);\n\n                // Override user preferences to avoid switching languages if a matching track is added\n                this.captions.language = track.language;\n\n                // Set caption, but don't store in localStorage as user preference\n                captions.set.call(this, tracks.indexOf(track));\n                return;\n            }\n\n            // Toggle button if it's enabled\n            if (this.elements.buttons.captions) {\n                this.elements.buttons.captions.pressed = active;\n            }\n\n            // Add class hook\n            toggleClass(this.elements.container, activeClass, active);\n\n            this.captions.toggled = active;\n\n            // Update settings menu\n            controls.updateSetting.call(this, 'captions');\n\n            // Trigger event (not used internally)\n            triggerEvent.call(this, this.media, active ? 'captionsenabled' : 'captionsdisabled');\n        }\n    },\n\n    // Set captions by track index\n    // Used internally for the currentTrack setter with the passive option forced to false\n    set(index, passive = true) {\n        const tracks = captions.getTracks.call(this);\n\n        // Disable captions if setting to -1\n        if (index === -1) {\n            captions.toggle.call(this, false, passive);\n            return;\n        }\n\n        if (!is.number(index)) {\n            this.debug.warn('Invalid caption argument', index);\n            return;\n        }\n\n        if (!(index in tracks)) {\n            this.debug.warn('Track not found', index);\n            return;\n        }\n\n        if (this.captions.currentTrack !== index) {\n            this.captions.currentTrack = index;\n            const track = tracks[index];\n            track.mode = 'showing';\n            const { language } = track || {};\n\n            // Store reference to node for invalidation on remove\n            this.captions.currentTrackNode = track;\n\n            // Update settings menu\n            controls.updateSetting.call(this, 'captions');\n\n            // When passive, don't override user preferences\n            if (!passive) {\n                this.captions.language = language;\n                this.storage.set({ language });\n            }\n\n            // Handle Vimeo captions\n            if (this.isVimeo) {\n                this.embed.enableTextTrack(language);\n            }\n\n            // Trigger event\n            triggerEvent.call(this, this.media, 'languagechange');\n        }\n\n        // Show captions\n        captions.toggle.call(this, true, passive);\n\n        if (this.isHTML5 && this.isVideo) {\n            // If we change the active track while a cue is already displayed we need to update it\n            captions.updateCues.call(this);\n        }\n    },\n\n    // Set captions by language\n    // Used internally for the language setter with the passive option forced to false\n    setLanguage(input, passive = true) {\n        if (!is.string(input)) {\n            this.debug.warn('Invalid language argument', input);\n            return;\n        }\n        // Normalize\n        const language = input.toLowerCase();\n        this.captions.language = language;\n\n        // Set currentTrack\n        const tracks = captions.getTracks.call(this);\n        const track = captions.findTrack.call(this, [language]);\n        captions.set.call(this, tracks.indexOf(track), passive);\n    },\n\n    // Get current valid caption tracks\n    // If update is false it will also ignore tracks without metadata\n    // This is used to \"freeze\" the language options when captions.update is false\n    getTracks(update = false) {\n        // Handle media or textTracks missing or null\n        const tracks = Array.from((this.media || {}).textTracks || []);\n        // For HTML5, use cache instead of current tracks when it exists (if captions.update is false)\n        // Filter out removed tracks and tracks that aren't captions/subtitles (for example metadata)\n        return tracks\n            .filter(track => !this.isHTML5 || update || this.captions.meta.has(track))\n            .filter(track => ['captions', 'subtitles'].includes(track.kind));\n    },\n\n    // Match tracks based on languages and get the first\n    findTrack(languages, force = false) {\n        const tracks = captions.getTracks.call(this);\n        const sortIsDefault = track => Number((this.captions.meta.get(track) || {}).default);\n        const sorted = Array.from(tracks).sort((a, b) => sortIsDefault(b) - sortIsDefault(a));\n        let track;\n        languages.every(language => {\n            track = sorted.find(track => track.language === language);\n            return !track; // Break iteration if there is a match\n        });\n        // If no match is found but is required, get first\n        return track || (force ? sorted[0] : undefined);\n    },\n\n    // Get the current track\n    getCurrentTrack() {\n        return captions.getTracks.call(this)[this.currentTrack];\n    },\n\n    // Get UI label for track\n    getLabel(track) {\n        let currentTrack = track;\n\n        if (!is.track(currentTrack) && support.textTracks && this.captions.toggled) {\n            currentTrack = captions.getCurrentTrack.call(this);\n        }\n\n        if (is.track(currentTrack)) {\n            if (!is.empty(currentTrack.label)) {\n                return currentTrack.label;\n            }\n\n            if (!is.empty(currentTrack.language)) {\n                return track.language.toUpperCase();\n            }\n\n            return i18n.get('enabled', this.config);\n        }\n\n        return i18n.get('disabled', this.config);\n    },\n\n    // Update captions using current track's active cues\n    // Also optional array argument in case there isn't any track (ex: vimeo)\n    updateCues(input) {\n        // Requires UI\n        if (!this.supported.ui) {\n            return;\n        }\n\n        if (!is.element(this.elements.captions)) {\n            this.debug.warn('No captions element to render to');\n            return;\n        }\n\n        // Only accept array or empty input\n        if (!is.nullOrUndefined(input) && !Array.isArray(input)) {\n            this.debug.warn('updateCues: Invalid input', input);\n            return;\n        }\n\n        let cues = input;\n\n        // Get cues from track\n        if (!cues) {\n            const track = captions.getCurrentTrack.call(this);\n            cues = Array.from((track || {}).activeCues || [])\n                .map(cue => cue.getCueAsHTML())\n                .map(getHTML);\n        }\n\n        // Set new caption text\n        const content = cues.map(cueText => cueText.trim()).join('\\n');\n        const changed = content !== this.elements.captions.innerHTML;\n\n        if (changed) {\n            // Empty the container and create a new child element\n            emptyElement(this.elements.captions);\n            const caption = createElement('span', getAttributesFromSelector(this.config.selectors.caption));\n            caption.innerHTML = content;\n            this.elements.captions.appendChild(caption);\n\n            // Trigger event\n            triggerEvent.call(this, this.media, 'cuechange');\n        }\n    },\n\n    setPosition(position) {\n        // if already setup correct class name, just ignore\n        if (hasClass(this.elements.captions, this.config.classNames.captionPosition.replace('{0}', 'top'))) {\n            if (position === 'top') return;\n        } else if (position === 'bottom') {\n            return;\n        }\n        toggleClass(this.elements.captions, this.config.classNames.captionPosition.replace('{0}', 'top'));\n\n        // Update settings menu\n        controls.updateSetting.call(this, 'caption-position');\n    },\n\n    setDefault(defaultLanguage = null) {\n        const captionsActive = this.storage.get('captions');\n        const captionsLanguage = this.storage.get('language') || defaultLanguage;\n        // if storage has caption active and,\n        if (\n            (is.boolean(captionsActive) && captionsActive && is.string(captionsLanguage)) ||\n            (!is.boolean(captionsActive) && is.string(captionsLanguage))\n        ) {\n            const tracks = captions.getTracks.call(this, true);\n            const findLanguageList = [captionsLanguage];\n            if (defaultLanguage) {\n                findLanguageList.push(defaultLanguage);\n            }\n            Array.prototype.push.apply(findLanguageList, this.captions.languages);\n            const track = captions.findTrack.call(this, findLanguageList, true);\n            captions.set.call(this, tracks.indexOf(track));\n        }\n    },\n};\n\nexport default captions;\n","// ==========================================================================\n// Plyr default config\n// ==========================================================================\n\nconst defaults = {\n    // Disable\n    enabled: true,\n\n    // Custom media title\n    title: '',\n\n    // Logging to console\n    debug: false,\n\n    // Auto play (if supported)\n    autoplay: false,\n\n    // Only allow one media playing at once (vimeo only)\n    autopause: true,\n\n    // Allow inline playback on iOS (this effects YouTube/Vimeo - HTML5 requires the attribute present)\n    // TODO: Remove iosNative fullscreen option in favour of this (logic needs work)\n    playsinline: true,\n\n    // Default time to skip when rewind/fast forward\n    seekTime: 10,\n\n    // Default volume\n    volume: 1,\n    muted: false,\n\n    // Pass a custom duration\n    duration: null,\n\n    // Display the media duration on load in the current time position\n    // If you have opted to display both duration and currentTime, this is ignored\n    displayDuration: true,\n\n    // Invert the current time to be a countdown\n    invertTime: true,\n\n    // Clicking the currentTime inverts it's value to show time left rather than elapsed\n    toggleInvert: true,\n\n    // Aspect ratio (for embeds)\n    ratio: '16:9',\n\n    // Click video container to play/pause\n    clickToPlay: true,\n\n    // Auto hide the controls\n    hideControls: true,\n\n    // Reset to start when playback ended\n    resetOnEnd: false,\n\n    // Disable the standard context menu\n    disableContextMenu: true,\n\n    // Sprite (for icons)\n    loadSprite: true,\n    iconPrefix: 'plyr',\n    iconUrl: 'https://cdn.plyr.io/3.4.6/plyr.svg',\n\n    // Blank video (used to prevent errors on source change)\n    blankVideo: 'https://cdn.plyr.io/static/blank.mp4',\n\n    logo: {\n        url: undefined,\n        link: undefined,\n    },\n\n    // fullscreen container, default is plyr container\n    fullscreenContainer: undefined,\n\n    // Quality default\n    quality: {\n        default: 576,\n        options: [4320, 2880, 2160, 1440, 1080, 720, 576, 480, 360, 240],\n    },\n\n    // Set loops\n    loop: {\n        active: false,\n        // start: null,\n        // end: null,\n    },\n\n    // Speed default and options to display\n    speed: {\n        selected: 1,\n        options: [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2],\n    },\n\n    // Keyboard shortcut settings\n    keyboard: {\n        focused: true,\n        global: false,\n    },\n\n    // Display tooltips\n    tooltips: {\n        controls: false,\n        seek: true,\n    },\n\n    // Captions settings\n    captions: {\n        active: false,\n        language: 'auto',\n        position: 'bottom',\n        // Listen to new tracks added after Plyr is initialized.\n        // This is needed for streaming captions, but may result in unselectable options\n        update: false,\n    },\n\n    // Fullscreen settings\n    fullscreen: {\n        enabled: true, // Allow fullscreen?\n        fallback: true, // Fallback for vintage browsers\n        iosNative: false, // Use the native fullscreen in iOS (disables custom controls)\n    },\n\n    // Local storage\n    storage: {\n        enabled: true,\n        key: 'plyr',\n    },\n\n    // Default controls\n    controls: [\n        'play-large',\n        // 'restart',\n        // 'rewind',\n        'play',\n        // 'fast-forward',\n        'progress',\n        'current-time',\n        'mute',\n        'volume',\n        'captions',\n        'caption-position',\n        'settings',\n        'pip',\n        'airplay',\n        'zoom',\n        'fullscreen',\n    ],\n    settings: ['captions', 'caption-position', 'quality', 'speed'],\n\n    // Localisation\n    i18n: {\n        restart: 'Restart',\n        rewind: 'Rewind {seektime}s',\n        play: 'Play',\n        pause: 'Pause',\n        fastForward: 'Forward {seektime}s',\n        seek: 'Seek',\n        seekLabel: '{currentTime} of {duration}',\n        played: 'Played',\n        buffered: 'Buffered',\n        currentTime: 'Current time',\n        duration: 'Duration',\n        volume: 'Volume',\n        mute: 'Mute',\n        unmute: 'Unmute',\n        enableCaptions: 'Enable captions',\n        disableCaptions: 'Disable captions',\n        download: 'Download',\n        enterFullscreen: 'Enter fullscreen',\n        exitFullscreen: 'Exit fullscreen',\n        enterZoom: 'zoom',\n        exitZoom: 'reset screen size',\n        frameTitle: 'Player for {title}',\n        captions: 'Captions',\n        noCaptions: 'No captions',\n        'caption-position': 'Caption Position',\n        captionPositionLabel: {\n            top: 'Top',\n            bottom: 'Bottom',\n        },\n        settings: 'Settings',\n        menuBack: 'Go back to previous menu',\n        speed: 'Speed',\n        normal: 'Normal',\n        quality: 'Quality',\n        loop: 'Loop',\n        start: 'Start',\n        end: 'End',\n        all: 'All',\n        reset: 'Reset',\n        disabled: 'Disabled',\n        enabled: 'Enabled',\n        advertisement: 'Ad',\n        qualityBadge: {\n            2160: '4K',\n            1440: 'HD',\n            1080: 'HD',\n            720: 'HD',\n            576: 'SD',\n            480: 'SD',\n        },\n    },\n\n    // URLs\n    urls: {\n        download: null,\n        vimeo: {\n            sdk: 'https://player.vimeo.com/api/player.js',\n            iframe: 'https://player.vimeo.com/video/{0}?{1}',\n            api: 'https://vimeo.com/api/v2/video/{0}.json',\n        },\n        youtube: {\n            sdk: 'https://www.youtube.com/iframe_api',\n            api:\n                'https://www.googleapis.com/youtube/v3/videos?id={0}&key={1}&fields=items(snippet(title))&part=snippet',\n        },\n        googleIMA: {\n            sdk: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js',\n        },\n    },\n\n    // custom control menu setup function\n    customMenu: {\n        caption: null,\n    },\n\n    // Custom control listeners\n    listeners: {\n        seek: null,\n        play: null,\n        pause: null,\n        restart: null,\n        rewind: null,\n        fastForward: null,\n        mute: null,\n        volume: null,\n        captions: null,\n        download: null,\n        fullscreen: null,\n        pip: null,\n        airplay: null,\n        speed: null,\n        quality: null,\n        loop: null,\n        language: null,\n    },\n\n    // Events to watch and bubble\n    events: [\n        // Events to watch on HTML5 media elements and bubble\n        // https://developer.mozilla.org/en/docs/Web/Guide/Events/Media_events\n        'ended',\n        'progress',\n        'stalled',\n        'playing',\n        'waiting',\n        'canplay',\n        'canplaythrough',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'timeupdate',\n        'volumechange',\n        'play',\n        'pause',\n        'error',\n        'seeking',\n        'seeked',\n        'emptied',\n        'ratechange',\n        'cuechange',\n\n        // Custom events\n        'download',\n        'enterfullscreen',\n        'exitfullscreen',\n        'enterzoomfullscreen',\n        'exitzoomfullscreen',\n        'captionsenabled',\n        'captionsdisabled',\n        'languagechange',\n        'controlshidden',\n        'controlsshown',\n        'ready',\n\n        // YouTube\n        'statechange',\n\n        // Quality\n        'qualitychange',\n\n        // Ads\n        'adsloaded',\n        'adscontentpause',\n        'adscontentresume',\n        'adstarted',\n        'adsmidpoint',\n        'adscomplete',\n        'adsallcomplete',\n        'adsimpression',\n        'adsclick',\n    ],\n\n    // Selectors\n    // Change these to match your template if using custom HTML\n    selectors: {\n        editable: 'input, textarea, select, [contenteditable]',\n        container: '.plyr',\n        controls: {\n            container: null,\n            wrapper: '.plyr__controls',\n            layer: {\n                topLayer: '.plyr__controls-top',\n                bottomLayer: '.plyr__controls-bottom',\n            },\n            bottom: {\n                left: '.plyr__controls-bottom-left',\n                right: '.plyr__controls-bottom-right',\n            },\n        },\n        labels: '[data-plyr]',\n        buttons: {\n            play: '[data-plyr=\"play\"]',\n            pause: '[data-plyr=\"pause\"]',\n            restart: '[data-plyr=\"restart\"]',\n            rewind: '[data-plyr=\"rewind\"]',\n            fastForward: '[data-plyr=\"fast-forward\"]',\n            mute: '[data-plyr=\"mute\"]',\n            captions: '[data-plyr=\"captions\"]',\n            download: '[data-plyr=\"download\"]',\n            zoom: '[data-plyr=\"zoom\"]',\n            fullscreen: '[data-plyr=\"fullscreen\"]',\n            pip: '[data-plyr=\"pip\"]',\n            airplay: '[data-plyr=\"airplay\"]',\n            settings: '[data-plyr=\"settings\"]',\n            loop: '[data-plyr=\"loop\"]',\n        },\n        inputs: {\n            seek: '[data-plyr=\"seek\"]',\n            volume: '[data-plyr=\"volume\"]',\n            speed: '[data-plyr=\"speed\"]',\n            language: '[data-plyr=\"language\"]',\n            'caption-position': '[data-plyr=\"caption-position\"]',\n            quality: '[data-plyr=\"quality\"]',\n        },\n        display: {\n            currentTime: '.plyr__time--current',\n            duration: '.plyr__time--duration',\n            buffer: '.plyr__progress__buffer',\n            loop: '.plyr__progress__loop', // Used later\n            volume: '.plyr__volume--display',\n        },\n        progress: '.plyr__progress',\n        captions: '.plyr__captions',\n        caption: '.plyr__caption',\n        menu: {\n            quality: '.js-plyr__menu__list--quality',\n        },\n    },\n\n    // Class hooks added to the player in different states\n    classNames: {\n        type: 'plyr--{0}',\n        provider: 'plyr--{0}',\n        video: 'plyr__video-wrapper',\n        embed: 'plyr__video-embed',\n        embedContainer: 'plyr__video-embed__container',\n        poster: 'plyr__poster',\n        posterEnabled: 'plyr__poster-enabled',\n        ads: 'plyr__ads',\n        control: 'plyr__control',\n        controlPressed: 'plyr__control--pressed',\n        playing: 'plyr--playing',\n        paused: 'plyr--paused',\n        stopped: 'plyr--stopped',\n        loading: 'plyr--loading',\n        hover: 'plyr--hover',\n        tooltip: 'plyr__tooltip',\n        cues: 'plyr__cues',\n        hidden: 'plyr__sr-only',\n        hideControls: 'plyr--hide-controls',\n        isIos: 'plyr--is-ios',\n        isTouch: 'plyr--is-touch',\n        uiSupported: 'plyr--full-ui',\n        noTransition: 'plyr--no-transition',\n        display: {\n            time: 'plyr__time',\n        },\n        logo: 'plyr--logo',\n        menu: {\n            value: 'plyr__menu__value',\n            badge: 'plyr__badge',\n            open: 'plyr--menu-open',\n        },\n        captions: {\n            enabled: 'plyr--captions-enabled',\n            active: 'plyr--captions-active',\n        },\n        captionPosition: 'plyr__caption_position__{0}',\n        fullscreen: {\n            enabled: 'plyr--fullscreen-enabled',\n            fallback: 'plyr--fullscreen-fallback',\n        },\n        pip: {\n            supported: 'plyr--pip-supported',\n            active: 'plyr--pip-active',\n        },\n        airplay: {\n            supported: 'plyr--airplay-supported',\n            active: 'plyr--airplay-active',\n        },\n        tabFocus: 'plyr__tab-focus',\n        outerContainer: 'plyr__outer-container',\n    },\n\n    // Embed attributes\n    attributes: {\n        embed: {\n            provider: 'data-plyr-provider',\n            id: 'data-plyr-embed-id',\n        },\n    },\n\n    // API keys\n    keys: {\n        google: null,\n    },\n\n    // Advertisements plugin\n    // Register for an account here: http://vi.ai/publisher-video-monetization/?aid=plyrio\n    ads: {\n        enabled: false,\n        publisherId: '',\n    },\n};\n\nexport default defaults;\n","// ==========================================================================\n// Plyr states\n// ==========================================================================\n\nexport const pip = {\n    active: 'picture-in-picture',\n    inactive: 'inline',\n};\n\nexport default { pip };\n","// ==========================================================================\n// Plyr supported types and providers\n// ==========================================================================\n\nexport const providers = {\n    html5: 'html5',\n    youtube: 'youtube',\n    vimeo: 'vimeo',\n};\n\nexport const types = {\n    audio: 'audio',\n    video: 'video',\n};\n\n/**\n * Get provider by URL\n * @param {String} url\n */\nexport function getProviderByUrl(url) {\n    // YouTube\n    if (/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.?be)\\/.+$/.test(url)) {\n        return providers.youtube;\n    }\n\n    // Vimeo\n    if (/^https?:\\/\\/player.vimeo.com\\/video\\/\\d{0,9}(?=\\b|\\/)/.test(url)) {\n        return providers.vimeo;\n    }\n\n    return null;\n}\n\nexport default { providers, types };\n","// ==========================================================================\n// Console wrapper\n// ==========================================================================\n\nconst noop = () => {};\n\nexport default class Console {\n    constructor(enabled = false) {\n        this.enabled = window.console && enabled;\n\n        if (this.enabled) {\n            this.log('Debugging enabled');\n        }\n    }\n\n    get log() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.log, console) : noop;\n    }\n\n    get warn() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.warn, console) : noop;\n    }\n\n    get error() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.error, console) : noop;\n    }\n}\n","// ==========================================================================\n// Fullscreen wrapper\n// https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API#prefixing\n// https://webkit.org/blog/7929/designing-websites-for-iphone-x/\n// ==========================================================================\n\nimport { repaint } from './utils/animation';\nimport browser from './utils/browser';\nimport { hasClass, toggleClass, trapFocus } from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport is from './utils/is';\n\nfunction onChange(isZoom = false) {\n    if (!this.enabled) {\n        return;\n    }\n\n    if (!isZoom) {\n        // Update toggle button\n        const button = this.player.elements.buttons.fullscreen;\n        if (is.element(button)) {\n            button.pressed = this.active;\n        }\n    } else {\n        const button = this.player.elements.buttons.zoom;\n        if (is.element(button)) {\n            button.pressed = this.zoomActive;\n        }\n    }\n\n    // Trigger an event\n    if (this.isIosNative || !this.isOutterContainerSet) {\n        if (!isZoom) {\n            triggerEvent.call(this.player, this.target, this.active ? 'enterfullscreen' : 'exitfullscreen', true);\n        } else {\n            triggerEvent.call(this.player, this.target, this.zoomActive ? 'enterzoomfullscreen' : 'exitzoomfullscreen', true);\n        }\n    } else {\n        if (!isZoom) {\n            triggerEvent.call(\n                this.player,\n                this.player.elements.container,\n                this.active ? 'enterfullscreen' : 'exitfullscreen',\n                true,\n            );\n        } else {\n            triggerEvent.call(\n                this.player,\n                this.player.elements.container,\n                this.zoomActive ? 'enterzoomfullscreen' : 'exitzoomfullscreen',\n                true,\n            );\n        }\n    }\n\n    // Trap focus in container\n    if (!browser.isIos) {\n        trapFocus.call(this.player, this.target, this.active);\n    }\n}\n\nfunction toggleFallback(toggle = false) {\n    // Store or restore scroll position\n    if (toggle) {\n        this.scrollPosition = {\n            x: window.scrollX || 0,\n            y: window.scrollY || 0,\n        };\n    } else {\n        window.scrollTo(this.scrollPosition.x, this.scrollPosition.y);\n    }\n\n    // Toggle scroll\n    document.body.style.overflow = toggle ? 'hidden' : '';\n\n    // Toggle class hook\n    if (this.target === this.player.elements.container) {\n        toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\n    } else {\n        toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\n        toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.fallback, toggle);\n    }\n\n\n    // Force full viewport on iPhone X+\n    if (browser.isIos) {\n        let viewport = document.head.querySelector('meta[name=\"viewport\"]');\n        const property = 'viewport-fit=cover';\n\n        // Inject the viewport meta if required\n        if (!viewport) {\n            viewport = document.createElement('meta');\n            viewport.setAttribute('name', 'viewport');\n        }\n\n        // Check if the property already exists\n        const hasProperty = is.string(viewport.content) && viewport.content.includes(property);\n\n        if (toggle) {\n            this.cleanupViewport = !hasProperty;\n\n            if (!hasProperty) {\n                viewport.content += `,${property}`;\n            }\n        } else if (this.cleanupViewport) {\n            viewport.content = viewport.content\n                .split(',')\n                .filter(part => part.trim() !== property)\n                .join(',');\n        }\n\n        // Force a repaint as sometimes Safari doesn't want to fill the screen\n        setTimeout(() => repaint(this.target), 100);\n    }\n\n    // Toggle button and fire events\n    onChange.call(this, true);\n}\n\nclass Fullscreen {\n    constructor(player) {\n        // Keep reference to parent\n        this.player = player;\n\n        // Get prefix\n        this.prefix = Fullscreen.prefix;\n        this.property = Fullscreen.property;\n\n        // Scroll position\n        this.scrollPosition = { x: 0, y: 0 };\n\n        // Register event listeners\n        // Handle event (incase user presses escape etc)\n        on.call(\n            this.player,\n            document,\n            this.prefix === 'ms' ? 'MSFullscreenChange' : `${this.prefix}fullscreenchange`,\n            () => {\n                // TODO: Filter for target??\n                onChange.call(this);\n            },\n        );\n\n        // Fullscreen toggle on double click\n        on.call(this.player, this.player.elements.container, 'dblclick', event => {\n            // Ignore double click in controls\n            if (is.element(this.player.elements.controls) && this.player.elements.controls.contains(event.target)) {\n                return;\n            }\n\n            this.toggle();\n        });\n\n        // Update the UI\n        this.update();\n    }\n\n    // Determine if native supported\n    static get native() {\n        return !!(\n            document.fullscreenEnabled ||\n            document.webkitFullscreenEnabled ||\n            document.mozFullScreenEnabled ||\n            document.msFullscreenEnabled\n        );\n    }\n\n    // Get the prefix for handlers\n    static get prefix() {\n        // No prefix\n        if (is.function(document.exitFullscreen)) {\n            return '';\n        }\n\n        // Check for fullscreen support by vendor prefix\n        let value = '';\n        const prefixes = ['webkit', 'moz', 'ms'];\n\n        prefixes.some(pre => {\n            if (is.function(document[`${pre}ExitFullscreen`]) || is.function(document[`${pre}CancelFullScreen`])) {\n                value = pre;\n                return true;\n            }\n\n            return false;\n        });\n\n        return value;\n    }\n\n    static get property() {\n        return this.prefix === 'moz' ? 'FullScreen' : 'Fullscreen';\n    }\n\n    // Determine if fullscreen is enabled\n    get enabled() {\n        return (\n            (Fullscreen.native || this.player.config.fullscreen.fallback) &&\n            this.player.config.fullscreen.enabled &&\n            this.player.supported.ui &&\n            this.player.isVideo\n        );\n    }\n\n    // Get active state\n    get active() {\n        if (!this.enabled) {\n            return false;\n        }\n\n        // Fallback using classname\n        if (!Fullscreen.native) {\n            return hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n        }\n\n        const element = !this.prefix ? document.fullscreenElement : document[`${this.prefix}${this.property}Element`];\n\n        return element === this.target;\n    }\n\n    get zoomActive() {\n        return hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n    }\n\n    get isIosNative() {\n        return browser.isIos && this.player.config.fullscreen.iosNative;\n    }\n\n    get isOutterContainerSet() {\n        return !!this.player.config.fullscreenContainer;\n    }\n\n    // Get target element\n    get target() {\n        if (this.isIosNative) {\n            return this.player.media;\n        } else if (this.isOutterContainerSet) {\n            return this.player.config.fullscreenContainer;\n        }\n        return this.player.elements.container;\n    }\n\n    // Update UI\n    update() {\n        if (this.enabled) {\n            this.player.debug.log(`${Fullscreen.native ? 'Native' : 'Fallback'} fullscreen enabled`);\n        } else {\n            this.player.debug.log('Fullscreen not supported and fallback disabled');\n        }\n\n        // Add styling hook to show button\n        toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.enabled);\n    }\n\n    // Make an element fullscreen\n    enter() {\n        if (!this.enabled) {\n            return;\n        }\n\n        if (this.zoomActive) {\n            this.toggleZoom();\n        }\n\n        // iOS native fullscreen doesn't need the request step\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            this.target.webkitEnterFullscreen();\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, true);\n        } else if (!this.prefix) {\n            this.target.requestFullscreen();\n        } else if (!is.empty(this.prefix)) {\n            this.target[`${this.prefix}Request${this.property}`]();\n        }\n    }\n\n    // Bail from fullscreen\n    exit() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            this.target.webkitExitFullscreen();\n            this.player.play();\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, false);\n        } else if (!this.prefix) {\n            (document.cancelFullScreen || document.exitFullscreen).call(document);\n        } else if (!is.empty(this.prefix)) {\n            const action = this.prefix === 'moz' ? 'Cancel' : 'Exit';\n            document[`${this.prefix}${action}${this.property}`]();\n        }\n    }\n\n    toggleZoom() {\n        if (!this.zoomActive) {\n            toggleFallback.call(this, true);\n        } else {\n            toggleFallback.call(this, false);\n        }\n    }\n\n    // Toggle state\n    toggle() {\n        if (!this.active) {\n            this.enter();\n        } else {\n            this.exit();\n        }\n    }\n}\n\nexport default Fullscreen;\n","import captions from './captions';\nimport controls from './controls';\nimport html5 from './html5';\nimport i18n from './utils/i18n';\nimport { dedupe } from './utils/arrays';\nimport { createElement, emptyElement, getAttributesFromSelector } from './utils/elements';\nimport is from './utils/is';\nimport { extend } from './utils/objects';\n\nconst hahow = {\n    createControls(data) {\n        // Create the container\n        const container = createElement('div', getAttributesFromSelector(this.config.selectors.controls.wrapper));\n\n        const topLayer = createElement('div', getAttributesFromSelector(this.config.selectors.controls.layer.topLayer));\n        const bottomLayer = createElement(\n            'div',\n            getAttributesFromSelector(this.config.selectors.controls.layer.bottomLayer),\n        );\n        const bottomLeft = createElement('div', getAttributesFromSelector(this.config.selectors.controls.bottom.left));\n        const bottomRight = createElement(\n            'div',\n            getAttributesFromSelector(this.config.selectors.controls.bottom.right),\n        );\n\n        bottomLayer.appendChild(bottomLeft);\n        bottomLayer.appendChild(bottomRight);\n        container.appendChild(topLayer);\n        container.appendChild(bottomLayer);\n\n        // Rewind button\n        bottomLeft.appendChild(controls.createButton.call(this, 'rewind'));\n\n        // Play/Pause button\n        bottomLeft.appendChild(controls.createButton.call(this, 'play'));\n\n        // Fast forward button\n        bottomLeft.appendChild(controls.createButton.call(this, 'fast-forward'));\n\n        // Progress\n        const progress = createElement('div', getAttributesFromSelector(this.config.selectors.progress));\n\n        // Seek range slider\n        progress.appendChild(\n            controls.createRange.call(this, 'seek', {\n                id: `plyr-seek-${data.id}`,\n            }),\n        );\n\n        // Buffer progress\n        progress.appendChild(controls.createProgress.call(this, 'buffer'));\n\n        // TODO: Add loop display indicator\n\n        // Seek tooltip\n        if (this.config.tooltips.seek) {\n            const tooltip = createElement(\n                'span',\n                {\n                    class: this.config.classNames.tooltip,\n                },\n                '00:00',\n            );\n\n            progress.appendChild(tooltip);\n            this.elements.display.seekTooltip = tooltip;\n        }\n\n        this.elements.progress = progress;\n        topLayer.appendChild(this.elements.progress);\n\n        // Media current time display\n        bottomLeft.appendChild(controls.createTime.call(this, 'currentTime'));\n\n        // Media duration display\n        bottomLeft.appendChild(controls.createTime.call(this, 'duration'));\n\n        // Add lecture note button\n        const addLecturneNoteBtn = controls.createButton.call(this, 'add-lecture-note', {\n            class: 'plyr__add-lecture-note hidden',\n        });\n        addLecturneNoteBtn.appendChild(createElement('span', {}, '筆記標註'));\n        bottomRight.appendChild(addLecturneNoteBtn);\n\n        addLecturneNoteBtn.addEventListener('click', (e) => {\n            this.lectureNote.addLectureNote();\n            e.stopPropagation();\n        });\n\n        // Toggle mute button\n        bottomRight.appendChild(controls.createButton.call(this, 'mute'));\n\n        // Volume range control\n        const volume = createElement('div', {\n            class: 'plyr__volume',\n        });\n\n        // Set the attributes\n        const attributes = {\n            max: 1,\n            step: 0.05,\n            value: this.config.volume,\n        };\n\n        // Create the volume range slider\n        volume.appendChild(\n            controls.createRange.call(\n                this,\n                'volume',\n                extend(attributes, {\n                    id: `plyr-volume-${data.id}`,\n                }),\n            ),\n        );\n\n        this.elements.volume = volume;\n\n        bottomRight.appendChild(volume);\n\n        // Settings button / menu\n        const menu = createElement('div', {\n            class: 'plyr__menu',\n            hidden: '',\n        });\n\n        menu.appendChild(\n            controls.createButton.call(this, 'settings', {\n                id: `plyr-settings-toggle-${data.id}`,\n                'aria-haspopup': true,\n                'aria-controls': `plyr-settings-${data.id}`,\n                'aria-expanded': false,\n            }),\n        );\n\n        const form = createElement('form', {\n            class: 'plyr__menu__container',\n            id: `plyr-settings-${data.id}`,\n            hidden: '',\n            'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n            role: 'tablist',\n            tabindex: -1,\n        });\n\n        const inner = createElement('div');\n\n        const home = createElement('div', {\n            id: `plyr-settings-${data.id}-home`,\n            'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n            role: 'tabpanel',\n        });\n\n        // Create the tab list\n        const tabs = createElement('ul', {\n            role: 'tablist',\n        });\n\n        // Build the tabs\n        this.config.settings.forEach(type => {\n            const tab = createElement('li', {\n                role: 'tab',\n                hidden: '',\n            });\n\n            const button = createElement(\n                'button',\n                extend(getAttributesFromSelector(this.config.selectors.buttons.settings), {\n                    type: 'button',\n                    class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\n                    id: `plyr-settings-${data.id}-${type}-tab`,\n                    'aria-haspopup': true,\n                    'aria-controls': `plyr-settings-${data.id}-${type}`,\n                    'aria-expanded': false,\n                }),\n                i18n.get(type, this.config),\n            );\n\n            const value = createElement('span', {\n                class: this.config.classNames.menu.value,\n            });\n\n            // Speed contains HTML entities\n            value.innerHTML = data[type];\n\n            button.appendChild(value);\n            tab.appendChild(button);\n            tabs.appendChild(tab);\n\n            this.elements.settings.tabs[type] = tab;\n        });\n\n        home.appendChild(tabs);\n        inner.appendChild(home);\n\n        // Build the panes\n        this.config.settings.forEach(type => {\n            const pane = createElement('div', {\n                id: `plyr-settings-${data.id}-${type}`,\n                class: 'subpanel',\n                hidden: '',\n                'aria-labelled-by': `plyr-settings-${data.id}-${type}-tab`,\n                role: 'tabpanel',\n                tabindex: -1,\n            });\n\n            const back = createElement(\n                'button',\n                {\n                    type: 'button',\n                    class: `${this.config.classNames.control} ${this.config.classNames.control}--back`,\n                    'aria-haspopup': true,\n                    'aria-controls': `plyr-settings-${data.id}-home`,\n                    'aria-expanded': false,\n                },\n                i18n.get(type, this.config),\n            );\n\n            pane.appendChild(back);\n\n            const options = createElement('ul');\n\n            pane.appendChild(options);\n            inner.appendChild(pane);\n\n            this.elements.settings.panes[type] = pane;\n        });\n\n        form.appendChild(inner);\n        menu.appendChild(form);\n        bottomRight.appendChild(menu);\n\n        this.elements.settings.form = form;\n        this.elements.settings.menu = menu;\n\n        bottomRight.appendChild(controls.createButton.call(this, 'zoom'));\n\n        // Toggle fullscreen button\n        bottomRight.appendChild(controls.createButton.call(this, 'fullscreen'));\n\n        this.elements.controls = container;\n\n        if (this.isHTML5) {\n            hahow.setQualityMenu.call(this, html5.getQualityOptions.call(this));\n        }\n\n        hahow.setSpeedMenu.call(this);\n        hahow.setCaptionsMenu.call(this);\n        hahow.setCaptionsPositionMenu.call(this);\n\n        return container;\n    },\n\n    // Set the quality menu\n    setQualityMenu(options) {\n        const type = 'quality';\n        const list = this.elements.settings.panes.quality.querySelector('ul');\n\n        // Set options if passed and filter based on uniqueness and config\n        if (is.array(options)) {\n            this.options.quality = dedupe(options);\n        }\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.quality) && this.options.quality.length > 1;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Sort options by the config and then render options\n        this.options.quality\n            .sort((a, b) => a - b)\n            .forEach(quality => {\n                controls.createMenuItem.call(this, {\n                    value: quality,\n                    list,\n                    type,\n                    title: controls.getLabel.call(this, 'quality', quality),\n                });\n            });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set a list of available captions languages\n    setCaptionsMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panes.captions)) {\n            return;\n        }\n\n        // TODO: Captions or language? Currently it's mixed\n        const type = 'captions';\n        const list = this.elements.settings.panes.captions.querySelector('ul');\n        const tracks = captions.getTracks.call(this);\n\n        // Toggle the pane and tab\n        controls.toggleTab.call(this, type, true);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If there's no captions, bail\n        if (!tracks.length) {\n            controls.createMenuItem.bind(this)({\n                value: -1,\n                checked: !this.captions.toggled,\n                title: i18n.get('noCaptions', this.config),\n                list,\n                type: 'language',\n            });\n            controls.updateSetting.call(this, type, list);\n            return;\n        }\n\n        // Generate options data\n        const options = tracks.map((track, value) => ({\n            value,\n            checked: this.captions.toggled && this.currentTrack === value,\n            title: captions.getLabel.call(this, track),\n            badge: track.language && controls.createBadge.call(this, track.language.toUpperCase()),\n            list,\n            type: 'language',\n        }));\n\n        // Add the \"Disabled\" option to turn off captions\n        options.unshift({\n            value: -1,\n            checked: !this.captions.toggled,\n            title: i18n.get('disabled', this.config),\n            list,\n            type: 'language',\n        });\n\n        // Generate options\n        options.forEach(controls.createMenuItem.bind(this));\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    setCaptionsPositionMenu() {\n        if (!is.element(this.elements.settings.panes['caption-position'])) {\n            return;\n        }\n\n        const type = 'caption-position';\n\n        controls.toggleTab.call(this, type, true);\n\n        // Get the list to populate\n        const list = this.elements.settings.panes['caption-position'].querySelector('ul');\n\n        // Empty the menu\n        emptyElement(list);\n\n        const positions = ['top', 'bottom'];\n\n        // Create items\n        positions.forEach(position => {\n            controls.createMenuItem.call(this, {\n                value: position,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'caption-position', position),\n            });\n        });\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set a list of available captions languages\n    setSpeedMenu(options) {\n        // Menu required\n        if (!is.element(this.elements.settings.panes.speed)) {\n            return;\n        }\n\n        const type = 'speed';\n\n        // Set the speed options\n        if (is.array(options)) {\n            this.options.speed = options;\n        } else if (this.isHTML5 || this.isVimeo) {\n            this.options.speed = [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\n        }\n\n        // Set options if passed and filter based on config\n        this.options.speed = this.options.speed.filter(speed => this.config.speed.options.includes(speed));\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.speed) && this.options.speed.length > 1;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Get the list to populate\n        const list = this.elements.settings.panes.speed.querySelector('ul');\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Create items\n        this.options.speed.forEach(speed => {\n            controls.createMenuItem.call(this, {\n                value: speed,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'speed', speed),\n            });\n        });\n\n        controls.updateSetting.call(this, type, list);\n    },\n};\n\nexport default hahow;\n","// ==========================================================================\n// Load image avoiding xhr/fetch CORS issues\n// Server status can't be obtained this way unfortunately, so this uses \"naturalWidth\" to determine if the image has loaded\n// By default it checks if it is at least 1px, but you can add a second argument to change this\n// ==========================================================================\n\nexport default function loadImage(src, minWidth = 1) {\n    return new Promise((resolve, reject) => {\n        const image = new Image();\n\n        const handler = () => {\n            delete image.onload;\n            delete image.onerror;\n            (image.naturalWidth >= minWidth ? resolve : reject)(image);\n        };\n\n        Object.assign(image, { onload: handler, onerror: handler, src });\n    });\n}\n","// ==========================================================================\n// Plyr UI\n// ==========================================================================\n\nimport captions from './captions';\nimport controls from './controls';\nimport support from './support';\nimport browser from './utils/browser';\nimport { getElement, toggleClass } from './utils/elements';\nimport { ready, triggerEvent } from './utils/events';\nimport i18n from './utils/i18n';\nimport is from './utils/is';\nimport loadImage from './utils/loadImage';\n\nconst ui = {\n    addStyleHook() {\n        toggleClass(this.elements.container, this.config.selectors.container.replace('.', ''), true);\n        toggleClass(this.elements.container, this.config.classNames.uiSupported, this.supported.ui);\n    },\n\n    addStylehookToFullscreenContainer () {\n        // append plyr__outer-container class name to outer container\n        if (this.config.fullscreenContainer) {\n            toggleClass(this.config.fullscreenContainer, this.config.classNames.outerContainer, true);\n        }\n    },\n\n    // Toggle native HTML5 media controls\n    toggleNativeControls(toggle = false) {\n        if (toggle && this.isHTML5) {\n            this.media.setAttribute('controls', '');\n        } else {\n            this.media.removeAttribute('controls');\n        }\n    },\n\n    // Setup the UI\n    build() {\n        // Re-attach media element listeners\n        // TODO: Use event bubbling?\n        this.listeners.media();\n\n        // Don't setup interface if no support\n        if (!this.supported.ui) {\n            this.debug.warn(`Basic support only for ${this.provider} ${this.type}`);\n\n            // Restore native controls\n            ui.toggleNativeControls.call(this, true);\n\n            this.ready = true;\n\n            // Bail\n            return;\n        }\n\n        // Inject custom controls if not present\n        if (!is.element(this.elements.controls)) {\n            // Inject custom controls\n            controls.inject.call(this);\n\n            // Re-attach control listeners\n            this.listeners.controls();\n        }\n\n        // Remove native controls\n        ui.toggleNativeControls.call(this);\n\n        // Setup captions for HTML5\n        if (this.isHTML5) {\n            captions.setup.call(this);\n        }\n\n        // Reset volume\n        this.volume = null;\n\n        // Reset mute state\n        this.muted = null;\n\n        // Reset speed\n        this.speed = null;\n\n        // Reset loop state\n        this.loop = null;\n\n        // Reset quality setting\n        this.quality = null;\n\n        // Reset volume display\n        controls.updateVolume.call(this);\n\n        // Reset time display\n        controls.timeUpdate.call(this);\n\n        // Update the UI\n        ui.checkPlaying.call(this);\n\n        // Check for picture-in-picture support\n        toggleClass(\n            this.elements.container,\n            this.config.classNames.pip.supported,\n            support.pip && this.isHTML5 && this.isVideo,\n        );\n\n        // Check for airplay support\n        toggleClass(this.elements.container, this.config.classNames.airplay.supported, support.airplay && this.isHTML5);\n\n        // Add iOS class\n        toggleClass(this.elements.container, this.config.classNames.isIos, browser.isIos);\n\n        // Add touch class\n        toggleClass(this.elements.container, this.config.classNames.isTouch, this.touch);\n\n        // Ready for API calls\n        this.ready = true;\n\n        // Ready event at end of execution stack\n        setTimeout(() => {\n            triggerEvent.call(this, this.media, 'ready');\n        }, 0);\n\n        // Set the title\n        ui.setTitle.call(this);\n\n        // Assure the poster image is set, if the property was added before the element was created\n        if (this.poster) {\n            ui.setPoster.call(this, this.poster, false).catch(() => {});\n        }\n\n        // Manually set the duration if user has overridden it.\n        // The event listeners for it doesn't get called if preload is disabled (#701)\n        if (this.config.duration) {\n            controls.durationUpdate.call(this);\n        }\n    },\n\n    // Setup aria attribute for play and iframe title\n    setTitle() {\n        // Find the current text\n        let label = i18n.get('play', this.config);\n\n        // If there's a media title set, use that for the label\n        if (is.string(this.config.title) && !is.empty(this.config.title)) {\n            label += `, ${this.config.title}`;\n        }\n\n        // If there's a play button, set label\n        Array.from(this.elements.buttons.play || []).forEach(button => {\n            button.setAttribute('aria-label', label);\n        });\n\n        // Set iframe title\n        // https://github.com/sampotts/plyr/issues/124\n        if (this.isEmbed) {\n            const iframe = getElement.call(this, 'iframe');\n\n            if (!is.element(iframe)) {\n                return;\n            }\n\n            // Default to media type\n            const title = !is.empty(this.config.title) ? this.config.title : 'video';\n            const format = i18n.get('frameTitle', this.config);\n\n            iframe.setAttribute('title', format.replace('{title}', title));\n        }\n    },\n\n    // Toggle poster\n    togglePoster(enable) {\n        toggleClass(this.elements.container, this.config.classNames.posterEnabled, enable);\n    },\n\n    // Set the poster image (async)\n    // Used internally for the poster setter, with the passive option forced to false\n    setPoster(poster, passive = true) {\n        // Don't override if call is passive\n        if (passive && this.poster) {\n            return Promise.reject(new Error('Poster already set'));\n        }\n\n        // Set property synchronously to respect the call order\n        this.media.setAttribute('poster', poster);\n\n        // Wait until ui is ready\n        return (\n            ready\n                .call(this)\n                // Load image\n                .then(() => loadImage(poster))\n                .catch(err => {\n                    // Hide poster on error unless it's been set by another call\n                    if (poster === this.poster) {\n                        ui.togglePoster.call(this, false);\n                    }\n                    // Rethrow\n                    throw err;\n                })\n                .then(() => {\n                    // Prevent race conditions\n                    if (poster !== this.poster) {\n                        throw new Error('setPoster cancelled by later call to setPoster');\n                    }\n                })\n                .then(() => {\n                    Object.assign(this.elements.poster.style, {\n                        backgroundImage: `url('${poster}')`,\n                        // Reset backgroundSize as well (since it can be set to \"cover\" for padded thumbnails for youtube)\n                        backgroundSize: '',\n                    });\n                    ui.togglePoster.call(this, true);\n                    return poster;\n                })\n        );\n    },\n\n    // Check playing state\n    checkPlaying(event) {\n        // Class hooks\n        toggleClass(this.elements.container, this.config.classNames.playing, this.playing);\n        toggleClass(this.elements.container, this.config.classNames.paused, this.paused);\n        toggleClass(this.elements.container, this.config.classNames.stopped, this.stopped);\n\n        // Set state\n        Array.from(this.elements.buttons.play || []).forEach(target => {\n            target.pressed = this.playing;\n        });\n\n        // Only update controls on non timeupdate events\n        if (is.event(event) && event.type === 'timeupdate') {\n            return;\n        }\n\n        // Toggle controls\n        ui.toggleControls.call(this);\n    },\n\n    // Check if media is loading\n    checkLoading(event) {\n        this.loading = ['stalled', 'waiting'].includes(event.type);\n\n        // Clear timer\n        clearTimeout(this.timers.loading);\n\n        // Timer to prevent flicker when seeking\n        this.timers.loading = setTimeout(() => {\n            // Update progress bar loading class state\n            toggleClass(this.elements.container, this.config.classNames.loading, this.loading);\n\n            // Update controls visibility\n            ui.toggleControls.call(this);\n        }, this.loading ? 250 : 0);\n    },\n\n    // Toggle controls based on state and `force` argument\n    toggleControls(force) {\n        const { controls } = this.elements;\n\n        if (controls && this.config.hideControls) {\n            // Don't hide controls if a touch-device user recently seeked. (Must be limited to touch devices, or it occasionally prevents desktop controls from hiding.)\n            const recentTouchSeek = (this.touch && this.lastSeekTime + 2000 > Date.now());\n\n            // Show controls if force, loading, paused, button interaction, or recent seek, otherwise hide\n            this.toggleControls(Boolean(force || this.loading || this.paused || controls.pressed || controls.hover || recentTouchSeek));\n        }\n    },\n};\n\nexport default ui;\n","// ==========================================================================\n// Plyr Event Listeners\n// ==========================================================================\n\nimport controls from './controls';\nimport ui from './ui';\nimport { repaint } from './utils/animation';\nimport browser from './utils/browser';\nimport { getElement, getElements, matches, toggleClass, toggleHidden } from './utils/elements';\nimport { on, once, toggleListener, triggerEvent } from './utils/events';\nimport is from './utils/is';\n\nclass Listeners {\n    constructor(player) {\n        this.player = player;\n        this.lastKey = null;\n        this.focusTimer = null;\n        this.lastKeyDown = null;\n\n        this.handleKey = this.handleKey.bind(this);\n        this.toggleMenu = this.toggleMenu.bind(this);\n        this.setTabFocus = this.setTabFocus.bind(this);\n        this.firstTouch = this.firstTouch.bind(this);\n    }\n\n    // Handle key presses\n    handleKey(event) {\n        const { player } = this;\n        const { elements } = player;\n        const code = event.keyCode ? event.keyCode : event.which;\n        const pressed = event.type === 'keydown';\n        const repeat = pressed && code === this.lastKey;\n\n        // Bail if a modifier key is set\n        if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n            return;\n        }\n\n        // If the event is bubbled from the media element\n        // Firefox doesn't get the keycode for whatever reason\n        if (!is.number(code)) {\n            return;\n        }\n\n        // Seek by the number keys\n        const seekByKey = () => {\n            // Divide the max duration into 10th's and times by the number value\n            player.currentTime = (player.duration / 10) * (code - 48);\n        };\n\n        // Handle the key on keydown\n        // Reset on keyup\n        if (pressed) {\n            // Check focused element\n            // and if the focused element is not editable (e.g. text input)\n            // and any that accept key input http://webaim.org/techniques/keyboard/\n            const focused = document.activeElement;\n            if (is.element(focused)) {\n                const { editable } = player.config.selectors;\n                const { seek } = elements.inputs;\n\n                if (focused !== seek && matches(focused, editable)) {\n                    return;\n                }\n\n                if (event.which === 32 && matches(focused, 'button, [role^=\"menuitem\"]')) {\n                    return;\n                }\n            }\n\n            // Which keycodes should we prevent default\n            const preventDefault = [27, 32, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 56, 57, 67, 70, 73, 75, 76, 77, 79];\n\n            // If the code is found prevent default (e.g. prevent scrolling for arrows)\n            if (preventDefault.includes(code)) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n\n            switch (code) {\n                case 27:\n                    // esc escape fullscreen mode\n                    if (this.player.fullscreen.enabled) {\n                        this.player.fullscreen.exit();\n                    }\n                    break;\n                case 48:\n                case 49:\n                case 50:\n                case 51:\n                case 52:\n                case 53:\n                case 54:\n                case 55:\n                case 56:\n                case 57:\n                    // 0-9\n                    if (!repeat) {\n                        seekByKey();\n                    }\n                    break;\n\n                case 32:\n                case 75:\n                    // Space and K key\n                    if (!repeat) {\n                        player.togglePlay();\n                    }\n                    break;\n\n                case 38:\n                    // Arrow up\n                    player.increaseVolume(0.1);\n                    break;\n\n                case 40:\n                    // Arrow down\n                    player.decreaseVolume(0.1);\n                    break;\n\n                case 77:\n                    // M key\n                    if (!repeat) {\n                        player.muted = !player.muted;\n                    }\n                    break;\n\n                case 39:\n                    // Arrow forward\n                    player.forward();\n                    break;\n\n                case 37:\n                    // Arrow back\n                    player.rewind();\n                    break;\n\n                case 70:\n                    // F key\n                    player.fullscreen.toggle();\n                    break;\n\n                case 67:\n                    // C key\n                    if (!repeat) {\n                        player.toggleCaptions();\n                    }\n                    break;\n\n                case 76:\n                    // L key\n                    player.loop = !player.loop;\n                    break;\n\n                case 78:\n                    // N key\n                    if (this.player.lectureNote && this.player.lectureNote.isLoadedLectureNote && this.player.lectureNote.addLectureNoteButtonStatus === 'enable') {\n                        this.player.lectureNote.addLectureNote();\n                    }\n                    break;\n\n                    /* case 73:\n                    this.setLoop('start');\n                    break;\n\n                case 76:\n                    this.setLoop();\n                    break;\n\n                case 79:\n                    this.setLoop('end');\n                    break; */\n\n                default:\n                    break;\n            }\n\n            // Escape is handle natively when in full screen\n            // So we only need to worry about non native\n            if (!player.fullscreen.enabled && player.fullscreen.active && code === 27) {\n                player.fullscreen.toggle();\n            }\n\n            // Store last code for next cycle\n            this.lastKey = code;\n        } else {\n            this.lastKey = null;\n        }\n    }\n\n    // Toggle menu\n    toggleMenu(event) {\n        controls.toggleMenu.call(this.player, event);\n    }\n\n    // Device is touch enabled\n    firstTouch() {\n        const { player } = this;\n        const { elements } = player;\n\n        player.touch = true;\n\n        // Add touch class\n        toggleClass(elements.container, player.config.classNames.isTouch, true);\n    }\n\n    setTabFocus(event) {\n        const { player } = this;\n        const { elements } = player;\n\n        clearTimeout(this.focusTimer);\n\n        // Ignore any key other than tab\n        if (event.type === 'keydown' && event.which !== 9) {\n            return;\n        }\n\n        // Store reference to event timeStamp\n        if (event.type === 'keydown') {\n            this.lastKeyDown = event.timeStamp;\n        }\n\n        // Remove current classes\n        const removeCurrent = () => {\n            const className = player.config.classNames.tabFocus;\n            const current = getElements.call(player, `.${className}`);\n            toggleClass(current, className, false);\n        };\n\n        // Determine if a key was pressed to trigger this event\n        const wasKeyDown = event.timeStamp - this.lastKeyDown <= 20;\n\n        // Ignore focus events if a key was pressed prior\n        if (event.type === 'focus' && !wasKeyDown) {\n            return;\n        }\n\n        // Remove all current\n        removeCurrent();\n\n        // Delay the adding of classname until the focus has changed\n        // This event fires before the focusin event\n        this.focusTimer = setTimeout(() => {\n            const focused = document.activeElement;\n\n            // Ignore if current focus element isn't inside the player\n            if (!elements.container.contains(focused)) {\n                return;\n            }\n\n            toggleClass(document.activeElement, player.config.classNames.tabFocus, true);\n        }, 10);\n    }\n\n    // Global window & document listeners\n    global(toggle = true) {\n        const { player } = this;\n\n        // Keyboard shortcuts\n        if (player.config.keyboard.global) {\n            toggleListener.call(player, window, 'keydown keyup', this.handleKey, toggle, false);\n        }\n\n        // Click anywhere closes menu\n        toggleListener.call(player, document.body, 'click', this.toggleMenu, toggle);\n\n        // Detect touch by events\n        once.call(player, document.body, 'touchstart', this.firstTouch);\n\n        // Tab focus detection\n        toggleListener.call(player, document.body, 'keydown focus blur', this.setTabFocus, toggle, false, true);\n    }\n\n    // Container listeners\n    container() {\n        const { player } = this;\n        const { elements } = player;\n\n        // Keyboard shortcuts\n        if (!player.config.keyboard.global && player.config.keyboard.focused) {\n            on.call(player, elements.container, 'keydown keyup', this.handleKey, false);\n        }\n\n        // Toggle controls on mouse events and entering fullscreen\n        on.call(\n            player,\n            elements.container,\n            'mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen',\n            event => {\n                const { controls } = elements;\n\n                // Remove button states for fullscreen\n                if (controls && event.type === 'enterfullscreen') {\n                    controls.pressed = false;\n                    controls.hover = false;\n                }\n\n                // Show, then hide after a timeout unless another control event occurs\n                const show = ['touchstart', 'touchmove', 'mousemove'].includes(event.type);\n\n                let delay = 0;\n\n                if (show) {\n                    ui.toggleControls.call(player, true);\n                    // Use longer timeout for touch devices\n                    delay = player.touch ? 3000 : 2000;\n                }\n\n                // Clear timer\n                clearTimeout(player.timers.controls);\n\n                // Set new timer to prevent flicker when seeking\n                player.timers.controls = setTimeout(() => ui.toggleControls.call(player, false), delay);\n            },\n        );\n    }\n\n    // Listen for media events\n    media() {\n        const { player } = this;\n        const { elements } = player;\n\n        // Time change on media\n        on.call(player, player.media, 'timeupdate seeking seeked', event => controls.timeUpdate.call(player, event));\n\n        // Display duration\n        on.call(player, player.media, 'durationchange loadeddata loadedmetadata', event =>\n            controls.durationUpdate.call(player, event),\n        );\n\n        // Check for audio tracks on load\n        // We can't use `loadedmetadata` as it doesn't seem to have audio tracks at that point\n        on.call(player, player.media, 'canplay', () => {\n            toggleHidden(elements.volume, !player.hasAudio);\n            toggleHidden(elements.buttons.mute, !player.hasAudio);\n        });\n\n        // Handle the media finishing\n        on.call(player, player.media, 'ended', () => {\n            // Show poster on end\n            if (player.isHTML5 && player.isVideo && player.config.resetOnEnd) {\n                // Restart\n                player.restart();\n            }\n        });\n\n        // Check for buffer progress\n        on.call(player, player.media, 'progress playing seeking seeked', event =>\n            controls.updateProgress.call(player, event),\n        );\n\n        // Handle volume changes\n        on.call(player, player.media, 'volumechange', event => controls.updateVolume.call(player, event));\n\n        // Handle play/pause\n        on.call(player, player.media, 'playing play pause ended emptied timeupdate', event =>\n            ui.checkPlaying.call(player, event),\n        );\n\n        // Loading state\n        on.call(player, player.media, 'waiting canplay seeked playing', event => ui.checkLoading.call(player, event));\n\n        // If autoplay, then load advertisement if required\n        // TODO: Show some sort of loading state while the ad manager loads else there's a delay before ad shows\n        on.call(player, player.media, 'playing', () => {\n            if (!player.ads) {\n                return;\n            }\n\n            // If ads are enabled, wait for them first\n            if (player.ads.enabled && !player.ads.initialized) {\n                // Wait for manager response\n                player.ads.managerPromise.then(() => player.ads.play()).catch(() => player.play());\n            }\n        });\n\n        // Click video\n        if (player.supported.ui && player.config.clickToPlay && !player.isAudio) {\n            // Re-fetch the wrapper\n            const wrapper = getElement.call(player, `.${player.config.classNames.video}`);\n\n            // Loading state\n            on.call(this.player, this.player.media, 'waiting canplay seeked playing', event =>\n                ui.checkLoading.call(this.player, event),\n            );\n\n            // On click play, pause or restart\n            on.call(player, elements.container, 'click', event => {\n                const targets = [elements.container, wrapper];\n\n                // Ignore if click if not container or in video wrapper\n                if (!targets.includes(event.target) && !wrapper.contains(event.target)) {\n                    return;\n                }\n\n                // Touch devices will just show controls (if hidden)\n                if (player.touch && player.config.hideControls) {\n                    return;\n                }\n\n                if (player.ended) {\n                    player.restart();\n                    player.play();\n                } else {\n                    player.togglePlay();\n                }\n            });\n        }\n\n        // Disable right click\n        if (player.supported.ui && player.config.disableContextMenu) {\n            on.call(\n                player,\n                elements.wrapper,\n                'contextmenu',\n                event => {\n                    event.preventDefault();\n                },\n                false,\n            );\n        }\n\n        // Volume change\n        on.call(player, player.media, 'volumechange', () => {\n            // Save to storage\n            player.storage.set({\n                volume: player.volume,\n                muted: player.muted,\n            });\n        });\n\n        // Speed change\n        on.call(player, player.media, 'ratechange', () => {\n            // Update UI\n            controls.updateSetting.call(player, 'speed');\n\n            // Save to storage\n            player.storage.set({ speed: player.speed });\n        });\n\n        // Quality change\n        on.call(player, player.media, 'qualitychange', event => {\n            // Update UI\n            controls.updateSetting.call(player, 'quality', null, event.detail.quality);\n        });\n\n        // Update download link when ready and if quality changes\n        on.call(player, player.media, 'ready qualitychange', () => {\n            controls.setDownloadLink.call(player);\n        });\n\n        // Proxy events to container\n        // Bubble up key events for Edge\n        const proxyEvents = player.config.events.concat(['keyup', 'keydown']).join(' ');\n\n        on.call(player, player.media, proxyEvents, event => {\n            let { detail = {} } = event;\n\n            // Get error details from media\n            if (event.type === 'error') {\n                detail = player.media.error;\n            }\n\n            triggerEvent.call(player, elements.container, event.type, true, detail);\n        });\n    }\n\n    // Run default and custom handlers\n    proxy(event, defaultHandler, customHandlerKey) {\n        const { player } = this;\n        const customHandler = player.config.listeners[customHandlerKey];\n        const hasCustomHandler = is.function(customHandler);\n        let returned = true;\n\n        // Execute custom handler\n        if (hasCustomHandler) {\n            returned = customHandler.call(player, event);\n        }\n\n        // Only call default handler if not prevented in custom handler\n        if (returned && is.function(defaultHandler)) {\n            defaultHandler.call(player, event);\n        }\n    }\n\n    // Trigger custom and default handlers\n    bind(element, type, defaultHandler, customHandlerKey, passive = true) {\n        const { player } = this;\n        const customHandler = player.config.listeners[customHandlerKey];\n        const hasCustomHandler = is.function(customHandler);\n\n        on.call(\n            player,\n            element,\n            type,\n            event => this.proxy(event, defaultHandler, customHandlerKey),\n            passive && !hasCustomHandler,\n        );\n    }\n\n    // Listen for control events\n    controls() {\n        const { player } = this;\n        const { elements } = player;\n\n        // IE doesn't support input event, so we fallback to change\n        const inputEvent = browser.isIE ? 'change' : 'input';\n\n        // Play/pause toggle\n        if (elements.buttons.play) {\n            Array.from(elements.buttons.play).forEach(button => {\n                this.bind(button, 'click', player.togglePlay, 'play');\n            });\n        }\n\n        // Pause\n        this.bind(elements.buttons.restart, 'click', player.restart, 'restart');\n\n        // Rewind\n        this.bind(elements.buttons.rewind, 'click', player.rewind, 'rewind');\n\n        // Rewind\n        this.bind(elements.buttons.fastForward, 'click', player.forward, 'fastForward');\n\n        // Mute toggle\n        this.bind(\n            elements.buttons.mute,\n            'click',\n            () => {\n                player.muted = !player.muted;\n            },\n            'mute',\n        );\n\n        // Captions toggle\n        this.bind(elements.buttons.captions, 'click', () => player.toggleCaptions());\n\n        // Download\n        this.bind(\n            elements.buttons.download,\n            'click',\n            () => {\n                triggerEvent.call(player, player.media, 'download');\n            },\n            'download',\n        );\n\n        // zoom toggle\n        this.bind(\n            elements.buttons.zoom,\n            'click',\n            () => {\n                player.fullscreen.toggleZoom();\n            },\n            'zoom',\n        );\n\n        // Fullscreen toggle\n        this.bind(\n            elements.buttons.fullscreen,\n            'click',\n            () => {\n                player.fullscreen.toggle();\n            },\n            'fullscreen',\n        );\n\n        // Picture-in-Picture\n        this.bind(\n            elements.buttons.pip,\n            'click',\n            () => {\n                player.pip = 'toggle';\n            },\n            'pip',\n        );\n\n        // Airplay\n        this.bind(elements.buttons.airplay, 'click', player.airplay, 'airplay');\n\n        // Settings menu - click toggle\n        this.bind(elements.buttons.settings, 'click', event => {\n            // Prevent the document click listener closing the menu\n            event.stopPropagation();\n\n            controls.toggleMenu.call(player, event);\n        });\n\n        // Settings menu - keyboard toggle\n        // We have to bind to keyup otherwise Firefox triggers a click when a keydown event handler shifts focus\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n        this.bind(\n            elements.buttons.settings,\n            'keyup',\n            event => {\n                const code = event.which;\n\n                // We only care about space and return\n                if (![13, 32].includes(code)) {\n                    return;\n                }\n\n                // Because return triggers a click anyway, all we need to do is set focus\n                if (code === 13) {\n                    controls.focusFirstMenuItem.call(player, null, true);\n                    return;\n                }\n\n                // Prevent scroll\n                event.preventDefault();\n\n                // Prevent playing video (Firefox)\n                event.stopPropagation();\n\n                // Toggle menu\n                controls.toggleMenu.call(player, event);\n            },\n            null,\n            false, // Can't be passive as we're preventing default\n        );\n\n        // Escape closes menu\n        this.bind(elements.settings.menu, 'keydown', event => {\n            if (event.which === 27) {\n                controls.toggleMenu.call(player, event);\n            }\n        });\n\n        // Set range input alternative \"value\", which matches the tooltip time (#954)\n        this.bind(elements.inputs.seek, 'mousedown mousemove', event => {\n            const rect = elements.progress.getBoundingClientRect();\n            const percent = (100 / rect.width) * (event.pageX - rect.left);\n            event.currentTarget.setAttribute('seek-value', percent);\n        });\n\n        // Pause while seeking\n        this.bind(elements.inputs.seek, 'mousedown mouseup keydown keyup touchstart touchend', event => {\n            const seek = event.currentTarget;\n            const code = event.keyCode ? event.keyCode : event.which;\n            const attribute = 'play-on-seeked';\n\n            if (is.keyboardEvent(event) && (code !== 39 && code !== 37)) {\n                return;\n            }\n\n            // Record seek time so we can prevent hiding controls for a few seconds after seek\n            player.lastSeekTime = Date.now();\n\n            // Was playing before?\n            const play = seek.hasAttribute(attribute);\n\n            // Done seeking\n            const done = ['mouseup', 'touchend', 'keyup'].includes(event.type);\n\n            // If we're done seeking and it was playing, resume playback\n            if (play && done) {\n                seek.removeAttribute(attribute);\n                player.play();\n            } else if (!done && player.playing) {\n                seek.setAttribute(attribute, '');\n                player.pause();\n            }\n        });\n\n        // Fix range inputs on iOS\n        // Super weird iOS bug where after you interact with an <input type=\"range\">,\n        // it takes over further interactions on the page. This is a hack\n        if (browser.isIos) {\n            const inputs = getElements.call(player, 'input[type=\"range\"]');\n            Array.from(inputs).forEach(input => this.bind(input, inputEvent, event => repaint(event.target)));\n        }\n\n        // Seek\n        this.bind(\n            elements.inputs.seek,\n            inputEvent,\n            event => {\n                const seek = event.currentTarget;\n\n                // If it exists, use seek-value instead of \"value\" for consistency with tooltip time (#954)\n                let seekTo = seek.getAttribute('seek-value');\n\n                if (is.empty(seekTo)) {\n                    seekTo = seek.value;\n                }\n\n                seek.removeAttribute('seek-value');\n\n                player.currentTime = (seekTo / seek.max) * player.duration;\n            },\n            'seek',\n        );\n\n        // Seek tooltip\n        this.bind(elements.progress, 'mouseenter mouseleave mousemove', event =>\n            controls.updateSeekTooltip.call(player, event),\n        );\n\n        // Polyfill for lower fill in <input type=\"range\"> for webkit\n        if (browser.isWebkit) {\n            Array.from(getElements.call(player, 'input[type=\"range\"]')).forEach(element => {\n                this.bind(element, 'input', event => controls.updateRangeFill.call(player, event.target));\n            });\n        }\n\n        // Current time invert\n        // Only if one time element is used for both currentTime and duration\n        if (player.config.toggleInvert && !is.element(elements.display.duration)) {\n            this.bind(elements.display.currentTime, 'click', () => {\n                // Do nothing if we're at the start\n                if (player.currentTime === 0) {\n                    return;\n                }\n\n                player.config.invertTime = !player.config.invertTime;\n\n                controls.timeUpdate.call(player);\n            });\n        }\n\n        // Volume\n        this.bind(\n            elements.inputs.volume,\n            inputEvent,\n            event => {\n                player.volume = event.target.value;\n            },\n            'volume',\n        );\n\n        // Update controls.hover state (used for ui.toggleControls to avoid hiding when interacting)\n        this.bind(elements.controls, 'mouseenter mouseleave', event => {\n            elements.controls.hover = !player.touch && event.type === 'mouseenter';\n        });\n\n        // Update controls.pressed state (used for ui.toggleControls to avoid hiding when interacting)\n        this.bind(elements.controls, 'mousedown mouseup touchstart touchend touchcancel', event => {\n            elements.controls.pressed = ['mousedown', 'touchstart'].includes(event.type);\n        });\n\n        // Show controls when they receive focus (e.g., when using keyboard tab key)\n        this.bind(elements.controls, 'focusin', () => {\n            const { config, elements, timers } = player;\n\n            // Skip transition to prevent focus from scrolling the parent element\n            toggleClass(elements.controls, config.classNames.noTransition, true);\n\n            // Toggle\n            ui.toggleControls.call(player, true);\n\n            // Restore transition\n            setTimeout(() => {\n                toggleClass(elements.controls, config.classNames.noTransition, false);\n            }, 0);\n\n            // Delay a little more for mouse users\n            const delay = this.touch ? 3000 : 4000;\n\n            // Clear timer\n            clearTimeout(timers.controls);\n\n            // Hide again after delay\n            timers.controls = setTimeout(() => ui.toggleControls.call(player, false), delay);\n        });\n\n        // Mouse wheel for volume\n        this.bind(\n            elements.inputs.volume,\n            'wheel',\n            event => {\n                // Detect \"natural\" scroll - suppored on OS X Safari only\n                // Other browsers on OS X will be inverted until support improves\n                const inverted = event.webkitDirectionInvertedFromDevice;\n\n                // Get delta from event. Invert if `inverted` is true\n                const [x, y] = [event.deltaX, -event.deltaY].map(value => (inverted ? -value : value));\n\n                // Using the biggest delta, normalize to 1 or -1 (or 0 if no delta)\n                const direction = Math.sign(Math.abs(x) > Math.abs(y) ? x : y);\n\n                // Change the volume by 2%\n                player.increaseVolume(direction / 50);\n\n                // Don't break page scrolling at max and min\n                const { volume } = player.media;\n                if ((direction === 1 && volume < 1) || (direction === -1 && volume > 0)) {\n                    event.preventDefault();\n                }\n            },\n            'volume',\n            false,\n        );\n    }\n}\n\nexport default Listeners;\n","import { setAttributes, toggleClass } from './utils/elements';\n\nconst logo = {\n    setup() {\n        // add custom logo\n        if (this.config.logo && this.config.logo.url) {\n            // build logo container\n            const logoContainer = document.createElement('div');\n            toggleClass(logoContainer, this.config.classNames.logo, true);\n\n            // image put into logo container if link not present\n            let imageContainer = logoContainer;\n\n            if (this.config.logo.link) {\n                // if logo.link setup, put image into a\n                const linkElement = document.createElement('a');\n                setAttributes(linkElement, {\n                    href: this.config.logo.link,\n                });\n                logoContainer.appendChild(linkElement);\n                imageContainer = linkElement;\n            }\n\n            // build logo image\n            const logoElement = document.createElement('img');\n            setAttributes(logoElement, {\n                src: this.config.logo.url,\n            });\n            imageContainer.appendChild(logoElement);\n            this.elements.container.appendChild(logoContainer);\n        }\n    },\n};\n\nexport default logo;\n","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.loadjs = factory();\n  }\n}(this, function() {\n/**\n * Global dependencies.\n * @global {Object} document - DOM\n */\n\nvar devnull = function() {},\n    bundleIdCache = {},\n    bundleResultCache = {},\n    bundleCallbackQueue = {};\n\n\n/**\n * Subscribe to bundle load event.\n * @param {string[]} bundleIds - Bundle ids\n * @param {Function} callbackFn - The callback function\n */\nfunction subscribe(bundleIds, callbackFn) {\n  // listify\n  bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n\n  var depsNotFound = [],\n      i = bundleIds.length,\n      numWaiting = i,\n      fn,\n      bundleId,\n      r,\n      q;\n\n  // define callback function\n  fn = function (bundleId, pathsNotFound) {\n    if (pathsNotFound.length) depsNotFound.push(bundleId);\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(depsNotFound);\n  };\n\n  // register callback\n  while (i--) {\n    bundleId = bundleIds[i];\n\n    // execute callback if in result cache\n    r = bundleResultCache[bundleId];\n    if (r) {\n      fn(bundleId, r);\n      continue;\n    }\n\n    // add to callback queue\n    q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n    q.push(fn);\n  }\n}\n\n\n/**\n * Publish bundle load event.\n * @param {string} bundleId - Bundle id\n * @param {string[]} pathsNotFound - List of files not found\n */\nfunction publish(bundleId, pathsNotFound) {\n  // exit if id isn't defined\n  if (!bundleId) return;\n\n  var q = bundleCallbackQueue[bundleId];\n\n  // cache result\n  bundleResultCache[bundleId] = pathsNotFound;\n\n  // exit if queue is empty\n  if (!q) return;\n\n  // empty callback queue\n  while (q.length) {\n    q[0](bundleId, pathsNotFound);\n    q.splice(0, 1);\n  }\n}\n\n\n/**\n * Execute callbacks.\n * @param {Object or Function} args - The callback args\n * @param {string[]} depsNotFound - List of dependencies not found\n */\nfunction executeCallbacks(args, depsNotFound) {\n  // accept function as argument\n  if (args.call) args = {success: args};\n\n  // success and error callbacks\n  if (depsNotFound.length) (args.error || devnull)(depsNotFound);\n  else (args.success || devnull)(args);\n}\n\n\n/**\n * Load individual file.\n * @param {string} path - The file path\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFile(path, callbackFn, args, numTries) {\n  var doc = document,\n      async = args.async,\n      maxTries = (args.numRetries || 0) + 1,\n      beforeCallbackFn = args.before || devnull,\n      pathStripped = path.replace(/^(css|img)!/, ''),\n      isCss,\n      e;\n\n  numTries = numTries || 0;\n\n  if (/(^css!|\\.css$)/.test(path)) {\n    isCss = true;\n\n    // css\n    e = doc.createElement('link');\n    e.rel = 'stylesheet';\n    e.href = pathStripped; //.replace(/^css!/, '');  // remove \"css!\" prefix\n  } else if (/(^img!|\\.(png|gif|jpg|svg)$)/.test(path)) {\n    // image\n    e = doc.createElement('img');\n    e.src = pathStripped;    \n  } else {\n    // javascript\n    e = doc.createElement('script');\n    e.src = path;\n    e.async = async === undefined ? true : async;\n  }\n\n  e.onload = e.onerror = e.onbeforeload = function (ev) {\n    var result = ev.type[0];\n\n    // Note: The following code isolates IE using `hideFocus` and treats empty\n    // stylesheets as failures to get around lack of onerror support\n    if (isCss && 'hideFocus' in e) {\n      try {\n        if (!e.sheet.cssText.length) result = 'e';\n      } catch (x) {\n        // sheets objects created from load errors don't allow access to\n        // `cssText`\n        result = 'e';\n      }\n    }\n\n    // handle retries in case of load failure\n    if (result == 'e') {\n      // increment counter\n      numTries += 1;\n\n      // exit function and try again\n      if (numTries < maxTries) {\n        return loadFile(path, callbackFn, args, numTries);\n      }\n    }\n\n    // execute callback\n    callbackFn(path, result, ev.defaultPrevented);\n  };\n\n  // add to document (unless callback returns `false`)\n  if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n}\n\n\n/**\n * Load multiple files.\n * @param {string[]} paths - The file paths\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFiles(paths, callbackFn, args) {\n  // listify paths\n  paths = paths.push ? paths : [paths];\n\n  var numWaiting = paths.length,\n      x = numWaiting,\n      pathsNotFound = [],\n      fn,\n      i;\n\n  // define callback function\n  fn = function(path, result, defaultPrevented) {\n    // handle error\n    if (result == 'e') pathsNotFound.push(path);\n\n    // handle beforeload event. If defaultPrevented then that means the load\n    // will be blocked (ex. Ghostery/ABP on Safari)\n    if (result == 'b') {\n      if (defaultPrevented) pathsNotFound.push(path);\n      else return;\n    }\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(pathsNotFound);\n  };\n\n  // load scripts\n  for (i=0; i < x; i++) loadFile(paths[i], fn, args);\n}\n\n\n/**\n * Initiate script load and register bundle.\n * @param {(string|string[])} paths - The file paths\n * @param {(string|Function)} [arg1] - The bundleId or success callback\n * @param {Function} [arg2] - The success or error callback\n * @param {Function} [arg3] - The error callback\n */\nfunction loadjs(paths, arg1, arg2) {\n  var bundleId,\n      args;\n\n  // bundleId (if string)\n  if (arg1 && arg1.trim) bundleId = arg1;\n\n  // args (default is {})\n  args = (bundleId ? arg2 : arg1) || {};\n\n  // throw error if bundle is already defined\n  if (bundleId) {\n    if (bundleId in bundleIdCache) {\n      throw \"LoadJS\";\n    } else {\n      bundleIdCache[bundleId] = true;\n    }\n  }\n\n  // load scripts\n  loadFiles(paths, function (pathsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, pathsNotFound);\n\n    // publish bundle load event\n    publish(bundleId, pathsNotFound);\n  }, args);\n}\n\n\n/**\n * Execute callbacks when dependencies have been satisfied.\n * @param {(string|string[])} deps - List of bundle ids\n * @param {Object} args - success/error arguments\n */\nloadjs.ready = function ready(deps, args) {\n  // subscribe to bundle load event\n  subscribe(deps, function (depsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, depsNotFound);\n  });\n\n  return loadjs;\n};\n\n\n/**\n * Manually satisfy bundle dependencies.\n * @param {string} bundleId - The bundle id\n */\nloadjs.done = function done(bundleId) {\n  publish(bundleId, []);\n};\n\n\n/**\n * Reset loadjs dependencies statuses\n */\nloadjs.reset = function reset() {\n  bundleIdCache = {};\n  bundleResultCache = {};\n  bundleCallbackQueue = {};\n};\n\n\n/**\n * Determine if bundle has already been defined\n * @param String} bundleId - The bundle id\n */\nloadjs.isDefined = function isDefined(bundleId) {\n  return bundleId in bundleIdCache;\n};\n\n\n// export\nreturn loadjs;\n\n}));\n","// ==========================================================================\n// Load an external script\n// ==========================================================================\n\nimport loadjs from 'loadjs';\n\nexport default function loadScript(url) {\n    return new Promise((resolve, reject) => {\n        loadjs(url, {\n            success: resolve,\n            error: reject,\n        });\n    });\n}\n","// ==========================================================================\n// Vimeo plugin\n// ==========================================================================\n\nimport captions from '../captions';\nimport controls from '../controls';\nimport ui from '../ui';\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport loadScript from '../utils/loadScript';\nimport { format, stripHTML } from '../utils/strings';\nimport { buildUrlParams } from '../utils/urls';\n\n// Parse Vimeo ID from URL\nfunction parseId(url) {\n    if (is.empty(url)) {\n        return null;\n    }\n\n    if (is.number(Number(url))) {\n        return url;\n    }\n\n    const regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Get aspect ratio for dimensions\nfunction getAspectRatio(width, height) {\n    const getRatio = (w, h) => (h === 0 ? w : getRatio(h, w % h));\n    const ratio = getRatio(width, height);\n    return `${width / ratio}:${height / ratio}`;\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n        this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst vimeo = {\n    setup() {\n        // Add embed class for responsive\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set intial ratio\n        vimeo.setAspectRatio.call(this);\n\n        // Load the API if not already\n        if (!is.object(window.Vimeo)) {\n            loadScript(this.config.urls.vimeo.sdk)\n                .then(() => {\n                    vimeo.ready.call(this);\n                })\n                .catch(error => {\n                    this.debug.warn('Vimeo API failed to load', error);\n                });\n        } else {\n            vimeo.ready.call(this);\n        }\n    },\n\n    // Set aspect ratio\n    // For Vimeo we have an extra 300% height <div> to hide the standard controls and UI\n    setAspectRatio(input) {\n        const [x, y] = (is.string(input) ? input : this.config.ratio).split(':');\n        const padding = (100 / x) * y;\n        this.elements.wrapper.style.paddingBottom = `${padding}%`;\n\n        if (this.supported.ui) {\n            const height = 240;\n            const offset = (height - padding) / (height / 50);\n\n            this.media.style.transform = `translateY(-${offset}%)`;\n        }\n    },\n\n    // API Ready\n    ready() {\n        const player = this;\n\n        // Get Vimeo params for the iframe\n        const options = {\n            loop: player.config.loop.active,\n            autoplay: player.autoplay,\n            // muted: player.muted,\n            byline: false,\n            portrait: false,\n            title: false,\n            speed: true,\n            transparent: 0,\n            gesture: 'media',\n            playsinline: !this.config.fullscreen.iosNative,\n        };\n        const params = buildUrlParams(options);\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (is.empty(source)) {\n            source = player.media.getAttribute(player.config.attributes.embed.id);\n        }\n\n        const id = parseId(source);\n\n        // Build an iframe\n        const iframe = createElement('iframe');\n        const src = format(player.config.urls.vimeo.iframe, id, params);\n        iframe.setAttribute('src', src);\n        iframe.setAttribute('allowfullscreen', '');\n        iframe.setAttribute('allowtransparency', '');\n        iframe.setAttribute('allow', 'autoplay');\n\n        // Get poster, if already set\n        const { poster } = player;\n\n        // Inject the package\n        const wrapper = createElement('div', { poster, class: player.config.classNames.embedContainer });\n        wrapper.appendChild(iframe);\n        player.media = replaceElement(wrapper, player.media);\n\n        // Get poster image\n        fetch(format(player.config.urls.vimeo.api, id), 'json').then(response => {\n            if (is.empty(response)) {\n                return;\n            }\n\n            // Get the URL for thumbnail\n            const url = new URL(response[0].thumbnail_large);\n\n            // Get original image\n            url.pathname = `${url.pathname.split('_')[0]}.jpg`;\n\n            // Set and show poster\n            ui.setPoster.call(player, url.href).catch(() => {});\n        });\n\n        // Setup instance\n        // https://github.com/vimeo/player.js\n        player.embed = new window.Vimeo.Player(iframe, {\n            autopause: player.config.autopause,\n            muted: player.muted,\n        });\n\n        player.media.paused = true;\n        player.media.currentTime = 0;\n\n        // Disable native text track rendering\n        if (player.supported.ui) {\n            player.embed.disableTextTrack();\n        }\n\n        // Create a faux HTML5 API using the Vimeo API\n        player.media.play = () => {\n            assurePlaybackState.call(player, true);\n            return player.embed.play();\n        };\n\n        player.media.pause = () => {\n            assurePlaybackState.call(player, false);\n            return player.embed.pause();\n        };\n\n        player.media.stop = () => {\n            player.pause();\n            player.currentTime = 0;\n        };\n\n        // Seeking\n        let { currentTime } = player.media;\n        Object.defineProperty(player.media, 'currentTime', {\n            get() {\n                return currentTime;\n            },\n            set(time) {\n                // Vimeo will automatically play on seek if the video hasn't been played before\n\n                // Get current paused state and volume etc\n                const { embed, media, paused, volume } = player;\n                const restorePause = paused && !embed.hasPlayed;\n\n                // Set seeking state and trigger event\n                media.seeking = true;\n                triggerEvent.call(player, media, 'seeking');\n\n                // If paused, mute until seek is complete\n                Promise.resolve(restorePause && embed.setVolume(0))\n                    // Seek\n                    .then(() => embed.setCurrentTime(time))\n                    // Restore paused\n                    .then(() => restorePause && embed.pause())\n                    // Restore volume\n                    .then(() => restorePause && embed.setVolume(volume))\n                    .catch(() => {\n                        // Do nothing\n                    });\n            },\n        });\n\n        // Playback speed\n        let speed = player.config.speed.selected;\n        Object.defineProperty(player.media, 'playbackRate', {\n            get() {\n                return speed;\n            },\n            set(input) {\n                player.embed\n                    .setPlaybackRate(input)\n                    .then(() => {\n                        speed = input;\n                        triggerEvent.call(player, player.media, 'ratechange');\n                    })\n                    .catch(error => {\n                        // Hide menu item (and menu if empty)\n                        if (error.name === 'Error') {\n                            controls.setSpeedMenu.call(player, []);\n                        }\n                    });\n            },\n        });\n\n        // Volume\n        let { volume } = player.config;\n        Object.defineProperty(player.media, 'volume', {\n            get() {\n                return volume;\n            },\n            set(input) {\n                player.embed.setVolume(input).then(() => {\n                    volume = input;\n                    triggerEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Muted\n        let { muted } = player.config;\n        Object.defineProperty(player.media, 'muted', {\n            get() {\n                return muted;\n            },\n            set(input) {\n                const toggle = is.boolean(input) ? input : false;\n\n                player.embed.setVolume(toggle ? 0 : player.config.volume).then(() => {\n                    muted = toggle;\n                    triggerEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Loop\n        let { loop } = player.config;\n        Object.defineProperty(player.media, 'loop', {\n            get() {\n                return loop;\n            },\n            set(input) {\n                const toggle = is.boolean(input) ? input : player.config.loop.active;\n\n                player.embed.setLoop(toggle).then(() => {\n                    loop = toggle;\n                });\n            },\n        });\n\n        // Source\n        let currentSrc;\n        player.embed\n            .getVideoUrl()\n            .then(value => {\n                currentSrc = value;\n                controls.setDownloadLink.call(player);\n            })\n            .catch(error => {\n                this.debug.warn(error);\n            });\n\n        Object.defineProperty(player.media, 'currentSrc', {\n            get() {\n                return currentSrc;\n            },\n        });\n\n        // Ended\n        Object.defineProperty(player.media, 'ended', {\n            get() {\n                return player.currentTime === player.duration;\n            },\n        });\n\n        // Set aspect ratio based on video size\n        Promise.all([player.embed.getVideoWidth(), player.embed.getVideoHeight()]).then(dimensions => {\n            const ratio = getAspectRatio(dimensions[0], dimensions[1]);\n            vimeo.setAspectRatio.call(this, ratio);\n        });\n\n        // Set autopause\n        player.embed.setAutopause(player.config.autopause).then(state => {\n            player.config.autopause = state;\n        });\n\n        // Get title\n        player.embed.getVideoTitle().then(title => {\n            player.config.title = title;\n            ui.setTitle.call(this);\n        });\n\n        // Get current time\n        player.embed.getCurrentTime().then(value => {\n            currentTime = value;\n            triggerEvent.call(player, player.media, 'timeupdate');\n        });\n\n        // Get duration\n        player.embed.getDuration().then(value => {\n            player.media.duration = value;\n            triggerEvent.call(player, player.media, 'durationchange');\n        });\n\n        // Get captions\n        player.embed.getTextTracks().then(tracks => {\n            player.media.textTracks = tracks;\n            captions.setup.call(player);\n        });\n\n        player.embed.on('cuechange', ({ cues = [] }) => {\n            const strippedCues = cues.map(cue => stripHTML(cue.text));\n            captions.updateCues.call(player, strippedCues);\n        });\n\n        player.embed.on('loaded', () => {\n            // Assure state and events are updated on autoplay\n            player.embed.getPaused().then(paused => {\n                assurePlaybackState.call(player, !paused);\n                if (!paused) {\n                    triggerEvent.call(player, player.media, 'playing');\n                }\n            });\n\n            if (is.element(player.embed.element) && player.supported.ui) {\n                const frame = player.embed.element;\n\n                // Fix keyboard focus issues\n                // https://github.com/sampotts/plyr/issues/317\n                frame.setAttribute('tabindex', -1);\n            }\n        });\n\n        player.embed.on('play', () => {\n            assurePlaybackState.call(player, true);\n            triggerEvent.call(player, player.media, 'playing');\n        });\n\n        player.embed.on('pause', () => {\n            assurePlaybackState.call(player, false);\n        });\n\n        player.embed.on('timeupdate', data => {\n            player.media.seeking = false;\n            currentTime = data.seconds;\n            triggerEvent.call(player, player.media, 'timeupdate');\n        });\n\n        player.embed.on('progress', data => {\n            player.media.buffered = data.percent;\n            triggerEvent.call(player, player.media, 'progress');\n\n            // Check all loaded\n            if (parseInt(data.percent, 10) === 1) {\n                triggerEvent.call(player, player.media, 'canplaythrough');\n            }\n\n            // Get duration as if we do it before load, it gives an incorrect value\n            // https://github.com/sampotts/plyr/issues/891\n            player.embed.getDuration().then(value => {\n                if (value !== player.media.duration) {\n                    player.media.duration = value;\n                    triggerEvent.call(player, player.media, 'durationchange');\n                }\n            });\n        });\n\n        player.embed.on('seeked', () => {\n            player.media.seeking = false;\n            triggerEvent.call(player, player.media, 'seeked');\n        });\n\n        player.embed.on('ended', () => {\n            player.media.paused = true;\n            triggerEvent.call(player, player.media, 'ended');\n        });\n\n        player.embed.on('error', detail => {\n            player.media.error = detail;\n            triggerEvent.call(player, player.media, 'error');\n        });\n\n        // Rebuild UI\n        setTimeout(() => ui.build.call(player), 0);\n    },\n};\n\nexport default vimeo;\n","// ==========================================================================\n// YouTube plugin\n// ==========================================================================\n\nimport ui from '../ui';\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport loadImage from '../utils/loadImage';\nimport loadScript from '../utils/loadScript';\nimport { format, generateId } from '../utils/strings';\n\n// Parse YouTube ID from URL\nfunction parseId(url) {\n    if (is.empty(url)) {\n        return null;\n    }\n\n    const regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n        this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst youtube = {\n    setup() {\n        // Add embed class for responsive\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set aspect ratio\n        youtube.setAspectRatio.call(this);\n\n        // Setup API\n        if (is.object(window.YT) && is.function(window.YT.Player)) {\n            youtube.ready.call(this);\n        } else {\n            // Load the API\n            loadScript(this.config.urls.youtube.sdk).catch(error => {\n                this.debug.warn('YouTube API failed to load', error);\n            });\n\n            // Setup callback for the API\n            // YouTube has it's own system of course...\n            window.onYouTubeReadyCallbacks = window.onYouTubeReadyCallbacks || [];\n\n            // Add to queue\n            window.onYouTubeReadyCallbacks.push(() => {\n                youtube.ready.call(this);\n            });\n\n            // Set callback to process queue\n            window.onYouTubeIframeAPIReady = () => {\n                window.onYouTubeReadyCallbacks.forEach(callback => {\n                    callback();\n                });\n            };\n        }\n    },\n\n    // Get the media title\n    getTitle(videoId) {\n        // Try via undocumented API method first\n        // This method disappears now and then though...\n        // https://github.com/sampotts/plyr/issues/709\n        if (is.function(this.embed.getVideoData)) {\n            const { title } = this.embed.getVideoData();\n\n            if (is.empty(title)) {\n                this.config.title = title;\n                ui.setTitle.call(this);\n                return;\n            }\n        }\n\n        // Or via Google API\n        const key = this.config.keys.google;\n        if (is.string(key) && !is.empty(key)) {\n            const url = format(this.config.urls.youtube.api, videoId, key);\n\n            fetch(url)\n                .then(result => {\n                    if (is.object(result)) {\n                        this.config.title = result.items[0].snippet.title;\n                        ui.setTitle.call(this);\n                    }\n                })\n                .catch(() => {});\n        }\n    },\n\n    // Set aspect ratio\n    setAspectRatio() {\n        const ratio = this.config.ratio.split(':');\n        this.elements.wrapper.style.paddingBottom = `${100 / ratio[0] * ratio[1]}%`;\n    },\n\n    // API ready\n    ready() {\n        const player = this;\n\n        // Ignore already setup (race condition)\n        const currentId = player.media.getAttribute('id');\n        if (!is.empty(currentId) && currentId.startsWith('youtube-')) {\n            return;\n        }\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (is.empty(source)) {\n            source = player.media.getAttribute(this.config.attributes.embed.id);\n        }\n\n        // Replace the <iframe> with a <div> due to YouTube API issues\n        const videoId = parseId(source);\n        const id = generateId(player.provider);\n\n        // Get poster, if already set\n        const { poster } = player;\n\n        // Replace media element\n        const container = createElement('div', { id, poster });\n        player.media = replaceElement(container, player.media);\n\n        // Id to poster wrapper\n        const posterSrc = format => `https://img.youtube.com/vi/${videoId}/${format}default.jpg`;\n\n        // Check thumbnail images in order of quality, but reject fallback thumbnails (120px wide)\n        loadImage(posterSrc('maxres'), 121) // Higest quality and unpadded\n            .catch(() => loadImage(posterSrc('sd'), 121)) // 480p padded 4:3\n            .catch(() => loadImage(posterSrc('hq'))) // 360p padded 4:3. Always exists\n            .then(image => ui.setPoster.call(player, image.src))\n            .then(posterSrc => {\n                // If the image is padded, use background-size \"cover\" instead (like youtube does too with their posters)\n                if (!posterSrc.includes('maxres')) {\n                    player.elements.poster.style.backgroundSize = 'cover';\n                }\n            })\n            .catch(() => {});\n\n        // Setup instance\n        // https://developers.google.com/youtube/iframe_api_reference\n        player.embed = new window.YT.Player(id, {\n            videoId,\n            playerVars: {\n                autoplay: player.config.autoplay ? 1 : 0, // Autoplay\n                hl: player.config.hl, // iframe interface language\n                controls: player.supported.ui ? 0 : 1, // Only show controls if not fully supported\n                rel: 0, // No related vids\n                showinfo: 0, // Hide info\n                iv_load_policy: 3, // Hide annotations\n                modestbranding: 1, // Hide logos as much as possible (they still show one in the corner when paused)\n                disablekb: 1, // Disable keyboard as we handle it\n                playsinline: 1, // Allow iOS inline playback\n\n                // Tracking for stats\n                // origin: window ? `${window.location.protocol}//${window.location.host}` : null,\n                widget_referrer: window ? window.location.href : null,\n\n                // Captions are flaky on YouTube\n                cc_load_policy: player.captions.active ? 1 : 0,\n                cc_lang_pref: player.config.captions.language,\n            },\n            events: {\n                onError(event) {\n                    // YouTube may fire onError twice, so only handle it once\n                    if (!player.media.error) {\n                        const code = event.data;\n                        // Messages copied from https://developers.google.com/youtube/iframe_api_reference#onError\n                        const message =\n                            {\n                                2: 'The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.',\n                                5: 'The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.',\n                                100: 'The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.',\n                                101: 'The owner of the requested video does not allow it to be played in embedded players.',\n                                150: 'The owner of the requested video does not allow it to be played in embedded players.',\n                            }[code] || 'An unknown error occured';\n\n                        player.media.error = { code, message };\n\n                        triggerEvent.call(player, player.media, 'error');\n                    }\n                },\n                onPlaybackRateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get current speed\n                    player.media.playbackRate = instance.getPlaybackRate();\n\n                    triggerEvent.call(player, player.media, 'ratechange');\n                },\n                onReady(event) {\n                    // Bail if onReady has already been called. See issue #1108\n                    if (is.function(player.media.play)) {\n                        return;\n                    }\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get the title\n                    youtube.getTitle.call(player, videoId);\n\n                    // Create a faux HTML5 API using the YouTube API\n                    player.media.play = () => {\n                        assurePlaybackState.call(player, true);\n                        instance.playVideo();\n                    };\n\n                    player.media.pause = () => {\n                        assurePlaybackState.call(player, false);\n                        instance.pauseVideo();\n                    };\n\n                    player.media.stop = () => {\n                        instance.stopVideo();\n                    };\n\n                    player.media.duration = instance.getDuration();\n                    player.media.paused = true;\n\n                    // Seeking\n                    player.media.currentTime = 0;\n                    Object.defineProperty(player.media, 'currentTime', {\n                        get() {\n                            return Number(instance.getCurrentTime());\n                        },\n                        set(time) {\n                            // If paused and never played, mute audio preventively (YouTube starts playing on seek if the video hasn't been played yet).\n                            if (player.paused && !player.embed.hasPlayed) {\n                                player.embed.mute();\n                            }\n\n                            // Set seeking state and trigger event\n                            player.media.seeking = true;\n                            triggerEvent.call(player, player.media, 'seeking');\n\n                            // Seek after events sent\n                            instance.seekTo(time);\n                        },\n                    });\n\n                    // Playback speed\n                    Object.defineProperty(player.media, 'playbackRate', {\n                        get() {\n                            return instance.getPlaybackRate();\n                        },\n                        set(input) {\n                            instance.setPlaybackRate(input);\n                        },\n                    });\n\n                    // Volume\n                    let { volume } = player.config;\n                    Object.defineProperty(player.media, 'volume', {\n                        get() {\n                            return volume;\n                        },\n                        set(input) {\n                            volume = input;\n                            instance.setVolume(volume * 100);\n                            triggerEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Muted\n                    let { muted } = player.config;\n                    Object.defineProperty(player.media, 'muted', {\n                        get() {\n                            return muted;\n                        },\n                        set(input) {\n                            const toggle = is.boolean(input) ? input : muted;\n                            muted = toggle;\n                            instance[toggle ? 'mute' : 'unMute']();\n                            triggerEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Source\n                    Object.defineProperty(player.media, 'currentSrc', {\n                        get() {\n                            return instance.getVideoUrl();\n                        },\n                    });\n\n                    // Ended\n                    Object.defineProperty(player.media, 'ended', {\n                        get() {\n                            return player.currentTime === player.duration;\n                        },\n                    });\n\n                    // Get available speeds\n                    player.options.speed = instance.getAvailablePlaybackRates();\n\n                    // Set the tabindex to avoid focus entering iframe\n                    if (player.supported.ui) {\n                        player.media.setAttribute('tabindex', -1);\n                    }\n\n                    triggerEvent.call(player, player.media, 'timeupdate');\n                    triggerEvent.call(player, player.media, 'durationchange');\n\n                    // Reset timer\n                    clearInterval(player.timers.buffering);\n\n                    // Setup buffering\n                    player.timers.buffering = setInterval(() => {\n                        // Get loaded % from YouTube\n                        player.media.buffered = instance.getVideoLoadedFraction();\n\n                        // Trigger progress only when we actually buffer something\n                        if (player.media.lastBuffered === null || player.media.lastBuffered < player.media.buffered) {\n                            triggerEvent.call(player, player.media, 'progress');\n                        }\n\n                        // Set last buffer point\n                        player.media.lastBuffered = player.media.buffered;\n\n                        // Bail if we're at 100%\n                        if (player.media.buffered === 1) {\n                            clearInterval(player.timers.buffering);\n\n                            // Trigger event\n                            triggerEvent.call(player, player.media, 'canplaythrough');\n                        }\n                    }, 200);\n\n                    // Rebuild UI\n                    setTimeout(() => ui.build.call(player), 50);\n                },\n                onStateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Reset timer\n                    clearInterval(player.timers.playing);\n\n                    const seeked = player.media.seeking && [1, 2].includes(event.data);\n\n                    if (seeked) {\n                        // Unset seeking and fire seeked event\n                        player.media.seeking = false;\n                        triggerEvent.call(player, player.media, 'seeked');\n                    }\n\n                    // Handle events\n                    // -1   Unstarted\n                    // 0    Ended\n                    // 1    Playing\n                    // 2    Paused\n                    // 3    Buffering\n                    // 5    Video cued\n                    switch (event.data) {\n                        case -1:\n                            // Update scrubber\n                            triggerEvent.call(player, player.media, 'timeupdate');\n\n                            // Get loaded % from YouTube\n                            player.media.buffered = instance.getVideoLoadedFraction();\n                            triggerEvent.call(player, player.media, 'progress');\n\n                            break;\n\n                        case 0:\n                            assurePlaybackState.call(player, false);\n\n                            // YouTube doesn't support loop for a single video, so mimick it.\n                            if (player.media.loop) {\n                                // YouTube needs a call to `stopVideo` before playing again\n                                instance.stopVideo();\n                                instance.playVideo();\n                            } else {\n                                triggerEvent.call(player, player.media, 'ended');\n                            }\n\n                            break;\n\n                        case 1:\n                            // Restore paused state (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (player.media.paused && !player.embed.hasPlayed) {\n                                player.media.pause();\n                            } else {\n                                assurePlaybackState.call(player, true);\n\n                                triggerEvent.call(player, player.media, 'playing');\n\n                                // Poll to get playback progress\n                                player.timers.playing = setInterval(() => {\n                                    triggerEvent.call(player, player.media, 'timeupdate');\n                                }, 50);\n\n                                // Check duration again due to YouTube bug\n                                // https://github.com/sampotts/plyr/issues/374\n                                // https://code.google.com/p/gdata-issues/issues/detail?id=8690\n                                if (player.media.duration !== instance.getDuration()) {\n                                    player.media.duration = instance.getDuration();\n                                    triggerEvent.call(player, player.media, 'durationchange');\n                                }\n                            }\n\n                            break;\n\n                        case 2:\n                            // Restore audio (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (!player.muted) {\n                                player.embed.unMute();\n                            }\n                            assurePlaybackState.call(player, false);\n\n                            break;\n\n                        default:\n                            break;\n                    }\n\n                    triggerEvent.call(player, player.elements.container, 'statechange', false, {\n                        code: event.data,\n                    });\n                },\n            },\n        });\n    },\n};\n\nexport default youtube;\n","// ==========================================================================\n// Plyr Media\n// ==========================================================================\n\nimport html5 from './html5';\nimport vimeo from './plugins/vimeo';\nimport youtube from './plugins/youtube';\nimport { createElement, toggleClass, wrap } from './utils/elements';\n\nconst media = {\n    // Setup media\n    setup() {\n        // If there's no media, bail\n        if (!this.media) {\n            this.debug.warn('No media element found!');\n            return;\n        }\n\n        // Add type class\n        toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', this.type), true);\n\n        // Add provider class\n        toggleClass(this.elements.container, this.config.classNames.provider.replace('{0}', this.provider), true);\n\n        // Add video class for embeds\n        // This will require changes if audio embeds are added\n        if (this.isEmbed) {\n            toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', 'video'), true);\n        }\n\n        // Inject the player wrapper\n        if (this.isVideo) {\n            // Create the wrapper div\n            this.elements.wrapper = createElement('div', {\n                class: this.config.classNames.video,\n            });\n\n            // Wrap the video in a container\n            wrap(this.media, this.elements.wrapper);\n\n            // Faux poster container\n            this.elements.poster = createElement('div', {\n                class: this.config.classNames.poster,\n            });\n\n            this.elements.wrapper.appendChild(this.elements.poster);\n        }\n\n        if (this.isHTML5) {\n            html5.extend.call(this);\n        } else if (this.isYouTube) {\n            youtube.setup.call(this);\n        } else if (this.isVimeo) {\n            vimeo.setup.call(this);\n        }\n    },\n};\n\nexport default media;\n","// ==========================================================================\n// Advertisement plugin using Google IMA HTML5 SDK\n// Create an account with our ad partner, vi here:\n// https://www.vi.ai/publisher-video-monetization/\n// ==========================================================================\n\n/* global google */\n\nimport { createElement } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport i18n from '../utils/i18n';\nimport is from '../utils/is';\nimport loadScript from '../utils/loadScript';\nimport { formatTime } from '../utils/time';\nimport { buildUrlParams } from '../utils/urls';\n\nclass Ads {\n    /**\n     * Ads constructor.\n     * @param {object} player\n     * @return {Ads}\n     */\n    constructor(player) {\n        this.player = player;\n        this.publisherId = player.config.ads.publisherId;\n        this.playing = false;\n        this.initialized = false;\n        this.elements = {\n            container: null,\n            displayContainer: null,\n        };\n        this.manager = null;\n        this.loader = null;\n        this.cuePoints = null;\n        this.events = {};\n        this.safetyTimer = null;\n        this.countdownTimer = null;\n\n        // Setup a promise to resolve when the IMA manager is ready\n        this.managerPromise = new Promise((resolve, reject) => {\n            // The ad is loaded and ready\n            this.on('loaded', resolve);\n\n            // Ads failed\n            this.on('error', reject);\n        });\n\n        this.load();\n    }\n\n    get enabled() {\n        return (\n            this.player.isHTML5 && this.player.isVideo && this.player.config.ads.enabled && !is.empty(this.publisherId)\n        );\n    }\n\n    /**\n     * Load the IMA SDK\n     */\n    load() {\n        if (this.enabled) {\n            // Check if the Google IMA3 SDK is loaded or load it ourselves\n            if (!is.object(window.google) || !is.object(window.google.ima)) {\n                loadScript(this.player.config.urls.googleIMA.sdk)\n                    .then(() => {\n                        this.ready();\n                    })\n                    .catch(() => {\n                        // Script failed to load or is blocked\n                        this.trigger('error', new Error('Google IMA SDK failed to load'));\n                    });\n            } else {\n                this.ready();\n            }\n        }\n    }\n\n    /**\n     * Get the ads instance ready\n     */\n    ready() {\n        // Start ticking our safety timer. If the whole advertisement\n        // thing doesn't resolve within our set time; we bail\n        this.startSafetyTimer(12000, 'ready()');\n\n        // Clear the safety timer\n        this.managerPromise.then(() => {\n            this.clearSafetyTimer('onAdsManagerLoaded()');\n        });\n\n        // Set listeners on the Plyr instance\n        this.listeners();\n\n        // Setup the IMA SDK\n        this.setupIMA();\n    }\n\n    // Build the default tag URL\n    get tagUrl() {\n        const params = {\n            AV_PUBLISHERID: '58c25bb0073ef448b1087ad6',\n            AV_CHANNELID: '5a0458dc28a06145e4519d21',\n            AV_URL: window.location.hostname,\n            cb: Date.now(),\n            AV_WIDTH: 640,\n            AV_HEIGHT: 480,\n            AV_CDIM2: this.publisherId,\n        };\n\n        const base = 'https://go.aniview.com/api/adserver6/vast/';\n\n        return `${base}?${buildUrlParams(params)}`;\n    }\n\n    /**\n     * In order for the SDK to display ads for our video, we need to tell it where to put them,\n     * so here we define our ad container. This div is set up to render on top of the video player.\n     * Using the code below, we tell the SDK to render ads within that div. We also provide a\n     * handle to the content video player - the SDK will poll the current time of our player to\n     * properly place mid-rolls. After we create the ad display container, we initialize it. On\n     * mobile devices, this initialization is done as the result of a user action.\n     */\n    setupIMA() {\n        // Create the container for our advertisements\n        this.elements.container = createElement('div', {\n            class: this.player.config.classNames.ads,\n        });\n        this.player.elements.container.appendChild(this.elements.container);\n\n        // So we can run VPAID2\n        google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED);\n\n        // Set language\n        google.ima.settings.setLocale(this.player.config.ads.language);\n\n        // We assume the adContainer is the video container of the plyr element\n        // that will house the ads\n        this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container);\n\n        // Request video ads to be pre-loaded\n        this.requestAds();\n    }\n\n    /**\n     * Request advertisements\n     */\n    requestAds() {\n        const { container } = this.player.elements;\n\n        try {\n            // Create ads loader\n            this.loader = new google.ima.AdsLoader(this.elements.displayContainer);\n\n            // Listen and respond to ads loaded and error events\n            this.loader.addEventListener(\n                google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n                event => this.onAdsManagerLoaded(event),\n                false,\n            );\n            this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error), false);\n\n            // Request video ads\n            const request = new google.ima.AdsRequest();\n            request.adTagUrl = this.tagUrl;\n\n            // Specify the linear and nonlinear slot sizes. This helps the SDK\n            // to select the correct creative if multiple are returned\n            request.linearAdSlotWidth = container.offsetWidth;\n            request.linearAdSlotHeight = container.offsetHeight;\n            request.nonLinearAdSlotWidth = container.offsetWidth;\n            request.nonLinearAdSlotHeight = container.offsetHeight;\n\n            // We only overlay ads as we only support video.\n            request.forceNonLinearFullSlot = false;\n\n            // Mute based on current state\n            request.setAdWillPlayMuted(!this.player.muted);\n\n            this.loader.requestAds(request);\n        } catch (e) {\n            this.onAdError(e);\n        }\n    }\n\n    /**\n     * Update the ad countdown\n     * @param {boolean} start\n     */\n    pollCountdown(start = false) {\n        if (!start) {\n            clearInterval(this.countdownTimer);\n            this.elements.container.removeAttribute('data-badge-text');\n            return;\n        }\n\n        const update = () => {\n            const time = formatTime(Math.max(this.manager.getRemainingTime(), 0));\n            const label = `${i18n.get('advertisement', this.player.config)} - ${time}`;\n            this.elements.container.setAttribute('data-badge-text', label);\n        };\n\n        this.countdownTimer = setInterval(update, 100);\n    }\n\n    /**\n     * This method is called whenever the ads are ready inside the AdDisplayContainer\n     * @param {Event} adsManagerLoadedEvent\n     */\n    onAdsManagerLoaded(event) {\n        // Load could occur after a source change (race condition)\n        if (!this.enabled) {\n            return;\n        }\n\n        // Get the ads manager\n        const settings = new google.ima.AdsRenderingSettings();\n\n        // Tell the SDK to save and restore content video state on our behalf\n        settings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n        settings.enablePreloading = true;\n\n        // The SDK is polling currentTime on the contentPlayback. And needs a duration\n        // so it can determine when to start the mid- and post-roll\n        this.manager = event.getAdsManager(this.player, settings);\n\n        // Get the cue points for any mid-rolls by filtering out the pre- and post-roll\n        this.cuePoints = this.manager.getCuePoints();\n\n        // Add advertisement cue's within the time line if available\n        if (!is.empty(this.cuePoints)) {\n            this.cuePoints.forEach(cuePoint => {\n                if (cuePoint !== 0 && cuePoint !== -1 && cuePoint < this.player.duration) {\n                    const seekElement = this.player.elements.progress;\n\n                    if (is.element(seekElement)) {\n                        const cuePercentage = 100 / this.player.duration * cuePoint;\n                        const cue = createElement('span', {\n                            class: this.player.config.classNames.cues,\n                        });\n\n                        cue.style.left = `${cuePercentage.toString()}%`;\n                        seekElement.appendChild(cue);\n                    }\n                }\n            });\n        }\n\n        // Set volume to match player\n        this.manager.setVolume(this.player.volume);\n\n        // Add listeners to the required events\n        // Advertisement error events\n        this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error));\n\n        // Advertisement regular events\n        Object.keys(google.ima.AdEvent.Type).forEach(type => {\n            this.manager.addEventListener(google.ima.AdEvent.Type[type], event => this.onAdEvent(event));\n        });\n\n        // Resolve our adsManager\n        this.trigger('loaded');\n    }\n\n    /**\n     * This is where all the event handling takes place. Retrieve the ad from the event. Some\n     * events (e.g. ALL_ADS_COMPLETED) don't have the ad object associated\n     * https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdEvent.Type\n     * @param {Event} event\n     */\n    onAdEvent(event) {\n        const { container } = this.player.elements;\n\n        // Retrieve the ad from the event. Some events (e.g. ALL_ADS_COMPLETED)\n        // don't have ad object associated\n        const ad = event.getAd();\n\n        // Proxy event\n        const dispatchEvent = type => {\n            const event = `ads${type.replace(/_/g, '').toLowerCase()}`;\n            triggerEvent.call(this.player, this.player.media, event);\n        };\n\n        switch (event.type) {\n            case google.ima.AdEvent.Type.LOADED:\n                // This is the first event sent for an ad - it is possible to determine whether the\n                // ad is a video ad or an overlay\n                this.trigger('loaded');\n\n                // Bubble event\n                dispatchEvent(event.type);\n\n                // Start countdown\n                this.pollCountdown(true);\n\n                if (!ad.isLinear()) {\n                    // Position AdDisplayContainer correctly for overlay\n                    ad.width = container.offsetWidth;\n                    ad.height = container.offsetHeight;\n                }\n\n                // console.info('Ad type: ' + event.getAd().getAdPodInfo().getPodIndex());\n                // console.info('Ad time: ' + event.getAd().getAdPodInfo().getTimeOffset());\n                break;\n\n            case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n                // All ads for the current videos are done. We can now request new advertisements\n                // in case the video is re-played\n\n                // Fire event\n                dispatchEvent(event.type);\n\n                // TODO: Example for what happens when a next video in a playlist would be loaded.\n                // So here we load a new video when all ads are done.\n                // Then we load new ads within a new adsManager. When the video\n                // Is started - after - the ads are loaded, then we get ads.\n                // You can also easily test cancelling and reloading by running\n                // player.ads.cancel() and player.ads.play from the console I guess.\n                // this.player.source = {\n                //     type: 'video',\n                //     title: 'View From A Blue Moon',\n                //     sources: [{\n                //         src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.mp4', type:\n                // 'video/mp4', }], poster:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg', tracks:\n                // [ { kind: 'captions', label: 'English', srclang: 'en', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt',\n                // default: true, }, { kind: 'captions', label: 'French', srclang: 'fr', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt', }, ],\n                // };\n\n                // TODO: So there is still this thing where a video should only be allowed to start\n                // playing when the IMA SDK is ready or has failed\n\n                this.loadAds();\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:\n                // This event indicates the ad has started - the video player can adjust the UI,\n                // for example display a pause button and remaining time. Fired when content should\n                // be paused. This usually happens right before an ad is about to cover the content\n\n                dispatchEvent(event.type);\n\n                this.pauseContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:\n                // This event indicates the ad has finished - the video player can perform\n                // appropriate UI actions, such as removing the timer for remaining time detection.\n                // Fired when content should be resumed. This usually happens when an ad finishes\n                // or collapses\n\n                dispatchEvent(event.type);\n\n                this.pollCountdown();\n\n                this.resumeContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.STARTED:\n            case google.ima.AdEvent.Type.MIDPOINT:\n            case google.ima.AdEvent.Type.COMPLETE:\n            case google.ima.AdEvent.Type.IMPRESSION:\n            case google.ima.AdEvent.Type.CLICK:\n                dispatchEvent(event.type);\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    /**\n     * Any ad error handling comes through here\n     * @param {Event} event\n     */\n    onAdError(event) {\n        this.cancel();\n        this.player.debug.warn('Ads error', event);\n    }\n\n    /**\n     * Setup hooks for Plyr and window events. This ensures\n     * the mid- and post-roll launch at the correct time. And\n     * resize the advertisement when the player resizes\n     */\n    listeners() {\n        const { container } = this.player.elements;\n        let time;\n\n        // Add listeners to the required events\n        this.player.on('ended', () => {\n            this.loader.contentComplete();\n        });\n\n        this.player.on('seeking', () => {\n            time = this.player.currentTime;\n            return time;\n        });\n\n        this.player.on('seeked', () => {\n            const seekedTime = this.player.currentTime;\n\n            if (is.empty(this.cuePoints)) {\n                return;\n            }\n\n            this.cuePoints.forEach((cuePoint, index) => {\n                if (time < cuePoint && cuePoint < seekedTime) {\n                    this.manager.discardAdBreak();\n                    this.cuePoints.splice(index, 1);\n                }\n            });\n        });\n\n        // Listen to the resizing of the window. And resize ad accordingly\n        // TODO: eventually implement ResizeObserver\n        window.addEventListener('resize', () => {\n            if (this.manager) {\n                this.manager.resize(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n            }\n        });\n    }\n\n    /**\n     * Initialize the adsManager and start playing advertisements\n     */\n    play() {\n        const { container } = this.player.elements;\n\n        if (!this.managerPromise) {\n            this.resumeContent();\n        }\n\n        // Play the requested advertisement whenever the adsManager is ready\n        this.managerPromise\n            .then(() => {\n                // Initialize the container. Must be done via a user action on mobile devices\n                this.elements.displayContainer.initialize();\n\n                try {\n                    if (!this.initialized) {\n                        // Initialize the ads manager. Ad rules playlist will start at this time\n                        this.manager.init(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n\n                        // Call play to start showing the ad. Single video and overlay ads will\n                        // start at this time; the call will be ignored for ad rules\n                        this.manager.start();\n                    }\n\n                    this.initialized = true;\n                } catch (adError) {\n                    // An error may be thrown if there was a problem with the\n                    // VAST response\n                    this.onAdError(adError);\n                }\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Resume our video\n     */\n    resumeContent() {\n        // Hide the advertisement container\n        this.elements.container.style.zIndex = '';\n\n        // Ad is stopped\n        this.playing = false;\n\n        // Play our video\n        if (this.player.currentTime < this.player.duration) {\n            this.player.play();\n        }\n    }\n\n    /**\n     * Pause our video\n     */\n    pauseContent() {\n        // Show the advertisement container\n        this.elements.container.style.zIndex = 3;\n\n        // Ad is playing.\n        this.playing = true;\n\n        // Pause our video.\n        this.player.pause();\n    }\n\n    /**\n     * Destroy the adsManager so we can grab new ads after this. If we don't then we're not\n     * allowed to call new ads based on google policies, as they interpret this as an accidental\n     * video requests. https://developers.google.com/interactive-\n     * media-ads/docs/sdks/android/faq#8\n     */\n    cancel() {\n        // Pause our video\n        if (this.initialized) {\n            this.resumeContent();\n        }\n\n        // Tell our instance that we're done for now\n        this.trigger('error');\n\n        // Re-create our adsManager\n        this.loadAds();\n    }\n\n    /**\n     * Re-create our adsManager\n     */\n    loadAds() {\n        // Tell our adsManager to go bye bye\n        this.managerPromise\n            .then(() => {\n                // Destroy our adsManager\n                if (this.manager) {\n                    this.manager.destroy();\n                }\n\n                // Re-set our adsManager promises\n                this.managerPromise = new Promise(resolve => {\n                    this.on('loaded', resolve);\n                    this.player.debug.log(this.manager);\n                });\n\n                // Now request some new advertisements\n                this.requestAds();\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Handles callbacks after an ad event was invoked\n     * @param {string} event - Event type\n     */\n    trigger(event, ...args) {\n        const handlers = this.events[event];\n\n        if (is.array(handlers)) {\n            handlers.forEach(handler => {\n                if (is.function(handler)) {\n                    handler.apply(this, args);\n                }\n            });\n        }\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     * @return {Ads}\n     */\n    on(event, callback) {\n        if (!is.array(this.events[event])) {\n            this.events[event] = [];\n        }\n\n        this.events[event].push(callback);\n\n        return this;\n    }\n\n    /**\n     * Setup a safety timer for when the ad network doesn't respond for whatever reason.\n     * The advertisement has 12 seconds to get its things together. We stop this timer when the\n     * advertisement is playing, or when a user action is required to start, then we clear the\n     * timer on ad ready\n     * @param {number} time\n     * @param {string} from\n     */\n    startSafetyTimer(time, from) {\n        this.player.debug.log(`Safety timer invoked from: ${from}`);\n\n        this.safetyTimer = setTimeout(() => {\n            this.cancel();\n            this.clearSafetyTimer('startSafetyTimer()');\n        }, time);\n    }\n\n    /**\n     * Clear our safety timer(s)\n     * @param {string} from\n     */\n    clearSafetyTimer(from) {\n        if (!is.nullOrUndefined(this.safetyTimer)) {\n            this.player.debug.log(`Safety timer cleared from: ${from}`);\n\n            clearTimeout(this.safetyTimer);\n            this.safetyTimer = null;\n        }\n    }\n}\n\nexport default Ads;\n","import { createElement, getElement, toggleClass } from '../utils/elements';\nimport {triggerEvent} from '../utils/events';\n\nimport controls from '../controls';\n\nexport class LectureNoteModel {\n    constructor () {\n        this.showStatus = LectureNoteModel.ShowStatus.Edit;\n        this.noteStatus = LectureNoteModel.NoteStatus.Create;\n        this.time = 0;\n        this.note = '';\n    }\n}\n\nLectureNoteModel.ShowStatus = {\n    Edit: 'Edit',\n    Hide: 'Hide',\n};\nLectureNoteModel.NoteStatus = {\n    Create: 'Create',\n    Normal: 'Normal',\n};\n\nconst AddLectureNoteButtonStatus = {\n    Enable: 'enable',\n    Disable: 'disable',\n    Hidden: 'hidden',\n};\n\nexport default class LectureNote {\n\n    constructor (player) {\n        this.player = player;\n        this.lectureNoteList = [];\n        this.lectureNoteContainer = null;\n        this.addLectureNoteButtonStatus = AddLectureNoteButtonStatus.Hidden;\n        this.isLoadedLectureNote = false;\n\n        this.beforeAddLectureNotePlayerState = null;\n        this.beforeEditLectureNotePlayerState = null;\n    }\n\n    setup () {\n    }\n\n    clear () {\n        this.lectureNoteList = [];\n        this.lectureNoteContainer = null;\n        this.isLoadedLectureNote = false;\n        this.hiddenLectureNote();\n    }\n\n    enableLectureNote () {\n        this.addLectureNoteButtonStatus = AddLectureNoteButtonStatus.Enable;\n        this.updateAddLectureNoteButtonUI();\n    }\n\n    disableLectureNote () {\n        this.addLectureNoteButtonStatus = AddLectureNoteButtonStatus.Disable;\n        this.updateAddLectureNoteButtonUI();\n    }\n\n    hiddenLectureNote () {\n        this.addLectureNoteButtonStatus = AddLectureNoteButtonStatus.Hidden;\n        this.updateAddLectureNoteButtonUI();\n    }\n\n    updateAddLectureNoteButtonUI () {\n        const addLectureNoteButton = getElement.call(this.player, '.plyr__add-lecture-note');\n        switch (this.addLectureNoteButtonStatus) {\n            case AddLectureNoteButtonStatus.Enable:\n                toggleClass.call(this.player, addLectureNoteButton, 'disable', false);\n                toggleClass.call(this.player, addLectureNoteButton, 'hidden', false);\n                toggleClass.call(this.player, '.plyr__lecture-note-container', 'hidden', false);\n                break;\n            case AddLectureNoteButtonStatus.Disable:\n                toggleClass.call(this.player, addLectureNoteButton, 'disable', true);\n                toggleClass.call(this.player, addLectureNoteButton, 'hidden', false);\n                toggleClass.call(this.player, '.plyr__lecture-note-container', 'hidden', false);\n                break;\n            case AddLectureNoteButtonStatus.Hidden:\n                toggleClass.call(this.player, addLectureNoteButton, 'disable', true);\n                toggleClass.call(this.player, addLectureNoteButton, 'hidden', true);\n                toggleClass.call(this.player, '.plyr__lecture-note-container', 'hidden', true);\n                break;\n            default:\n                break;\n        }\n    }\n\n    setupUI () {\n        if (this.player.supported.ui) {\n            const lectureNoteContainer = this.getContainer();\n            for (let i = 0; i < this.lectureNoteList.length; i += 1) {\n                const note = this.lectureNoteList[i];\n                if (!this.isLectureNoteExists(note._id)) {\n                    const lectureNoteDOM = this.generateLectureNoteDOM(note);\n                    lectureNoteContainer.appendChild(lectureNoteDOM);\n                }\n            }\n        }\n    }\n\n    initLectureNote (lectureNotes) {\n        if (this.player.supported.ui) {\n            this.lectureNoteList = lectureNotes;\n            this.isLoadedLectureNote = true;\n            this.setupUI();\n            this.enableLectureNote();\n        }\n    }\n\n    addLectureNote () {\n        if (this.player.playing) {\n            this.beforeAddLectureNotePlayerState = 'playing';\n        } else {\n            this.beforeAddLectureNotePlayerState = 'pause';\n        }\n\n        this.player.pause();\n\n        const time = Math.round(this.player.currentTime);\n        const note = this.getSameTimeLectureNote(time);\n        if (note) {\n            const lectureNoteContainer = getElement.call(this.player, `.lecture-note[data-id=\"${  note._id  }\"]`);\n            if (lectureNoteContainer) {\n                const contentContianer = lectureNoteContainer.querySelector('.lecture-note__content-container');\n                if (contentContianer) {\n                    const clickEvent = new Event('click');\n                    contentContianer.dispatchEvent(clickEvent);\n                }\n            }\n\n        } else {\n            this.disableLectureNote();\n            triggerEvent.call(this.player, this.player.media, 'lecturenotecreate', true , {\n                lectureNote: {\n                    time,\n                },\n            });\n        }\n    }\n\n    completeAddLectureNote (lectureNote) {\n        this.enableLectureNote();\n        const newLectureNote = Object.assign({}, lectureNote, {\n            showStatus: LectureNoteModel.ShowStatus.Edit,\n        });\n        this.lectureNoteList.push(newLectureNote);\n        const lectureNoteDOM = this.generateLectureNoteDOM(newLectureNote);\n        const lectureNoteContainer = this.getContainer();\n        lectureNoteContainer.appendChild(lectureNoteDOM);\n    }\n\n    removeLectureNote (lectureNote) {\n        const lectureNoteContainer = getElement.call(this.player, `div[data-id=\"${lectureNote._id}\"]`);\n        if (lectureNoteContainer) {\n            lectureNoteContainer.parentElement.removeChild(lectureNoteContainer);\n            for (let i = 0; i < this.lectureNoteList.length; i += 1) {\n                if (this.lectureNoteList[i]._id === lectureNote._id) {\n                    this.lectureNoteList.splice(i, 1);\n                    return;\n                }\n            }\n        }\n    }\n\n    hasSameTimeLectureNote (time) {\n        for (let i = 0; i < this.lectureNoteList.length; i += 1) {\n            if (this.lectureNoteList[i].time === time) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    getSameTimeLectureNote (time) {\n        for (let i = 0; i < this.lectureNoteList.length; i += 1) {\n            if (this.lectureNoteList[i].time === time) {\n                return this.lectureNoteList[i];\n            }\n        }\n        return null;\n    }\n\n    /**\n     * @private\n     * @return {null|*}\n     */\n    getContainer () {\n        if (this.lectureNoteContainer && !this.lectureNoteContainer.parentElement) {\n            this.lectureNoteContainer = null;\n        }\n        if (this.lectureNoteContainer === null) {\n            this.lectureNoteContainer = createElement('div', {\n                'class': 'plyr__lecture-note-container',\n            });\n            const progresses = getElement.call(this.player, this.player.config.selectors.progress);\n            if (progresses) {\n                progresses.appendChild(this.lectureNoteContainer);\n            }\n        }\n        return this.lectureNoteContainer;\n    }\n\n    /**\n     * @private\n     * @param lectureNoteId\n     * @return {boolean}\n     */\n    isLectureNoteExists (lectureNoteId) {\n        return getElement.call(this.player, `.lecture-note[data-id=\"${lectureNoteId}\"]`) !== null;\n    }\n\n    /**\n     * @private\n     * @param lectureNote\n     */\n    generateLectureNoteDOM (lectureNote) {\n        const { duration } = this.player;\n        const percent = (lectureNote.time / duration) * 100 || 0;\n\n        let cancelTimeout = null;\n\n        const lectureNoteContainer = createElement('div', {\n            'data-id': lectureNote._id,\n            class: 'lecture-note',\n        });\n\n        /* lecture-note__mark */\n        const className = 'lecture-note__mark';\n        const mark = createElement('span', {\n            class: className,\n        });\n        lectureNoteContainer.appendChild(mark);\n\n        // 點擊 mark 跳到對應的播放時間\n        mark.addEventListener('click', (e) => {\n            this.player.currentTime = lectureNote.time;\n            e.preventDefault();\n            e.stopPropagation();\n        });\n        /* lecture-note__mark */\n\n        /* lecture-note__content-container */\n        const status = lectureNote.showStatus;\n        const contentContainer = createElement('div', {\n            class: `lecture-note__content-container ${status === LectureNoteModel.ShowStatus.Edit ? ' lecture-note__content-container--edit' : ''}`,\n        });\n        lectureNoteContainer.appendChild(contentContainer);\n        /* lecture-note__content-container */\n\n        /* lecture-note__content-textarea */\n        const contentTextarea = createElement('textarea', {\n            class: 'lecture-note__content-textarea',\n            placeholder: '新增筆記 (限 50 字)',\n            maxLength: 50,\n            rows: 1,\n        });\n        contentTextarea.value = lectureNote.note || '';\n        contentContainer.appendChild(contentTextarea);\n        /* lecture-note__content-textarea */\n\n        /* lecture-note__content-show-text */\n        const contentShowText = createElement('span', {\n            class: 'lecture-note__content-show-text',\n        });\n        contentShowText.innerHTML = lectureNote.note;\n        contentContainer.appendChild(contentShowText);\n        /* lecture-note__content-show-text */\n\n        /* lecture-note__trash-icon-wrapper */\n        const trashIconWrapper = createElement('span', {\n            class: 'lecture-note__trash-icon-wrapper',\n        });\n        const trashIcon = controls.createIcon.call(this.player, 'trash');\n        trashIconWrapper.appendChild(trashIcon);\n        contentContainer.appendChild(trashIconWrapper);\n        // 點擊垃圾桶 icon 刪除 lecturenote\n        trashIconWrapper.addEventListener('click', (e) => {\n            triggerEvent.call(this.player, this.player.media, 'lecturenotedelete', true ,{\n                lectureNote,\n            });\n            this.removeLectureNote(lectureNote);\n        });\n        /* lecture-note__trash-icon-wrapper */\n\n        // 點擊 container 開啟編輯模式\n        contentContainer.addEventListener('click', (e) => {\n            if (lectureNote.showStatus !== LectureNoteModel.ShowStatus.Edit) {\n                if (this.player.playing) {\n                    this.beforeEditLectureNotePlayerState = 'playing';\n                } else {\n                    this.beforeEditLectureNotePlayerState = 'pause';\n                }\n                this.player.pause();\n                toggleClass(contentContainer, 'lecture-note__content-container--edit', true);\n                lectureNote.showStatus = LectureNoteModel.ShowStatus.Edit;\n                contentTextarea.style.height = 'auto';\n                contentTextarea.style.height = `${contentTextarea.scrollHeight}px`;\n                contentTextarea.focus();\n            }\n        });\n\n\n        setTimeout(() => {\n            contentTextarea.focus();\n        }, 50);\n\n        contentTextarea.addEventListener('keyup', () => {\n            contentTextarea.style.height = 'auto';\n            contentTextarea.style.height = `${contentTextarea.scrollHeight}px`;\n        });\n\n        let isInComposition = false;\n        contentTextarea.addEventListener('compositionstart', (e) => {\n            isInComposition = true;\n        });\n\n        contentTextarea.addEventListener('compositionend', (e) => {\n            setTimeout(() => {\n                isInComposition = false;\n            }, 10);\n        });\n\n        contentTextarea.addEventListener('keydown', (e) => {\n            if (!isInComposition && e.key === 'Enter') {\n                lectureNote.note = contentTextarea.value;\n                contentShowText.innerHTML = lectureNote.note;\n                toggleClass(contentContainer, 'lecture-note__content-container--edit', false);\n                lectureNote.showStatus = LectureNoteModel.ShowStatus.Hide;\n                toggleClass(lectureNoteContainer, 'hover', true);\n                cancelTimeout = setTimeout(() => {\n                    toggleClass(lectureNoteContainer, 'hover', false);\n                }, 1000);\n                triggerEvent.call(this.player, this.player.media, 'lecturenoteupdate', true, {\n                    lectureNote,\n                });\n                console.group('keydown enter');\n                console.log(this.beforeAddLectureNotePlayerState, this.beforeEditLectureNotePlayerState);\n                console.groupEnd();\n                try{\n                    if (this.beforeAddLectureNotePlayerState) {\n                        if (this.beforeAddLectureNotePlayerState === 'playing') {\n                            this.player.play();\n                        }\n                        this.beforeAddLectureNotePlayerState = null;\n                    }\n                    if (this.beforeEditLectureNotePlayerState) {\n                        if (this.beforeEditLectureNotePlayerState === 'playing') {\n                            this.player.play();\n                        }\n                        this.beforeEditLectureNotePlayerState = null;\n                    }\n                } catch (e) {\n                    // ignore\n                }\n                e.preventDefault();\n            }\n            if (e.key === 'Escape') {\n                contentTextarea.value = lectureNote.note;\n                toggleClass(contentContainer, 'lecture-note__content-container--edit', false);\n                lectureNote.showStatus = LectureNoteModel.ShowStatus.Hide;\n            }\n        });\n\n        contentTextarea.addEventListener('blur', (e) => {\n            lectureNote.note = contentTextarea.value;\n            contentShowText.innerHTML = lectureNote.note;\n            toggleClass(contentContainer, 'lecture-note__content-container--edit', false);\n            lectureNote.showStatus = LectureNoteModel.ShowStatus.Hide;\n            toggleClass(lectureNoteContainer, 'hover', true);\n            cancelTimeout = setTimeout(() => {\n                toggleClass(lectureNoteContainer, 'hover', false);\n            }, 1000);\n            triggerEvent.call(this.player, this.player.media, 'lecturenoteupdate', true, {\n                lectureNote,\n            });\n            e.preventDefault();\n        });\n\n        mark.addEventListener('mouseenter', (e) => {\n            if (cancelTimeout) {\n                clearTimeout(cancelTimeout);\n                cancelTimeout = null;\n            }\n            toggleClass(contentContainer, 'lecture-note__content-container--show', true);\n            const container = this.getContainer();\n            const leftLimit = ((container.offsetWidth - 200) / container.offsetWidth) * 100 || 0;\n            if (percent > leftLimit) {\n                toggleClass(contentContainer, 'lecture-note__content-container--near-end', true);\n            } else {\n                toggleClass(contentContainer, 'lecture-note__content-container--near-end', false);\n            }\n            e.preventDefault();\n        });\n\n        mark.addEventListener('mouseleave', (e) => {\n            cancelTimeout = setTimeout(() => {\n                toggleClass(contentContainer, 'lecture-note__content-container--show', false);\n            }, 500);\n\n            e.preventDefault();\n        });\n\n        contentContainer.addEventListener('mouseenter', (e) => {\n            if (cancelTimeout) {\n                clearTimeout(cancelTimeout);\n                cancelTimeout = null;\n            }\n            toggleClass(contentContainer, 'lecture-note__content-container--show', true);\n            const container = this.getContainer();\n            const leftLimit = ((container.offsetWidth - 200) / container.offsetWidth) * 100 || 0;\n            if (percent > leftLimit) {\n                toggleClass(contentContainer, 'lecture-note__content-container--near-end', true);\n            } else {\n                toggleClass(contentContainer, 'lecture-note__content-container--near-end', false);\n            }\n            e.preventDefault();\n        });\n\n        contentContainer.addEventListener('mouseleave', (e) => {\n            cancelTimeout = setTimeout(() => {\n                toggleClass(contentContainer, 'lecture-note__content-container--show', false);\n            }, 500);\n\n            e.preventDefault();\n        });\n\n        lectureNoteContainer.style.left = `calc(${percent}%)`;\n        return lectureNoteContainer;\n    }\n}\n","// ==========================================================================\n// Plyr source update\n// ==========================================================================\n\nimport captions from './captions';\nimport { providers } from './config/types';\nimport controls from './controls';\nimport html5 from './html5';\nimport media from './media';\nimport support from './support';\nimport ui from './ui';\nimport { createElement, insertElement, removeElement, setAttributes } from './utils/elements';\nimport is from './utils/is';\nimport { getDeep } from './utils/objects';\n\nconst source = {\n    // Add elements to HTML5 media (source, tracks, etc)\n    insertElements(type, attributes) {\n        if (is.string(attributes)) {\n            insertElement(type, this.media, {\n                src: attributes,\n            });\n        } else if (is.array(attributes)) {\n            attributes.forEach(attribute => {\n                insertElement(type, this.media, attribute);\n            });\n        }\n    },\n\n    // Update source\n    // Sources are not checked for support so be careful\n    change(input) {\n        if (!getDeep(input, 'sources.length')) {\n            this.debug.warn('Invalid source format');\n            return;\n        }\n\n        // Cancel current network requests\n        html5.cancelRequests.call(this);\n\n        const tracks = Array.from(this.media.querySelectorAll('track'));\n        removeElement(tracks);\n        this.captions.currentTrack = -1;\n\n        // Destroy instance and re-setup\n        this.destroy.call(\n            this,\n            () => {\n                this.lectureNote.clear();\n                // Reset quality options\n                this.options.quality = [];\n\n                // Remove elements\n                removeElement(this.media);\n\n                // Reset class name\n                if (is.element(this.elements.container)) {\n                    this.elements.container.removeAttribute('class');\n                }\n\n                // retain old provider and type\n                const prevType = this.type;\n                const prevProvider = this.provider;\n\n                // Set the type and provider\n                const { sources, type } = input;\n                const [{ provider = providers.html5, src }] = sources;\n                const tagName = provider === 'html5' ? type : 'div';\n                const attributes = provider === 'html5' ? {} : { src };\n\n                Object.assign(this, {\n                    provider,\n                    type,\n                    // Check for support\n                    supported: support.check(type, provider, this.config.playsinline),\n                });\n\n                if (prevType === type && prevProvider === provider && provider === providers.html5) {\n                    /**\n                     * if provider is html5 and setting is same as prev source,\n                     * retain media element (because ios system has limited resource,\n                     * can't create many video resource)\n                     */\n                    setAttributes(this.media, attributes);\n                } else {\n                    this.media = null;\n                    this.media = createElement(tagName, attributes);\n                }\n\n                // Inject the new element\n                this.elements.container.appendChild(this.media);\n\n                // Autoplay the new source?\n                if (is.boolean(input.autoplay)) {\n                    this.config.autoplay = input.autoplay;\n                }\n\n                // Set attributes for audio and video\n                if (this.isHTML5) {\n                    if (this.config.crossorigin) {\n                        this.media.setAttribute('crossorigin', '');\n                    }\n                    if (this.config.autoplay) {\n                        this.media.setAttribute('autoplay', '');\n                    }\n                    if (!is.empty(input.poster)) {\n                        this.poster = input.poster;\n                    }\n                    if (this.config.loop.active) {\n                        this.media.setAttribute('loop', '');\n                    }\n                    if (this.config.muted) {\n                        this.media.setAttribute('muted', '');\n                    }\n                    if (this.config.playsinline) {\n                        this.media.setAttribute('playsinline', '');\n                    }\n                }\n\n                // Restore class hook\n                ui.addStyleHook.call(this);\n                ui.addStylehookToFullscreenContainer.call(this);\n\n                // Set new sources for html5\n                if (this.isHTML5) {\n                    source.insertElements.call(this, 'source', sources);\n                    this.media.setAttribute('src', sources[0].src);\n                }\n\n                // Set video title\n                this.config.title = input.title;\n\n                // Set up from scratch\n                media.setup.call(this);\n\n                // restore video quality\n                const quality = this.storage.get('quality');\n                if (is.number(quality)) {\n                    this.media.quality = quality;\n                }\n\n                let defaultCaption = null;\n                // HTML5 stuff\n                if (this.isHTML5) {\n                    // Setup captions\n                    if ('tracks' in input) {\n                        source.insertElements.call(this, 'track', input.tracks);\n                        const defaultTracks = input.tracks.filter(track => track.default);\n                        if (defaultTracks.length > 0 ){\n                            defaultCaption = defaultTracks[0].srclang;\n                        }\n                        captions.update.call(this);\n                    }\n\n                    // Load HTML5 sources\n                    this.media.load();\n                }\n\n                // If HTML5 or embed but not fully supported, setupInterface and call ready now\n                if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n                    // Setup interface\n                    ui.build.call(this);\n                }\n\n                // Update the fullscreen support\n                this.fullscreen.update();\n                captions.setDefault.call(this, defaultCaption);\n                const speed = this.storage.get('speed');\n                if (is.number(speed)) {\n                    this.speed = speed;\n                    controls.updateSetting.call(this, 'speed', speed);\n                }\n                this.lectureNote.setupUI();\n            },\n            true,\n        );\n    },\n};\n\nexport default source;\n","// ==========================================================================\n// Plyr\n// plyr.js v3.4.6\n// https://github.com/sampotts/plyr\n// License: The MIT License (MIT)\n// ==========================================================================\n\nimport captions from './captions';\nimport defaults from './config/defaults';\nimport { pip } from './config/states';\nimport { getProviderByUrl, providers, types } from './config/types';\nimport Console from './console';\nimport controls from './controls';\nimport Fullscreen from './fullscreen';\nimport hahow from './hahowCustomControl';\nimport Listeners from './listeners';\nimport logo from './logo';\nimport media from './media';\nimport Ads from './plugins/ads';\nimport LectureNote from './plugins/lectureNote';\nimport source from './source';\nimport Storage from './storage';\nimport support from './support';\nimport ui from './ui';\nimport { closest } from './utils/arrays';\nimport { createElement, hasClass, removeElement, replaceElement, toggleClass, wrap } from './utils/elements';\nimport { off, on, once, triggerEvent, unbindListeners } from './utils/events';\nimport is from './utils/is';\nimport loadSprite from './utils/loadSprite';\nimport { cloneDeep, extend } from './utils/objects';\nimport { parseUrl } from './utils/urls';\n\n// Private properties\n// TODO: Use a WeakMap for private globals\n// const globals = new WeakMap();\n\n// Plyr instance\nclass Plyr {\n    constructor(target, options) {\n        this.timers = {};\n\n        // State\n        this.ready = false;\n        this.loading = false;\n        this.failed = false;\n\n        // Touch device\n        this.touch = support.touch;\n\n        // Set the media element\n        this.media = target;\n\n        // String selector passed\n        if (is.string(this.media)) {\n            this.media = document.querySelectorAll(this.media);\n        }\n\n        // jQuery, NodeList or Array passed, use first element\n        if ((window.jQuery && this.media instanceof jQuery) || is.nodeList(this.media) || is.array(this.media)) {\n            // eslint-disable-next-line\n            this.media = this.media[0];\n        }\n\n        // Set config\n        this.config = extend(\n            {},\n            defaults,\n            Plyr.defaults,\n            options || {},\n            (() => {\n                try {\n                    return JSON.parse(this.media.getAttribute('data-plyr-config'));\n                } catch (e) {\n                    return {};\n                }\n            })(),\n        );\n\n        // Elements cache\n        this.elements = {\n            container: null,\n            captions: null,\n            buttons: {},\n            display: {},\n            progress: {},\n            inputs: {},\n            settings: {\n                popup: null,\n                menu: null,\n                panels: {},\n                buttons: {},\n            },\n        };\n\n        // Captions\n        this.captions = {\n            active: null,\n            currentTrack: -1,\n            meta: new WeakMap(),\n        };\n\n        // Fullscreen\n        this.fullscreen = {\n            active: false,\n        };\n\n        // Options\n        this.options = {\n            speed: [],\n            quality: [],\n        };\n\n        // Debugging\n        // TODO: move to globals\n        this.debug = new Console(this.config.debug);\n\n        // Log config options and support\n        this.debug.log('Config', this.config);\n        this.debug.log('Support', support);\n\n        // We need an element to setup\n        if (is.nullOrUndefined(this.media) || !is.element(this.media)) {\n            this.debug.error('Setup failed: no suitable element passed');\n            return;\n        }\n\n        // Bail if the element is initialized\n        if (this.media.plyr) {\n            this.debug.warn('Target already setup');\n            return;\n        }\n\n        // Bail if not enabled\n        if (!this.config.enabled) {\n            this.debug.error('Setup failed: disabled by config');\n            return;\n        }\n\n        // Bail if disabled or no basic support\n        // You may want to disable certain UAs etc\n        if (!support.check().api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        // Cache original element state for .destroy()\n        const clone = this.media.cloneNode(true);\n        clone.autoplay = false;\n        this.elements.original = clone;\n\n        // Set media type based on tag or data attribute\n        // Supported: video, audio, vimeo, youtube\n        const type = this.media.tagName.toLowerCase();\n\n        // Embed properties\n        let iframe = null;\n        let url = null;\n\n        // Different setup based on type\n        switch (type) {\n            case 'div':\n                // Find the frame\n                iframe = this.media.querySelector('iframe');\n\n                // <iframe> type\n                if (is.element(iframe)) {\n                    // Detect provider\n                    url = parseUrl(iframe.getAttribute('src'));\n                    this.provider = getProviderByUrl(url.toString());\n\n                    // Rework elements\n                    this.elements.container = this.media;\n                    this.media = iframe;\n\n                    // Reset classname\n                    this.elements.container.className = '';\n\n                    // Get attributes from URL and set config\n                    if (url.search.length) {\n                        const truthy = ['1', 'true'];\n\n                        if (truthy.includes(url.searchParams.get('autoplay'))) {\n                            this.config.autoplay = true;\n                        }\n                        if (truthy.includes(url.searchParams.get('loop'))) {\n                            this.config.loop.active = true;\n                        }\n\n                        // TODO: replace fullscreen.iosNative with this playsinline config option\n                        // YouTube requires the playsinline in the URL\n                        if (this.isYouTube) {\n                            this.config.playsinline = truthy.includes(url.searchParams.get('playsinline'));\n                            this.config.hl = url.searchParams.get('hl'); // TODO: Should this be setting language?\n                        } else {\n                            this.config.playsinline = true;\n                        }\n                    }\n                } else {\n                    // <div> with attributes\n                    this.provider = this.media.getAttribute(this.config.attributes.embed.provider);\n\n                    // Remove attribute\n                    this.media.removeAttribute(this.config.attributes.embed.provider);\n                }\n\n                // Unsupported or missing provider\n                if (is.empty(this.provider) || !Object.keys(providers).includes(this.provider)) {\n                    this.debug.error('Setup failed: Invalid provider');\n                    return;\n                }\n\n                // Audio will come later for external providers\n                this.type = types.video;\n\n                break;\n\n            case 'video':\n            case 'audio':\n                this.type = type;\n                this.provider = providers.html5;\n\n                // Get config from attributes\n                if (this.media.hasAttribute('crossorigin')) {\n                    this.config.crossorigin = true;\n                }\n                if (this.media.hasAttribute('autoplay')) {\n                    this.config.autoplay = true;\n                }\n                if (this.media.hasAttribute('playsinline') || this.media.hasAttribute('webkit-playsinline')) {\n                    this.config.playsinline = true;\n                }\n                if (this.media.hasAttribute('muted')) {\n                    this.config.muted = true;\n                }\n                if (this.media.hasAttribute('loop')) {\n                    this.config.loop.active = true;\n                }\n\n                break;\n\n            default:\n                this.debug.error('Setup failed: unsupported type');\n                return;\n        }\n\n        // Check for support again but with type\n        this.supported = support.check(this.type, this.provider, this.config.playsinline);\n\n        // If no support for even API, bail\n        if (!this.supported.api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        this.eventListeners = [];\n\n        // Create listeners\n        this.listeners = new Listeners(this);\n\n        // Setup local storage for user settings\n        this.storage = new Storage(this);\n\n        // Store reference\n        this.media.plyr = this;\n\n        // Wrap media\n        if (!is.element(this.elements.container)) {\n            this.elements.container = createElement('div');\n            wrap(this.media, this.elements.container);\n        }\n\n        // Add style hook\n        ui.addStyleHook.call(this);\n        ui.addStylehookToFullscreenContainer.call(this);\n\n        // Setup media\n        media.setup.call(this);\n\n        // Listen for events if debugging\n        if (this.config.debug) {\n            on.call(this, this.elements.container, this.config.events.join(' '), event => {\n                this.debug.log(`event: ${event.type}`);\n            });\n        }\n\n        // Setup interface\n        // If embed but not fully supported, build interface now to avoid flash of controls\n        if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n            ui.build.call(this);\n        }\n\n        logo.setup.call(this);\n\n        // Container listeners\n        this.listeners.container();\n\n        // Global listeners\n        this.listeners.global();\n\n        // Setup fullscreen\n        this.fullscreen = new Fullscreen(this);\n\n        // Setup ads if provided\n        if (this.config.ads.enabled) {\n            this.ads = new Ads(this);\n        }\n\n        this.lectureNote = new LectureNote(this);\n\n        // Autoplay if required\n        if (this.config.autoplay) {\n            this.play();\n        }\n\n        // Seek time will be recorded (in listeners.js) so we can prevent hiding controls for a few seconds after seek\n        this.lastSeekTime = 0;\n    }\n\n    // ---------------------------------------\n    // API\n    // ---------------------------------------\n\n    /**\n     * Types and provider helpers\n     */\n    get isHTML5() {\n        return Boolean(this.provider === providers.html5);\n    }\n\n    get isEmbed() {\n        return Boolean(this.isYouTube || this.isVimeo);\n    }\n\n    get isYouTube() {\n        return Boolean(this.provider === providers.youtube);\n    }\n\n    get isVimeo() {\n        return Boolean(this.provider === providers.vimeo);\n    }\n\n    get isVideo() {\n        return Boolean(this.type === types.video);\n    }\n\n    get isAudio() {\n        return Boolean(this.type === types.audio);\n    }\n\n    /**\n     * Play the media, or play the advertisement (if they are not blocked)\n     */\n    play() {\n        if (!is.function(this.media.play)) {\n            return null;\n        }\n\n        // Return the promise (for HTML5)\n        return this.media.play();\n    }\n\n    /**\n     * Pause the media\n     */\n    pause() {\n        if (!this.playing || !is.function(this.media.pause)) {\n            return;\n        }\n\n        this.media.pause();\n    }\n\n    /**\n     * Get playing state\n     */\n    get playing() {\n        return Boolean(this.ready && !this.paused && !this.ended);\n    }\n\n    /**\n     * Get paused state\n     */\n    get paused() {\n        return Boolean(this.media.paused);\n    }\n\n    /**\n     * Get stopped state\n     */\n    get stopped() {\n        return Boolean(this.paused && this.currentTime === 0);\n    }\n\n    /**\n     * Get ended state\n     */\n    get ended() {\n        return Boolean(this.media.ended);\n    }\n\n    /**\n     * Toggle playback based on current status\n     * @param {boolean} input\n     */\n    togglePlay(input) {\n        // Toggle based on current state if nothing passed\n        const toggle = is.boolean(input) ? input : !this.playing;\n\n        if (toggle) {\n            this.play();\n        } else {\n            this.pause();\n        }\n    }\n\n    /**\n     * Stop playback\n     */\n    stop() {\n        if (this.isHTML5) {\n            this.pause();\n            this.restart();\n        } else if (is.function(this.media.stop)) {\n            this.media.stop();\n        }\n    }\n\n    /**\n     * Restart playback\n     */\n    restart() {\n        this.currentTime = 0;\n    }\n\n    /**\n     * Rewind\n     * @param {number} seekTime - how far to rewind in seconds. Defaults to the config.seekTime\n     */\n    rewind(seekTime) {\n        this.currentTime = this.currentTime - (is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Fast forward\n     * @param {number} seekTime - how far to fast forward in seconds. Defaults to the config.seekTime\n     */\n    forward(seekTime) {\n        this.currentTime = this.currentTime + (is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Seek to a time\n     * @param {number} input - where to seek to in seconds. Defaults to 0 (the start)\n     */\n    set currentTime(input) {\n        // Bail if media duration isn't available yet\n        if (!this.duration) {\n            return;\n        }\n\n        // Validate input\n        const inputIsValid = is.number(input) && input > 0;\n\n        // Set\n        this.media.currentTime = inputIsValid ? Math.min(input, this.duration) : 0;\n\n        // Logging\n        this.debug.log(`Seeking to ${this.currentTime} seconds`);\n    }\n\n    /**\n     * Get current time\n     */\n    get currentTime() {\n        return Number(this.media.currentTime);\n    }\n\n    /**\n     * Get buffered\n     */\n    get buffered() {\n        const { buffered } = this.media;\n\n        // YouTube / Vimeo return a float between 0-1\n        if (is.number(buffered)) {\n            return buffered;\n        }\n\n        // HTML5\n        // TODO: Handle buffered chunks of the media\n        // (i.e. seek to another section buffers only that section)\n        if (buffered && buffered.length && this.duration > 0) {\n            return buffered.end(0) / this.duration;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Get seeking status\n     */\n    get seeking() {\n        return Boolean(this.media.seeking);\n    }\n\n    /**\n     * Get the duration of the current media\n     */\n    get duration() {\n        // Faux duration set via config\n        const fauxDuration = parseFloat(this.config.duration);\n\n        // Media duration can be NaN or Infinity before the media has loaded\n        const realDuration = (this.media || {}).duration;\n        const duration = !is.number(realDuration) || realDuration === Infinity ? 0 : realDuration;\n\n        // If config duration is funky, use regular duration\n        return fauxDuration || duration;\n    }\n\n    /**\n     * Set the player volume\n     * @param {number} value - must be between 0 and 1. Defaults to the value from local storage and config.volume if not set in storage\n     */\n    set volume(value) {\n        let volume = value;\n        const max = 1;\n        const min = 0;\n\n        if (is.string(volume)) {\n            volume = Number(volume);\n        }\n\n        // Load volume from storage if no value specified\n        if (!is.number(volume)) {\n            volume = this.storage.get('volume');\n        }\n\n        // Use config if all else fails\n        if (!is.number(volume)) {\n            ({ volume } = this.config);\n        }\n\n        // Maximum is volumeMax\n        if (volume > max) {\n            volume = max;\n        }\n        // Minimum is volumeMin\n        if (volume < min) {\n            volume = min;\n        }\n\n        // Update config\n        this.config.volume = volume;\n\n        // Set the player volume\n        this.media.volume = volume;\n\n        // If muted, and we're increasing volume manually, reset muted state\n        if (!is.empty(value) && this.muted && volume > 0) {\n            this.muted = false;\n        }\n    }\n\n    /**\n     * Get the current player volume\n     */\n    get volume() {\n        return Number(this.media.volume);\n    }\n\n    /**\n     * Increase volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    increaseVolume(step) {\n        const volume = this.media.muted ? 0 : this.volume;\n        this.volume = volume + (is.number(step) ? step : 0);\n    }\n\n    /**\n     * Decrease volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    decreaseVolume(step) {\n        this.increaseVolume(-step);\n    }\n\n    set fullscreenContainer (container) {\n        if (is.element(container)) {\n            this.config.fullscreenContainer = container;\n            ui.addStylehookToFullscreenContainer.call(this);\n        }\n    }\n\n    /**\n     * Set muted state\n     * @param {boolean} mute\n     */\n    set muted(mute) {\n        let toggle = mute;\n\n        // Load muted state from storage\n        if (!is.boolean(toggle)) {\n            toggle = this.storage.get('muted');\n        }\n\n        // Use config if all else fails\n        if (!is.boolean(toggle)) {\n            toggle = this.config.muted;\n        }\n\n        // Update config\n        this.config.muted = toggle;\n\n        // Set mute on the player\n        this.media.muted = toggle;\n    }\n\n    /**\n     * Get current muted state\n     */\n    get muted() {\n        return Boolean(this.media.muted);\n    }\n\n    /**\n     * Check if the media has audio\n     */\n    get hasAudio() {\n        // Assume yes for all non HTML5 (as we can't tell...)\n        if (!this.isHTML5) {\n            return true;\n        }\n\n        if (this.isAudio) {\n            return true;\n        }\n\n        // Get audio tracks\n        return (\n            Boolean(this.media.mozHasAudio) ||\n            Boolean(this.media.webkitAudioDecodedByteCount) ||\n            Boolean(this.media.audioTracks && this.media.audioTracks.length)\n        );\n    }\n\n    /**\n     * Set playback speed\n     * @param {number} speed - the speed of playback (0.5-2.0)\n     */\n    set speed(input) {\n        let speed = null;\n\n        if (is.number(input)) {\n            speed = input;\n        }\n\n        if (!is.number(speed)) {\n            speed = this.storage.get('speed');\n        }\n\n        if (!is.number(speed)) {\n            speed = this.config.speed.selected;\n        }\n\n        // Set min/max\n        if (speed < 0.1) {\n            speed = 0.1;\n        }\n        if (speed > 2.0) {\n            speed = 2.0;\n        }\n\n        if (!this.config.speed.options.includes(speed)) {\n            this.debug.warn(`Unsupported speed (${speed})`);\n            return;\n        }\n\n        // Update config\n        this.config.speed.selected = speed;\n\n        // Set media speed\n        this.media.playbackRate = speed;\n    }\n\n    /**\n     * Get current playback speed\n     */\n    get speed() {\n        return Number(this.media.playbackRate);\n    }\n\n    /**\n     * Set playback quality\n     * Currently HTML5 & YouTube only\n     * @param {number} input - Quality level\n     */\n    set quality(input) {\n        const config = this.config.quality;\n        const options = this.options.quality;\n\n        if (!options.length) {\n            return;\n        }\n\n        let quality = [\n            !is.empty(input) && Number(input),\n            this.storage.get('quality'),\n            config.selected,\n            config.default,\n        ].find(is.number);\n\n        if (!options.includes(quality)) {\n            const value = closest(options, quality);\n            this.debug.warn(`Unsupported quality option: ${quality}, using ${value} instead`);\n            quality = value;\n        }\n\n        // Update config\n        config.selected = quality;\n\n        // Set quality\n        this.media.quality = quality;\n\n        // Save to storage\n        this.storage.set({ quality });\n    }\n\n    /**\n     * Get current quality level\n     */\n    get quality() {\n        return this.media.quality;\n    }\n\n    /**\n     * Toggle loop\n     * TODO: Finish fancy new logic. Set the indicator on load as user may pass loop as config\n     * @param {boolean} input - Whether to loop or not\n     */\n    set loop(input) {\n        const toggle = is.boolean(input) ? input : this.config.loop.active;\n        this.config.loop.active = toggle;\n        this.media.loop = toggle;\n\n        // Set default to be a true toggle\n        /* const type = ['start', 'end', 'all', 'none', 'toggle'].includes(input) ? input : 'toggle';\n\n        switch (type) {\n            case 'start':\n                if (this.config.loop.end && this.config.loop.end <= this.currentTime) {\n                    this.config.loop.end = null;\n                }\n                this.config.loop.start = this.currentTime;\n                // this.config.loop.indicator.start = this.elements.display.played.value;\n                break;\n\n            case 'end':\n                if (this.config.loop.start >= this.currentTime) {\n                    return this;\n                }\n                this.config.loop.end = this.currentTime;\n                // this.config.loop.indicator.end = this.elements.display.played.value;\n                break;\n\n            case 'all':\n                this.config.loop.start = 0;\n                this.config.loop.end = this.duration - 2;\n                this.config.loop.indicator.start = 0;\n                this.config.loop.indicator.end = 100;\n                break;\n\n            case 'toggle':\n                if (this.config.loop.active) {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = null;\n                } else {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = this.duration - 2;\n                }\n                break;\n\n            default:\n                this.config.loop.start = 0;\n                this.config.loop.end = null;\n                break;\n        } */\n    }\n\n    /**\n     * Get current loop state\n     */\n    get loop() {\n        return Boolean(this.media.loop);\n    }\n\n    /**\n     * Set new media source\n     * @param {object} input - The new source object (see docs)\n     */\n    set source(input) {\n        source.change.call(this, input);\n    }\n\n    /**\n     * Get current source\n     */\n    get source() {\n        return this.media.currentSrc;\n    }\n\n    /**\n     * Get a download URL (either source or custom)\n     */\n    get download() {\n        const { download } = this.config.urls;\n\n        return is.url(download) ? download : this.source;\n    }\n\n    /**\n     * Set the poster image for a video\n     * @param {input} - the URL for the new poster image\n     */\n    set poster(input) {\n        if (!this.isVideo) {\n            this.debug.warn('Poster can only be set for video');\n            return;\n        }\n\n        ui.setPoster.call(this, input, false).catch(() => {});\n    }\n\n    /**\n     * Get the current poster image\n     */\n    get poster() {\n        if (!this.isVideo) {\n            return null;\n        }\n\n        return this.media.getAttribute('poster');\n    }\n\n    /**\n     * Set the autoplay state\n     * @param {boolean} input - Whether to autoplay or not\n     */\n    set autoplay(input) {\n        const toggle = is.boolean(input) ? input : this.config.autoplay;\n        this.config.autoplay = toggle;\n    }\n\n    /**\n     * Get the current autoplay state\n     */\n    get autoplay() {\n        return Boolean(this.config.autoplay);\n    }\n\n    /**\n     * Toggle captions\n     * @param {boolean} input - Whether to enable captions\n     */\n    toggleCaptions(input) {\n        captions.toggle.call(this, input, false);\n    }\n\n    /**\n     * Set the caption track by index\n     * @param {number} - Caption index\n     */\n    set currentTrack(input) {\n        captions.set.call(this, input, false);\n    }\n\n    /**\n     * Get the current caption track index (-1 if disabled)\n     */\n    get currentTrack() {\n        const { toggled, currentTrack } = this.captions;\n        return toggled ? currentTrack : -1;\n    }\n\n    set captionPosition(input) {\n        this.captions.position = input;\n        this.storage.set({\n            captionPosition: input,\n        });\n        captions.setPosition.call(this, this.captions.position);\n    }\n\n    get captionPosition() {\n        return this.storage.get('captionPosition') || this.config.captions.position;\n    }\n\n    /**\n     * Set the wanted language for captions\n     * Since tracks can be added later it won't update the actual caption track until there is a matching track\n     * @param {string} - Two character ISO language code (e.g. EN, FR, PT, etc)\n     */\n    set language(input) {\n        captions.setLanguage.call(this, input, false);\n    }\n\n    /**\n     * Get the current track's language\n     */\n    get language() {\n        return (captions.getCurrentTrack.call(this) || {}).language;\n    }\n\n    /**\n     * Toggle picture-in-picture playback on WebKit/MacOS\n     * TODO: update player with state, support, enabled\n     * TODO: detect outside changes\n     */\n    set pip(input) {\n        // Bail if no support\n        if (!support.pip) {\n            return;\n        }\n\n        // Toggle based on current state if not passed\n        const toggle = is.boolean(input) ? input : !this.pip;\n\n        // Toggle based on current state\n        // Safari\n        if (is.function(this.media.webkitSetPresentationMode)) {\n            this.media.webkitSetPresentationMode(toggle ? pip.active : pip.inactive);\n        }\n\n        // Chrome\n        if (is.function(this.media.requestPictureInPicture)) {\n            if (!this.pip && toggle) {\n                this.media.requestPictureInPicture();\n            } else if (this.pip && !toggle) {\n                document.exitPictureInPicture();\n            }\n        }\n    }\n\n    /**\n     * Get the current picture-in-picture state\n     */\n    get pip() {\n        if (!support.pip) {\n            return null;\n        }\n\n        // Safari\n        if (!is.empty(this.media.webkitPresentationMode)) {\n            return this.media.webkitPresentationMode === pip.active;\n        }\n\n        // Chrome\n        return this.media === document.pictureInPictureElement;\n    }\n\n    /**\n     * Trigger the airplay dialog\n     * TODO: update player with state, support, enabled\n     */\n    airplay() {\n        // Show dialog if supported\n        if (support.airplay) {\n            this.media.webkitShowPlaybackTargetPicker();\n        }\n    }\n\n    /**\n     * Toggle the player controls\n     * @param {boolean} [toggle] - Whether to show the controls\n     */\n    toggleControls(toggle) {\n        // Don't toggle if missing UI support or if it's audio\n        if (this.supported.ui && !this.isAudio) {\n            // Get state before change\n            const isHidden = hasClass(this.elements.container, this.config.classNames.hideControls);\n\n            // Negate the argument if not undefined since adding the class to hides the controls\n            const force = typeof toggle === 'undefined' ? undefined : !toggle;\n\n            // Apply and get updated state\n            const hiding = toggleClass(this.elements.container, this.config.classNames.hideControls, force);\n\n            // Close menu\n            if (hiding && this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\n                controls.toggleMenu.call(this, false);\n            }\n\n            // Trigger event on change\n            if (hiding !== isHidden) {\n                const eventName = hiding ? 'controlshidden' : 'controlsshown';\n                triggerEvent.call(this, this.media, eventName);\n            }\n\n            return !hiding;\n        }\n\n        return false;\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    on(event, callback) {\n        on.call(this, this.elements.container, event, callback);\n    }\n\n    /**\n     * Add event listeners once\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    once(event, callback) {\n        once.call(this, this.elements.container, event, callback);\n    }\n\n    /**\n     * Remove event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    off(event, callback) {\n        off(this.elements.container, event, callback);\n    }\n\n    /**\n     * Destroy an instance\n     * Event listeners are removed when elements are removed\n     * http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\n     * @param {function} callback - Callback for when destroy is complete\n     * @param {boolean} soft - Whether it's a soft destroy (for source changes etc)\n     */\n    destroy(callback, soft = false) {\n        if (!this.ready) {\n            return;\n        }\n\n        const done = () => {\n            // Reset overflow (incase destroyed while in fullscreen)\n            document.body.style.overflow = '';\n\n            // GC for embed\n            this.embed = null;\n\n            // If it's a soft destroy, make minimal changes\n            if (soft) {\n                if (Object.keys(this.elements).length) {\n                    // Remove elements\n                    removeElement(this.elements.buttons.play);\n                    removeElement(this.elements.captions);\n                    removeElement(this.elements.controls);\n                    removeElement(this.elements.wrapper);\n\n                    // Clear for GC\n                    this.elements.buttons.play = null;\n                    this.elements.captions = null;\n                    this.elements.controls = null;\n                    this.elements.wrapper = null;\n                }\n\n                // Callback\n                if (is.function(callback)) {\n                    callback();\n                }\n            } else {\n                // Unbind listeners\n                unbindListeners.call(this);\n\n                // Replace the container with the original element provided\n                replaceElement(this.elements.original, this.elements.container);\n\n                // Event\n                triggerEvent.call(this, this.elements.original, 'destroyed', true);\n\n                // Callback\n                if (is.function(callback)) {\n                    callback.call(this.elements.original);\n                }\n\n                // Reset state\n                this.ready = false;\n\n                // Clear for garbage collection\n                setTimeout(() => {\n                    this.elements = null;\n                    this.media = null;\n                }, 200);\n            }\n        };\n\n        // Stop playback\n        this.stop();\n\n        // Provider specific stuff\n        if (this.isHTML5) {\n            // Clear timeout\n            clearTimeout(this.timers.loading);\n\n            // Restore native video controls\n            ui.toggleNativeControls.call(this, true);\n\n            // Clean up\n            done();\n        } else if (this.isYouTube) {\n            // Clear timers\n            clearInterval(this.timers.buffering);\n            clearInterval(this.timers.playing);\n\n            // Destroy YouTube API\n            if (this.embed !== null && is.function(this.embed.destroy)) {\n                this.embed.destroy();\n            }\n\n            // Clean up\n            done();\n        } else if (this.isVimeo) {\n            // Destroy Vimeo API\n            // then clean up (wait, to prevent postmessage errors)\n            if (this.embed !== null) {\n                this.embed.unload().then(done);\n            }\n\n            // Vimeo does not always return\n            setTimeout(done, 200);\n        }\n    }\n\n    /**\n     * Check for support for a mime type (HTML5 only)\n     * @param {string} type - Mime type\n     */\n    supports(type) {\n        return support.mime.call(this, type);\n    }\n\n    /**\n     * Check for support\n     * @param {string} type - Player type (audio/video)\n     * @param {string} provider - Provider (html5/youtube/vimeo)\n     * @param {bool} inline - Where player has `playsinline` sttribute\n     */\n    static supported(type, provider, inline) {\n        return support.check(type, provider, inline);\n    }\n\n    /**\n     * Load an SVG sprite into the page\n     * @param {string} url - URL for the SVG sprite\n     * @param {string} [id] - Unique ID\n     */\n    static loadSprite(url, id) {\n        return loadSprite(url, id);\n    }\n\n    /**\n     * Setup multiple instances\n     * @param {*} selector\n     * @param {object} options\n     */\n    static setup(selector, options = {}) {\n        let targets = null;\n\n        if (is.string(selector)) {\n            targets = Array.from(document.querySelectorAll(selector));\n        } else if (is.nodeList(selector)) {\n            targets = Array.from(selector);\n        } else if (is.array(selector)) {\n            targets = selector.filter(is.element);\n        }\n\n        if (is.empty(targets)) {\n            return null;\n        }\n\n        return targets.map(t => new Plyr(t, options));\n    }\n}\n\nPlyr.defaults = cloneDeep(defaults);\nPlyr.hahow = hahow;\nexport default Plyr;\n"]}