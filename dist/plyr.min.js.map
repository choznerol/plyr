{"version":3,"sources":["src/js/utils/is.js","src/js/utils/events.js","src/js/utils/elements.js","src/js/utils/animation.js","src/js/utils/browser.js","src/js/support.js","src/js/html5.js","src/js/utils/objects.js","src/js/utils/strings.js","src/js/i18n.js","src/js/utils/arrays.js","src/js/storage.js","src/js/utils/fetch.js","src/js/utils/loadSprite.js","src/js/utils/time.js","src/js/controls.js","src/js/utils/urls.js","src/js/captions.js","src/js/config/defaults.js","src/js/config/types.js","src/js/console.js","src/js/fullscreen.js","src/js/hahowCustomControl.js","src/js/utils/loadImage.js","src/js/ui.js","src/js/listeners.js","src/js/logo.js","node_modules/loadjs/dist/loadjs.umd.js","src/js/utils/loadScript.js","src/js/plugins/vimeo.js","src/js/plugins/youtube.js","src/js/media.js","src/js/plugins/ads.js","src/js/plugins/lectureNote.js","src/js/source.js","src/js/plyr.js"],"names":["getConstructor","input","constructor","instanceOf","Boolean","isNullOrUndefined","isObject","Object","isString","String","isArray","Array","isNodeList","NodeList","isEmpty","length","keys","is","nullOrUndefined","object","number","Number","isNaN","string","boolean","function","Function","array","weakMap","WeakMap","nodeList","element","Element","textNode","Text","event","Event","cue","window","TextTrackCue","VTTCue","track","TextTrack","kind","url","URL","startsWith","hostname","e","empty","supportsPassiveListeners","supported","options","defineProperty","get","addEventListener","removeEventListener","toggleListener","callback","toggle","arguments","undefined","_this","this","passive","capture","events","split","forEach","type","eventListeners","push","on","call","off","once","onceCallback","_len","args","_key","apply","triggerEvent","bubbles","detail","CustomEvent","assign","plyr","dispatchEvent","err","Error","JSON","stringify","wrap","elements","wrapper","targets","from","reverse","index","child","cloneNode","parent","parentNode","sibling","nextSibling","appendChild","insertBefore","setAttributes","attributes","entries","filter","_ref","value","slicedToArray","_ref3","_ref4","key","setAttribute","createElement","text","document","innerText","insertElement","removeElement","removeChild","emptyElement","childNodes","lastChild","replaceElement","newChild","oldChild","replaceChild","getAttributesFromSelector","sel","existingAttributes","existing","s","selector","trim","className","replace","parts","charAt","class","id","toggleHidden","hidden","hide","hasAttribute","removeAttribute","toggleClass","force","method","classList","contains","hasClass","matches","prototype","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","querySelectorAll","includes","getElements","container","getElement","querySelector","getFocusElement","focused","activeElement","body","transitionEndEvent","WebkitTransition","MozTransition","OTransition","transition","find","style","range","browser","isIE","documentMode","isWebkit","documentElement","test","navigator","userAgent","isIPhone","platform","isIos","isEdge","defaultCodecs","audio/ogg","audio/wav","video/webm","video/mp4","video/ogg","support","audio","video","check","provider","playsinline","canPlayInline","api","ui","rangeInput","pip","webkitSetPresentationMode","airplay","WebKitPlaybackTargetAvailabilityEvent","mime","inputType","_inputType$split","mediaType","isHTML5","media","canPlayType","textTracks","touch","transitions","reducedMotion","matchMedia","html5","getSources","source","getAttribute","getQualityOptions","map","extend","player","configurable","set","_player$media","currentTime","paused","preload","readyState","pause","setImmediate","src","play","load","speed","storage","controls","updateSetting","quality","cancelRequests","sources","config","blankVideo","debug","log","getDeep","path","reduce","obj","target","shift","concat","format","toString","match","i","replaceAll","RegExp","toTitleCase","toUpperCase","substr","toLowerCase","toCamelCase","toPascalCase","slice","getHTML","innerHTML","i18n","{seektime}","seekTime","{title}","title","_ref2","dedupe","item","indexOf","Storage","classCallCheck","enabled","store","localStorage","getItem","json","parse","setItem","removeItem","fetch","responseType","Promise","resolve","reject","request","XMLHttpRequest","responseText","response","status","open","send","loadSprite","hasId","exists","getElementById","update","data","insertAdjacentElement","useStorage","cached","prefix","content","then","result","catch","getHours","parseInt","getMinutes","getSeconds","formatTime","time","displayHours","inverted","hours","mins","secs","getIconUrl","cors","iconUrl","location","host","svg4everybody","findElements","selectors","buttons","restart","rewind","fastForward","mute","settings","captions","fullscreen","progress","inputs","seek","volume","display","buffer","duration","seekTooltip","classNames","tooltip","error","warn","toggleNativeControls","createIcon","iconPath","iconPrefix","icon","createElementNS","role","focusable","use","setAttributeNS","createLabel","attr","join","createBadge","badge","menu","createButton","buttonType","button","label","labelPressed","iconPressed","control","controlPressed","enumerable","pressed","createRange","min","max","step","autocomplete","aria-label","aria-valuemin","aria-valuemax","aria-valuenow","updateRangeFill","createProgress","aria-hidden","suffixKey","played","suffix","createTime","createMenuItem","list","_ref$badge","_ref$checked","checked","radio","name","faux","insertAdjacentHTML","updateTimeDisplay","updateVolume","setRange","muted","updateProgress","current","toFixed","getElementsByTagName","nodeValue","setProgress","buffered","percent","setProperty","updateSeekTooltip","_this2","tooltips","clientRect","getBoundingClientRect","visible","_toggle","width","pageX","left","parseFloat","timeUpdate","invert","invertTime","seeking","durationUpdate","Math","pow","hasDuration","displayDuration","toggleTab","setting","tabs","setQualityMenu","_this3","panes","checkMenu","sort","a","b","sorting","getLabel","getBadge","pane","currentTrack","captionPosition","default","setCaptionsMenu","_this4","tracks","getTracks","toggled","language","unshift","bind","setCaptionsPositionMenu","_this5","position","setSpeedMenu","_this6","isVimeo","values","some","tab","toggleMenu","form","show","isMenuItem","isButton","stopPropagation","getTabSize","clone","opacity","scrollWidth","height","scrollHeight","showTab","_this7","size","restore","propertyName","focus","create","_this8","aria-haspopup","aria-controls","aria-expanded","aria-labelled-by","tabindex","inner","home","back","inject","_this9","floor","random","props","seektime","setTimeout","offsetHeight","_config","labels","parseUrl","parser","href","buildUrlParams","params","URLSearchParams","setup","isVideo","isYouTube","protocol","blob","createObjectURL","languages","userLanguage","active","setPosition","trackEvents","_captions","meta","currentTrackNode","languageExists","mode","updateCues","setLanguage","customMenu","caption","activeClass","findTrack","toConsumableArray","embed","enableTextTrack","has","sortIsDefault","sorted","every","getCurrentTrack","cues","activeCues","getCueAsHTML","cueText","setDefault","defaultLanguage","captionsActive","captionsLanguage","findLanguageList","defaults","autoplay","autopause","toggleInvert","ratio","clickToPlay","hideControls","resetOnEnd","disableContextMenu","logo","link","fullscreenContainer","loop","selected","keyboard","global","fallback","iosNative","seekLabel","unmute","enableCaptions","disableCaptions","enterFullscreen","exitFullscreen","enterZoom","exitZoom","frameTitle","noCaptions","caption-position","captionPositionLabel","top","bottom","menuBack","normal","start","end","all","reset","disabled","advertisement","qualityBadge","2160","1440","1080","720","576","480","urls","vimeo","sdk","iframe","youtube","googleIMA","listeners","editable","layer","topLayer","bottomLayer","right","zoom","embedContainer","poster","posterEnabled","ads","playing","stopped","loading","hover","isTouch","uiSupported","noTransition","tabFocus","outerContainer","google","publisherId","providers","types","noop","Console","console","onChange","isZoom","zoomActive","isIosNative","isOutterContainerSet","first","last","keyCode","shiftKey","preventDefault","toggleFallback","scrollPosition","x","scrollX","y","scrollY","scrollTo","overflow","Fullscreen","property","native","toggleZoom","webkitEnterFullscreen","requestFullscreen","webkitExitFullscreen","action","cancelFullScreen","exit","enter","fullscreenElement","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","pre","hahow","createControls","bottomLeft","bottomRight","addLecturneNoteBtn","lectureNote","addLectureNote","loadImage","minWidth","image","Image","handler","onload","onerror","naturalWidth","addStyleHook","addStylehookToFullscreenContainer","build","ready","checkPlaying","setTitle","setPoster","isEmbed","togglePoster","enable","backgroundImage","backgroundSize","toggleControls","checkLoading","clearTimeout","timers","Listeners","lastKey","handleKey","firstTouch","code","which","repeat","altKey","ctrlKey","metaKey","togglePlay","increaseVolume","decreaseVolume","forward","toggleCaptions","isLoadedLectureNote","addLectureNoteButtonStatus","delay","isAlreadyRegisterEventListener","hasAudio","initialized","managerPromise","proxyEvents","_event$detail","isAudio","ended","inputEvent","proxy","defaultHandler","customHandlerKey","customHandler","returned","hasCustomHandler","currentTarget","eventType","done","seekTo","_player","webkitDirectionInvertedFromDevice","_map","deltaX","deltaY","_map2","direction","sign","abs","logoContainer","imageContainer","linkElement","logoElement","factory","devnull","bundleIdCache","bundleResultCache","bundleCallbackQueue","publish","bundleId","pathsNotFound","q","splice","executeCallbacks","depsNotFound","success","loadFile","callbackFn","numTries","isCss","doc","async","maxTries","numRetries","beforeCallbackFn","before","pathStripped","rel","onbeforeload","ev","sheet","cssText","defaultPrevented","head","loadjs","paths","arg1","arg2","fn","numWaiting","loadFiles","deps","bundleIds","r","subscribe","isDefined","module","exports","loadScript","assurePlaybackState","hasPlayed","setAspectRatio","Vimeo","_split","_split2","padding","paddingBottom","offset","transform","byline","portrait","transparent","gesture","$2","thumbnail_large","pathname","Player","disableTextTrack","stop","restorePause","setVolume","setCurrentTime","setPlaybackRate","setLoop","currentSrc","getVideoUrl","getVideoWidth","getVideoHeight","dimensions","getRatio","w","h","getAspectRatio","setAutopause","state","getVideoTitle","getCurrentTime","getDuration","getTextTracks","_ref$cues","strippedCues","fragment","createDocumentFragment","firstChild","getPaused","seconds","mapQualityUnit","entry","hd2160","hd1440","hd1080","hd720","large","medium","small","tiny","YT","onYouTubeReadyCallbacks","onYouTubeIframeAPIReady","getTitle","videoId","getVideoData","items","snippet","currentId","posterSrc","format$$1","playerVars","hl","showinfo","iv_load_policy","modestbranding","disablekb","widget_referrer","cc_load_policy","cc_lang_pref","onError","message","2","5","100","101","150","onPlaybackQualityChange","onPlaybackRateChange","instance","playbackRate","getPlaybackRate","onReady","playVideo","pauseVideo","stopVideo","getPlaybackQuality","setPlaybackQuality","getAvailablePlaybackRates","clearInterval","buffering","setInterval","getVideoLoadedFraction","lastBuffered","onStateChange","levels","getAvailableQualityLevels","level","unMute","Ads","displayContainer","manager","loader","cuePoints","safetyTimer","countdownTimer","ima","trigger","startSafetyTimer","clearSafetyTimer","setupIMA","setVpaidMode","ImaSdkSettings","VpaidMode","ENABLED","setLocale","AdDisplayContainer","requestAds","AdsLoader","AdsManagerLoadedEvent","Type","ADS_MANAGER_LOADED","onAdsManagerLoaded","AdErrorEvent","AD_ERROR","onAdError","AdsRequest","adTagUrl","tagUrl","linearAdSlotWidth","offsetWidth","linearAdSlotHeight","nonLinearAdSlotWidth","nonLinearAdSlotHeight","forceNonLinearFullSlot","setAdWillPlayMuted","getRemainingTime","AdsRenderingSettings","restoreCustomPlaybackStateOnAdBreakComplete","enablePreloading","getAdsManager","getCuePoints","cuePoint","seekElement","cuePercentage","AdEvent","onAdEvent","ad","getAd","LOADED","pollCountdown","isLinear","ALL_ADS_COMPLETED","loadAds","CONTENT_PAUSE_REQUESTED","pauseContent","CONTENT_RESUME_REQUESTED","resumeContent","STARTED","MIDPOINT","COMPLETE","IMPRESSION","CLICK","cancel","contentComplete","seekedTime","discardAdBreak","resize","ViewMode","NORMAL","initialize","init","adError","zIndex","_this10","destroy","_this11","handlers","_this12","base","AV_PUBLISHERID","AV_CHANNELID","AV_URL","cb","Date","now","AV_WIDTH","AV_HEIGHT","AV_CDIM2","LectureNoteModel","showStatus","ShowStatus","Edit","noteStatus","NoteStatus","Create","note","Hide","Normal","AddLectureNoteButtonStatus","Enable","Disable","Hidden","LectureNote","lectureNoteList","lectureNoteContainer","beforeAddLectureNotePlayerState","beforeEditLectureNotePlayerState","hiddenLectureNote","updateAddLectureNoteButtonUI","addLectureNoteButton","getContainer","isLectureNoteExists","_id","lectureNoteDOM","generateLectureNoteDOM","lectureNotes","setupUI","enableLectureNote","round","getSameTimeLectureNote","contentContianer","clickEvent","disableLectureNote","newLectureNote","parentElement","progresses","lectureNoteId","cancelTimeout","data-id","mark","contentContainer","contentTextarea","placeholder","maxLength","rows","contentShowText","trashIconWrapper","trashIcon","removeLectureNote","leftLimit","isInComposition","group","groupEnd","insertElements","attribute","change","clear","prevType","prevProvider","_sources$","_sources$$provider","tagName","crossorigin","defaultCaption","defaultTracks","srclang","Plyr","failed","jQuery","original","getProviderByUrl","search","truthy","searchParams","webkitShowPlaybackTargetPicker","isHidden","hiding","eventName","soft","unload","inputIsValid","fauxDuration","realDuration","Infinity","mozHasAudio","webkitAudioDecodedByteCount","audioTracks","prev","curr","closest","states","webkitPresentationMode","inline","t"],"mappings":"kNAIA,IAAMA,EAAiB,SAAAC,GAAA,OAAUA,MAAAA,EAAiDA,EAAMC,YAAc,MAChGC,EAAa,SAACF,EAAOC,GAAR,OAAwBE,QAAQH,GAASC,GAAeD,aAAiBC,IACtFG,EAAoB,SAAAJ,GAAA,OAASA,MAAAA,GAC7BK,EAAW,SAAAL,GAAA,OAASD,EAAeC,KAAWM,QAE9CC,EAAW,SAAAP,GAAA,OAASD,EAAeC,KAAWQ,QAG9CC,EAAU,SAAAT,GAAA,OAASU,MAAMD,QAAQT,IAEjCW,EAAa,SAAAX,GAAA,OAASE,EAAWF,EAAOY,WAOxCC,EAAU,SAAAb,GAAA,OACZI,EAAkBJ,KAChBO,EAASP,IAAUS,EAAQT,IAAUW,EAAWX,MAAYA,EAAMc,QACnET,EAASL,KAAWM,OAAOS,KAAKf,GAAOc,QAqB5CE,GACIC,gBAAiBb,EACjBc,OAAQb,EACRc,OAxCa,SAAAnB,GAAA,OAASD,EAAeC,KAAWoB,SAAWA,OAAOC,MAAMrB,IAyCxEsB,OAAQf,EACRgB,QAxCc,SAAAvB,GAAA,OAASD,EAAeC,KAAWG,SAyCjDqB,SAxCe,SAAAxB,GAAA,OAASD,EAAeC,KAAWyB,UAyClDC,MAAOjB,EACPkB,QAxCc,SAAA3B,GAAA,OAASE,EAAWF,EAAO4B,UAyCzCC,SAAUlB,EACVmB,QAxCc,SAAA9B,GAAA,OAASE,EAAWF,EAAO+B,UAyCzCC,SAxCe,SAAAhC,GAAA,OAASD,EAAeC,KAAWiC,MAyClDC,MAxCY,SAAAlC,GAAA,OAASE,EAAWF,EAAOmC,QAyCvCC,IAxCU,SAAApC,GAAA,OAASE,EAAWF,EAAOqC,OAAOC,eAAiBpC,EAAWF,EAAOqC,OAAOE,SAyCtFC,MAxCY,SAAAxC,GAAA,OAASE,EAAWF,EAAOyC,aAAgBrC,EAAkBJ,IAAUO,EAASP,EAAM0C,OAyClGC,IAlCU,SAAA3C,GAEV,GAAIE,EAAWF,EAAOqC,OAAOO,KACzB,OAAO,EAIX,IAAItB,EAAStB,EACRA,EAAM6C,WAAW,YAAe7C,EAAM6C,WAAW,cAClDvB,EAAAA,UAAmBtB,GAGvB,IACI,OAAQa,EAAQ,IAAI+B,IAAItB,GAAQwB,UAClC,MAAOC,GACL,OAAO,IAoBXC,MAAOnC,GCpDLoC,EAA4B,WAE9B,IAAIC,GAAY,EAChB,IACI,IAAMC,EAAU7C,OAAO8C,kBAAmB,WACtCC,IADiD,WAG7C,OADAH,GAAY,EACL,QAGfb,OAAOiB,iBAAiB,OAAQ,KAAMH,GACtCd,OAAOkB,oBAAoB,OAAQ,KAAMJ,GAC3C,MAAOJ,IAIT,OAAOG,EAhBuB,GAoB3B,SAASM,EAAe1B,EAASI,EAAOuB,GAA2D,IAAjDC,EAAiDC,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAAAE,EAAAC,KAAjCC,IAAiCJ,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,KAAAA,UAAA,GAAjBK,EAAiBL,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAEtG,GAAK7B,GAAa,qBAAsBA,IAAYd,EAAGgC,MAAMd,IAAWlB,EAAGQ,SAASiC,GAApF,CAKA,IAAMQ,EAAS/B,EAAMgC,MAAM,KAIvBf,EAAUa,EAGVf,IACAE,GAEIY,QAAAA,EAEAC,QAAAA,IAKRC,EAAOE,QAAQ,SAAAC,GACPP,GAAQA,EAAKQ,gBAAkBX,GAE/BG,EAAKQ,eAAeC,MAAOxC,QAAAA,EAASsC,KAAAA,EAAMX,SAAAA,EAAUN,QAAAA,IAGxDrB,EAAQ4B,EAAS,mBAAqB,uBAAuBU,EAAMX,EAAUN,MAK9E,SAASoB,EAAGzC,GAAiE,IAAxDmC,EAAwDN,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAA/C,GAAIF,EAA2CE,UAAA,GAAjCI,IAAiCJ,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,KAAAA,UAAA,GAAjBK,EAAiBL,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAChFH,EAAegB,KAAKV,KAAMhC,EAASmC,EAAQR,GAAU,EAAMM,EAASC,GAIjE,SAASS,EAAI3C,GAAiE,IAAxDmC,EAAwDN,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAA/C,GAAIF,EAA2CE,UAAA,GAAjCI,IAAiCJ,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,KAAAA,UAAA,GAAjBK,EAAiBL,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GACjFH,EAAegB,KAAKV,KAAMhC,EAASmC,EAAQR,GAAU,EAAOM,EAASC,GAIlE,SAASU,EAAK5C,GAAiE,IAAxDmC,EAAwDN,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAA/C,GAAIF,EAA2CE,UAAA,GAAjCI,IAAiCJ,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,KAAAA,UAAA,GAAjBK,EAAiBL,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAMlFH,EAAegB,KAAKV,KAAMhC,EAASmC,EALnC,SAASU,IACLF,EAAI3C,EAASmC,EAAQU,EAAcZ,EAASC,GADjB,IAAA,IAAAY,EAAAjB,UAAA7C,OAAN+D,EAAMnE,MAAAkE,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAND,EAAMC,GAAAnB,UAAAmB,GAE3BrB,EAASsB,MAAMjB,KAAMe,KAGgC,EAAMd,EAASC,GAIrE,SAASgB,EAAalD,GAAkD,IAAzCsC,EAAyCT,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAlC,GAAIsB,EAA8BtB,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAAbuB,EAAavB,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,MAE3E,GAAK3C,EAAGc,QAAQA,KAAYd,EAAGgC,MAAMoB,GAArC,CAKA,IAAMlC,EAAQ,IAAIiD,YAAYf,GAC1Ba,QAAAA,EACAC,OAAQ5E,OAAO8E,UAAWF,GACtBG,KAAMvB,SAMd,IACIhC,EAAQwD,cAAcpD,GACxB,MAAOqD,GACL,MAAM,IAAIC,MAAJ,eAAyBtD,EAAMkC,KAA/B,KAAwCqB,KAAKC,UAAUxD,EAAMgD,+3BC/FpE,SAASS,EAAKC,EAAUC,GAE3B,IAAMC,EAAUF,EAAS9E,OAAS8E,GAAYA,GAI9ClF,MAAMqF,KAAKD,GACNE,UACA7B,QAAQ,SAACrC,EAASmE,GACf,IAAMC,EAAQD,EAAQ,EAAIJ,EAAQM,WAAU,GAAQN,EAG9CO,EAAStE,EAAQuE,WACjBC,EAAUxE,EAAQyE,YAIxBL,EAAMM,YAAY1E,GAKdwE,EACAF,EAAOK,aAAaP,EAAOI,GAE3BF,EAAOI,YAAYN,KAM5B,SAASQ,EAAc5E,EAAS6E,GAC9B3F,EAAGc,QAAQA,KAAYd,EAAGgC,MAAM2D,IAMrCrG,OAAOsG,QAAQD,GACVE,OAAO,SAAAC,GAAA,IAAIC,EAAJC,EAAAF,EAAA,GAAA,GAAA,OAAgB9F,EAAGC,gBAAgB8F,KAC1C5C,QAAQ,SAAA8C,GAAA,IAAAC,EAAAF,EAAAC,EAAA,GAAEE,EAAFD,EAAA,GAAOH,EAAPG,EAAA,GAAA,OAAkBpF,EAAQsF,aAAaD,EAAKJ,KAItD,SAASM,EAAcjD,EAAMuC,EAAYW,GAE5C,IAAMxF,EAAUyF,SAASF,cAAcjD,GAavC,OAVIpD,EAAGE,OAAOyF,IACVD,EAAc5E,EAAS6E,GAIvB3F,EAAGM,OAAOgG,KACVxF,EAAQ0F,UAAYF,GAIjBxF,EASJ,SAAS2F,EAAcrD,EAAMgC,EAAQO,EAAYW,GAEpDlB,EAAOI,YAAYa,EAAcjD,EAAMuC,EAAYW,IAIhD,SAASI,EAAc5F,GACtBd,EAAGa,SAASC,IAAYd,EAAGU,MAAMI,GACjCpB,MAAMqF,KAAKjE,GAASqC,QAAQuD,GAI3B1G,EAAGc,QAAQA,IAAad,EAAGc,QAAQA,EAAQuE,aAIhDvE,EAAQuE,WAAWsB,YAAY7F,GAI5B,SAAS8F,EAAa9F,GAGzB,IAHkC,IAC5BhB,EAAWgB,EAAQ+F,WAAnB/G,OAECA,EAAS,GACZgB,EAAQ6F,YAAY7F,EAAQgG,WAC5BhH,GAAU,EAKX,SAASiH,EAAeC,EAAUC,GACrC,OAAKjH,EAAGc,QAAQmG,IAAcjH,EAAGc,QAAQmG,EAAS5B,aAAgBrF,EAAGc,QAAQkG,IAI7EC,EAAS5B,WAAW6B,aAAaF,EAAUC,GAEpCD,GALI,KASR,SAASG,EAA0BC,EAAKC,GAM3C,IAAKrH,EAAGM,OAAO8G,IAAQpH,EAAGgC,MAAMoF,GAC5B,SAGJ,IAAMzB,KACA2B,EAAWD,EA0CjB,OAxCAD,EAAIlE,MAAM,KAAKC,QAAQ,SAAAoE,GAEnB,IAAMC,EAAWD,EAAEE,OACbC,EAAYF,EAASG,QAAQ,IAAK,IAIlCC,EAHWJ,EAASG,QAAQ,SAAU,IAGrBzE,MAAM,KACvBiD,EAAMyB,EAAM,GACZ7B,EAAQ6B,EAAM9H,OAAS,EAAI8H,EAAM,GAAGD,QAAQ,QAAS,IAAM,GAKjE,OAFcH,EAASK,OAAO,IAG1B,IAAK,IAEG7H,EAAGE,OAAOoH,IAAatH,EAAGM,OAAOgH,EAASQ,SAC1CR,EAASQ,OAAT,IAAsBJ,GAG1B/B,EAAWmC,MAAQJ,EACnB,MAEJ,IAAK,IAED/B,EAAWoC,GAAKP,EAASG,QAAQ,IAAK,IACtC,MAEJ,IAAK,IAEDhC,EAAWQ,GAAOJ,KASvBJ,EAIJ,SAASqC,EAAalH,EAASmH,GAClC,GAAKjI,EAAGc,QAAQA,GAAhB,CAIA,IAAIoH,EAAOD,EAENjI,EAAGO,QAAQ2H,KACZA,GAAQpH,EAAQqH,aAAa,WAG7BD,EACApH,EAAQsF,aAAa,SAAU,IAE/BtF,EAAQsH,gBAAgB,WAKzB,SAASC,EAAYvH,EAAS4G,EAAWY,GAC5C,GAAItI,EAAGc,QAAQA,GAAU,CACrB,IAAIyH,EAAS,SAMb,YALqB,IAAVD,IACPC,EAASD,EAAQ,MAAQ,UAG7BxH,EAAQ0H,UAAUD,GAAQb,GACnB5G,EAAQ0H,UAAUC,SAASf,GAGtC,OAAO,KAIJ,SAASgB,EAAS5H,EAAS4G,GAC9B,OAAO1H,EAAGc,QAAQA,IAAYA,EAAQ0H,UAAUC,SAASf,GAItD,SAASiB,EAAQ7H,EAAS0G,GAC7B,IAAMoB,GAAc7H,QAAAA,SAapB,OANI6H,EAAUD,SACVC,EAAUC,uBACVD,EAAUE,oBACVF,EAAUG,mBARd,WACI,OAAOrJ,MAAMqF,KAAKwB,SAASyC,iBAAiBxB,IAAWyB,SAASnG,QAUrDU,KAAK1C,EAAS0G,GAI1B,SAAS0B,EAAY1B,GACxB,OAAO1E,KAAK8B,SAASuE,UAAUH,iBAAiBxB,GAI7C,SAAS4B,EAAW5B,GACvB,OAAO1E,KAAK8B,SAASuE,UAAUE,cAAc7B,GAI1C,SAAS8B,IACZ,IAAIC,EAAUhD,SAASiD,cAQvB,OAHID,EAHCA,GAAWA,IAAYhD,SAASkD,KAGvBlD,SAAS8C,cAAc,UAFvB,KC9OX,IACGvI,EAEAmC,EAOAG,EAVGsG,GACH5I,EAAUyF,SAASF,cAAc,QAEjCpD,GACF0G,iBAAkB,sBAClBC,cAAe,gBACfC,YAAa,gCACbC,WAAY,iBAGV1G,EAAO9D,OAAOS,KAAKkD,GAAQ8G,KAAK,SAAA7I,GAAA,YAAkC0B,IAAzB9B,EAAQkJ,MAAM9I,OAEtDlB,EAAGM,OAAO8C,IAAQH,EAAOG,ICdpC,IC6Ec6G,ED7ERC,GACFC,OAAgC5D,SAAS6D,aACzCC,SAAU,qBAAsB9D,SAAS+D,gBAAgBN,QAAU,OAAOO,KAAKC,UAAUC,WACzFC,SAAU,kBAAkBH,KAAKC,UAAUG,UAC3CC,MAAO,uBAAuBL,KAAKC,UAAUG,UAC7CE,OAAQ,aAAaN,KAAKC,UAAUC,YCAlCK,GACFC,YAAa,SACbC,YAAa,IACbC,aAAc,cACdC,YAAa,yBACbC,YAAa,UAIXC,GAEFC,MAAO,gBAAiB9E,SAASF,cAAc,SAC/CiF,MAAO,gBAAiB/E,SAASF,cAAc,SAI/CkF,MAPY,SAONnI,EAAMoI,EAAUC,GAClB,IAAMC,EAAgBxB,EAAQQ,UAAYe,GAAeL,EAAQK,YAC3DE,EAAMP,EAAQhI,IAAsB,UAAboI,EAG7B,OACIG,IAAAA,EACAC,GAJOD,GAAOP,EAAQS,aAAwB,UAATzI,IAAqB8G,EAAQQ,UAAYgB,KAUtFI,KAAa5B,EAAQQ,UAAY1K,EAAGQ,SAAS6F,EAAc,SAAS0F,2BAIpEC,QAAShM,EAAGQ,SAASa,OAAO4K,uCAI5BR,YAAa,gBAAiBlF,SAASF,cAAc,SAKrD6F,KAjCY,SAiCPC,GAAW,IAAAC,EACQD,EAAUjJ,MAAM,KAA7BmJ,EADKrG,EAAAoG,EAAA,GAAA,GAEZ,IAAKtJ,KAAKwJ,SAAWD,IAAcvJ,KAAKM,KACpC,OAAO,EAGX,IAAIA,OAAAA,EACA+I,GAAaA,EAAUlD,SAAS,WAEhC7F,EAAO+I,EACc,eAAdA,EAEP/I,EAAO,cACA+I,KAAarB,IAEpB1H,EAAU+I,EAAV,aAAgCrB,EAAcqB,GAA9C,KAGJ,IACI,OAAOhN,QAAQiE,GAAQN,KAAKyJ,MAAMC,YAAYpJ,GAAMuE,QAAQ,KAAM,KACpE,MAAOpD,GACL,OAAO,IAKfkI,WAAY,eAAgBlG,SAASF,cAAc,SAGnDwF,YACU5B,EAAQ1D,SAASF,cAAc,SACrC4D,EAAM7G,KAAO,QACS,UAAf6G,EAAM7G,MAKjBsJ,MAAO,iBAAkBnG,SAAS+D,gBAGlCqC,aAAoC,IAAvBjD,EAIbkD,cAAe,eAAgBvL,QAAUA,OAAOwL,WAAW,4BAA4BlE,SCtFrFmE,GACFC,WADU,WACG,IAAAlK,EAAAC,KACT,OAAKA,KAAKwJ,QAIM5M,MAAMqF,KAAKjC,KAAKyJ,MAAMvD,iBAAiB,WAGxCnD,OAAO,SAAAmH,GAAA,OAAU5B,EAAQc,KAAK1I,KAAKX,EAAMmK,EAAOC,aAAa,eAIhFC,kBAbU,WAeN,OAAOJ,EAAMC,WACRvJ,KAAKV,MACLqK,IAAI,SAAAH,GAAA,OAAU5M,OAAO4M,EAAOC,aAAa,WACzCpH,OAAO1G,UAGhBiO,OArBU,WAsBN,GAAKtK,KAAKwJ,QAAV,CAIA,IAAMe,EAASvK,KAGfxD,OAAO8C,eAAeiL,EAAOd,MAAO,WAChCe,cAAc,EACdjL,IAF2C,WAIvC,IACM2K,EADUF,EAAMC,WAAWvJ,KAAK6J,GACftD,KAAK,SAAAiD,GAAA,OAAUA,EAAOC,aAAa,SAAWI,EAAOL,SAG5E,OAAOA,GAAU5M,OAAO4M,EAAOC,aAAa,UAEhDM,IAV2C,SAUvCvO,GAEA,IAGMgO,EAHUF,EAAMC,WAAWvJ,KAAK6J,GAGftD,KAAK,SAAAiD,GAAA,OAAU5M,OAAO4M,EAAOC,aAAa,WAAajO,IAG9E,GAAKgO,EAAL,CARO,IAAAQ,EAa8CH,EAAOd,MAApDkB,EAbDD,EAaCC,YAAaC,EAbdF,EAacE,OAAQC,EAbtBH,EAasBG,QAASC,EAb/BJ,EAa+BI,WAEtCP,EAAOQ,QAEPC,aAAa,WAETT,EAAOd,MAAMwB,IAAMf,EAAOC,aAAa,QAGvB,SAAZU,GAAsBC,KAEtBP,EAAO3J,KAAK,iBAAkB,WACC,IAAvB2J,EAAOI,cACPJ,EAAOI,YAAcA,GAIpBC,GACDL,EAAOW,SAKfX,EAAOd,MAAM0B,QAIjB,IAAMC,EAAQb,EAAOc,QAAQ9L,IAAI,SAC7BrC,EAAGG,OAAO+N,KACVb,EAAOa,MAAQA,EACfE,GAASC,cAAc7K,KAAK6J,EAAQ,QAASa,IAIjDlK,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,iBAAiB,GACrD+B,QAAStP,YAS7BuP,eAhGU,WAiGN,GAAKzL,KAAKwJ,QAAV,CAIA,IAAMkC,EAAU1B,EAAMC,WAAWvJ,KAAKV,MAClC0L,GAAWA,EAAQ1O,OAAS,IAE5B0O,EAAQrL,QAAQ,SAAC6J,GACbA,EAAO5G,aAAa,MAAO,MAE/BtD,KAAKyJ,MAAM0B,QAGfvH,EAAc8H,GAKd1L,KAAKyJ,MAAMnG,aAAa,MAAOtD,KAAK2L,OAAOC,YAK3C5L,KAAKyJ,MAAM0B,OAGXnL,KAAK6L,MAAMC,IAAI,iCCzHhB,SAASC,EAAQ3O,EAAQ4O,GAC5B,OAAOA,EAAK5L,MAAM,KAAK6L,OAAO,SAACC,EAAK7I,GAAN,OAAc6I,GAAOA,EAAI7I,IAAMjG,GAI1D,SAASkN,IAAgC,IAAA,IAAzB6B,EAAyBtM,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,MAAAiB,EAAAjB,UAAA7C,OAAT0O,EAAS9O,MAAAkE,EAAA,EAAAA,EAAA,EAAA,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAT0K,EAAS1K,EAAA,GAAAnB,UAAAmB,GAC5C,IAAK0K,EAAQ1O,OACT,OAAOmP,EAGX,IAAMjC,EAASwB,EAAQU,QAEvB,OAAKlP,EAAGE,OAAO8M,IAIf1N,OAAOS,KAAKiN,GAAQ7J,QAAQ,SAAAgD,GACpBnG,EAAGE,OAAO8M,EAAO7G,KACZ7G,OAAOS,KAAKkP,GAAQhG,SAAS9C,IAC9B7G,OAAO8E,OAAO6K,EAAd7M,KAAyB+D,OAG7BiH,EAAO6B,EAAO9I,GAAM6G,EAAO7G,KAE3B7G,OAAO8E,OAAO6K,EAAd7M,KAAyB+D,EAAM6G,EAAO7G,OAIvCiH,EAAAA,WAAAA,GAAO6B,GAAPE,OAAkBX,KAfdS,ECbR,SAASG,EAAOpQ,GAAgB,IAAA,IAAA4E,EAAAjB,UAAA7C,OAAN+D,EAAMnE,MAAAkE,EAAA,EAAAA,EAAA,EAAA,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAND,EAAMC,EAAA,GAAAnB,UAAAmB,GACnC,OAAI9D,EAAGgC,MAAMhD,GACFA,EAGJA,EAAMqQ,WAAW1H,QAAQ,WAAY,SAAC2H,EAAOC,GAAR,OAAc1L,EAAK0L,GAAGF,aAa/D,SAASG,IAAgD,IAArCxQ,EAAqC2D,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAA7B,GAAIoH,EAAyBpH,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAlB,GAAIgF,EAAchF,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GACxD,OAAO3D,EAAM2I,QACT,IAAI8H,OAAO1F,EAAKsF,WAAW1H,QAAQ,4BAA6B,QAAS,KACzEA,EAAQ0H,YAKT,SAASK,IACZ,OADoC/M,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAJ,IACnB0M,WAAW1H,QAAQ,SAAU,SAAArB,GAAA,OAAQA,EAAKuB,OAAO,GAAG8H,cAAgBrJ,EAAKsJ,OAAO,GAAGC,gBAqB7F,SAASC,IAAwB,IAChCxP,GADgCqC,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAJ,IACb0M,WAMnB,OAHA/O,EArBG,WAAkC,IACjCA,GADiCqC,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAJ,IACd0M,WAYnB,OATA/O,EAASkP,EAAWlP,EAAQ,IAAK,KAGjCA,EAASkP,EAAWlP,EAAQ,IAAK,KAM1BkP,EAHPlP,EAASoP,EAAYpP,GAGK,IAAK,IAQtByP,CAAazP,IAGRuH,OAAO,GAAGgI,cAAgBvP,EAAO0P,MAAM,GAalD,SAASC,EAAQnP,GACpB,IAAM+D,EAAU0B,SAASF,cAAc,OAEvC,OADAxB,EAAQW,YAAY1E,GACb+D,EAAQqL,UC3EnB,IAAMC,EAAO,WACkB,IAAvBhK,EAAuBxD,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAjB,GAAI8L,EAAa9L,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,MACvB,GAAI3C,EAAGgC,MAAMmE,IAAQnG,EAAGgC,MAAMyM,GAC1B,MAAO,GAGX,IAAInO,EAASuO,EAAQJ,EAAO0B,KAAMhK,GAElC,GAAInG,EAAGgC,MAAM1B,GACT,MAAO,GAGX,IAAMqH,GACFyI,aAAc3B,EAAO4B,SACrBC,UAAW7B,EAAO8B,OAOtB,OAJAjR,OAAOsG,QAAQ+B,GAASxE,QAAQ,SAAA2C,GAAkB,IAAA0K,EAAAxK,EAAAF,EAAA,GAAhBK,EAAgBqK,EAAA,GAAXzK,EAAWyK,EAAA,GAC9ClQ,EAASkP,EAAWlP,EAAQ6F,EAAKJ,KAG9BzF,GCtBR,SAASmQ,EAAO/P,GACnB,OAAKV,EAAGU,MAAMA,GAIPA,EAAMmF,OAAO,SAAC6K,EAAMzL,GAAP,OAAiBvE,EAAMiQ,QAAQD,KAAUzL,IAHlDvE,MCFTkQ,EAAAA,WACF,SAAAA,EAAYvD,GAAQwD,EAAA/N,KAAA8N,GAChB9N,KAAKgO,QAAUzD,EAAOoB,OAAON,QAAQ2C,QACrChO,KAAKqD,IAAMkH,EAAOoB,OAAON,QAAQhI,0CAuBjCA,GACA,IAAKyK,EAAQ1O,YAAcY,KAAKgO,QAC5B,OAAO,KAGX,IAAMC,EAAQ1P,OAAO2P,aAAaC,QAAQnO,KAAKqD,KAE/C,GAAInG,EAAGgC,MAAM+O,GACT,OAAO,KAGX,IAAMG,EAAOzM,KAAK0M,MAAMJ,GAExB,OAAO/Q,EAAGM,OAAO6F,IAAQA,EAAIrG,OAASoR,EAAK/K,GAAO+K,8BAGlDhR,GAEA,GAAK0Q,EAAQ1O,WAAcY,KAAKgO,SAK3B9Q,EAAGE,OAAOA,GAAf,CAKA,IAAIiO,EAAUrL,KAAKT,MAGfrC,EAAGgC,MAAMmM,KACTA,MAIJf,EAAOe,EAASjO,GAGhBmB,OAAO2P,aAAaI,QAAQtO,KAAKqD,IAAK1B,KAAKC,UAAUyJ,yCAzDrD,IACI,KAAM,iBAAkB9M,QACpB,OAAO,EAUX,OAHAA,OAAO2P,aAAaI,QAJP,UAAA,WAKb/P,OAAO2P,aAAaK,WALP,YAON,EACT,MAAOtP,GACL,OAAO,SAtBb6O,GCFS,SAASU,EAAM3P,GAA4B,IAAvB4P,EAAuB5O,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAR,OAC9C,OAAO,IAAI6O,QAAQ,SAACC,EAASC,GACzB,IACI,IAAMC,EAAU,IAAIC,eAGpB,KAAM,oBAAqBD,GACvB,OAGJA,EAAQrP,iBAAiB,OAAQ,WAC7B,GAAqB,SAAjBiP,EACA,IACIE,EAAQhN,KAAK0M,MAAMQ,EAAQE,eAC7B,MAAO9P,GACL0P,EAAQE,EAAQE,mBAGpBJ,EAAQE,EAAQG,YAIxBH,EAAQrP,iBAAiB,QAAS,WAC9B,MAAM,IAAIkC,MAAMmN,EAAQI,UAG5BJ,EAAQK,KAAK,MAAOrQ,GAAK,GAGzBgQ,EAAQJ,aAAeA,EAEvBI,EAAQM,OACV,MAAOlQ,GACL2P,EAAO3P,MC7BJ,SAASmQ,GAAWvQ,EAAKoG,GACpC,GAAK/H,EAAGM,OAAOqB,GAAf,CAIA,IACMwQ,EAAQnS,EAAGM,OAAOyH,GAGlBqK,EAAS,WAAA,OAAsC,OAAhC7L,SAAS8L,eAAetK,IAEvCuK,EAAS,SAACnJ,EAAWoJ,GACvBpJ,EAAU+G,UAAYqC,EAGlBJ,GAASC,KAKb7L,SAASkD,KAAK+I,sBAAsB,aAAcrJ,IAItD,IAAKgJ,IAAUC,IAAU,CACrB,IAAMK,EAAa7B,EAAQ1O,UAGrBiH,EAAY5C,SAASF,cAAc,OAQzC,GAPA8C,EAAU/C,aAAa,SAAU,IAE7B+L,GACAhJ,EAAU/C,aAAa,KAAM2B,GAI7B0K,EAAY,CACZ,IAAMC,EAASrR,OAAO2P,aAAaC,QAAW0B,SAAU5K,GAGxD,GAFsB,OAAX2K,EAEG,CACV,IAAMH,EAAO9N,KAAK0M,MAAMuB,GACxBJ,EAAOnJ,EAAWoJ,EAAKK,UAK/BtB,EAAM3P,GACDkR,KAAK,SAAAC,GACE9S,EAAGgC,MAAM8Q,KAITL,GACApR,OAAO2P,aAAaI,QACbuB,SAAU5K,EACbtD,KAAKC,WACDkO,QAASE,KAKrBR,EAAOnJ,EAAW2J,MAErBC,MAAM,gBClEZ,IAAMC,GAAW,SAAAjN,GAAA,OAASkN,SAAUlN,EAAQ,GAAK,GAAM,GAAI,KACrDmN,GAAa,SAAAnN,GAAA,OAASkN,SAAUlN,EAAQ,GAAM,GAAI,KAClDoN,GAAa,SAAApN,GAAA,OAASkN,SAASlN,EAAQ,GAAI,KAGjD,SAASqN,KAA6D,IAAlDC,EAAkD1Q,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAA3C,EAAG2Q,EAAwC3Q,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAAlB4Q,EAAkB5Q,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAEzE,IAAK3C,EAAGG,OAAOkT,GACX,OAAOD,GAAW,KAAME,EAAcC,GAI1C,IAAMnE,EAAS,SAAArJ,GAAA,OAAS,IAAIA,GAAQiK,OAAO,IAGvCwD,EAAQR,GAASK,GACfI,EAAOP,GAAWG,GAClBK,EAAOP,GAAWE,GAUxB,OAPIC,GAAgBE,EAAQ,EACxBA,GAAA,IAEAA,EAAQ,IAIFD,GAAYF,EAAO,EAAI,IAAM,IAAKG,EAAQpE,EAAOqE,GAA3D,IAAoErE,EAAOsE,GCF/E,IAAMtF,IAEFuF,WAFa,WAGT,IACMC,EADM,IAAIhS,IAAIkB,KAAK2L,OAAOoF,QAASxS,OAAOyS,UAC/BC,OAAS1S,OAAOyS,SAASC,MAAS7J,EAAQC,OAAS9I,OAAO2S,cAE3E,OACIrS,IAAKmB,KAAK2L,OAAOoF,QACjBD,KAAAA,IAKRK,aAba,WAcT,IAyCI,OAxCAnR,KAAK8B,SAASwJ,SAAWhF,EAAW5F,KAAKV,KAAMA,KAAK2L,OAAOyF,UAAU9F,SAASvJ,SAG9E/B,KAAK8B,SAASuP,SACVnG,KAAM9E,EAAY1F,KAAKV,KAAMA,KAAK2L,OAAOyF,UAAUC,QAAQnG,MAC3DH,MAAOzE,EAAW5F,KAAKV,KAAMA,KAAK2L,OAAOyF,UAAUC,QAAQtG,OAC3DuG,QAAShL,EAAW5F,KAAKV,KAAMA,KAAK2L,OAAOyF,UAAUC,QAAQC,SAC7DC,OAAQjL,EAAW5F,KAAKV,KAAMA,KAAK2L,OAAOyF,UAAUC,QAAQE,QAC5DC,YAAalL,EAAW5F,KAAKV,KAAMA,KAAK2L,OAAOyF,UAAUC,QAAQG,aACjEC,KAAMnL,EAAW5F,KAAKV,KAAMA,KAAK2L,OAAOyF,UAAUC,QAAQI,MAC1DzI,IAAK1C,EAAW5F,KAAKV,KAAMA,KAAK2L,OAAOyF,UAAUC,QAAQrI,KACzDE,QAAS5C,EAAW5F,KAAKV,KAAMA,KAAK2L,OAAOyF,UAAUC,QAAQnI,SAC7DwI,SAAUpL,EAAW5F,KAAKV,KAAMA,KAAK2L,OAAOyF,UAAUC,QAAQK,UAC9DC,SAAUrL,EAAW5F,KAAKV,KAAMA,KAAK2L,OAAOyF,UAAUC,QAAQM,UAC9DC,WAAYtL,EAAW5F,KAAKV,KAAMA,KAAK2L,OAAOyF,UAAUC,QAAQO,aAIpE5R,KAAK8B,SAAS+P,SAAWvL,EAAW5F,KAAKV,KAAMA,KAAK2L,OAAOyF,UAAUS,UAGrE7R,KAAK8B,SAASgQ,QACVC,KAAMzL,EAAW5F,KAAKV,KAAMA,KAAK2L,OAAOyF,UAAUU,OAAOC,MACzDC,OAAQ1L,EAAW5F,KAAKV,KAAMA,KAAK2L,OAAOyF,UAAUU,OAAOE,SAI/DhS,KAAK8B,SAASmQ,SACVC,OAAQ5L,EAAW5F,KAAKV,KAAMA,KAAK2L,OAAOyF,UAAUa,QAAQC,QAC5DvH,YAAarE,EAAW5F,KAAKV,KAAMA,KAAK2L,OAAOyF,UAAUa,QAAQtH,aACjEwH,SAAU7L,EAAW5F,KAAKV,KAAMA,KAAK2L,OAAOyF,UAAUa,QAAQE,WAI9DjV,EAAGc,QAAQgC,KAAK8B,SAAS+P,YACzB7R,KAAK8B,SAASmQ,QAAQG,YAAcpS,KAAK8B,SAAS+P,SAAStL,cAAvB,IAC5BvG,KAAK2L,OAAO0G,WAAWC,WAI5B,EACT,MAAOC,GAOL,OALAvS,KAAK6L,MAAM2G,KAAK,kEAAmED,GAGnFvS,KAAKyS,sBAAqB,IAEnB,IAKfC,WApEa,SAoEFpS,EAAMuC,GACb,IACMkO,EAAUzF,GAASuF,WAAWnQ,KAAKV,MACnC2S,GAAe5B,EAAQD,KAAqB,GAAdC,EAAQlS,KAAtC,IAAkDmB,KAAK2L,OAAOiH,WAG9DC,EAAOpP,SAASqP,gBALJ,6BAK+B,OACjDlQ,EACIiQ,EACAvI,EAAOzH,GACHkQ,KAAM,eACNC,UAAW,WAKnB,IAAMC,EAAMxP,SAASqP,gBAfH,6BAe8B,OAC1C9G,EAAU2G,EAAV,IAAsBrS,EAc5B,MATI,SAAU2S,EACVA,EAAIC,eAAe,+BAAgC,OAAQlH,GAE3DiH,EAAIC,eAAe,+BAAgC,aAAclH,GAIrE6G,EAAKnQ,YAAYuQ,GAEVJ,GAIXM,YAvGa,SAuGD7S,GAAiB,IAAX8S,EAAWvT,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,MAMnB2D,GAHFwF,IAAK,MACLE,QAAS,WAEW5I,IAAS+M,EAAS/M,EAAMN,KAAK2L,QAKrD,OAAOpI,EAAc,OAHF/G,OAAO8E,UAAW8R,GACjCpO,OAAQoO,EAAKpO,MAAOhF,KAAK2L,OAAO0G,WAAWlN,QAAQpC,OAAO1G,SAASgX,KAAK,OAEnC7P,IAI7C8P,YAtHa,SAsHD9P,GACR,GAAItG,EAAGgC,MAAMsE,GACT,OAAO,KAGX,IAAM+P,EAAQhQ,EAAc,QACxByB,MAAOhF,KAAK2L,OAAO0G,WAAWmB,KAAKvQ,QAavC,OAVAsQ,EAAM7Q,YACFa,EACI,QAEIyB,MAAOhF,KAAK2L,OAAO0G,WAAWmB,KAAKD,OAEvC/P,IAID+P,GAIXE,aA7Ia,SA6IAC,EAAYN,GACrB,IAAMO,EAASpQ,EAAc,UACvBV,EAAarG,OAAO8E,UAAW8R,GACjC9S,EAAO0M,EAAY0G,GAEnB9T,GAAS,EACTgU,OAAAA,EACAf,OAAAA,EACAgB,OAAAA,EACAC,OAAAA,EAeJ,OAbM,SAAUjR,IACZA,EAAWvC,KAAO,UAGlB,UAAWuC,EACNA,EAAWmC,MAAMmB,SAASnG,KAAK2L,OAAO0G,WAAW0B,WAClDlR,EAAWmC,OAAX,IAAwBhF,KAAK2L,OAAO0G,WAAW0B,SAGnDlR,EAAWmC,MAAQhF,KAAK2L,OAAO0G,WAAW0B,QAItCL,GACJ,IAAK,OACD9T,GAAS,EACTgU,EAAQ,OACRC,EAAe,QACfhB,EAAO,OACPiB,EAAc,QACd,MAEJ,IAAK,OACDlU,GAAS,EACTgU,EAAQ,OACRC,EAAe,SACfhB,EAAO,SACPiB,EAAc,QACd,MAEJ,IAAK,WACDlU,GAAS,EACTgU,EAAQ,iBACRC,EAAe,kBACfhB,EAAO,eACPiB,EAAc,cACd,MAEJ,IAAK,OACDlU,GAAS,EACTgU,EAAQ,YACRC,EAAe,WACfhB,EAAO,aACPiB,EAAc,YACd,MAEJ,IAAK,aACDlU,GAAS,EACTgU,EAAQ,kBACRC,EAAe,iBACfhB,EAAO,mBACPiB,EAAc,kBACd,MAEJ,IAAK,aACDjR,EAAWmC,OAAX,IAAwBhF,KAAK2L,OAAO0G,WAAW0B,QAA/C,aACAzT,EAAO,OACPsT,EAAQ,OACRf,EAAO,OACP,MAEJ,IAAK,mBACDvS,EAAO,mBACPsT,EAAQ,OACRf,EAAO,mBAEX,QACIe,EAAQtT,EACRuS,EAAOa,EAIX9T,GAEA+T,EAAOjR,YAAY4I,GAASoH,WAAWhS,KAAKV,KAAM8T,GAAe9O,MAAO,mBACxE2O,EAAOjR,YAAY4I,GAASoH,WAAWhS,KAAKV,KAAM6S,GAAQ7N,MAAO,uBAGjE2O,EAAOjR,YAAY4I,GAAS6H,YAAYzS,KAAKV,KAAM6T,GAAgB7O,MAAO,oBAC1E2O,EAAOjR,YAAY4I,GAAS6H,YAAYzS,KAAKV,KAAM4T,GAAS5O,MAAO,0BAEnE2O,EAAOjR,YAAY4I,GAASoH,WAAWhS,KAAKV,KAAM6S,IAClDc,EAAOjR,YAAY4I,GAAS6H,YAAYzS,KAAKV,KAAM4T,KAIvDtJ,EAAOzH,EAAYwB,EAA0BrE,KAAK2L,OAAOyF,UAAUC,QAAQ/Q,GAAOuC,IAElFD,EAAc+Q,EAAQ9Q,GAGT,SAATvC,GACKpD,EAAGU,MAAMoC,KAAK8B,SAASuP,QAAQ/Q,MAChCN,KAAK8B,SAASuP,QAAQ/Q,OAG1BN,KAAK8B,SAASuP,QAAQ/Q,GAAME,KAAKmT,IAEjC3T,KAAK8B,SAASuP,QAAQ/Q,GAAQqT,EAIlC,IAAM/O,EAAY5E,KAAK2L,OAAO0G,WAAW2B,eAWzC,OAVAxX,OAAO8C,eAAeqU,EAAQ,WAC1BM,YAAY,EACZ1U,IAFqC,WAGjC,OAAOqG,EAAS+N,EAAQ/O,IAE5B6F,IALqC,WAKhB,IAAjByJ,EAAiBrU,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GACjB0F,EAAYoO,EAAQ/O,EAAWsP,MAIhCP,GAIXQ,YA7Qa,SA6QD7T,EAAMuC,GAEd,IAAM3G,EAAQqH,EACV,QACA+G,EACIjG,EAA0BrE,KAAK2L,OAAOyF,UAAUU,OAAOxR,KAEnDA,KAAM,QACN8T,IAAK,EACLC,IAAK,IACLC,KAAM,IACNrR,MAAO,EACPsR,aAAc,MAEdxB,KAAM,SACNyB,aAAcnH,EAAS/M,EAAMN,KAAK2L,QAClC8I,gBAAiB,EACjBC,gBAAiB,IACjBC,gBAAiB,GAErB9R,IASR,OALA7C,KAAK8B,SAASgQ,OAAOxR,GAAQpE,EAG7BoP,GAASsJ,gBAAgBlU,KAAKV,KAAM9D,GAE7BA,GAIX2Y,eA9Sa,SA8SEvU,EAAMuC,GACjB,IAAMgP,EAAWtO,EACb,WACA+G,EACIjG,EAA0BrE,KAAK2L,OAAOyF,UAAUa,QAAQ3R,KAEpD8T,IAAK,EACLC,IAAK,IACLpR,MAAO,EACP8P,KAAM,eACN+B,eAAe,GAEnBjS,IAKR,GAAa,WAATvC,EAAmB,CACnBuR,EAASnP,YAAYa,EAAc,OAAQ,KAAM,MAEjD,IAAMwR,GACFC,OAAQ,SACR9C,OAAQ,YACV5R,GACI2U,EAASF,EAAY1H,EAAS0H,EAAW/U,KAAK2L,QAAU,GAE9DkG,EAASnO,UAAT,KAA0BuR,EAAOlI,cAKrC,OAFA/M,KAAK8B,SAASmQ,QAAQ3R,GAAQuR,EAEvBA,GAIXqD,WAjVa,SAiVF5U,GACP,IAAMuC,EAAawB,EAA0BrE,KAAK2L,OAAOyF,UAAUa,QAAQ3R,IAErE+F,EAAY9C,EACd,MACA+G,EAAOzH,GACHmC,MAAAA,cAAqBnC,EAAWmC,MAChCwP,aAAcnH,EAAS/M,EAAMN,KAAK2L,UAEtC,SAMJ,OAFA3L,KAAK8B,SAASmQ,QAAQ3R,GAAQ+F,EAEvBA,GAIX8O,eApWa,SAAAnS,GAoW+D,IAA3DC,EAA2DD,EAA3DC,MAAOmS,EAAoDpS,EAApDoS,KAAM9U,EAA8C0C,EAA9C1C,KAAMmN,EAAwCzK,EAAxCyK,MAAwC4H,EAAArS,EAAjCuQ,MAAAA,OAAiCzT,IAAAuV,EAAzB,KAAyBA,EAAAC,EAAAtS,EAAnBuS,QAAAA,OAAmBzV,IAAAwV,GAAAA,EAClE1H,EAAOrK,EAAc,MAErBqQ,EAAQrQ,EAAc,SACxByB,MAAOhF,KAAK2L,OAAO0G,WAAW0B,UAG5ByB,EAAQjS,EACV,QACA+G,EAAOjG,EAA0BrE,KAAK2L,OAAOyF,UAAUU,OAAOxR,KAC1DA,KAAM,QACNmV,KAAAA,QAAcnV,EACd2C,MAAAA,EACAsS,QAAAA,EACAvQ,MAAO,mBAIT0Q,EAAOnS,EAAc,QAAU4B,OAAQ,KAE7CyO,EAAMlR,YAAY8S,GAClB5B,EAAMlR,YAAYgT,GAClB9B,EAAM+B,mBAAmB,YAAalI,GAElCvQ,EAAGc,QAAQuV,IACXK,EAAMlR,YAAY6Q,GAGtB3F,EAAKlL,YAAYkR,GACjBwB,EAAK1S,YAAYkL,IAIrB0C,WArYa,WAqY0B,IAA5BC,EAA4B1Q,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAArB,EAAG4Q,EAAkB5Q,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAEnC,OAAK3C,EAAGG,OAAOkT,GAORD,GAAWC,EAFCL,GAASlQ,KAAKmS,UAAY,EAET1B,GANzBF,GAUfqF,kBAlZa,WAkZgD,IAA3CzJ,EAA2CtM,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAlC,KAAM0Q,EAA4B1Q,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAArB,EAAG4Q,EAAkB5Q,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAEpD3C,EAAGc,QAAQmO,IAAYjP,EAAGG,OAAOkT,KAKtCpE,EAAOzI,UAAY4H,GAASgF,WAAWC,EAAME,KAIjDoF,aA7Za,WA8ZJ7V,KAAKZ,UAAU0J,KAKhB5L,EAAGc,QAAQgC,KAAK8B,SAASgQ,OAAOE,SAChC1G,GAASwK,SAASpV,KAAKV,KAAMA,KAAK8B,SAASgQ,OAAOE,OAAQhS,KAAK+V,MAAQ,EAAI/V,KAAKgS,QAIhF9U,EAAGc,QAAQgC,KAAK8B,SAASuP,QAAQI,QACjCzR,KAAK8B,SAASuP,QAAQI,KAAKyC,QAAUlU,KAAK+V,OAAyB,IAAhB/V,KAAKgS,UAKhE8D,SA9aa,SA8aJ3J,GAAmB,IAAXlJ,EAAWpD,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAH,EAChB3C,EAAGc,QAAQmO,KAKhBA,EAAOlJ,MAAQA,EAGfqI,GAASsJ,gBAAgBlU,KAAKV,KAAMmM,KAIxC6J,eA3ba,SA2bE5X,GAAO,IAAA2B,EAAAC,KAClB,GAAKA,KAAKZ,UAAU0J,IAAO5L,EAAGkB,MAAMA,GAApC,CAIA,IP3csB6X,EAAS5B,EO2c3BpR,EAAQ,EAkBZ,GAAI7E,EACA,OAAQA,EAAMkC,MAEV,IAAK,aACL,IAAK,UACL,IAAK,SPleS2V,EOmeYjW,KAAK2K,YPneR0J,EOmeqBrU,KAAKmS,SAA7ClP,EPleA,IAAZgT,GAAyB,IAAR5B,GAAa/W,OAAOC,MAAM0Y,IAAY3Y,OAAOC,MAAM8W,GAC7D,GAGH4B,EAAU5B,EAAM,KAAK6B,QAAQ,GOieF,eAAf9X,EAAMkC,MACNgL,GAASwK,SAASpV,KAAKV,KAAMA,KAAK8B,SAASgQ,OAAOC,KAAM9O,GAG5D,MAGJ,IAAK,UACL,IAAK,YAjCO,SAACkJ,EAAQjQ,GACzB,IAAM+G,EAAQ/F,EAAGG,OAAOnB,GAASA,EAAQ,EACnC2V,EAAW3U,EAAGc,QAAQmO,GAAUA,EAASpM,EAAK+B,SAASmQ,QAAQC,OAGrE,GAAIhV,EAAGc,QAAQ6T,GAAW,CACtBA,EAAS5O,MAAQA,EAGjB,IAAM2Q,EAAQ/B,EAASsE,qBAAqB,QAAQ,GAChDjZ,EAAGc,QAAQ4V,KACXA,EAAM7P,WAAW,GAAGqS,UAAYnT,IAuBhCoT,CAAYrW,KAAK8B,SAASmQ,QAAQC,OAAwB,IAAhBlS,KAAKsW,aAW/D1B,gBA/ea,SA+eGzI,GAEZ,IAAMhF,EAAQjK,EAAGkB,MAAM+N,GAAUA,EAAOA,OAASA,EAGjD,GAAKjP,EAAGc,QAAQmJ,IAAyC,UAA/BA,EAAMgD,aAAa,QAA7C,CAKA,GAAItE,EAAQsB,EAAOnH,KAAK2L,OAAOyF,UAAUU,OAAOC,MAAO,CACnD5K,EAAM7D,aAAa,gBAAiBtD,KAAK2K,aACzC,IAAMA,EAAcW,GAASgF,WAAWtQ,KAAK2K,aACvCwH,EAAW7G,GAASgF,WAAWtQ,KAAKmS,UACpC7F,EAASe,EAAS,YAAarN,KAAK2L,QAC1CxE,EAAM7D,aACF,iBACAgJ,EAAOzH,QAAQ,gBAAiB8F,GAAa9F,QAAQ,aAAcsN,SAEpE,GAAItM,EAAQsB,EAAOnH,KAAK2L,OAAOyF,UAAUU,OAAOE,QAAS,CAC5D,IAAMuE,EAAwB,IAAdpP,EAAMlE,MACtBkE,EAAM7D,aAAa,gBAAiBiT,GACpCpP,EAAM7D,aAAa,iBAAqBiT,EAAxC,UAEApP,EAAM7D,aAAa,gBAAiB6D,EAAMlE,OAIzCmE,EAAQG,UAKbJ,EAAMD,MAAMsP,YAAY,UAAcrP,EAAMlE,MAAQkE,EAAMkN,IAAM,IAAhE,OAIJoC,kBAphBa,SAohBKrY,GAAO,IAAAsY,EAAA1W,KAErB,GACKA,KAAK2L,OAAOgL,SAAS5E,MACrB7U,EAAGc,QAAQgC,KAAK8B,SAASgQ,OAAOC,OAChC7U,EAAGc,QAAQgC,KAAK8B,SAASmQ,QAAQG,cAChB,IAAlBpS,KAAKmS,SAJT,CAUA,IAAIoE,EAAU,EACRK,EAAa5W,KAAK8B,SAAS+P,SAASgF,wBACpCC,EAAa9W,KAAK2L,OAAO0G,WAAWC,QAApC,YAEA1S,EAAS,SAAAmX,GACXxR,EAAYmR,EAAK5U,SAASmQ,QAAQG,YAAa0E,EAASlX,IAI5D,GAAII,KAAK4J,MACLhK,GAAO,OADX,CAMA,GAAI1C,EAAGkB,MAAMA,GACTmY,EAAU,IAAMK,EAAWI,OAAS5Y,EAAM6Y,MAAQL,EAAWM,UAC1D,CAAA,IAAItR,EAAS5F,KAAK8B,SAASmQ,QAAQG,YAAa0E,GAGnD,OAFAP,EAAUY,WAAWnX,KAAK8B,SAASmQ,QAAQG,YAAYlL,MAAMgQ,KAAM,IAMnEX,EAAU,EACVA,EAAU,EACHA,EAAU,MACjBA,EAAU,KAIdjL,GAASsK,kBAAkBlV,KAAKV,KAAMA,KAAK8B,SAASmQ,QAAQG,YAAapS,KAAKmS,SAAW,IAAMoE,GAG/FvW,KAAK8B,SAASmQ,QAAQG,YAAYlL,MAAMgQ,KAAUX,EAAlD,IAIIrZ,EAAGkB,MAAMA,KAAW,aAAc,cAAc+H,SAAS/H,EAAMkC,OAC/DV,EAAsB,eAAfxB,EAAMkC,SAKrB8W,WA5kBa,SA4kBFhZ,GAEP,IAAMiZ,GAAUna,EAAGc,QAAQgC,KAAK8B,SAASmQ,QAAQE,WAAanS,KAAK2L,OAAO2L,WAG1EhM,GAASsK,kBAAkBlV,KACvBV,KACAA,KAAK8B,SAASmQ,QAAQtH,YACtB0M,EAASrX,KAAKmS,SAAWnS,KAAK2K,YAAc3K,KAAK2K,YACjD0M,GAIAjZ,GAAwB,eAAfA,EAAMkC,MAAyBN,KAAKyJ,MAAM8N,SAKvDjM,GAAS0K,eAAetV,KAAKV,KAAM5B,IAIvCoZ,eAlmBa,WAomBT,GAAKxX,KAAKZ,UAAU0J,KAAQ9I,KAAK2L,OAAO2L,aAActX,KAAK2K,aAA3D,CAQA,GAAI3K,KAAKmS,UAALsF,KAAAC,IAAiB,EAAG,IAGpB,OAFAxS,EAAalF,KAAK8B,SAASmQ,QAAQtH,aAAa,QAChDzF,EAAalF,KAAK8B,SAAS+P,UAAU,GAKrC3U,EAAGc,QAAQgC,KAAK8B,SAASgQ,OAAOC,OAChC/R,KAAK8B,SAASgQ,OAAOC,KAAKzO,aAAa,gBAAiBtD,KAAKmS,UAIjE,IAAMwF,EAAcza,EAAGc,QAAQgC,KAAK8B,SAASmQ,QAAQE,WAGhDwF,GAAe3X,KAAK2L,OAAOiM,iBAAmB5X,KAAK4K,QACpDU,GAASsK,kBAAkBlV,KAAKV,KAAMA,KAAK8B,SAASmQ,QAAQtH,YAAa3K,KAAKmS,UAI9EwF,GACArM,GAASsK,kBAAkBlV,KAAKV,KAAMA,KAAK8B,SAASmQ,QAAQE,SAAUnS,KAAKmS,UAI/E7G,GAASmL,kBAAkB/V,KAAKV,QAIpC6X,UAzoBa,SAyoBHC,EAASlY,GACfsF,EAAalF,KAAK8B,SAAS4P,SAASqG,KAAKD,IAAWlY,IAIxDoY,eA9oBa,SA8oBE3Y,GAAS,IAAA4Y,EAAAjY,KAEpB,GAAK9C,EAAGc,QAAQgC,KAAK8B,SAAS4P,SAASwG,MAAM1M,SAA7C,CAIA,IACM4J,EAAOpV,KAAK8B,SAAS4P,SAASwG,MAAM1M,QAAQjF,cAAc,MAG5DrJ,EAAGU,MAAMyB,KACTW,KAAKX,QAAQmM,QAAUmC,EAAOtO,GAAS0D,OAAO,SAAAyI,GAAA,OAAWyM,EAAKtM,OAAOH,QAAQnM,QAAQ8G,SAASqF,MAIlG,IAAM5L,GAAU1C,EAAGgC,MAAMc,KAAKX,QAAQmM,UAAYxL,KAAKX,QAAQmM,QAAQxO,OAAS,EAOhF,GANAsO,GAASuM,UAAUnX,KAAKV,KAVX,UAUuBJ,GAGpC0L,GAAS6M,UAAUzX,KAAKV,MAGnBJ,EAAL,CAKAkE,EAAasR,GAcbpV,KAAKX,QAAQmM,QACR4M,KAAK,SAACC,EAAGC,GACN,IAAMC,EAAUN,EAAKtM,OAAOH,QAAQnM,QACpC,OAAOkZ,EAAQ1K,QAAQwK,GAAKE,EAAQ1K,QAAQyK,GAAK,GAAK,IAEzDjY,QAAQ,SAAAmL,GACLF,GAAS6J,eAAezU,KAAKuX,GACzBhV,MAAOuI,EACP4J,KAAAA,EACA9U,KA5CC,UA6CDmN,MAAOnC,GAASkN,SAAS9X,KAAKuX,EAAM,UAAWzM,GAC/C+H,MAtBK,SAAA/H,GACb,IAAMoI,EAAQvG,EAAA,gBAAyB7B,EAAWyM,EAAKtM,QAEvD,OAAKiI,EAAM5W,OAIJsO,GAASgI,YAAY5S,KAAKuX,EAAMrE,GAH5B,KAkBI6E,CAASjN,OAI5BF,GAASC,cAAc7K,KAAKV,KAlDf,UAkD2BoV,MAI5CoD,SA1sBa,SA0sBJV,EAAS7U,GACd,OAAQ6U,GACJ,IAAK,QACD,OAAiB,IAAV7U,EAAcoK,EAAS,SAAUrN,KAAK2L,QAAa1I,EAAnD,UAEX,IAAK,UACD,GAAI/F,EAAGG,OAAO4F,GAAQ,CAClB,IAAM2Q,EAAQvG,EAAA,gBAAyBpK,EAASjD,KAAK2L,QAErD,OAAKiI,EAAM5W,OAIJ4W,EAHO3Q,EAAV,IAMR,OAAO2J,EAAY3J,GAEvB,IAAK,WACD,OAAO0O,GAAS6G,SAAS9X,KAAKV,MAElC,IAAK,mBACD,OAAOqN,EAAA,wBAAiCpK,EAASjD,KAAK2L,QAE1D,QACI,OAAO,OAKnBJ,cAxuBa,SAwuBCuM,EAASzR,EAAWnK,GAC9B,IAAMwc,EAAO1Y,KAAK8B,SAAS4P,SAASwG,MAAMJ,GACtC7U,EAAQ,KACRmS,EAAO/O,EAEX,GAAgB,aAAZyR,EACA7U,EAAQjD,KAAK2Y,kBACV,GAAgB,qBAAZb,EACP7U,EAAQjD,KAAK4Y,oBACV,CASH,GARA3V,EAAS/F,EAAGgC,MAAMhD,GAAiB8D,KAAK8X,GAAb5b,EAGvBgB,EAAGgC,MAAM+D,KACTA,EAAQjD,KAAK2L,OAAOmM,GAASe,UAI5B3b,EAAGgC,MAAMc,KAAKX,QAAQyY,MAAc9X,KAAKX,QAAQyY,GAAS3R,SAASlD,GAEpE,YADAjD,KAAK6L,MAAM2G,KAAX,yBAAyCvP,EAAzC,SAAuD6U,GAO3D,GAAgB,YAAZA,IAA0B9X,KAAK2L,OAAOmM,GAASzY,QAAQ8G,SAASlD,GAEhE,YADAjD,KAAK6L,MAAM2G,KAAX,sBAAsCvP,EAAtC,SAAoD6U,GAW5D,GALK5a,EAAGc,QAAQoX,KACZA,EAAOsD,GAAQA,EAAKnS,cAAc,OAIjCrJ,EAAGc,QAAQoX,GAAhB,CAKcpV,KAAK8B,SAAS4P,SAASqG,KAAKD,GAASvR,cAArC,IAAuDvG,KAAK2L,OAAO0G,WAAWmB,KAAKvQ,OAC3FmK,UAAY9B,GAASkN,SAAS9X,KAAKV,KAAM8X,EAAS7U,GAGxD,IAAMkJ,EAASiJ,GAAQA,EAAK7O,cAAL,gBAAmCtD,EAAnC,MAEnB/F,EAAGc,QAAQmO,KACXA,EAAOoJ,SAAU,KAoDzBuD,gBA90Ba,WA80BK,IAAAC,EAAA/Y,KAGRoV,EAAOpV,KAAK8B,SAAS4P,SAASwG,MAAMvG,SAASpL,cAAc,MAC3DyS,EAASrH,GAASsH,UAAUvY,KAAKV,MAYvC,GATAsL,GAASuM,UAAUnX,KAAKV,KALX,WAKuBgZ,EAAOhc,QAG3C8G,EAAasR,GAGb9J,GAAS6M,UAAUzX,KAAKV,MAGnBgZ,EAAOhc,OAAZ,CAKA,IAAMqC,EAAU2Z,EAAO3O,IAAI,SAAC3L,EAAOuE,GAAR,OACvBA,MAAAA,EACAsS,QAASwD,EAAKpH,SAASuH,SAAWH,EAAKJ,eAAiB1V,EACxDwK,MAAOkE,GAAS6G,SAAS9X,KAAKqY,EAAMra,GACpC6U,MAAO7U,EAAMya,UAAY7N,GAASgI,YAAY5S,KAAKqY,EAAMra,EAAMya,SAAStM,eACxEuI,KAAAA,EACA9U,KAAM,cAIVjB,EAAQ+Z,SACJnW,OAAQ,EACRsS,SAAUvV,KAAK2R,SAASuH,QACxBzL,MAAOJ,EAAS,WAAYrN,KAAK2L,QACjCyJ,KAAAA,EACA9U,KAAM,aAIVjB,EAAQgB,QAAQiL,GAAS6J,eAAekE,KAAKrZ,OAE7CsL,GAASC,cAAc7K,KAAKV,KAxCf,WAwC2BoV,KAG5CkE,wBA33Ba,WA23Ba,IAAAC,EAAAvZ,KACtB,GAAKA,KAAK2L,OAAOL,SAASnF,SAAS,qBAI9BjJ,EAAGc,QAAQgC,KAAK8B,SAAS4P,SAASwG,MAAM,qBAA7C,CAIA,IAAM5X,EAAO,mBAEbgL,GAASuM,UAAUnX,KAAKV,KAAMM,GAAM,GAGpC,IAAM8U,EAAOpV,KAAK8B,SAAS4P,SAASwG,MAAM,oBAAoB3R,cAAc,MAG5EzC,EAAasR,IAEM,MAAO,UAGhB/U,QAAQ,SAAAmZ,GACdlO,GAAS6J,eAAezU,KAAK6Y,GACzBtW,MAAOuW,EACPpE,KAAAA,EACA9U,KAAAA,EACAmN,MAAOnC,GAASkN,SAAS9X,KAAK6Y,EAAM,mBAAoBC,OAGhElO,GAASC,cAAc7K,KAAKV,KAAMM,EAAM8U,KAI5CqE,aA75Ba,SA65BApa,GAAS,IAAAqa,EAAA1Z,KAElB,GAAKA,KAAK2L,OAAOL,SAASnF,SAAS,aAAgBnG,KAAK2L,OAAO+F,SAASvL,SAAS,UAK5EjJ,EAAGc,QAAQgC,KAAK8B,SAAS4P,SAASwG,MAAM9M,OAA7C,CAOIlO,EAAGU,MAAMyB,GACTW,KAAKX,QAAQ+L,MAAQ/L,GACdW,KAAKwJ,SAAWxJ,KAAK2Z,WAC5B3Z,KAAKX,QAAQ+L,OAAS,GAAK,IAAM,EAAG,KAAM,IAAK,KAAM,IAIzDpL,KAAKX,QAAQ+L,MAAQpL,KAAKX,QAAQ+L,MAAMrI,OAAO,SAAAqI,GAAA,OAASsO,EAAK/N,OAAOP,MAAM/L,QAAQ8G,SAASiF,KAG3F,IAAMxL,GAAU1C,EAAGgC,MAAMc,KAAKX,QAAQ+L,QAAUpL,KAAKX,QAAQ+L,MAAMpO,OAAS,EAO5E,GANAsO,GAASuM,UAAUnX,KAAKV,KAdX,QAcuBJ,GAGpC0L,GAAS6M,UAAUzX,KAAKV,MAGnBJ,EAAL,CAKA,IAAMwV,EAAOpV,KAAK8B,SAAS4P,SAASwG,MAAM9M,MAAM7E,cAAc,MAG9DzC,EAAasR,GAGbpV,KAAKX,QAAQ+L,MAAM/K,QAAQ,SAAA+K,GACvBE,GAAS6J,eAAezU,KAAKgZ,GACzBzW,MAAOmI,EACPgK,KAAAA,EACA9U,KAnCK,QAoCLmN,MAAOnC,GAASkN,SAAS9X,KAAKgZ,EAAM,QAAStO,OAIrDE,GAASC,cAAc7K,KAAKV,KAxCf,QAwC2BoV,MAI5C+C,UAp9Ba,WAo9BD,IACAJ,EAAS/X,KAAK8B,SAAS4P,SAAvBqG,KACFjB,GAAW5Z,EAAGgC,MAAM6Y,IAASvb,OAAOod,OAAO7B,GAAM8B,KAAK,SAAAC,GAAA,OAAQA,EAAI3U,SAExED,EAAalF,KAAK8B,SAAS4P,SAAS8B,MAAOsD,IAI/CiD,WA59Ba,SA49BF3b,GAAO,IACN4b,EAASha,KAAK8B,SAAS4P,SAAvBsI,KACFrG,EAAS3T,KAAK8B,SAASuP,QAAQK,SAGrC,GAAKxU,EAAGc,QAAQgc,IAAU9c,EAAGc,QAAQ2V,GAArC,CAIA,IAAMsG,EAAO/c,EAAGO,QAAQW,GAASA,EAAQlB,EAAGc,QAAQgc,IAASA,EAAK3U,aAAa,UAE/E,GAAInI,EAAGkB,MAAMA,GAAQ,CACjB,IAAM8b,EAAahd,EAAGc,QAAQgc,IAASA,EAAKrU,SAASvH,EAAM+N,QACrDgO,EAAW/b,EAAM+N,SAAWnM,KAAK8B,SAASuP,QAAQK,SAKxD,GAAIwI,IAAgBA,IAAeC,GAAYF,EAC3C,OAIAE,GACA/b,EAAMgc,kBAKVld,EAAGc,QAAQ2V,IACXA,EAAOrQ,aAAa,gBAAiB2W,GAGrC/c,EAAGc,QAAQgc,KACX9U,EAAa8U,GAAOC,GACpB1U,EAAYvF,KAAK8B,SAASuE,UAAWrG,KAAK2L,OAAO0G,WAAWmB,KAAKtE,KAAM+K,GAEnEA,EACAD,EAAK1U,gBAAgB,YAErB0U,EAAK1W,aAAa,YAAa,MAM3C+W,WA1gCa,SA0gCFP,GACP,IAAMQ,EAAQR,EAAIzX,WAAU,GAC5BiY,EAAMpT,MAAMsS,SAAW,WACvBc,EAAMpT,MAAMqT,QAAU,EACtBD,EAAMhV,gBAAgB,UAGtB1I,MAAMqF,KAAKqY,EAAMpU,iBAAiB,gBAAgB7F,QAAQ,SAAAnE,GACtD,IAAMuZ,EAAOvZ,EAAMiO,aAAa,QAChCjO,EAAMoH,aAAa,OAAWmS,EAA9B,YAIJqE,EAAIvX,WAAWG,YAAY4X,GAG3B,IAAMtD,EAAQsD,EAAME,YACdC,EAASH,EAAMI,aAKrB,OAFA9W,EAAc0W,IAGVtD,MAAAA,EACAyD,OAAAA,IAKRE,QAviCa,WAuiCQ,IAAAC,EAAA5a,KAAbmM,EAAatM,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GACL2T,EAASxT,KAAK8B,SAAS4P,SAAvB8B,KACFkF,EAAOjV,SAAS8L,eAAepD,GAGrC,GAAKjP,EAAGc,QAAQ0a,IAK4B,aAA9BA,EAAKvO,aAAa,QAChC,CAMA,IAAM8L,EAAUzC,EAAKjN,cAAc,mCAC7BF,EAAY4P,EAAQ1T,WAQ1B,GALA3F,MAAMqF,KAAKuR,EAAKtN,iBAAL,mBAAyC+P,EAAQ9L,aAAa,MAA9D,OAA0E9J,QAAQ,SAAAT,GACzFA,EAAO0D,aAAa,iBAAiB,KAIrCgF,EAAQuB,cAAgBvB,EAAQwB,cAAe,CAE/CzD,EAAUa,MAAM8P,MAAWf,EAAQuE,YAAnC,KACAnU,EAAUa,MAAMuT,OAAYxE,EAAQyE,aAApC,KAGA,IAAMG,EAAOvP,GAAS+O,WAAW3Z,KAAKV,KAAM0Y,GAkB5CjY,EAAGC,KAAKV,KAAMqG,EAAWO,EAfT,SAAVkU,EAAU7b,GAERA,EAAEkN,SAAW9F,IAAe,QAAS,UAAUF,SAASlH,EAAE8b,gBAK9D1U,EAAUa,MAAM8P,MAAQ,GACxB3Q,EAAUa,MAAMuT,OAAS,GAGzB9Z,EAAID,KAAKka,EAAMvU,EAAWO,EAAoBkU,MAOlDzU,EAAUa,MAAM8P,MAAW6D,EAAK7D,MAAhC,KACA3Q,EAAUa,MAAMuT,OAAYI,EAAKJ,OAAjC,KAIJvV,EAAa+Q,GAAS,GACtBA,EAAQ3S,aAAa,YAAa,GAGlC4B,EAAawT,GAAM,GAEnB,IAAMX,EAAO3R,EAAY1F,KAAKV,KAAjB,mBAA0CmM,EAA1C,MACbvP,MAAMqF,KAAK8V,GAAM1X,QAAQ,SAAAyZ,GACrBA,EAAIxW,aAAa,iBAAiB,KAEtCoV,EAAKpT,gBAAgB,YAGrBoT,EAAKxS,iBAAiB,2DAA2D,GAAG8U,UAKxFC,OAnnCa,SAmnCNxL,GAAM,IAAAyL,EAAAlb,KAET,GAAI9C,EAAGgC,MAAMc,KAAK2L,OAAOL,UACrB,OAAO,KAIX,IAAMjF,EAAY9C,EAAc,MAAOc,EAA0BrE,KAAK2L,OAAOyF,UAAU9F,SAASvJ,UAuBhG,GApBI/B,KAAK2L,OAAOL,SAASnF,SAAS,YAC9BE,EAAU3D,YAAY4I,GAASmI,aAAa/S,KAAKV,KAAM,YAIvDA,KAAK2L,OAAOL,SAASnF,SAAS,WAC9BE,EAAU3D,YAAY4I,GAASmI,aAAa/S,KAAKV,KAAM,WAIvDA,KAAK2L,OAAOL,SAASnF,SAAS,SAC9BE,EAAU3D,YAAY4I,GAASmI,aAAa/S,KAAKV,KAAM,SAIvDA,KAAK2L,OAAOL,SAASnF,SAAS,iBAC9BE,EAAU3D,YAAY4I,GAASmI,aAAa/S,KAAKV,KAAM,iBAIvDA,KAAK2L,OAAOL,SAASnF,SAAS,YAAa,CAC3C,IAAM0L,EAAWtO,EAAc,MAAOc,EAA0BrE,KAAK2L,OAAOyF,UAAUS,WAetF,GAZAA,EAASnP,YACL4I,GAAS6I,YAAYzT,KAAKV,KAAM,QAC5BiF,GAAAA,aAAiBwK,EAAKxK,MAK9B4M,EAASnP,YAAY4I,GAASuJ,eAAenU,KAAKV,KAAM,WAKpDA,KAAK2L,OAAOgL,SAAS5E,KAAM,CAC3B,IAAMO,EAAU/O,EACZ,QAEIyB,MAAOhF,KAAK2L,OAAO0G,WAAWC,SAElC,SAGJT,EAASnP,YAAY4P,GACrBtS,KAAK8B,SAASmQ,QAAQG,YAAcE,EAGxCtS,KAAK8B,SAAS+P,SAAWA,EACzBxL,EAAU3D,YAAY1C,KAAK8B,SAAS+P,UAmBxC,GAfI7R,KAAK2L,OAAOL,SAASnF,SAAS,iBAC9BE,EAAU3D,YAAY4I,GAAS4J,WAAWxU,KAAKV,KAAM,gBAIrDA,KAAK2L,OAAOL,SAASnF,SAAS,aAC9BE,EAAU3D,YAAY4I,GAAS4J,WAAWxU,KAAKV,KAAM,aAIrDA,KAAK2L,OAAOL,SAASnF,SAAS,SAC9BE,EAAU3D,YAAY4I,GAASmI,aAAa/S,KAAKV,KAAM,SAIvDA,KAAK2L,OAAOL,SAASnF,SAAS,UAAW,CACzC,IAAM6L,EAASzO,EAAc,OACzByB,MAAO,iBAILnC,GACFwR,IAAK,EACLC,KAAM,IACNrR,MAAOjD,KAAK2L,OAAOqG,QAIvBA,EAAOtP,YACH4I,GAAS6I,YAAYzT,KACjBV,KACA,SACAsK,EAAOzH,GACHoC,GAAAA,eAAmBwK,EAAKxK,OAKpCjF,KAAK8B,SAASkQ,OAASA,EAEvB3L,EAAU3D,YAAYsP,GAS1B,GALIhS,KAAK2L,OAAOL,SAASnF,SAAS,aAC9BE,EAAU3D,YAAY4I,GAASmI,aAAa/S,KAAKV,KAAM,aAIvDA,KAAK2L,OAAOL,SAASnF,SAAS,cAAgBjJ,EAAGgC,MAAMc,KAAK2L,OAAO+F,UAAW,CAC9E,IAAM8B,EAAOjQ,EAAc,OACvByB,MAAO,aACPG,OAAQ,KAGZqO,EAAK9Q,YACD4I,GAASmI,aAAa/S,KAAKV,KAAM,YAC7BiF,GAAAA,wBAA4BwK,EAAKxK,GACjCkW,iBAAiB,EACjBC,gBAAA,iBAAkC3L,EAAKxK,GACvCoW,iBAAiB,KAIzB,IAAMrB,EAAOzW,EAAc,QACvByB,MAAO,wBACPC,GAAAA,iBAAqBwK,EAAKxK,GAC1BE,OAAQ,GACRmW,mBAAA,wBAA4C7L,EAAKxK,GACjD8N,KAAM,UACNwI,UAAW,IAGTC,EAAQjY,EAAc,OAEtBkY,EAAOlY,EAAc,OACvB0B,GAAAA,iBAAqBwK,EAAKxK,GAA1B,QACAqW,mBAAA,wBAA4C7L,EAAKxK,GACjD8N,KAAM,aAIJgF,EAAOxU,EAAc,MACvBwP,KAAM,YAIV/S,KAAK2L,OAAO+F,SAASrR,QAAQ,SAAAC,GACzB,IAAMwZ,EAAMvW,EAAc,MACtBwP,KAAM,MACN5N,OAAQ,KAGNwO,EAASpQ,EACX,SACA+G,EAAOjG,EAA0B6W,EAAKvP,OAAOyF,UAAUC,QAAQK,WAC3DpR,KAAM,SACN0E,MAAUkW,EAAKvP,OAAO0G,WAAW0B,QAAjC,IAA4CmH,EAAKvP,OAAO0G,WAAW0B,QAAnE,YACA9O,GAAAA,iBAAqBwK,EAAKxK,GAA1B,IAAgC3E,EAAhC,OACA6a,iBAAiB,EACjBC,gBAAA,iBAAkC3L,EAAKxK,GAAvC,IAA6C3E,EAC7C+a,iBAAiB,IAErBhO,EAAS/M,EAAM4a,EAAKvP,SAGlB1I,EAAQM,EAAc,QACxByB,MAAOkW,EAAKvP,OAAO0G,WAAWmB,KAAKvQ,QAIvCA,EAAMmK,UAAYqC,EAAKnP,GAEvBqT,EAAOjR,YAAYO,GACnB6W,EAAIpX,YAAYiR,GAChBoE,EAAKrV,YAAYoX,GAEjBoB,EAAKpZ,SAAS4P,SAASqG,KAAKzX,GAAQwZ,IAGxC2B,EAAK/Y,YAAYqV,GACjByD,EAAM9Y,YAAY+Y,GAGlBzb,KAAK2L,OAAO+F,SAASrR,QAAQ,SAAAC,GACzB,IAAMoY,EAAOnV,EAAc,OACvB0B,GAAAA,iBAAqBwK,EAAKxK,GAA1B,IAAgC3E,EAChC6E,OAAQ,GACRmW,mBAAA,iBAAqC7L,EAAKxK,GAA1C,IAAgD3E,EAAhD,OACAyS,KAAM,WACNwI,UAAW,IAGTG,EAAOnY,EACT,UAEIjD,KAAM,SACN0E,MAAUkW,EAAKvP,OAAO0G,WAAW0B,QAAjC,IAA4CmH,EAAKvP,OAAO0G,WAAW0B,QAAnE,SACAoH,iBAAiB,EACjBC,gBAAA,iBAAkC3L,EAAKxK,GAAvC,QACAoW,iBAAiB,GAErBhO,EAAS/M,EAAM4a,EAAKvP,SAGxB+M,EAAKhW,YAAYgZ,GAEjB,IAAMrc,EAAUkE,EAAc,MAE9BmV,EAAKhW,YAAYrD,GACjBmc,EAAM9Y,YAAYgW,GAElBwC,EAAKpZ,SAAS4P,SAASwG,MAAM5X,GAAQoY,IAGzCsB,EAAKtX,YAAY8Y,GACjBhI,EAAK9Q,YAAYsX,GACjB3T,EAAU3D,YAAY8Q,GAEtBxT,KAAK8B,SAAS4P,SAASsI,KAAOA,EAC9Bha,KAAK8B,SAAS4P,SAAS8B,KAAOA,EAmClC,OA/BIxT,KAAK2L,OAAOL,SAASnF,SAAS,QAAUmC,EAAQU,KAChD3C,EAAU3D,YAAY4I,GAASmI,aAAa/S,KAAKV,KAAM,QAIvDA,KAAK2L,OAAOL,SAASnF,SAAS,YAAcmC,EAAQY,SACpD7C,EAAU3D,YAAY4I,GAASmI,aAAa/S,KAAKV,KAAM,YAGvDA,KAAK2L,OAAOL,SAASnF,SAAS,SAC9BE,EAAU3D,YAAY4I,GAASmI,aAAa/S,KAAKV,KAAM,SAIvDA,KAAK2L,OAAOL,SAASnF,SAAS,eAC9BE,EAAU3D,YAAY4I,GAASmI,aAAa/S,KAAKV,KAAM,eAIvDA,KAAK2L,OAAOL,SAASnF,SAAS,eAC9BnG,KAAK8B,SAASuE,UAAU3D,YAAY4I,GAASmI,aAAa/S,KAAKV,KAAM,eAGzEA,KAAK8B,SAASwJ,SAAWjF,EAErBrG,KAAKwJ,SACL8B,GAAS0M,eAAetX,KAAKV,KAAMgK,EAAMI,kBAAkB1J,KAAKV,OAGpEsL,GAASmO,aAAa/Y,KAAKV,MAEpBqG,GAIXsV,OA13Ca,WA03CJ,IAAAC,EAAA5b,KAEL,GAAIA,KAAK2L,OAAOyD,WAAY,CACxB,IAAMyD,EAAOvH,GAASuF,WAAWnQ,KAAKV,MAGlC6S,EAAK/B,MACL1B,GAAWyD,EAAKhU,IAAK,eAK7BmB,KAAKiF,GAAKwS,KAAKoE,MAAsB,IAAhBpE,KAAKqE,UAG1B,IAAIzV,EAAY,KAChBrG,KAAK8B,SAASwJ,SAAW,KAGzB,IAAMyQ,GACF9W,GAAIjF,KAAKiF,GACT+W,SAAUhc,KAAK2L,OAAO4B,SACtBE,MAAOzN,KAAK2L,OAAO8B,OAEnB+B,GAAS,EAETtS,EAAGM,OAAOwC,KAAK2L,OAAOL,WAAapO,EAAGc,QAAQgC,KAAK2L,OAAOL,UAE1DjF,EAAYrG,KAAK2L,OAAOL,SACjBpO,EAAGQ,SAASsC,KAAK2L,OAAOL,WAG/BjF,EAAYrG,KAAK2L,OAAOL,SAAS5K,KAAKV,KAAM+b,GACxC7e,EAAGc,QAAQqI,KACXmJ,GAAS,KAIbnJ,EAAYiF,GAAS2P,OAAOva,KAAKV,MAC7BiF,GAAIjF,KAAKiF,GACT+W,SAAUhc,KAAK2L,OAAO4B,SACtBnC,MAAOpL,KAAKoL,MACZI,QAASxL,KAAKwL,QACdmG,SAAUA,GAAS6G,SAAS9X,KAAKV,QAIrCwP,GAAS,GAIb,IAAM3K,EAAU,SAAA3I,GACZ,IAAI8T,EAAS9T,EAMb,OAJAM,OAAOsG,QAAQiZ,GAAO1b,QAAQ,SAAAqN,GAAkB,IAAAvK,EAAAD,EAAAwK,EAAA,GAAhBrK,EAAgBF,EAAA,GAAXF,EAAWE,EAAA,GAC5C6M,EAAStD,EAAWsD,EAAX,IAAuB3M,EAAvB,IAA+BJ,KAGrC+M,GAIPR,IACItS,EAAGM,OAAOwC,KAAK2L,OAAOL,UACtBjF,EAAYxB,EAAQwB,GACbnJ,EAAGc,QAAQqI,KAClBA,EAAU+G,UAAYvI,EAAQwB,EAAU+G,aAKhD,IZ18CgBpP,EY08CZmO,OAAAA,EA2BJ,GAxBIjP,EAAGM,OAAOwC,KAAK2L,OAAOyF,UAAU9F,SAASjF,aACzC8F,EAAS1I,SAAS8C,cAAcvG,KAAK2L,OAAOyF,UAAU9F,SAASjF,YAI9DnJ,EAAGc,QAAQmO,KACZA,EAASnM,KAAK8B,SAASuE,WAK3B8F,EADqBjP,EAAGc,QAAQqI,GAAa,wBAA0B,sBAClD,aAAcA,GAG9BnJ,EAAGc,QAAQgC,KAAK8B,SAASwJ,WAC1BA,GAAS6F,aAAazQ,KAAKV,MAI3BzB,OAAOmJ,UAAUC,UAAUxB,SAAS,UZh+CxBnI,EYi+CJmO,EZh+ChB8P,WAAW,WACP/W,EAAalH,GAAS,GACtBA,EAAQke,aACRhX,EAAalH,GAAS,IACvB,IYg+CKgC,KAAK2L,OAAOgL,SAASrL,SAAU,CAAA,IAAA6Q,EACGnc,KAAK2L,OAA/B0G,EADuB8J,EACvB9J,WAAYjB,EADW+K,EACX/K,UACd1M,EAAc0M,EAAU9F,SAASvJ,QAAjC,IAA4CqP,EAAUgL,OAAtD,KAAiE/J,EAAWlN,OAC5EiX,EAAShW,EAAY1F,KAAKV,KAAM0E,GAEtC9H,MAAMqF,KAAKma,GAAQ/b,QAAQ,SAAAuT,GACvBrO,EAAYqO,EAAOgI,EAAKjQ,OAAO0G,WAAWlN,QAAQ,GAClDI,EAAYqO,EAAOgI,EAAKjQ,OAAO0G,WAAWC,SAAS,QCx/C5D,SAAS+J,GAASngB,GAAoB,IACrC2C,EAAM3C,EAEV,KAHyC2D,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,KAAAA,UAAA,GAG/B,CACN,IAAMyc,EAAS7Y,SAASF,cAAc,KACtC+Y,EAAOC,KAAO1d,EACdA,EAAMyd,EAAOC,KAGjB,IACI,OAAO,IAAIzd,IAAID,GACjB,MAAOI,GACL,OAAO,MAKR,SAASud,GAAetgB,GAC3B,IAAMugB,EAAS,IAAIC,gBAQnB,OANIxf,EAAGE,OAAOlB,IACVM,OAAOsG,QAAQ5G,GAAOmE,QAAQ,SAAA2C,GAAkB,IAAA0K,EAAAxK,EAAAF,EAAA,GAAhBK,EAAgBqK,EAAA,GAAXzK,EAAWyK,EAAA,GAC5C+O,EAAOhS,IAAIpH,EAAKJ,KAIjBwZ,ECZX,IAAM9K,IAEFgL,MAFa,WAIT,GAAK3c,KAAKZ,UAAU0J,GAKpB,IAAK9I,KAAK4c,SAAW5c,KAAK6c,WAAc7c,KAAKwJ,UAAYlB,EAAQqB,WAGzDzM,EAAGU,MAAMoC,KAAK2L,OAAOL,WACrBtL,KAAK2L,OAAOL,SAASnF,SAAS,aAC9BnG,KAAK2L,OAAO+F,SAASvL,SAAS,cAE9BmF,GAASwN,gBAAgBpY,KAAKV,MAC9BsL,GAASgO,wBAAwB5Y,KAAKV,WAR9C,CfqCD,IAAqBhC,EAASmO,Eed7B,GARKjP,EAAGc,QAAQgC,KAAK8B,SAAS6P,YAC1B3R,KAAK8B,SAAS6P,SAAWpO,EAAc,MAAOc,EAA0BrE,KAAK2L,OAAOyF,UAAUO,WfqB9E3T,EenBJgC,KAAK8B,SAAS6P,UfmBDxF,EenBWnM,KAAK8B,SAASC,SfoBnDQ,WAAWI,aAAa3E,EAASmO,EAAO1J,cefvC2E,EAAQC,MAAQ9I,OAAOO,IAAK,CAC5B,IAAMgD,EAAW9B,KAAKyJ,MAAMvD,iBAAiB,SAE7CtJ,MAAMqF,KAAKH,GAAUzB,QAAQ,SAAA3B,GACzB,IAAMuM,EAAMvM,EAAMyL,aAAa,OACzBtL,EAAMwd,GAASpR,GAGT,OAARpM,GACAA,EAAIG,WAAaT,OAAOyS,SAASuL,KAAKvd,WACrC,QAAS,UAAUmH,SAAStH,EAAIie,WAEjCtO,EAAMvD,EAAK,QACN8E,KAAK,SAAAgN,GACFre,EAAM4E,aAAa,MAAO/E,OAAOO,IAAIke,gBAAgBD,MAExD9M,MAAM,WACHrM,EAAclF,OAalC,IAAMue,EAAYtP,EACd/Q,MAAMqF,KAAKyF,UAAUuV,WAAavV,UAAUyR,UAAYzR,UAAUwV,cAAc7S,IAAI,SAAA8O,GAAA,OAAYA,EAAS/Y,MAAM,KAAK,MAGpH+Y,GAAYnZ,KAAKqL,QAAQ9L,IAAI,aAAeS,KAAK2L,OAAOgG,SAASwH,UAAY,QAAQpM,cAGzF,GAAiB,SAAboM,EACCA,EADoBjW,EACR+Z,EADQ,GAAA,GAIzB,IAAIE,EAASnd,KAAKqL,QAAQ9L,IAAI,YAe9B,GAdKrC,EAAGO,QAAQ0f,KACTA,EAAWnd,KAAK2L,OAAOgG,SAAvBwL,QAGP3gB,OAAO8E,OAAOtB,KAAK2R,UACfuH,SAAS,EACTiE,OAAAA,EACAhE,SAAAA,EACA8D,UAAAA,IAGJtL,GAASyL,YAAY1c,KAAKV,KAAMA,KAAK4Y,iBAGjC5Y,KAAKwJ,QAAS,CACd,IAAM6T,EAAcrd,KAAK2L,OAAOgG,SAASnC,OAAS,uBAAyB,cAC3E/O,EAAGC,KAAKV,KAAMA,KAAKyJ,MAAME,WAAY0T,EAAa1L,GAASnC,OAAO6J,KAAKrZ,OAI3Eic,WAAWtK,GAASnC,OAAO6J,KAAKrZ,MAAO,KAI3CwP,OAlGa,WAkGJ,IAAAzP,EAAAC,KACCgZ,EAASrH,GAASsH,UAAUvY,KAAKV,MAAM,GADxCsd,EAGgDtd,KAAK2R,SAAlDwL,EAHHG,EAGGH,OAAQhE,EAHXmE,EAGWnE,SAAUoE,EAHrBD,EAGqBC,KAAMC,EAH3BF,EAG2BE,iBAC1BC,EAAiBphB,QAAQ2c,EAAO/R,KAAK,SAAAvI,GAAA,OAASA,EAAMya,WAAaA,KAGnEnZ,KAAKwJ,SAAWxJ,KAAK4c,SACrB5D,EAAOjW,OAAO,SAAArE,GAAA,OAAU6e,EAAKhe,IAAIb,KAAQ2B,QAAQ,SAAA3B,GAC7CqB,EAAK8L,MAAMC,IAAI,cAAepN,GAE9B6e,EAAK9S,IAAI/L,GACLma,QAAwB,YAAfna,EAAMgf,OAInBhf,EAAMgf,KAAO,SAGbjd,EAAGC,KAAKX,EAAMrB,EAAO,YAAa,WAAA,OAAMiT,GAASgM,WAAWjd,KAAKX,QAKpE0d,GAAkBzd,KAAKmZ,WAAaA,IAAcH,EAAO7S,SAASqX,MACnE7L,GAASiM,YAAYld,KAAKV,KAAMmZ,GAChCxH,GAAS/R,OAAOc,KAAKV,KAAMmd,GAAUM,IAIzClY,EAAYvF,KAAK8B,SAASuE,UAAWrG,KAAK2L,OAAO0G,WAAWV,SAAS3D,SAAU9Q,EAAGgC,MAAM8Z,IAGpF9b,EAAGM,OAAOwC,KAAK2L,OAAOL,WAAapO,EAAGQ,SAASsC,KAAK2L,OAAOL,UACvDtL,KAAK2L,OAAOkS,YAAc3gB,EAAGQ,SAASsC,KAAK2L,OAAOkS,WAAWC,UAC7D9d,KAAK2L,OAAOkS,WAAWC,QAAQpd,KAAKV,OAEhCA,KAAK2L,OAAOL,cAAgBnF,SAAS,aAAenG,KAAK2L,OAAO+F,SAASvL,SAAS,aAE1FmF,GAASwN,gBAAgBpY,KAAKV,OAMtCJ,OA/Ia,SA+IN1D,GAAuB,IAAhB+D,IAAgBJ,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,KAAAA,UAAA,GAE1B,GAAKG,KAAKZ,UAAU0J,GAApB,CAF0B,IAMlBoQ,EAAYlZ,KAAK2R,SAAjBuH,QACF6E,EAAc/d,KAAK2L,OAAO0G,WAAWV,SAASwL,OAI9CA,EAASjgB,EAAGC,gBAAgBjB,IAAUgd,EAAUhd,EAGtD,GAAIihB,IAAWjE,EAAS,CAQpB,GANKjZ,IACDD,KAAK2R,SAASwL,OAASA,EACvBnd,KAAKqL,QAAQZ,KAAMkH,SAAUwL,MAI5Bnd,KAAKmZ,UAAYgE,IAAWld,EAAS,CACtC,IAAM+Y,EAASrH,GAASsH,UAAUvY,KAAKV,MACjCtB,EAAQiT,GAASqM,UAAUtd,KAAKV,MAAOA,KAAK2R,SAASwH,UAA7C9M,6HAAA4R,CAA0Dje,KAAK2R,SAASsL,aAAY,GAOlG,OAJAjd,KAAK2R,SAASwH,SAAWza,EAAMya,cAG/BxH,GAASlH,IAAI/J,KAAKV,KAAMgZ,EAAOnL,QAAQnP,IAKvCsB,KAAK8B,SAASuP,QAAQM,WACtB3R,KAAK8B,SAASuP,QAAQM,SAASuC,QAAUiJ,GAI7C5X,EAAYvF,KAAK8B,SAASuE,UAAW0X,EAAaZ,GAElDnd,KAAK2R,SAASuH,QAAUiE,EAGxB7R,GAASC,cAAc7K,KAAKV,KAAM,YAGlCkB,EAAaR,KAAKV,KAAMA,KAAKyJ,MAAO0T,EAAS,kBAAoB,uBAMzE1S,IArMa,SAqMTtI,GAAuB,IAAhBlC,IAAgBJ,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,KAAAA,UAAA,GACjBmZ,EAASrH,GAASsH,UAAUvY,KAAKV,MAGvC,IAAe,IAAXmC,EAKJ,GAAKjF,EAAGG,OAAO8E,GAKf,GAAMA,KAAS6W,EAAf,CAKA,GAAIhZ,KAAK2R,SAASgH,eAAiBxW,EAAO,CACtCnC,KAAK2R,SAASgH,aAAexW,EAC7B,IAAMzD,EAAQsa,EAAO7W,GACjBiF,EAAQW,SACRrJ,EAAMgf,KAAO,WAJqB,IAM9BvE,GAAaza,OAAbya,SAGRnZ,KAAK2R,SAAS6L,iBAAmB9e,EAGjC4M,GAASC,cAAc7K,KAAKV,KAAM,YAG7BC,IACDD,KAAK2R,SAASwH,SAAWA,EACzBnZ,KAAKqL,QAAQZ,KAAM0O,SAAAA,KAInBnZ,KAAK2Z,SACL3Z,KAAKke,MAAMC,gBAAgBhF,GAI/BjY,EAAaR,KAAKV,KAAMA,KAAKyJ,MAAO,kBAIxCkI,GAAS/R,OAAOc,KAAKV,MAAM,EAAMC,GAE7BD,KAAKwJ,SAAWxJ,KAAK4c,SAErBjL,GAASgM,WAAWjd,KAAKV,WAtCzBA,KAAK6L,MAAM2G,KAAK,kBAAmBrQ,QALnCnC,KAAK6L,MAAM2G,KAAK,2BAA4BrQ,QAL5CwP,GAAS/R,OAAOc,KAAKV,MAAM,EAAOC,IAsD1C2d,YAhQa,SAgQD1hB,GAAuB,IAAhB+D,IAAgBJ,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,KAAAA,UAAA,GAC/B,GAAK3C,EAAGM,OAAOtB,GAAf,CAKA,IAAMid,EAAWjd,EAAM6Q,cACvB/M,KAAK2R,SAASwH,SAAWA,EAGzB,IAAMH,EAASrH,GAASsH,UAAUvY,KAAKV,MACjCtB,EAAQiT,GAASqM,UAAUtd,KAAKV,MAAOmZ,IAC7CxH,GAASlH,IAAI/J,KAAKV,KAAMgZ,EAAOnL,QAAQnP,GAAQuB,QAV3CD,KAAK6L,MAAM2G,KAAK,4BAA6BtW,IAgBrD+c,UAlRa,WAkRa,IAAAvC,EAAA1W,KAAhBwP,EAAgB3P,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAKtB,OAHejD,MAAMqF,MAAMjC,KAAKyJ,WAAaE,gBAIxC5G,OAAO,SAAArE,GAAA,OAAUgY,EAAKlN,SAAWgG,GAAUkH,EAAK/E,SAAS4L,KAAKa,IAAI1f,KAClEqE,OAAO,SAAArE,GAAA,OAAU,WAAY,aAAayH,SAASzH,EAAME,SAIlEof,UA7Ra,SA6RHf,GAA0B,IAAAhF,EAAAjY,KAAfwF,EAAe3F,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAC1BmZ,EAASrH,GAASsH,UAAUvY,KAAKV,MACjCqe,EAAgB,SAAA3f,GAAA,OAASpB,QAAQ2a,EAAKtG,SAAS4L,KAAKhe,IAAIb,QAAcma,UACtEyF,EAAS1hB,MAAMqF,KAAK+W,GAAQZ,KAAK,SAACC,EAAGC,GAAJ,OAAU+F,EAAc/F,GAAK+F,EAAchG,KAC9E3Z,OAAAA,EAMJ,OALAue,EAAUsB,MAAM,SAAApF,GAEZ,QADAza,EAAQ4f,EAAOrX,KAAK,SAAAvI,GAAA,OAASA,EAAMya,WAAaA,OAI7Cza,IAAU8G,EAAQ8Y,EAAO,QAAKxe,IAIzC0e,gBA3Sa,WA4ST,OAAO7M,GAASsH,UAAUvY,KAAKV,MAAMA,KAAK2Y,eAI9CH,SAhTa,SAgTJ9Z,GACL,IAAIia,EAAeja,EAMnB,OAJKxB,EAAGwB,MAAMia,IAAiBrQ,EAAQqB,YAAc3J,KAAK2R,SAASuH,UAC/DP,EAAehH,GAAS6M,gBAAgB9d,KAAKV,OAG7C9C,EAAGwB,MAAMia,GACJzb,EAAGgC,MAAMyZ,EAAa/E,OAItB1W,EAAGgC,MAAMyZ,EAAaQ,UAIpB9L,EAAS,UAAWrN,KAAK2L,QAHrBjN,EAAMya,SAAStM,cAJf8L,EAAa/E,MAUrBvG,EAAS,WAAYrN,KAAK2L,SAKrCgS,WAxUa,SAwUFzhB,GAEP,GAAK8D,KAAKZ,UAAU0J,GAIpB,GAAK5L,EAAGc,QAAQgC,KAAK8B,SAAS6P,UAM9B,GAAKzU,EAAGC,gBAAgBjB,IAAWU,MAAMD,QAAQT,GAAjD,CAKA,IAAIuiB,EAAOviB,EAGX,IAAKuiB,EAAM,CACP,IAAM/f,EAAQiT,GAAS6M,gBAAgB9d,KAAKV,MAC5Cye,EAAO7hB,MAAMqF,MAAMvD,OAAaggB,gBAC3BrU,IAAI,SAAA/L,GAAA,OAAOA,EAAIqgB,iBACftU,IAAI8C,GAIb,IAAM2C,EAAU2O,EAAKpU,IAAI,SAAAuU,GAAA,OAAWA,EAAQja,SAAQ0O,KAAK,MAGzD,GAFgBvD,IAAY9P,KAAK8B,SAAS6P,SAASvE,UAEtC,CAETtJ,EAAa9D,KAAK8B,SAAS6P,UAC3B,IAAMmM,EAAUva,EAAc,OAAQc,EAA0BrE,KAAK2L,OAAOyF,UAAU0M,UACtFA,EAAQ1Q,UAAY0C,EACpB9P,KAAK8B,SAAS6P,SAASjP,YAAYob,GAGnC5c,EAAaR,KAAKV,KAAMA,KAAKyJ,MAAO,mBA1BpCzJ,KAAK6L,MAAM2G,KAAK,4BAA6BtW,QAN7C8D,KAAK6L,MAAM2G,KAAK,qCAoCxB4K,YAnXa,SAmXD5D,GAER,GAAI5T,EAAS5F,KAAK8B,SAAS6P,SAAU3R,KAAK2L,OAAO0G,WAAWuG,gBAAgB/T,QAAQ,MAAO,SACvF,GAAiB,QAAb2U,EAAoB,YACrB,GAAiB,WAAbA,EACP,OAEJjU,EAAYvF,KAAK8B,SAAS6P,SAAU3R,KAAK2L,OAAO0G,WAAWuG,gBAAgB/T,QAAQ,MAAO,QAG1FyG,GAASC,cAAc7K,KAAKV,KAAM,qBAGtC6e,WAhYa,WAgYsB,IAAxBC,EAAwBjf,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAN,KACnBkf,EAAiB/e,KAAKqL,QAAQ9L,IAAI,YAClCyf,EAAmBhf,KAAKqL,QAAQ9L,IAAI,aAAeuf,EAEzD,GACK5hB,EAAGO,QAAQshB,IAAmBA,GAAkB7hB,EAAGM,OAAOwhB,KACzD9hB,EAAGO,QAAQshB,IAAmB7hB,EAAGM,OAAOwhB,GAC5C,CACE,IAAMhG,EAASrH,GAASsH,UAAUvY,KAAKV,MAAM,GACvCif,GAAoBD,GACtBF,GACAG,EAAiBze,KAAKse,GAE1BliB,MAAMkJ,UAAUtF,KAAKS,MAAMge,EAAkBjf,KAAK2R,SAASsL,WAC3D,IAAMve,EAAQiT,GAASqM,UAAUtd,KAAKV,KAAMif,GAAkB,GAC9DtN,GAASlH,IAAI/J,KAAKV,KAAMgZ,EAAOnL,QAAQnP,OCpa7CwgB,IAEFlR,SAAS,EAGTP,MAAO,GAGP5B,OAAO,EAGPsT,UAAU,EAGVC,WAAW,EAIXzW,aAAa,EAGb4E,SAAU,GAGVyE,OAAQ,EACR+D,OAAO,EAGP5D,SAAU,KAIVyF,iBAAiB,EAGjBN,YAAY,EAGZ+H,cAAc,EAGdC,MAAO,OAGPC,aAAa,EAGbC,cAAc,EAGdC,YAAY,EAGZC,oBAAoB,EAGpBtQ,YAAY,EACZwD,WAAY,OACZ7B,QAAS,sCAGTnF,WAAY,uCAEZ+T,MACI9gB,SAAKiB,EACL8f,UAAM9f,GAIV+f,yBAAqB/f,EAGrB0L,SACIqN,QAAS,IACTxZ,SACI,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,YAKRygB,MACI3C,QAAQ,GAMZ/R,OACI2U,SAAU,EACV1gB,SAAU,GAAK,IAAM,EAAG,KAAM,IAAK,KAAM,IAI7C2gB,UACIvZ,SAAS,EACTwZ,QAAQ,GAIZtJ,UACIrL,UAAU,EACVyG,MAAM,GAIVJ,UACIwL,QAAQ,EACRhE,SAAU,OACVK,SAAU,SAGVhK,QAAQ,GAIZoC,YACI5D,SAAS,EACTkS,UAAU,EACVC,WAAW,GAIf9U,SACI2C,SAAS,EACT3K,IAAK,QAITiI,UACI,aAGA,OAEA,WACA,eACA,OACA,SACA,WACA,mBACA,WACA,MACA,UACA,OACA,cAEJoG,UAAW,WAAY,mBAAoB,UAAW,SAGtDrE,MACIiE,QAAS,UACTC,OAAQ,qBACRrG,KAAM,OACNH,MAAO,QACPyG,YAAa,sBACbO,KAAM,OACNqO,UAAW,8BACXpL,OAAQ,SACRsB,SAAU,WACV3L,YAAa,eACbwH,SAAU,WACVH,OAAQ,SACRP,KAAM,OACN4O,OAAQ,SACRC,eAAgB,kBAChBC,gBAAiB,mBACjBC,gBAAiB,mBACjBC,eAAgB,kBAChBC,UAAW,OACXC,SAAU,oBACVC,WAAY,qBACZjP,SAAU,WACVkP,WAAY,cACZC,mBAAoB,mBACpBC,sBACIC,IAAK,MACLC,OAAQ,UAEZvP,SAAU,WACVwP,SAAU,2BACV9V,MAAO,QACP+V,OAAQ,SACR3V,QAAS,UACTsU,KAAM,OACNsB,MAAO,QACPC,IAAK,MACLC,IAAK,MACLC,MAAO,QACPC,SAAU,WACVxT,QAAS,UACTyT,cAAe,KACfC,cACIC,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLC,IAAK,OAKbC,MACIC,OACIC,IAAK,yCACLC,OAAQ,yCACRvZ,IAAK,2CAETwZ,SACIF,IAAK,qCACLtZ,IACI,yGAERyZ,WACIH,IAAK,uDAKbtE,YACIC,QAAS,MAIbyE,WACIxQ,KAAM,KACN7G,KAAM,KACNH,MAAO,KACPuG,QAAS,KACTC,OAAQ,KACRC,YAAa,KACbC,KAAM,KACNO,OAAQ,KACRL,SAAU,KACVC,WAAY,KACZ5I,IAAK,KACLE,QAAS,KACTkC,MAAO,KACPI,QAAS,KACTsU,KAAM,KACN3G,SAAU,MAIdhZ,QAGI,QACA,WACA,UACA,UACA,UACA,UACA,iBACA,YACA,aACA,iBACA,aACA,eACA,OACA,QACA,QACA,UACA,SACA,UACA,aACA,YAGA,kBACA,iBACA,sBACA,qBACA,kBACA,mBACA,iBACA,iBACA,gBACA,QAGA,cACA,gBACA,mBAGA,YACA,kBACA,mBACA,YACA,cACA,cACA,iBACA,gBACA,YAKJiR,WACIoR,SAAU,6CACVnc,UAAW,QACXiF,UACIjF,UAAW,KACXtE,QAAS,kBACT0gB,OACIC,SAAU,sBACVC,YAAa,0BAEjB1B,QACI/J,KAAM,8BACN0L,MAAO,iCAGfxG,OAAQ,cACR/K,SACInG,KAAM,qBACNH,MAAO,sBACPuG,QAAS,wBACTC,OAAQ,uBACRC,YAAa,6BACbC,KAAM,qBACNE,SAAU,yBACVkR,KAAM,qBACNjR,WAAY,2BACZ5I,IAAK,oBACLE,QAAS,wBACTwI,SAAU,yBACVoO,KAAM,sBAEVhO,QACIC,KAAM,qBACNC,OAAQ,uBACR5G,MAAO,sBACP+N,SAAU,yBACV2H,mBAAoB,iCACpBtV,QAAS,yBAEbyG,SACItH,YAAa,uBACbwH,SAAU,wBACVD,OAAQ,0BACR4N,KAAM,wBACN9N,OAAQ,0BAEZH,SAAU,kBACVF,SAAU,kBACVmM,QAAS,iBACTtK,MACIhI,QAAS,kCAKjB6G,YACI/R,KAAM,YACNoI,SAAU,YACVF,MAAO,sBACP0V,MAAO,oBACP4E,eAAgB,+BAChBC,OAAQ,eACRC,cAAe,uBACfC,IAAK,YACLlP,QAAS,gBACTC,eAAgB,yBAChBkP,QAAS,gBACTtY,OAAQ,eACRuY,QAAS,gBACTC,QAAS,gBACTC,MAAO,cACP/Q,QAAS,gBACTmM,KAAM,aACNtZ,OAAQ,gBACRqa,aAAc,sBACd1X,MAAO,eACPwb,QAAS,iBACTC,YAAa,gBACbC,aAAc,sBACd7D,KAAM,aACNnM,MACIvQ,MAAO,oBACPsQ,MAAO,cACPrE,KAAM,mBAEVyC,UACI3D,QAAS,yBACTmP,OAAQ,yBAEZvE,gBAAiB,8BACjBhH,YACI5D,QAAS,2BACTkS,SAAU,6BAEdlX,KACI5J,UAAW,sBACX+d,OAAQ,oBAEZjU,SACI9J,UAAW,0BACX+d,OAAQ,wBAEZsG,SAAU,kBACVC,eAAgB,yBAIpB7gB,YACIqb,OACIxV,SAAU,qBACVzD,GAAI,uBAKZhI,MACI0mB,OAAQ,MAKZV,KACIjV,SAAS,EACT4V,YAAa,KChbRC,IACT7Z,MAAO,QACPqY,QAAS,UACTH,MAAO,SAGE4B,IACTvb,MAAO,QACPC,MAAO,SCRX,IAAMub,GAAO,aAEQC,GAAAA,WACjB,SAAAA,IAA6B,IAAjBhW,EAAiBnO,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAAAkO,EAAA/N,KAAAgkB,GACzBhkB,KAAKgO,QAAUzP,OAAO0lB,SAAWjW,EAE7BhO,KAAKgO,SACLhO,KAAK8L,IAAI,2DAMb,OAAO9L,KAAKgO,QAAUrQ,SAASmI,UAAUuT,KAAK3Y,KAAKujB,QAAQnY,IAAKmY,SAAWF,gCAK3E,OAAO/jB,KAAKgO,QAAUrQ,SAASmI,UAAUuT,KAAK3Y,KAAKujB,QAAQzR,KAAMyR,SAAWF,iCAK5E,OAAO/jB,KAAKgO,QAAUrQ,SAASmI,UAAUuT,KAAK3Y,KAAKujB,QAAQ1R,MAAO0R,SAAWF,SArBhEC,GCIrB,SAASE,KAAyB,IAAhBC,EAAgBtkB,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAC9B,GAAKG,KAAKgO,QAAV,CAIA,GAAKmW,EAME,CACH,IAAMxQ,EAAS3T,KAAKuK,OAAOzI,SAASuP,QAAQwR,KACxC3lB,EAAGc,QAAQ2V,KACXA,EAAOO,QAAUlU,KAAKokB,gBATjB,CAET,IAAMzQ,EAAS3T,KAAKuK,OAAOzI,SAASuP,QAAQO,WACxC1U,EAAGc,QAAQ2V,KACXA,EAAOO,QAAUlU,KAAKmd,QAU1Bnd,KAAKqkB,cAAgBrkB,KAAKskB,qBACrBH,EAGDjjB,EAAaR,KAAKV,KAAKuK,OAAQvK,KAAKmM,OAAQnM,KAAKokB,WAAa,sBAAwB,sBAAsB,GAF5GljB,EAAaR,KAAKV,KAAKuK,OAAQvK,KAAKmM,OAAQnM,KAAKmd,OAAS,kBAAoB,kBAAkB,GAK/FgH,EAQDjjB,EAAaR,KACTV,KAAKuK,OACLvK,KAAKuK,OAAOzI,SAASuE,UACrBrG,KAAKokB,WAAa,sBAAwB,sBAC1C,GAXJljB,EAAaR,KACTV,KAAKuK,OACLvK,KAAKuK,OAAOzI,SAASuE,UACrBrG,KAAKmd,OAAS,kBAAoB,kBAClC,GAaP/V,EAAQU,OnBwMV,WAAmD,IAAhC9J,EAAgC6B,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAtB,KAAMD,EAAgBC,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GACtD,GAAK3C,EAAGc,QAAQA,GAAhB,CAIA,IAAMgV,EAAY5M,EAAY1F,KAAKV,KAAM,2DACnCukB,EAAQvR,EAAU,GAClBwR,EAAOxR,EAAUA,EAAUhW,OAAS,GAsB1C0C,EAAegB,KAAKV,KAAMA,KAAK8B,SAASuE,UAAW,UApBtC,SAAAjI,GAET,GAAkB,QAAdA,EAAMiF,KAAmC,IAAlBjF,EAAMqmB,QAAjC,CAKA,IAAMhe,EAAUD,IAEZC,IAAY+d,GAASpmB,EAAMsmB,SAIpBje,IAAY8d,GAASnmB,EAAMsmB,WAElCF,EAAKxJ,QACL5c,EAAMumB,mBALNJ,EAAMvJ,QACN5c,EAAMumB,oBAQsD/kB,GAAQ,KmBpO9Dc,KAAKV,KAAKuK,OAAQvK,KAAKmM,OAAQnM,KAAKmd,SAItD,SAASyH,KAA+B,IAAhBhlB,EAAgBC,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAEhCD,EACAI,KAAK6kB,gBACDC,EAAGvmB,OAAOwmB,SAAW,EACrBC,EAAGzmB,OAAO0mB,SAAW,GAGzB1mB,OAAO2mB,SAASllB,KAAK6kB,eAAeC,EAAG9kB,KAAK6kB,eAAeG,GAI/DvhB,SAASkD,KAAKO,MAAMie,SAAWvlB,EAAS,SAAW,GAG/CI,KAAKmM,SAAWnM,KAAKuK,OAAOzI,SAASuE,UACrCd,EAAYvF,KAAKmM,OAAQnM,KAAKuK,OAAOoB,OAAO0G,WAAWT,WAAWsO,SAAUtgB,IAE5E2F,EAAYvF,KAAKmM,OAAQnM,KAAKuK,OAAOoB,OAAO0G,WAAWT,WAAWsO,SAAUtgB,GAC5E2F,EAAYvF,KAAKuK,OAAOzI,SAASuE,UAAWrG,KAAKuK,OAAOoB,OAAO0G,WAAWT,WAAWsO,SAAUtgB,IAKnGskB,GAASxjB,KAAKV,MAAM,OAGlBolB,GAAAA,WACF,SAAAA,EAAY7a,GAAQ,IAAAxK,EAAAC,KAAA+N,EAAA/N,KAAAolB,GAEhBplB,KAAKuK,OAASA,EAGdvK,KAAK6P,OAASuV,EAAWvV,OACzB7P,KAAKqlB,SAAWD,EAAWC,SAG3BrlB,KAAK6kB,gBAAmBC,EAAG,EAAGE,EAAG,GAIjCvkB,EAAGC,KACCV,KAAKuK,OACL9G,SACgB,OAAhBzD,KAAK6P,OAAkB,qBAA0B7P,KAAK6P,OAAtD,mBACA,WAEIqU,GAASxjB,KAAKX,KAKtBU,EAAGC,KAAKV,KAAKuK,OAAQvK,KAAKuK,OAAOzI,SAASuE,UAAW,WAAY,SAAAjI,GAEzDlB,EAAGc,QAAQ+B,EAAKwK,OAAOzI,SAASwJ,WAAavL,EAAKwK,OAAOzI,SAASwJ,SAAS3F,SAASvH,EAAM+N,SAI9FpM,EAAKH,WAITI,KAAKwP,oDA0FDxP,KAAKgO,QACLhO,KAAKuK,OAAOsB,MAAMC,KAAOsZ,EAAWE,OAAS,SAAW,YAAxD,uBAEAtlB,KAAKuK,OAAOsB,MAAMC,IAAI,kDAI1BvG,EAAYvF,KAAKuK,OAAOzI,SAASuE,UAAWrG,KAAKuK,OAAOoB,OAAO0G,WAAWT,WAAW5D,QAAShO,KAAKgO,yCAK9FhO,KAAKgO,UAINhO,KAAKokB,YACLpkB,KAAKulB,aAILne,EAAQU,OAAS9H,KAAKuK,OAAOoB,OAAOiG,WAAWuO,UAC3CngB,KAAKuK,OAAO2Y,SACZljB,KAAKmM,OAAOqZ,wBAERJ,EAAWE,OAEXtlB,KAAK6P,OAEL3S,EAAGgC,MAAMc,KAAK6P,SACtB7P,KAAKmM,OAAUnM,KAAK6P,OAApB,UAAoC7P,KAAKqlB,YAFzCrlB,KAAKmM,OAAOsZ,oBAFZb,GAAelkB,KAAKV,MAAM,mCAU9B,GAAKA,KAAKgO,QAKV,GAAI5G,EAAQU,OAAS9H,KAAKuK,OAAOoB,OAAOiG,WAAWuO,UAC/CngB,KAAKmM,OAAOuZ,uBACZ1lB,KAAKuK,OAAOW,YACT,GAAKka,EAAWE,OAEhB,GAAKtlB,KAAK6P,QAEV,IAAK3S,EAAGgC,MAAMc,KAAK6P,QAAS,CAC/B,IAAM8V,EAAyB,QAAhB3lB,KAAK6P,OAAmB,SAAW,OAClDpM,SAAAA,GAAYzD,KAAK6P,OAAS8V,EAAS3lB,KAAKqlB,kBAHvC5hB,SAASmiB,kBAAoBniB,SAASgd,gBAAgB/f,KAAK+C,eAF5DmhB,GAAelkB,KAAKV,MAAM,wCAUzBA,KAAKokB,WAGNQ,GAAelkB,KAAKV,MAAM,GAF1B4kB,GAAelkB,KAAKV,MAAM,oCAQzBA,KAAKmd,OAGNnd,KAAK6lB,OAFL7lB,KAAK8lB,wCAjHT,OACKV,EAAWE,QAAUtlB,KAAKuK,OAAOoB,OAAOiG,WAAWsO,WACpDlgB,KAAKuK,OAAOoB,OAAOiG,WAAW5D,SAC9BhO,KAAKuK,OAAOnL,UAAU0J,IACtB9I,KAAKuK,OAAOqS,uCAMhB,QAAK5c,KAAKgO,UAKLoX,EAAWE,QAICtlB,KAAK6P,OAAsCpM,SAAAA,GAAYzD,KAAK6P,OAAS7P,KAAKqlB,SAA/B,WAA7B5hB,SAASsiB,qBAErB/lB,KAAKmM,OALbvG,EAAS5F,KAAKmM,OAAQnM,KAAKuK,OAAOoB,OAAO0G,WAAWT,WAAWsO,8CAS1E,OAAOta,EAAS5F,KAAKmM,OAAQnM,KAAKuK,OAAOoB,OAAO0G,WAAWT,WAAWsO,8CAItE,OAAO9Y,EAAQU,OAAS9H,KAAKuK,OAAOoB,OAAOiG,WAAWuO,uDAItD,QAASngB,KAAKuK,OAAOoB,OAAOkU,mDAK5B,OAAI7f,KAAKqkB,YACErkB,KAAKuK,OAAOd,MACZzJ,KAAKskB,qBACLtkB,KAAKuK,OAAOoB,OAAOkU,oBAEvB7f,KAAKuK,OAAOzI,SAASuE,2CAhF5B,SACI5C,SAASuiB,mBACTviB,SAASwiB,yBACTxiB,SAASyiB,sBACTziB,SAAS0iB,oDAOb,GAAIjpB,EAAGQ,SAAS+F,SAASgd,gBACrB,MAAO,GAIX,IAAIxd,EAAQ,GAYZ,OAXkB,SAAU,MAAO,MAE1B4W,KAAK,SAAAuM,GACV,SAAIlpB,EAAGQ,SAAS+F,SAAY2iB,EAAZ,qBAAqClpB,EAAGQ,SAAS+F,SAAY2iB,EAAZ,wBAC7DnjB,EAAQmjB,GACD,KAMRnjB,mCAIP,MAAuB,QAAhBjD,KAAK6P,OAAmB,aAAe,mBAxEhDuV,GC7EAiB,IACFC,eADU,SACK7W,GAAM,IAAA1P,EAAAC,KAEXqG,EAAY9C,EAAc,MAAOc,EAA0BrE,KAAK2L,OAAOyF,UAAU9F,SAASvJ,UAE1F2gB,EAAWnf,EAAc,MAAOc,EAA0BrE,KAAK2L,OAAOyF,UAAU9F,SAASmX,MAAMC,WAC/FC,EAAcpf,EAChB,MACAc,EAA0BrE,KAAK2L,OAAOyF,UAAU9F,SAASmX,MAAME,cAE7D4D,EAAahjB,EAAc,MAAOc,EAA0BrE,KAAK2L,OAAOyF,UAAU9F,SAAS2V,OAAO/J,OAClGsP,EAAcjjB,EAChB,MACAc,EAA0BrE,KAAK2L,OAAOyF,UAAU9F,SAAS2V,OAAO2B,QAGpED,EAAYjgB,YAAY6jB,GACxB5D,EAAYjgB,YAAY8jB,GACxBngB,EAAU3D,YAAYggB,GACtBrc,EAAU3D,YAAYigB,GAGtB4D,EAAW7jB,YAAY4I,GAASmI,aAAa/S,KAAKV,KAAM,WAGxDumB,EAAW7jB,YAAY4I,GAASmI,aAAa/S,KAAKV,KAAM,SAGxDumB,EAAW7jB,YAAY4I,GAASmI,aAAa/S,KAAKV,KAAM,iBAGxD,IAAM6R,EAAWtO,EAAc,MAAOc,EAA0BrE,KAAK2L,OAAOyF,UAAUS,WAetF,GAZAA,EAASnP,YACL4I,GAAS6I,YAAYzT,KAAKV,KAAM,QAC5BiF,GAAAA,aAAiBwK,EAAKxK,MAK9B4M,EAASnP,YAAY4I,GAASuJ,eAAenU,KAAKV,KAAM,WAKpDA,KAAK2L,OAAOgL,SAAS5E,KAAM,CAC3B,IAAMO,EAAU/O,EACZ,QAEIyB,MAAOhF,KAAK2L,OAAO0G,WAAWC,SAElC,SAGJT,EAASnP,YAAY4P,GACrBtS,KAAK8B,SAASmQ,QAAQG,YAAcE,EAGxCtS,KAAK8B,SAAS+P,SAAWA,EACzB6Q,EAAShgB,YAAY1C,KAAK8B,SAAS+P,UAGnC0U,EAAW7jB,YAAY4I,GAAS4J,WAAWxU,KAAKV,KAAM,gBAGtDumB,EAAW7jB,YAAY4I,GAAS4J,WAAWxU,KAAKV,KAAM,aAGtD,IAAMymB,EAAqBnb,GAASmI,aAAa/S,KAAKV,KAAM,oBACxDgF,MAAO,kCAEXyhB,EAAmB/jB,YAAYa,EAAc,UAAY,SACzDijB,EAAY9jB,YAAY+jB,GAExBA,EAAmBjnB,iBAAiB,QAAS,SAACP,GAC1Cc,EAAK2mB,YAAYC,iBACjB1nB,EAAEmb,oBAINoM,EAAY9jB,YAAY4I,GAASmI,aAAa/S,KAAKV,KAAM,SAGzD,IAAMgS,EAASzO,EAAc,OACzByB,MAAO,iBAILnC,GACFwR,IAAK,EACLC,KAAM,IACNrR,MAAOjD,KAAK2L,OAAOqG,QAIvBA,EAAOtP,YACH4I,GAAS6I,YAAYzT,KACjBV,KACA,SACAsK,EAAOzH,GACHoC,GAAAA,eAAmBwK,EAAKxK,OAKpCjF,KAAK8B,SAASkQ,OAASA,EAEvBwU,EAAY9jB,YAAYsP,GAGxB,IAAMwB,EAAOjQ,EAAc,OACvByB,MAAO,aACPG,OAAQ,KAGZqO,EAAK9Q,YACD4I,GAASmI,aAAa/S,KAAKV,KAAM,YAC7BiF,GAAAA,wBAA4BwK,EAAKxK,GACjCkW,iBAAiB,EACjBC,gBAAA,iBAAkC3L,EAAKxK,GACvCoW,iBAAiB,KAIzB,IAAMrB,EAAOzW,EAAc,QACvByB,MAAO,wBACPC,GAAAA,iBAAqBwK,EAAKxK,GAC1BE,OAAQ,GACRmW,mBAAA,wBAA4C7L,EAAKxK,GACjD8N,KAAM,UACNwI,UAAW,IAGTC,EAAQjY,EAAc,OAEtBkY,EAAOlY,EAAc,OACvB0B,GAAAA,iBAAqBwK,EAAKxK,GAA1B,QACAqW,mBAAA,wBAA4C7L,EAAKxK,GACjD8N,KAAM,aAIJgF,EAAOxU,EAAc,MACvBwP,KAAM,YA+FV,OA3FA/S,KAAK2L,OAAO+F,SAASrR,QAAQ,SAAAC,GACzB,IAAMwZ,EAAMvW,EAAc,MACtBwP,KAAM,MACN5N,OAAQ,KAGNwO,EAASpQ,EACX,SACA+G,EAAOjG,EAA0BtE,EAAK4L,OAAOyF,UAAUC,QAAQK,WAC3DpR,KAAM,SACN0E,MAAUjF,EAAK4L,OAAO0G,WAAW0B,QAAjC,IAA4ChU,EAAK4L,OAAO0G,WAAW0B,QAAnE,YACA9O,GAAAA,iBAAqBwK,EAAKxK,GAA1B,IAAgC3E,EAAhC,OACA6a,iBAAiB,EACjBC,gBAAA,iBAAkC3L,EAAKxK,GAAvC,IAA6C3E,EAC7C+a,iBAAiB,IAErBhO,EAAS/M,EAAMP,EAAK4L,SAGlB1I,EAAQM,EAAc,QACxByB,MAAOjF,EAAK4L,OAAO0G,WAAWmB,KAAKvQ,QAIvCA,EAAMmK,UAAYqC,EAAKnP,GAEvBqT,EAAOjR,YAAYO,GACnB6W,EAAIpX,YAAYiR,GAChBoE,EAAKrV,YAAYoX,GAEjB/Z,EAAK+B,SAAS4P,SAASqG,KAAKzX,GAAQwZ,IAGxC2B,EAAK/Y,YAAYqV,GACjByD,EAAM9Y,YAAY+Y,GAGlBzb,KAAK2L,OAAO+F,SAASrR,QAAQ,SAAAC,GACzB,IAAMoY,EAAOnV,EAAc,OACvB0B,GAAAA,iBAAqBwK,EAAKxK,GAA1B,IAAgC3E,EAChC0E,MAAO,WACPG,OAAQ,GACRmW,mBAAA,iBAAqC7L,EAAKxK,GAA1C,IAAgD3E,EAAhD,OACAyS,KAAM,WACNwI,UAAW,IAGTG,EAAOnY,EACT,UAEIjD,KAAM,SACN0E,MAAUjF,EAAK4L,OAAO0G,WAAW0B,QAAjC,IAA4ChU,EAAK4L,OAAO0G,WAAW0B,QAAnE,SACAoH,iBAAiB,EACjBC,gBAAA,iBAAkC3L,EAAKxK,GAAvC,QACAoW,iBAAiB,GAErBhO,EAAS/M,EAAMP,EAAK4L,SAGxB+M,EAAKhW,YAAYgZ,GAEjB,IAAMrc,EAAUkE,EAAc,MAE9BmV,EAAKhW,YAAYrD,GACjBmc,EAAM9Y,YAAYgW,GAElB3Y,EAAK+B,SAAS4P,SAASwG,MAAM5X,GAAQoY,IAGzCsB,EAAKtX,YAAY8Y,GACjBhI,EAAK9Q,YAAYsX,GACjBwM,EAAY9jB,YAAY8Q,GAExBxT,KAAK8B,SAAS4P,SAASsI,KAAOA,EAC9Bha,KAAK8B,SAAS4P,SAAS8B,KAAOA,EAE9BgT,EAAY9jB,YAAY4I,GAASmI,aAAa/S,KAAKV,KAAM,SAGzDwmB,EAAY9jB,YAAY4I,GAASmI,aAAa/S,KAAKV,KAAM,eAEzDA,KAAK8B,SAASwJ,SAAWjF,EAErBrG,KAAKwJ,SACL6c,GAAMrO,eAAetX,KAAKV,KAAMgK,EAAMI,kBAAkB1J,KAAKV,OAGjEqmB,GAAM5M,aAAa/Y,KAAKV,MACxBqmB,GAAMvN,gBAAgBpY,KAAKV,MAC3BqmB,GAAM/M,wBAAwB5Y,KAAKV,MAE5BqG,GAIX2R,eAnPU,SAmPK3Y,GAAS,IAAAqX,EAAA1W,KAEdoV,EAAOpV,KAAK8B,SAAS4P,SAASwG,MAAM1M,QAAQjF,cAAc,MAG5DrJ,EAAGU,MAAMyB,KACTW,KAAKX,QAAQmM,QAAUmC,EAAOtO,IAIlC,IAAMO,GAAU1C,EAAGgC,MAAMc,KAAKX,QAAQmM,UAAYxL,KAAKX,QAAQmM,QAAQxO,OAAS,EAChFsO,GAASuM,UAAUnX,KAAKV,KAVX,UAUuBJ,GAGpC0L,GAAS6M,UAAUzX,KAAKV,MAGnBJ,IAKLkE,EAAasR,GAGbpV,KAAKX,QAAQmM,QACR4M,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IACnBjY,QAAQ,SAAAmL,GACLF,GAAS6J,eAAezU,KAAKgW,GACzBzT,MAAOuI,EACP4J,KAAAA,EACA9U,KA9BC,UA+BDmN,MAAOnC,GAASkN,SAAS9X,KAAKgW,EAAM,UAAWlL,OAI3DF,GAASC,cAAc7K,KAAKV,KAnCf,UAmC2BoV,KAI5C0D,gBA3RU,WA2RQ,IAAAb,EAAAjY,KAEd,GAAK9C,EAAGc,QAAQgC,KAAK8B,SAAS4P,SAASwG,MAAMvG,UAA7C,CAKA,IAAMrR,EAAO,WACP8U,EAAOpV,KAAK8B,SAAS4P,SAASwG,MAAMvG,SAASpL,cAAc,MAC3DyS,EAASrH,GAASsH,UAAUvY,KAAKV,MAYvC,GATAsL,GAASuM,UAAUnX,KAAKV,KAAMM,GAAM,GAGpCwD,EAAasR,GAGb9J,GAAS6M,UAAUzX,KAAKV,OAGnBgZ,EAAOhc,OASR,OARAsO,GAAS6J,eAAekE,KAAKrZ,KAA7BsL,EACIrI,OAAQ,EACRsS,SAAUvV,KAAK2R,SAASuH,QACxBzL,MAAOJ,EAAS,aAAcrN,KAAK2L,QACnCyJ,KAAAA,EACA9U,KAAM,kBAEVgL,GAASC,cAAc7K,KAAKV,KAAMM,EAAM8U,GAK5C,IAAM/V,EAAU2Z,EAAO3O,IAAI,SAAC3L,EAAOuE,GAAR,OACvBA,MAAAA,EACAsS,QAAS0C,EAAKtG,SAASuH,SAAWjB,EAAKU,eAAiB1V,EACxDwK,MAAOkE,GAAS6G,SAAS9X,KAAKuX,EAAMvZ,GACpC6U,MAAO7U,EAAMya,UAAY7N,GAASgI,YAAY5S,KAAKuX,EAAMvZ,EAAMya,SAAStM,eACxEuI,KAAAA,EACA9U,KAAM,cAIVjB,EAAQ+Z,SACJnW,OAAQ,EACRsS,SAAUvV,KAAK2R,SAASuH,QACxBzL,MAAOJ,EAAS,WAAYrN,KAAK2L,QACjCyJ,KAAAA,EACA9U,KAAM,aAIVjB,EAAQgB,QAAQiL,GAAS6J,eAAekE,KAAKrZ,OAE7CsL,GAASC,cAAc7K,KAAKV,KAAMM,EAAM8U,KAG5CkE,wBArVU,WAqVgB,IAAAP,EAAA/Y,KACtB,GAAK9C,EAAGc,QAAQgC,KAAK8B,SAAS4P,SAASwG,MAAM,qBAA7C,CAIA,IAAM5X,EAAO,mBAEbgL,GAASuM,UAAUnX,KAAKV,KAAMM,GAAM,GAGpC,IAAM8U,EAAOpV,KAAK8B,SAAS4P,SAASwG,MAAM,oBAAoB3R,cAAc,MAG5EzC,EAAasR,IAEM,MAAO,UAGhB/U,QAAQ,SAAAmZ,GACdlO,GAAS6J,eAAezU,KAAKqY,GACzB9V,MAAOuW,EACPpE,KAAAA,EACA9U,KAAAA,EACAmN,MAAOnC,GAASkN,SAAS9X,KAAKqY,EAAM,mBAAoBS,OAGhElO,GAASC,cAAc7K,KAAKV,KAAMM,EAAM8U,KAI5CqE,aAnXU,SAmXGpa,GAAS,IAAAka,EAAAvZ,KAElB,GAAK9C,EAAGc,QAAQgC,KAAK8B,SAAS4P,SAASwG,MAAM9M,OAA7C,CAOIlO,EAAGU,MAAMyB,GACTW,KAAKX,QAAQ+L,MAAQ/L,GACdW,KAAKwJ,SAAWxJ,KAAK2Z,WAC5B3Z,KAAKX,QAAQ+L,OAAS,GAAK,IAAM,EAAG,KAAM,IAAK,KAAM,IAIzDpL,KAAKX,QAAQ+L,MAAQpL,KAAKX,QAAQ+L,MAAMrI,OAAO,SAAAqI,GAAA,OAASmO,EAAK5N,OAAOP,MAAM/L,QAAQ8G,SAASiF,KAG3F,IAAMxL,GAAU1C,EAAGgC,MAAMc,KAAKX,QAAQ+L,QAAUpL,KAAKX,QAAQ+L,MAAMpO,OAAS,EAO5E,GANAsO,GAASuM,UAAUnX,KAAKV,KAdX,QAcuBJ,GAGpC0L,GAAS6M,UAAUzX,KAAKV,MAGnBJ,EAAL,CAKA,IAAMwV,EAAOpV,KAAK8B,SAAS4P,SAASwG,MAAM9M,MAAM7E,cAAc,MAG9DzC,EAAasR,GAGbpV,KAAKX,QAAQ+L,MAAM/K,QAAQ,SAAA+K,GACvBE,GAAS6J,eAAezU,KAAK6Y,GACzBtW,MAAOmI,EACPgK,KAAAA,EACA9U,KAnCK,QAoCLmN,MAAOnC,GAASkN,SAAS9X,KAAK6Y,EAAM,QAASnO,OAIrDE,GAASC,cAAc7K,KAAKV,KAxCf,QAwC2BoV,OCpajC,SAASwR,GAAU3b,GAAmB,IAAd4b,EAAchnB,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,GAAH,EAC9C,OAAO,IAAI6O,QAAQ,SAACC,EAASC,GACzB,IAAMkY,EAAQ,IAAIC,MAEZC,EAAU,kBACLF,EAAMG,cACNH,EAAMI,SACZJ,EAAMK,cAAgBN,EAAWlY,EAAUC,GAAQkY,IAGxDtqB,OAAO8E,OAAOwlB,GAASG,OAAQD,EAASE,QAASF,EAAS/b,IAAAA,MCFlE,IAAMnC,IACFse,aADO,WAEH7hB,EAAYvF,KAAK8B,SAASuE,UAAWrG,KAAK2L,OAAOyF,UAAU/K,UAAUxB,QAAQ,IAAK,KAAK,GACvFU,EAAYvF,KAAK8B,SAASuE,UAAWrG,KAAK2L,OAAO0G,WAAWkR,YAAavjB,KAAKZ,UAAU0J,KAG5Fue,kCANO,WAQCrnB,KAAK2L,OAAOkU,qBACZta,EAAYvF,KAAK2L,OAAOkU,oBAAqB7f,KAAK2L,OAAO0G,WAAWqR,gBAAgB,IAK5FjR,qBAdO,WAc8B5S,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,IACnBG,KAAKwJ,QACfxJ,KAAKyJ,MAAMnG,aAAa,WAAY,IAEpCtD,KAAKyJ,MAAMnE,gBAAgB,aAKnCgiB,MAvBO,WAuBC,IAAAvnB,EAAAC,KAMJ,GAHAA,KAAKuiB,UAAU9Y,SAGVzJ,KAAKZ,UAAU0J,GAShB,OARA9I,KAAK6L,MAAM2G,KAAX,0BAA0CxS,KAAK0I,SAA/C,IAA2D1I,KAAKM,MAGhEwI,GAAG2J,qBAAqB/R,KAAKV,MAAM,QAEnCA,KAAKunB,OAAQ,GAOZrqB,EAAGc,QAAQgC,KAAK8B,SAASwJ,YAE1BA,GAASqQ,OAAOjb,KAAKV,MAGrBA,KAAKuiB,UAAUjX,YAInBxC,GAAG2J,qBAAqB/R,KAAKV,MAGzBA,KAAKwJ,SACLmI,GAASgL,MAAMjc,KAAKV,MAIxBA,KAAKgS,OAAS,KAGdhS,KAAK+V,MAAQ,KAGb/V,KAAKoL,MAAQ,KAGbpL,KAAK8f,KAAO,KAGZ9f,KAAKwL,QAAU,KAGfF,GAASuK,aAAanV,KAAKV,MAG3BsL,GAAS8L,WAAW1W,KAAKV,MAGzB8I,GAAG0e,aAAa9mB,KAAKV,MAGrBuF,EACIvF,KAAK8B,SAASuE,UACdrG,KAAK2L,OAAO0G,WAAWrJ,IAAI5J,UAC3BkJ,EAAQU,KAAOhJ,KAAKwJ,SAAWxJ,KAAK4c,SAIxCrX,EAAYvF,KAAK8B,SAASuE,UAAWrG,KAAK2L,OAAO0G,WAAWnJ,QAAQ9J,UAAWkJ,EAAQY,SAAWlJ,KAAKwJ,SAGvGjE,EAAYvF,KAAK8B,SAASuE,UAAWrG,KAAK2L,OAAO0G,WAAWvK,MAAOV,EAAQU,OAG3EvC,EAAYvF,KAAK8B,SAASuE,UAAWrG,KAAK2L,OAAO0G,WAAWiR,QAAStjB,KAAK4J,OAG1E5J,KAAKunB,OAAQ,EAGbtL,WAAW,WACP/a,EAAaR,KAAKX,EAAMA,EAAK0J,MAAO,UACrC,GAGHX,GAAG2e,SAAS/mB,KAAKV,MAGbA,KAAK+iB,QACLja,GAAG4e,UAAUhnB,KAAKV,KAAMA,KAAK+iB,QAAQ,GAAO9S,MAAM,cAKlDjQ,KAAK2L,OAAOwG,UACZ7G,GAASkM,eAAe9W,KAAKV,OAKrCynB,SA1HO,WA4HH,IAAI7T,EAAQvG,EAAS,OAAQrN,KAAK2L,QAclC,GAXIzO,EAAGM,OAAOwC,KAAK2L,OAAO8B,SAAWvQ,EAAGgC,MAAMc,KAAK2L,OAAO8B,SACtDmG,GAAAA,KAAc5T,KAAK2L,OAAO8B,OAI9B7Q,MAAMqF,KAAKjC,KAAK8B,SAASuP,QAAQnG,UAAY7K,QAAQ,SAAAsT,GACjDA,EAAOrQ,aAAa,aAAcsQ,KAKlC5T,KAAK2nB,QAAS,CACd,IAAMvF,EAAS9b,EAAW5F,KAAKV,KAAM,UAErC,IAAK9C,EAAGc,QAAQokB,GACZ,OAIJ,IAAM3U,EAASvQ,EAAGgC,MAAMc,KAAK2L,OAAO8B,OAA6B,QAApBzN,KAAK2L,OAAO8B,MACnDnB,EAASe,EAAS,aAAcrN,KAAK2L,QAE3CyW,EAAO9e,aAAa,QAASgJ,EAAOzH,QAAQ,UAAW4I,MAK/Dma,aA1JO,SA0JMC,GACTtiB,EAAYvF,KAAK8B,SAASuE,UAAWrG,KAAK2L,OAAO0G,WAAW2Q,cAAe6E,IAK/EH,UAhKO,SAgKG3E,GAAwB,IAAArM,EAAA1W,KAE9B,OAF8BH,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,KAAAA,UAAA,KAEfG,KAAK+iB,QAKpB/iB,KAAKyJ,MAAMnG,aAAa,SAAUyf,GvB7DnC,WAAiB,IAAArM,EAAA1W,KACpB,OAAO,IAAI0O,QACP,SAAAC,GAAA,OAAY+H,EAAK6Q,MAAQtL,WAAWtN,EAAS,GAAKlO,EAAGC,KAAKgW,EAAMA,EAAK5U,SAASuE,UAAW,QAASsI,KACpGoB,KAAK,euB+DMrP,KAAKV,MAEL+P,KAAK,WAAA,OAAM6W,GAAU7D,KACrB9S,MAAM,SAAAxO,GAMH,MAJIshB,IAAWrM,EAAKqM,QAChBja,GAAG8e,aAAalnB,KAAKgW,GAAM,GAGzBjV,IAETsO,KAAK,WAEF,GAAIgT,IAAWrM,EAAKqM,OAChB,MAAM,IAAIrhB,MAAM,oDAGvBqO,KAAK,WAOF,OANAvT,OAAO8E,OAAOoV,EAAK5U,SAASihB,OAAO7b,OAC/B4gB,gBAAAA,QAAyB/E,EAAzB,KAEAgF,eAAgB,KAEpBjf,GAAG8e,aAAalnB,KAAKgW,GAAM,GACpBqM,KAjCRrU,QAAQE,OAAO,IAAIlN,MAAM,wBAuCxC8lB,aA1MO,SA0MMppB,GAAO,IAAA6Z,EAAAjY,KAEhBuF,EAAYvF,KAAK8B,SAASuE,UAAWrG,KAAK2L,OAAO0G,WAAW6Q,QAASljB,KAAKkjB,SAC1E3d,EAAYvF,KAAK8B,SAASuE,UAAWrG,KAAK2L,OAAO0G,WAAWzH,OAAQ5K,KAAK4K,QACzErF,EAAYvF,KAAK8B,SAASuE,UAAWrG,KAAK2L,OAAO0G,WAAW8Q,QAASnjB,KAAKmjB,SAG1EvmB,MAAMqF,KAAKjC,KAAK8B,SAASuP,QAAQnG,UAAY7K,QAAQ,SAAA8L,GACjDA,EAAO+H,QAAU+D,EAAKiL,UAItBhmB,EAAGkB,MAAMA,IAAyB,eAAfA,EAAMkC,MAK7BwI,GAAGkf,eAAetnB,KAAKV,OAI3BioB,aA/NO,SA+NM7pB,GAAO,IAAA2a,EAAA/Y,KAChBA,KAAKojB,SAAW,UAAW,WAAWjd,SAAS/H,EAAMkC,MAGrD4nB,aAAaloB,KAAKmoB,OAAO/E,SAGzBpjB,KAAKmoB,OAAO/E,QAAUnH,WAAW,WAE7B1W,EAAYwT,EAAKjX,SAASuE,UAAW0S,EAAKpN,OAAO0G,WAAW+Q,QAASrK,EAAKqK,SAG1Eta,GAAGkf,eAAetnB,KAAKqY,IACxB/Y,KAAKojB,QAAU,IAAM,IAI5B4E,eAhPO,SAgPQxiB,GAAO,IACV8F,EAAatL,KAAK8B,SAAlBwJ,SAEJA,GAAYtL,KAAK2L,OAAO6T,cAExBxf,KAAKgoB,eAAe3rB,QAAQmJ,GAASxF,KAAKojB,SAAWpjB,KAAK4K,QAAUU,EAAS4I,SAAW5I,EAAS+X,UCxPvG+E,GAAAA,WACF,SAAAA,EAAY7d,GAAQwD,EAAA/N,KAAAooB,GAChBpoB,KAAKuK,OAASA,EACdvK,KAAKqoB,QAAU,KAEfroB,KAAKsoB,UAAYtoB,KAAKsoB,UAAUjP,KAAKrZ,MACrCA,KAAK+Z,WAAa/Z,KAAK+Z,WAAWV,KAAKrZ,MACvCA,KAAKuoB,WAAavoB,KAAKuoB,WAAWlP,KAAKrZ,kDAIjC5B,GAAO,IAAA2B,EAAAC,KACPwoB,EAAOpqB,EAAMqmB,QAAUrmB,EAAMqmB,QAAUrmB,EAAMqqB,MAC7CvU,EAAyB,YAAf9V,EAAMkC,KAChBooB,EAASxU,GAAWsU,IAASxoB,KAAKqoB,QAGxC,KAAIjqB,EAAMuqB,QAAUvqB,EAAMwqB,SAAWxqB,EAAMyqB,SAAWzqB,EAAMsmB,WAMvDxnB,EAAGG,OAAOmrB,GAAf,CAYA,GAAItU,EAAS,CAET,IAKMzN,EAAUD,IAChB,GACItJ,EAAGc,QAAQyI,IACVA,IAAYzG,KAAKuK,OAAOzI,SAASgQ,OAAOC,MACrClM,EAAQY,EAASzG,KAAKuK,OAAOoB,OAAOyF,UAAUoR,UAElD,OASJ,QApBwB,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAezFrc,SAASqiB,KACxBpqB,EAAMumB,iBACNvmB,EAAMgc,mBAGFoO,GACJ,KAAK,GAEGxoB,KAAKuK,OAAOqH,WAAW5D,SACvBhO,KAAKuK,OAAOqH,WAAWiU,OAE3B,MACJ,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GAEI6C,IA7Cb3oB,EAAKwK,OAAOI,YAAc5K,EAAKwK,OAAO4H,SAAW,IAAMqW,EAAO,KAgDtD,MAEJ,KAAK,GACL,KAAK,GAEIE,GACD1oB,KAAKuK,OAAOue,aAEhB,MAEJ,KAAK,GAED9oB,KAAKuK,OAAOwe,eAAe,IAC3B,MAEJ,KAAK,GAED/oB,KAAKuK,OAAOye,eAAe,IAC3B,MAEJ,KAAK,GAEIN,IACD1oB,KAAKuK,OAAOwL,OAAS/V,KAAKuK,OAAOwL,OAErC,MAEJ,KAAK,GAED/V,KAAKuK,OAAO0e,UACZ,MAEJ,KAAK,GAEDjpB,KAAKuK,OAAOgH,SACZ,MAEJ,KAAK,GAEDvR,KAAKuK,OAAOqH,WAAWhS,SACvB,MAEJ,KAAK,GAEI8oB,GACD1oB,KAAKuK,OAAO2e,iBAEhB,MAEJ,KAAK,GAEDlpB,KAAKuK,OAAOuV,MAAQ9f,KAAKuK,OAAOuV,KAChC,MAEJ,KAAK,GAEG9f,KAAKuK,OAAOmc,aAAe1mB,KAAKuK,OAAOmc,YAAYyC,qBAA8E,WAAvDnpB,KAAKuK,OAAOmc,YAAY0C,4BAClGppB,KAAKuK,OAAOmc,YAAYC,kBAsB/B3mB,KAAKuK,OAAOqH,WAAW5D,SAAWhO,KAAKuK,OAAOqH,WAAWuL,QAAmB,KAATqL,GACpExoB,KAAKuK,OAAOqH,WAAWhS,SAI3BI,KAAKqoB,QAAUG,OAEfxoB,KAAKqoB,QAAU,yCAKZjqB,GACPkN,GAASyO,WAAWrZ,KAAKV,KAAKuK,OAAQnM,wCAKtC4B,KAAKuK,OAAOX,OAAQ,EAGpBrE,EAAYvF,KAAKuK,OAAOzI,SAASuE,UAAWrG,KAAKuK,OAAOoB,OAAO0G,WAAWiR,SAAS,oCAIjE,IAAf1jB,IAAeC,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,KAAAA,UAAA,GAEdG,KAAKuK,OAAOoB,OAAOqU,SAASC,QAC5BvgB,EAAegB,KAAKV,KAAKuK,OAAQhM,OAAQ,gBAAiByB,KAAKsoB,UAAW1oB,GAAQ,GAItFF,EAAegB,KAAKV,KAAKuK,OAAQ9G,SAASkD,KAAM,QAAS3G,KAAK+Z,WAAYna,GAG1EgB,EAAKF,KAAKV,KAAKuK,OAAQ9G,SAASkD,KAAM,aAAc3G,KAAKuoB,gDAIjD,IAAA7R,EAAA1W,MAEHA,KAAKuK,OAAOoB,OAAOqU,SAASC,QAAUjgB,KAAKuK,OAAOoB,OAAOqU,SAASvZ,SACnEhG,EAAGC,KAAKV,KAAKuK,OAAQvK,KAAKuK,OAAOzI,SAASuE,UAAW,gBAAiBrG,KAAKsoB,WAAW,GAK1F7nB,EAAGC,KAAKV,KAAKuK,OAAQvK,KAAKuK,OAAOzI,SAASuE,UAAW,WAAY,SAAAjI,GAC7DmH,EAAYnH,EAAM+N,OAAQuK,EAAKnM,OAAOoB,OAAO0G,WAAWoR,UAAU,KAGtEhjB,EAAGC,KAAKV,KAAKuK,OAAQvK,KAAKuK,OAAOzI,SAASuE,UAAW,UAAW,SAAAjI,GACtC,IAAlBA,EAAMqmB,SAMVxI,WAAW,WACP1W,EAAYiB,IAAmBkQ,EAAKnM,OAAOoB,OAAO0G,WAAWoR,UAAU,IACxE,KAIPhjB,EAAGC,KACCV,KAAKuK,OACLvK,KAAKuK,OAAOzI,SAASuE,UACrB,2EACA,SAAAjI,GAAS,IACGkN,EAAaoL,EAAKnM,OAAOzI,SAAzBwJ,SAGW,oBAAflN,EAAMkC,OACNgL,EAAS4I,SAAU,EACnB5I,EAAS+X,OAAQ,GAIrB,IAEIgG,EAAQ,GAFE,aAAc,YAAa,aAAaljB,SAAS/H,EAAMkC,QAKjEwI,GAAGkf,eAAetnB,KAAKgW,EAAKnM,QAAQ,GAEpC8e,EAAQ3S,EAAKnM,OAAOX,MAAQ,IAAO,KAIvCse,aAAaxR,EAAKnM,OAAO4d,OAAO7c,UAEhCoL,EAAKnM,OAAO4d,OAAO7c,SAAW2Q,WAAW,WAAA,OAAMnT,GAAGkf,eAAetnB,KAAKgW,EAAKnM,QAAQ,IAAQ8e,qCAM/F,IAAApR,EAAAjY,KACJ,IAAKA,KAAKuK,OAAOd,MAAM6f,+BAAgC,CACnDtpB,KAAKuK,OAAOd,MAAM6f,gCAAiC,EAEnD7oB,EAAGC,KAAKV,KAAKuK,OAAQvK,KAAKuK,OAAOd,MAAO,4BAA6B,SAAArL,GAAA,OACjEkN,GAAS8L,WAAW1W,KAAKuX,EAAK1N,OAAQnM,KAI1CqC,EAAGC,KAAKV,KAAKuK,OAAQvK,KAAKuK,OAAOd,MAAO,2CAA4C,SAAArL,GAAA,OAChFkN,GAASkM,eAAe9W,KAAKuX,EAAK1N,OAAQnM,KAK9CqC,EAAGC,KAAKV,KAAKuK,OAAQvK,KAAKuK,OAAOd,MAAO,UAAW,WAC/CvE,EAAa+S,EAAK1N,OAAOzI,SAASkQ,QAASiG,EAAK1N,OAAOgf,UACvDrkB,EAAa+S,EAAK1N,OAAOzI,SAASuP,QAAQI,MAAOwG,EAAK1N,OAAOgf,YAIjE9oB,EAAGC,KAAKV,KAAKuK,OAAQvK,KAAKuK,OAAOd,MAAO,QAAS,WAEzCwO,EAAK1N,OAAOf,SAAWyO,EAAK1N,OAAOqS,SAAW3E,EAAK1N,OAAOoB,OAAO8T,YAEjExH,EAAK1N,OAAO+G,YAKpB7Q,EAAGC,KAAKV,KAAKuK,OAAQvK,KAAKuK,OAAOd,MAAO,kCAAmC,SAAArL,GAAA,OACvEkN,GAAS0K,eAAetV,KAAKuX,EAAK1N,OAAQnM,KAI9CqC,EAAGC,KAAKV,KAAKuK,OAAQvK,KAAKuK,OAAOd,MAAO,eAAgB,SAAArL,GAAA,OACpDkN,GAASuK,aAAanV,KAAKuX,EAAK1N,OAAQnM,KAI5CqC,EAAGC,KAAKV,KAAKuK,OAAQvK,KAAKuK,OAAOd,MAAO,8CAA+C,SAAArL,GAAA,OACnF0K,GAAG0e,aAAa9mB,KAAKuX,EAAK1N,OAAQnM,KAItCqC,EAAGC,KAAKV,KAAKuK,OAAQvK,KAAKuK,OAAOd,MAAO,iCAAkC,SAAArL,GAAA,OACtE0K,GAAGmf,aAAavnB,KAAKuX,EAAK1N,OAAQnM,KAKtCqC,EAAGC,KAAKV,KAAKuK,OAAQvK,KAAKuK,OAAOd,MAAO,UAAW,WAC1CwO,EAAK1N,OAAO0Y,KAKbhL,EAAK1N,OAAO0Y,IAAIjV,UAAYiK,EAAK1N,OAAO0Y,IAAIuG,aAE5CvR,EAAK1N,OAAO0Y,IAAIwG,eAAe1Z,KAAK,WAAA,OAAMkI,EAAK1N,OAAO0Y,IAAI/X,SAAQ+E,MAAM,WAAA,OAAMgI,EAAK1N,OAAOW,WAKlGzK,EAAGC,KAAKV,KAAKuK,OAAQvK,KAAKuK,OAAOd,MAAO,eAAgB,WAEpDwO,EAAK1N,OAAOc,QAAQZ,KAAMuH,OAAQiG,EAAK1N,OAAOyH,OAAQ+D,MAAOkC,EAAK1N,OAAOwL,UAI7EtV,EAAGC,KAAKV,KAAKuK,OAAQvK,KAAKuK,OAAOd,MAAO,aAAc,WAElD6B,GAASC,cAAc7K,KAAKuX,EAAK1N,OAAQ,SAGzC0N,EAAK1N,OAAOc,QAAQZ,KAAMW,MAAO6M,EAAK1N,OAAOa,UAIjD3K,EAAGC,KAAKV,KAAKuK,OAAQvK,KAAKuK,OAAOd,MAAO,gBAAiB,SAAArL,GAErDkN,GAASC,cAAc7K,KAAKuX,EAAK1N,OAAQ,UAAW,KAAMnM,EAAMgD,OAAOoK,WAK3E,IAAMke,EAAc1pB,KAAKuK,OAAOoB,OAAOxL,OAAOkM,QAAQ,QAAS,YAAYgH,KAAK,KAChF5S,EAAGC,KAAKV,KAAKuK,OAAQvK,KAAKuK,OAAOd,MAAOigB,EAAa,SAAAtrB,GAAS,IAAAurB,EACpCvrB,EAAhBgD,OAAAA,OADoDtB,IAAA6pB,KAAAA,EAIvC,UAAfvrB,EAAMkC,OACNc,EAAS6W,EAAK1N,OAAOd,MAAM8I,OAG/BrR,EAAaR,KAAKuX,EAAK1N,OAAQ0N,EAAK1N,OAAOzI,SAASuE,UAAWjI,EAAMkC,MAAM,EAAMc,KAKzF,GAAIpB,KAAKuK,OAAOnL,UAAU0J,IAAM9I,KAAKuK,OAAOoB,OAAO4T,cAAgBvf,KAAKuK,OAAOqf,QAAS,CAEpF,IAAM7nB,EAAUuE,EAAW5F,KAAKV,KAAKuK,OAArB,IAAiCvK,KAAKuK,OAAOoB,OAAO0G,WAAW7J,OAG/E,IAAKtL,EAAGc,QAAQ+D,GACZ,OAGCA,EAAQunB,iCACTvnB,EAAQunB,gCAAiC,EAEzC7oB,EAAGC,KAAKV,KAAKuK,OAAQxI,EAAS,QAAS,WAE/BkW,EAAK1N,OAAOoB,OAAO6T,cAAgBvH,EAAK1N,OAAOX,QAAUqO,EAAK1N,OAAOK,SAIrEqN,EAAK1N,OAAOK,OACZqN,EAAK1N,OAAOW,OACL+M,EAAK1N,OAAOsf,OACnB5R,EAAK1N,OAAO+G,UACZ2G,EAAK1N,OAAOW,QAEZ+M,EAAK1N,OAAOQ,WAKhB/K,KAAKuK,OAAOnL,UAAU0J,IAAM9I,KAAKuK,OAAOoB,OAAO+T,oBAC/Cjf,EAAGC,KACCV,KAAKuK,OACLvK,KAAKuK,OAAOzI,SAASC,QACrB,cACA,SAAA3D,GACIA,EAAMumB,mBAEV,wCAQT,IAAA5L,EAAA/Y,KAED8pB,EAAa1iB,EAAQC,KAAO,SAAW,QAGvC0iB,EAAQ,SAAC3rB,EAAO4rB,EAAgBC,GAClC,IAAMC,EAAgBnR,EAAKxO,OAAOoB,OAAO4W,UAAU0H,GAE/CE,GAAW,EADUjtB,EAAGQ,SAASwsB,KAKjCC,EAAWD,EAAcxpB,KAAKqY,EAAKxO,OAAQnM,IAI3C+rB,GAAYjtB,EAAGQ,SAASssB,IACxBA,EAAetpB,KAAKqY,EAAKxO,OAAQnM,IAKnCib,EAAO,SAACrb,EAASsC,EAAM0pB,EAAgBC,GAAqC,IAAnBhqB,IAAmBJ,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,KAAAA,UAAA,GACxEqqB,EAAgBnR,EAAKxO,OAAOoB,OAAO4W,UAAU0H,GAC7CG,EAAmBltB,EAAGQ,SAASwsB,GAErCzpB,EAAGC,KACCqY,EAAKxO,OACLvM,EACAsC,EACA,SAAAlC,GAAA,OAAS2rB,EAAM3rB,EAAO4rB,EAAgBC,IACtChqB,IAAYmqB,IAKhBpqB,KAAKuK,OAAOzI,SAASuP,QAAQnG,MAC7BtO,MAAMqF,KAAKjC,KAAKuK,OAAOzI,SAASuP,QAAQnG,MAAM7K,QAAQ,SAAAsT,GAClD0F,EAAK1F,EAAQ,QAASoF,EAAKxO,OAAOue,WAAY,UAKtDzP,EAAKrZ,KAAKuK,OAAOzI,SAASuP,QAAQC,QAAS,QAAStR,KAAKuK,OAAO+G,QAAS,WAGzE+H,EAAKrZ,KAAKuK,OAAOzI,SAASuP,QAAQE,OAAQ,QAASvR,KAAKuK,OAAOgH,OAAQ,UAGvE8H,EAAKrZ,KAAKuK,OAAOzI,SAASuP,QAAQG,YAAa,QAASxR,KAAKuK,OAAO0e,QAAS,eAG7E5P,EACIrZ,KAAKuK,OAAOzI,SAASuP,QAAQI,KAC7B,QACA,WACIsH,EAAKxO,OAAOwL,OAASgD,EAAKxO,OAAOwL,OAErC,QAIJsD,EAAKrZ,KAAKuK,OAAOzI,SAASuP,QAAQM,SAAU,QAAS,WAAA,OAAMoH,EAAKxO,OAAO2e,mBAGvEzoB,EACIT,KAAKuK,OAAOzI,SAASuP,QAAQwR,KAC7B,QACA,WACI9J,EAAKxO,OAAOqH,WAAW2T,cAE3B,QAIJlM,EACIrZ,KAAKuK,OAAOzI,SAASuP,QAAQO,WAC7B,QACA,WACImH,EAAKxO,OAAOqH,WAAWhS,UAE3B,cAIJyZ,EACIrZ,KAAKuK,OAAOzI,SAASuP,QAAQrI,IAC7B,QACA,WACI+P,EAAKxO,OAAOvB,IAAM,UAEtB,OAIJqQ,EAAKrZ,KAAKuK,OAAOzI,SAASuP,QAAQnI,QAAS,QAASlJ,KAAKuK,OAAOrB,QAAS,WAGzEmQ,EAAKrZ,KAAKuK,OAAOzI,SAASuP,QAAQK,SAAU,QAAS,SAAAtT,GACjDkN,GAASyO,WAAWrZ,KAAKqY,EAAKxO,OAAQnM,KAI1Cib,EAAKrZ,KAAKuK,OAAOzI,SAAS4P,SAASsI,KAAM,QAAS,SAAA5b,GAU9C,GATAA,EAAMgc,kBASFvU,EAAQzH,EAAM+N,OAAQ4M,EAAKxO,OAAOoB,OAAOyF,UAAUU,OAAOqH,UAC1D4Q,EACI3rB,EACA,WACI2a,EAAKxO,OAAOoO,aAAerb,OAAOc,EAAM+N,OAAOlJ,QAGnD,iBAED,GAAI4C,EAAQzH,EAAM+N,OAAQ4M,EAAKxO,OAAOoB,OAAOyF,UAAUU,OAAOtG,SACjEue,EACI3rB,EACA,WACI2a,EAAKxO,OAAOiB,QAAUpN,EAAM+N,OAAOlJ,OAGvC,gBAED,GAAI4C,EAAQzH,EAAM+N,OAAQ4M,EAAKxO,OAAOoB,OAAOyF,UAAUU,OAAO1G,OACjE2e,EACI3rB,EACA,WACI2a,EAAKxO,OAAOa,MAAQ+L,WAAW/Y,EAAM+N,OAAOlJ,QAGhD,cAED,GAAI4C,EAAQzH,EAAM+N,OAAQ4M,EAAKxO,OAAOoB,OAAOyF,UAAUU,OAAO,qBACjEiY,EACI3rB,EACA,WACI2a,EAAKxO,OAAOqO,gBAAkBxa,EAAM+N,OAAOlJ,OAE/C,wBAED,CACH,IAAM6W,EAAM1b,EAAM+N,OAClBb,GAASqP,QAAQja,KAAKqY,EAAKxO,OAAQuP,EAAI3P,aAAa,qBAK5DkP,EAAKrZ,KAAKuK,OAAOzI,SAASgQ,OAAOC,KAAM,sBAAuB,SAAA3T,GAC1D,IAAMwY,EAAamC,EAAKxO,OAAOzI,SAAS+P,SAASgF,wBAC3CN,EAAU,IAAMK,EAAWI,OAAS5Y,EAAM6Y,MAAQL,EAAWM,MACnE9Y,EAAMisB,cAAc/mB,aAAa,aAAciT,KAInD8C,EAAKrZ,KAAKuK,OAAOzI,SAASgQ,OAAOC,KAAM,sDAAuD,SAAA3T,GAC1F,IAAM2T,EAAO3T,EAAMisB,cAEb7B,EAAOpqB,EAAMqmB,QAAUrmB,EAAMqmB,QAAUrmB,EAAMqqB,MAC7C6B,EAAYlsB,EAAMkC,KAExB,GAAmB,YAAdgqB,GAAyC,UAAdA,GAAoC,KAAT9B,GAAwB,KAATA,EAA1E,CAIA,IAAMtd,EAAO6G,EAAK1M,aAAa,kBAGzBklB,GAAQ,UAAW,WAAY,SAASpkB,SAAS/H,EAAMkC,MAGzD4K,GAAQqf,GACRxY,EAAKzM,gBAAgB,kBACrByT,EAAKxO,OAAOW,SACJqf,GAAQxR,EAAKxO,OAAO2Y,UAC5BnR,EAAKzO,aAAa,iBAAkB,IACpCyV,EAAKxO,OAAOQ,YAKpBsO,EACIrZ,KAAKuK,OAAOzI,SAASgQ,OAAOC,KAC5B+X,EACA,SAAA1rB,GACI,IAAM2T,EAAO3T,EAAMisB,cAGfG,EAASzY,EAAK5H,aAAa,cAE3BjN,EAAGgC,MAAMsrB,KACTA,EAASzY,EAAK9O,OAGlB8O,EAAKzM,gBAAgB,cAErByT,EAAKxO,OAAOI,YAAc6f,EAASzY,EAAKsC,IAAM0E,EAAKxO,OAAO4H,UAE9D,QAKAnS,KAAKuK,OAAOoB,OAAO0T,eAAiBniB,EAAGc,QAAQgC,KAAKuK,OAAOzI,SAASmQ,QAAQE,WAC5EkH,EAAKrZ,KAAKuK,OAAOzI,SAASmQ,QAAQtH,YAAa,QAAS,WAEpB,IAA5BoO,EAAKxO,OAAOI,cAIhBoO,EAAKxO,OAAOoB,OAAO2L,YAAcyB,EAAKxO,OAAOoB,OAAO2L,WAEpDhM,GAAS8L,WAAW1W,KAAKqY,EAAKxO,WAKtC8O,EACIrZ,KAAKuK,OAAOzI,SAASgQ,OAAOE,OAC5B8X,EACA,SAAA1rB,GACI2a,EAAKxO,OAAOyH,OAAS5T,EAAM+N,OAAOlJ,OAEtC,UAIAmE,EAAQG,UACR3K,MAAMqF,KAAKmE,EAAY1F,KAAKV,KAAKuK,OAAQ,wBAAwBlK,QAAQ,SAAArC,GACrEqb,EAAKrb,EAAS,QAAS,SAAAI,GAAA,OAASkN,GAASsJ,gBAAgBlU,KAAKqY,EAAKxO,OAAQnM,EAAM+N,YAKzFkN,EAAKrZ,KAAKuK,OAAOzI,SAAS+P,SAAU,kCAAmC,SAAAzT,GAAA,OACnEkN,GAASmL,kBAAkB/V,KAAKqY,EAAKxO,OAAQnM,KAIjDib,EAAKrZ,KAAKuK,OAAOzI,SAASwJ,SAAU,wBAAyB,SAAAlN,GACzD2a,EAAKxO,OAAOzI,SAASwJ,SAAS+X,OAAStK,EAAKxO,OAAOX,OAAwB,eAAfxL,EAAMkC,OAItE+Y,EAAKrZ,KAAKuK,OAAOzI,SAASwJ,SAAU,oDAAqD,SAAAlN,GACrF2a,EAAKxO,OAAOzI,SAASwJ,SAAS4I,SAAW,YAAa,cAAc/N,SAAS/H,EAAMkC,QAIvF+Y,EAAKrZ,KAAKuK,OAAOzI,SAASwJ,SAAU,mBAAoB,SAAAlN,GAAS,IAAAqsB,EACxB1R,EAAKxO,OAAlCoB,EADqD8e,EACrD9e,OAAQ7J,EAD6C2oB,EAC7C3oB,SAAUqmB,EADmCsC,EACnCtC,OAS1B,GANA5iB,EAAYzD,EAASwJ,SAAUK,EAAO0G,WAAWmR,aAA6B,YAAfplB,EAAMkC,MAGrEwI,GAAGkf,eAAetnB,KAAKqY,EAAKxO,OAAuB,YAAfnM,EAAMkC,MAGvB,YAAflC,EAAMkC,KAAoB,CAE1B2b,WAAW,WACP1W,EAAYzD,EAASwJ,SAAUK,EAAO0G,WAAWmR,cAAc,IAChE,GAGH,IAAM6F,EAAQtQ,EAAKnP,MAAQ,IAAO,IAGlCse,aAAaC,EAAO7c,UAEpB6c,EAAO7c,SAAW2Q,WAAW,WAAA,OAAMnT,GAAGkf,eAAetnB,KAAKqY,EAAKxO,QAAQ,IAAQ8e,MAKvFhQ,EACIrZ,KAAKuK,OAAOzI,SAASgQ,OAAOE,OAC5B,QACA,SAAA5T,GAGI,IAAMqS,EAAWrS,EAAMssB,kCAHlBC,GAMWvsB,EAAMwsB,QAASxsB,EAAMysB,QAAQxgB,IAAI,SAAApH,GAAA,OAAUwN,GAAYxN,EAAQA,IAN1E6nB,EAAA5nB,EAAAynB,EAAA,GAME7F,EANFgG,EAAA,GAMK9F,EANL8F,EAAA,GASCC,EAAYtT,KAAKuT,KAAKvT,KAAKwT,IAAInG,GAAKrN,KAAKwT,IAAIjG,GAAKF,EAAIE,GAG5DjM,EAAKxO,OAAOwe,eAAegC,EAAY,IAZlC,IAeG/Y,EAAW+G,EAAKxO,OAAOd,MAAvBuI,QACW,IAAd+Y,GAAmB/Y,EAAS,IAAsB,IAAf+Y,GAAoB/Y,EAAS,IACjE5T,EAAMumB,kBAGd,UACA,SAlsBNyD,GCTAzI,IACFhD,MADS,WAGL,GAAI3c,KAAK2L,OAAOgU,MAAQ3f,KAAK2L,OAAOgU,KAAK9gB,IAAK,CAE1C,IAAMqsB,EAAgBznB,SAASF,cAAc,OAC7CgC,EAAY2lB,EAAelrB,KAAK2L,OAAO0G,WAAWsN,MAAM,GAGxD,IAAIwL,EAAiBD,EAErB,GAAIlrB,KAAK2L,OAAOgU,KAAKC,KAAM,CAEvB,IAAMwL,EAAc3nB,SAASF,cAAc,KAC3CX,EAAcwoB,GACV7O,KAAMvc,KAAK2L,OAAOgU,KAAKC,OAE3BsL,EAAcxoB,YAAY0oB,GAC1BD,EAAiBC,EAIrB,IAAMC,EAAc5nB,SAASF,cAAc,OAC3CX,EAAcyoB,GACVpgB,IAAKjL,KAAK2L,OAAOgU,KAAK9gB,MAE1BssB,EAAezoB,YAAY2oB,GAC3BrrB,KAAK8B,SAASuE,UAAU3D,YAAYwoB,kIC7B/C,IAAeI,EAAAA,EAQR,WAMR,IAAIC,EAAU,aACVC,KACAC,KACAC,KAmDJ,SAASC,EAAQC,EAAUC,GAEzB,GAAKD,EAAL,CAEA,IAAIE,EAAIJ,EAAoBE,GAM5B,GAHAH,EAAkBG,GAAYC,EAGzBC,EAGL,KAAOA,EAAE9uB,QACP8uB,EAAE,GAAGF,EAAUC,GACfC,EAAEC,OAAO,EAAG,IAUhB,SAASC,EAAiBjrB,EAAMkrB,GAE1BlrB,EAAKL,OAAMK,GAAQmrB,QAASnrB,IAG5BkrB,EAAajvB,QAAS+D,EAAKwR,OAASgZ,GAASU,IAC3ClrB,EAAKmrB,SAAWX,GAASxqB,GASjC,SAASorB,EAASngB,EAAMogB,EAAYrrB,EAAMsrB,GACxC,IAKIC,EACArtB,EANAstB,EAAM9oB,SACN+oB,EAAQzrB,EAAKyrB,MACbC,GAAY1rB,EAAK2rB,YAAc,GAAK,EACpCC,EAAmB5rB,EAAK6rB,QAAUrB,EAClCsB,EAAe7gB,EAAKnH,QAAQ,cAAe,IAI/CwnB,EAAWA,GAAY,EAEnB,iBAAiB5kB,KAAKuE,IACxBsgB,GAAQ,GAGRrtB,EAAIstB,EAAIhpB,cAAc,SACpBupB,IAAM,aACR7tB,EAAEsd,KAAOsQ,GACA,+BAA+BplB,KAAKuE,IAE7C/M,EAAIstB,EAAIhpB,cAAc,QACpB0H,IAAM4hB,IAGR5tB,EAAIstB,EAAIhpB,cAAc,WACpB0H,IAAMe,EACR/M,EAAEutB,WAAkB1sB,IAAV0sB,GAA6BA,GAGzCvtB,EAAEgoB,OAAShoB,EAAEioB,QAAUjoB,EAAE8tB,aAAe,SAAUC,GAChD,IAAIhd,EAASgd,EAAG1sB,KAAK,GAIrB,GAAIgsB,GAAS,cAAertB,EAC1B,IACOA,EAAEguB,MAAMC,QAAQlwB,SAAQgT,EAAS,KACtC,MAAO8U,GAGP9U,EAAS,IAKb,GAAc,KAAVA,IAEFqc,GAAY,GAGGI,EACb,OAAON,EAASngB,EAAMogB,EAAYrrB,EAAMsrB,GAK5CD,EAAWpgB,EAAMgE,EAAQgd,EAAGG,oBAII,IAA9BR,EAAiB3gB,EAAM/M,IAAcstB,EAAIa,KAAK1qB,YAAYzD,GA+ChE,SAASouB,EAAOC,EAAOC,EAAMC,GAC3B,IAAI5B,EACA7qB,EASJ,GANIwsB,GAAQA,EAAK5oB,OAAMinB,EAAW2B,GAGlCxsB,GAAQ6qB,EAAW4B,EAAOD,OAGtB3B,EAAU,CACZ,GAAIA,KAAYJ,EACd,KAAM,SAENA,EAAcI,IAAY,GArDhC,SAAmB0B,EAAOlB,EAAYrrB,GAIpC,IAGI0sB,EACAhhB,EAJAihB,GAFJJ,EAAQA,EAAM9sB,KAAO8sB,GAASA,IAEPtwB,OACnB8nB,EAAI4I,EACJ7B,KAqBJ,IAhBA4B,EAAK,SAASzhB,EAAMgE,EAAQmd,GAM1B,GAJc,KAAVnd,GAAe6b,EAAcrrB,KAAKwL,GAIxB,KAAVgE,EAAe,CACjB,IAAImd,EACC,OADiBtB,EAAcrrB,KAAKwL,KAI3C0hB,GACiBtB,EAAWP,IAIzBpf,EAAE,EAAGA,EAAIqY,EAAGrY,IAAK0f,EAASmB,EAAM7gB,GAAIghB,EAAI1sB,GA+B7C4sB,CAAUL,EAAO,SAAUzB,GAEzBG,EAAiBjrB,EAAM8qB,GAGvBF,EAAQC,EAAUC,IACjB9qB,GAiDL,OAxCAssB,EAAO9F,MAAQ,SAAeqG,EAAM7sB,GAOlC,OAxOF,SAAmB8sB,EAAWzB,GAE5ByB,EAAYA,EAAUrtB,KAAOqtB,GAAaA,GAE1C,IAGIJ,EACA7B,EACAkC,EALA7B,KACAxf,EAAIohB,EAAU7wB,OACd0wB,EAAajhB,EAejB,IARAghB,EAAK,SAAU7B,EAAUC,GACnBA,EAAc7uB,QAAQivB,EAAazrB,KAAKorB,KAE5C8B,GACiBtB,EAAWH,IAIvBxf,KACLmf,EAAWiC,EAAUphB,IAGrBqhB,EAAIrC,EAAkBG,IAEpB6B,EAAG7B,EAAUkC,IAKXpC,EAAoBE,GAAYF,EAAoBE,QACtDprB,KAAKitB,GAkMTM,CAAUH,EAAM,SAAU3B,GAExBD,EAAiBjrB,EAAMkrB,KAGlBoB,GAQTA,EAAO9C,KAAO,SAAcqB,GAC1BD,EAAQC,OAOVyB,EAAO9L,MAAQ,WACbiK,KACAC,KACAC,MAQF2B,EAAOW,UAAY,SAAmBpC,GACpC,OAAOA,KAAYJ,GAKd6B,GA9RHY,EAAAC,QAAiB5C,6CCEN,SAAS6C,GAAWtvB,GAC/B,OAAO,IAAI6P,QAAQ,SAACC,EAASC,GACzBye,GAAOxuB,GACHqtB,QAASvd,EACT4D,MAAO3D,MC2BnB,SAASwf,GAAoBljB,GACrBA,IAASlL,KAAKke,MAAMmQ,YACpBruB,KAAKke,MAAMmQ,WAAY,GAEvBruB,KAAKyJ,MAAMmB,SAAWM,IACtBlL,KAAKyJ,MAAMmB,QAAUM,EACrBhK,EAAaR,KAAKV,KAAMA,KAAKyJ,MAAOyB,EAAO,OAAS,UAI5D,IAAMgX,IACFvF,MADU,WACF,IAAA5c,EAAAC,KAEJuF,EAAYvF,KAAK8B,SAASC,QAAS/B,KAAK2L,OAAO0G,WAAW6L,OAAO,GAGjEgE,GAAMoM,eAAe5tB,KAAKV,MAGrB9C,EAAGE,OAAOmB,OAAOgwB,OASlBrM,GAAMqF,MAAM7mB,KAAKV,MARjBmuB,GAAWnuB,KAAK2L,OAAOsW,KAAKC,MAAMC,KAC7BpS,KAAK,WACFmS,GAAMqF,MAAM7mB,KAAKX,KAEpBkQ,MAAM,SAAAsC,GACHxS,EAAK8L,MAAM2G,KAAK,2BAA4BD,MAS5D+b,eAxBU,SAwBKpyB,GAAO,IAAAsyB,GACFtxB,EAAGM,OAAOtB,GAASA,EAAQ8D,KAAK2L,OAAO2T,OAAOlf,MAAM,KADlDquB,EAAAvrB,EAAAsrB,EAAA,GAEZE,EAAU,IAFED,EAAA,GAAAA,EAAA,GAKlB,GAFAzuB,KAAK8B,SAASC,QAAQmF,MAAMynB,cAAmBD,EAA/C,IAEI1uB,KAAKZ,UAAU0J,GAAI,CACnB,IACM8lB,GADS,IACUF,GAAV,IAEf1uB,KAAKyJ,MAAMvC,MAAM2nB,UAAjB,eAA4CD,EAA5C,OAKRrH,MAtCU,WAsCF,IAAA7Q,EAAA1W,KACEuK,EAASvK,KAeTyc,EAASD,IAXXsD,KAAMvV,EAAOoB,OAAOmU,KAAK3C,OACzBgC,SAAU5U,EAAO4U,SAEjB2P,QAAQ,EACRC,UAAU,EACVthB,OAAO,EACPrC,OAAO,EACP4jB,YAAa,EACbC,QAAS,QACTtmB,aAAc3I,KAAK2L,OAAOiG,WAAWuO,YAKrCjW,EAASK,EAAOd,MAAMU,aAAa,OAGnCjN,EAAGgC,MAAMgL,KACTA,EAASK,EAAOd,MAAMU,aAAaI,EAAOoB,OAAO9I,WAAWqb,MAAMjZ,KAGtE,IA/FSpG,EA+FHoG,GA/FGpG,EA+FUqL,EA9FnBhN,EAAGgC,MAAML,GACF,KAGP3B,EAAGG,OAAOC,OAAOuB,IACVA,EAIJA,EAAI2N,MADG,mCACYG,OAAOuiB,GAAKrwB,GAwF5BujB,EAAS7e,EAAc,UACvB0H,EAAMqB,EAAO/B,EAAOoB,OAAOsW,KAAKC,MAAME,OAAQnd,EAAIwX,GACxD2F,EAAO9e,aAAa,MAAO2H,GAC3BmX,EAAO9e,aAAa,kBAAmB,IACvC8e,EAAO9e,aAAa,oBAAqB,IACzC8e,EAAO9e,aAAa,QAAS,YAlCzB,IAwCEvB,EAAUwB,EAAc,OAASwf,OAHpBxY,EAAXwY,OAGuC/d,MAAOuF,EAAOoB,OAAO0G,WAAWyQ,iBAC/E/gB,EAAQW,YAAY0f,GACpB7X,EAAOd,MAAQxF,EAAelC,EAASwI,EAAOd,OAG9C+E,EAAMlC,EAAO/B,EAAOoB,OAAOsW,KAAKC,MAAMrZ,IAAK5D,GAAK,QAAQ8K,KAAK,SAAAf,GACzD,IAAI9R,EAAGgC,MAAM8P,GAAb,CAKA,IAAMnQ,EAAM,IAAIC,IAAIkQ,EAAS,GAAGmgB,iBAGhCtwB,EAAIuwB,SAAcvwB,EAAIuwB,SAAShvB,MAAM,KAAK,GAA1C,OAGA0I,GAAG4e,UAAUhnB,KAAK6J,EAAQ1L,EAAI0d,MAAMtM,MAAM,iBAK9C1F,EAAO2T,MAAQ,IAAI3f,OAAOgwB,MAAMc,OAAOjN,GACnChD,UAAW7U,EAAOoB,OAAOyT,UACzBrJ,MAAOxL,EAAOwL,QAGlBxL,EAAOd,MAAMmB,QAAS,EACtBL,EAAOd,MAAMkB,YAAc,EAGvBJ,EAAOnL,UAAU0J,IACjByB,EAAO2T,MAAMoR,mBAIjB/kB,EAAOd,MAAMyB,KAAO,WAEhB,OADAkjB,GAAoB1tB,KAAK6J,GAAQ,GAC1BA,EAAO2T,MAAMhT,QAGxBX,EAAOd,MAAMsB,MAAQ,WAEjB,OADAqjB,GAAoB1tB,KAAK6J,GAAQ,GAC1BA,EAAO2T,MAAMnT,SAGxBR,EAAOd,MAAM8lB,KAAO,WAChBhlB,EAAOQ,QACPR,EAAOI,YAAc,GAxFrB,IA4FEA,EAAgBJ,EAAOd,MAAvBkB,YACNnO,OAAO8C,eAAeiL,EAAOd,MAAO,eAChClK,IAD+C,WAE3C,OAAOoL,GAEXF,IAJ+C,SAI3C8F,GAAM,IAIE2N,EAAiC3T,EAAjC2T,MAAOzU,EAA0Bc,EAA1Bd,MAAOmB,EAAmBL,EAAnBK,OAAQoH,EAAWzH,EAAXyH,OACxBwd,EAAe5kB,IAAWsT,EAAMmQ,UAGtC5kB,EAAM8N,SAAU,EAChBrW,EAAaR,KAAK6J,EAAQd,EAAO,WAGjCiF,QAAQC,QAAQ6gB,GAAgBtR,EAAMuR,UAAU,IAE3C1f,KAAK,WAAA,OAAMmO,EAAMwR,eAAenf,KAEhCR,KAAK,WAAA,OAAMyf,GAAgBtR,EAAMnT,UAEjCgF,KAAK,WAAA,OAAMyf,GAAgBtR,EAAMuR,UAAUzd,KAC3C/B,MAAM,iBAOnB,IAAI7E,EAAQb,EAAOoB,OAAOP,MAAM2U,SAChCvjB,OAAO8C,eAAeiL,EAAOd,MAAO,gBAChClK,IADgD,WAE5C,OAAO6L,GAEXX,IAJgD,SAI5CvO,GACAqO,EAAO2T,MACFyR,gBAAgBzzB,GAChB6T,KAAK,WACF3E,EAAQlP,EACRgF,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,gBAE3CwG,MAAM,SAAAsC,GAEgB,UAAfA,EAAMkD,MACNnK,GAASmO,aAAa/Y,KAAK6J,WA1I3C,IAiJEyH,EAAWzH,EAAOoB,OAAlBqG,OACNxV,OAAO8C,eAAeiL,EAAOd,MAAO,UAChClK,IAD0C,WAEtC,OAAOyS,GAEXvH,IAJ0C,SAItCvO,GACAqO,EAAO2T,MAAMuR,UAAUvzB,GAAO6T,KAAK,WAC/BiC,EAAS9V,EACTgF,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,qBAzJhD,IA+JEsM,EAAUxL,EAAOoB,OAAjBoK,MACNvZ,OAAO8C,eAAeiL,EAAOd,MAAO,SAChClK,IADyC,WAErC,OAAOwW,GAEXtL,IAJyC,SAIrCvO,GACA,IAAM0D,IAAS1C,EAAGO,QAAQvB,IAASA,EAEnCqO,EAAO2T,MAAMuR,UAAU7vB,EAAS,EAAI2K,EAAOoB,OAAOqG,QAAQjC,KAAK,WAC3DgG,EAAQnW,EACRsB,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,qBAzKhD,IA+KEqW,EAASvV,EAAOoB,OAAhBmU,KACNtjB,OAAO8C,eAAeiL,EAAOd,MAAO,QAChClK,IADwC,WAEpC,OAAOugB,GAEXrV,IAJwC,SAIpCvO,GACA,IAAM0D,EAAS1C,EAAGO,QAAQvB,GAASA,EAAQqO,EAAOoB,OAAOmU,KAAK3C,OAE9D5S,EAAO2T,MAAM0R,QAAQhwB,GAAQmQ,KAAK,WAC9B+P,EAAOlgB,OAMnB,IAAIiwB,OAAAA,EACJtlB,EAAO2T,MACF4R,cACA/f,KAAK,SAAA9M,GACF4sB,EAAa5sB,IAEhBgN,MAAM,SAAAsC,GACHmE,EAAK7K,MAAM2G,KAAKD,KAGxB/V,OAAO8C,eAAeiL,EAAOd,MAAO,cAChClK,IAD8C,WAE1C,OAAOswB,KAKfrzB,OAAO8C,eAAeiL,EAAOd,MAAO,SAChClK,IADyC,WAErC,OAAOgL,EAAOI,cAAgBJ,EAAO4H,YAK7CzD,QAAQ4S,KAAK/W,EAAO2T,MAAM6R,gBAAiBxlB,EAAO2T,MAAM8R,mBAAmBjgB,KAAK,SAAAkgB,GAC5E,IAAM3Q,EA9QlB,SAAwBtI,EAAOyD,GAC3B,IACM6E,EADW,SAAX4Q,EAAYC,EAAGC,GAAJ,OAAiB,IAANA,EAAUD,EAAID,EAASE,EAAGD,EAAIC,GAC5CF,CAASlZ,EAAOyD,GAC9B,OAAUzD,EAAQsI,EAAlB,IAA2B7E,EAAS6E,EA2Qd+Q,CAAeJ,EAAW,GAAIA,EAAW,IACvD/N,GAAMoM,eAAe5tB,KAAKgW,EAAM4I,KAIpC/U,EAAO2T,MAAMoS,aAAa/lB,EAAOoB,OAAOyT,WAAWrP,KAAK,SAAAwgB,GACpDhmB,EAAOoB,OAAOyT,UAAYmR,IAI9BhmB,EAAO2T,MAAMsS,gBAAgBzgB,KAAK,SAAAtC,GAC9BlD,EAAOoB,OAAO8B,MAAQA,EACtB3E,GAAG2e,SAAS/mB,KAAKgW,KAIrBnM,EAAO2T,MAAMuS,iBAAiB1gB,KAAK,SAAA9M,GAC/B0H,EAAc1H,EACd/B,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,gBAI5Cc,EAAO2T,MAAMwS,cAAc3gB,KAAK,SAAA9M,GAC5BsH,EAAOd,MAAM0I,SAAWlP,EACxB/B,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,oBAI5Cc,EAAO2T,MAAMyS,gBAAgB5gB,KAAK,SAAAiJ,GAC9BzO,EAAOd,MAAME,WAAaqP,EAC1BrH,GAASgL,MAAMjc,KAAK6J,KAGxBA,EAAO2T,MAAMzd,GAAG,YAAa,SAAAuC,GAAmB,IAAA4tB,EAAA5tB,EAAhByb,KACtBoS,QADsC/wB,IAAA8wB,KAAAA,GAClBvmB,IAAI,SAAA/L,GAAA,OrBvQhB4L,EqBuQiC5L,EAAIkF,KrBtQrDstB,EAAWrtB,SAASstB,yBACpB/yB,EAAUyF,SAASF,cAAc,OACvCutB,EAASpuB,YAAY1E,GACrBA,EAAQoP,UAAYlD,EACb4mB,EAASE,WAAWttB,UALxB,IAAmBwG,EAChB4mB,EACA9yB,IqBsQE2T,GAASgM,WAAWjd,KAAK6J,EAAQsmB,KAGrCtmB,EAAO2T,MAAMzd,GAAG,SAAU,YAEtB8J,EAAO2T,MAAM+S,YAAYlhB,KAAK,SAAAnF,GAC1BwjB,GAAoB1tB,KAAK6J,GAASK,GAC7BA,GACD1J,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,aAI5CvM,EAAGc,QAAQuM,EAAO2T,MAAMlgB,UAAYuM,EAAOnL,UAAU0J,KACvCyB,EAAO2T,MAAMlgB,QAIrBsF,aAAa,YAAa,KAIxCiH,EAAO2T,MAAMzd,GAAG,OAAQ,WACpB2tB,GAAoB1tB,KAAK6J,GAAQ,GACjCrJ,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,aAG5Cc,EAAO2T,MAAMzd,GAAG,QAAS,WACrB2tB,GAAoB1tB,KAAK6J,GAAQ,KAGrCA,EAAO2T,MAAMzd,GAAG,aAAc,SAAAgP,GAC1BlF,EAAOd,MAAM8N,SAAU,EACvB5M,EAAc8E,EAAKyhB,QACnBhwB,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,gBAG5Cc,EAAO2T,MAAMzd,GAAG,WAAY,SAAAgP,GACxBlF,EAAOd,MAAM6M,SAAW7G,EAAK8G,QAC7BrV,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,YAGL,IAA/B0G,SAASV,EAAK8G,QAAS,KACvBrV,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,kBAK5Cc,EAAO2T,MAAMwS,cAAc3gB,KAAK,SAAA9M,GACxBA,IAAUsH,EAAOd,MAAM0I,WACvB5H,EAAOd,MAAM0I,SAAWlP,EACxB/B,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,uBAKpDc,EAAO2T,MAAMzd,GAAG,SAAU,WACtB8J,EAAOd,MAAM8N,SAAU,EACvBrW,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,YAG5Cc,EAAO2T,MAAMzd,GAAG,QAAS,WACrB8J,EAAOd,MAAMmB,QAAS,EACtB1J,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,WAG5Cc,EAAO2T,MAAMzd,GAAG,QAAS,SAAAW,GACrBmJ,EAAOd,MAAM8I,MAAQnR,EACrBF,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,WAI5CwS,WAAW,WAAA,OAAMnT,GAAGwe,MAAM5mB,KAAK6J,IAAS,KC5XhD,SAAS4mB,GAAej1B,GACpB,IAWMk1B,EAAQ50B,OAAOsG,SAVjBuuB,OAAQ,KACRC,OAAQ,KACRC,OAAQ,KACRC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,MAAO,IACPC,KAAM,MAG8B3qB,KAAK,SAAAmqB,GAAA,OAASA,EAAMjrB,SAASjK,KAErE,OAAIk1B,EAEOA,EAAMnqB,KAAK,SAAAhE,GAAA,OAASA,IAAU/G,IAGlC,UAYX,SAASkyB,GAAoBljB,GACrBA,IAASlL,KAAKke,MAAMmQ,YACpBruB,KAAKke,MAAMmQ,WAAY,GAEvBruB,KAAKyJ,MAAMmB,SAAWM,IACtBlL,KAAKyJ,MAAMmB,QAAUM,EACrBhK,EAAaR,KAAKV,KAAMA,KAAKyJ,MAAOyB,EAAO,OAAS,UAI5D,IAAMmX,IACF1F,MADY,WACJ,IAAA5c,EAAAC,KAEJuF,EAAYvF,KAAK8B,SAASC,QAAS/B,KAAK2L,OAAO0G,WAAW6L,OAAO,GAGjEmE,GAAQiM,eAAe5tB,KAAKV,MAGxB9C,EAAGE,OAAOmB,OAAOszB,KAAO30B,EAAGQ,SAASa,OAAOszB,GAAGxC,QAC9ChN,GAAQkF,MAAM7mB,KAAKV,OAGnBmuB,GAAWnuB,KAAK2L,OAAOsW,KAAKI,QAAQF,KAAKlS,MAAM,SAAAsC,GAC3CxS,EAAK8L,MAAM2G,KAAK,6BAA8BD,KAKlDhU,OAAOuzB,wBAA0BvzB,OAAOuzB,4BAGxCvzB,OAAOuzB,wBAAwBtxB,KAAK,WAChC6hB,GAAQkF,MAAM7mB,KAAKX,KAIvBxB,OAAOwzB,wBAA0B,WAC7BxzB,OAAOuzB,wBAAwBzxB,QAAQ,SAAAV,GACnCA,SAOhBqyB,SApCY,SAoCHC,GAAS,IAAAvb,EAAA1W,KAId,GAAI9C,EAAGQ,SAASsC,KAAKke,MAAMgU,cAAe,CAAA,IAC9BzkB,EAAUzN,KAAKke,MAAMgU,eAArBzkB,MAER,GAAIvQ,EAAGgC,MAAMuO,GAGT,OAFAzN,KAAK2L,OAAO8B,MAAQA,OACpB3E,GAAG2e,SAAS/mB,KAAKV,MAMzB,IAAMqD,EAAMrD,KAAK2L,OAAO1O,KAAK0mB,OACzBzmB,EAAGM,OAAO6F,KAASnG,EAAGgC,MAAMmE,IAG5BmL,EAFYlC,EAAOtM,KAAK2L,OAAOsW,KAAKI,QAAQxZ,IAAKopB,EAAS5uB,IAGrD0M,KAAK,SAAAC,GACE9S,EAAGE,OAAO4S,KACV0G,EAAK/K,OAAO8B,MAAQuC,EAAOmiB,MAAM,GAAGC,QAAQ3kB,MAC5C3E,GAAG2e,SAAS/mB,KAAKgW,MAGxBzG,MAAM,eAKnBqe,eAnEY,WAoER,IAAMhP,EAAQtf,KAAK2L,OAAO2T,MAAMlf,MAAM,KACtCJ,KAAK8B,SAASC,QAAQmF,MAAMynB,cAAmB,IAAMrP,EAAM,GAAKA,EAAM,GAAtE,KAIJiI,MAzEY,WA0ER,IAAMhd,EAASvK,KAGTqyB,EAAY9nB,EAAOd,MAAMU,aAAa,MAC5C,GAAKjN,EAAGgC,MAAMmzB,KAAcA,EAAUtzB,WAAW,YAAjD,CAKA,IAAImL,EAASK,EAAOd,MAAMU,aAAa,OAGnCjN,EAAGgC,MAAMgL,KACTA,EAASK,EAAOd,MAAMU,aAAanK,KAAK2L,OAAO9I,WAAWqb,MAAMjZ,KAIpE,IA9ISpG,EA8IHozB,GA9IGpzB,EA8IeqL,EA7IxBhN,EAAGgC,MAAML,GACF,KAIJA,EAAI2N,MADG,gEACYG,OAAOuiB,GAAKrwB,GAyI5BoG,EAAgBsF,EAAO7B,StBvJjC,IAAoB+O,KAAKoE,MAAsB,IAAhBpE,KAAKqE,UsB6J1BzV,EAAY9C,EAAc,OAAS0B,GAAAA,EAAI8d,OAH1BxY,EAAXwY,SAIRxY,EAAOd,MAAQxF,EAAeoC,EAAWkE,EAAOd,OAGhD,IAAM6oB,EAAY,SAAAC,GAAA,MAAA,8BAAwCN,EAAxC,IAAmD3lB,EAAnD,eAGlBsa,GAAU0L,EAAU,UAAW,KAC1BriB,MAAM,WAAA,OAAM2W,GAAU0L,EAAU,MAAO,OACvCriB,MAAM,WAAA,OAAM2W,GAAU0L,EAAU,SAChCviB,KAAK,SAAA+W,GAAA,OAAShe,GAAG4e,UAAUhnB,KAAK6J,EAAQuc,EAAM7b,OAC9C8E,KAAK,SAAAuiB,GAEGA,EAAUnsB,SAAS,YACpBoE,EAAOzI,SAASihB,OAAO7b,MAAM6gB,eAAiB,WAGrD9X,MAAM,cAIX1F,EAAO2T,MAAQ,IAAI3f,OAAOszB,GAAGxC,OAAOpqB,GAChCgtB,QAAAA,EACAO,YACIrT,SAAU5U,EAAOoB,OAAOwT,SAAW,EAAI,EACvCsT,GAAIloB,EAAOoB,OAAO8mB,GAClBnnB,SAAUf,EAAOnL,UAAU0J,GAAK,EAAI,EACpCgkB,IAAK,EACL4F,SAAU,EACVC,eAAgB,EAChBC,eAAgB,EAChBC,UAAW,EACXlqB,YAAa,EAIbmqB,gBAAiBv0B,OAASA,OAAOyS,SAASuL,KAAO,KAGjDwW,eAAgBxoB,EAAOoH,SAASwL,OAAS,EAAI,EAC7C6V,aAAczoB,EAAOoB,OAAOgG,SAASwH,UAEzChZ,QACI8yB,QADI,SACI70B,GAEJ,IAAKmM,EAAOd,MAAM8I,MAAO,CACrB,IAAMiW,EAAOpqB,EAAMqR,KAEbyjB,GAEEC,EAAG,uOACHC,EAAG,uHACHC,IAAK,qIACLC,IAAK,uFACLC,IAAK,wFACP/K,IAAS,2BAEfje,EAAOd,MAAM8I,OAAUiW,KAAAA,EAAM0K,QAAAA,GAE7BhyB,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,WAGhD+pB,wBApBI,WAqBAtyB,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,iBAAiB,GACrD+B,QAASjB,EAAOd,MAAM+B,WAG9BioB,qBAzBI,SAyBiBr1B,GAEjB,IAAMs1B,EAAWt1B,EAAM+N,OAGvB5B,EAAOd,MAAMkqB,aAAeD,EAASE,kBAErC1yB,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,eAE5CoqB,QAlCI,SAkCIz1B,GAEJ,IAAIlB,EAAGQ,SAAS6M,EAAOd,MAAMyB,MAA7B,CAIA,IAAMwoB,EAAWt1B,EAAM+N,OAGvBkW,GAAQ2P,SAAStxB,KAAK6J,EAAQ0nB,GAG9B1nB,EAAOd,MAAMyB,KAAO,WAChBkjB,GAAoB1tB,KAAK6J,GAAQ,GACjCmpB,EAASI,aAGbvpB,EAAOd,MAAMsB,MAAQ,WACjBqjB,GAAoB1tB,KAAK6J,GAAQ,GACjCmpB,EAASK,cAGbxpB,EAAOd,MAAM8lB,KAAO,WAChBmE,EAASM,aAGbzpB,EAAOd,MAAM0I,SAAWuhB,EAAShD,cACjCnmB,EAAOd,MAAMmB,QAAS,EAGtBL,EAAOd,MAAMkB,YAAc,EAC3BnO,OAAO8C,eAAeiL,EAAOd,MAAO,eAChClK,IAD+C,WAE3C,OAAOjC,OAAOo2B,EAASjD,mBAE3BhmB,IAJ+C,SAI3C8F,GAEIhG,EAAOK,SAAWL,EAAO2T,MAAMmQ,WAC/B9jB,EAAO2T,MAAMzM,OAIjBlH,EAAOd,MAAM8N,SAAU,EACvBrW,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,WAGxCiqB,EAASlJ,OAAOja,MAKxB/T,OAAO8C,eAAeiL,EAAOd,MAAO,gBAChClK,IADgD,WAE5C,OAAOm0B,EAASE,mBAEpBnpB,IAJgD,SAI5CvO,GACAw3B,EAAS/D,gBAAgBzzB,MAKjCM,OAAO8C,eAAeiL,EAAOd,MAAO,WAChClK,IAD2C,WAEvC,OAAO4xB,GAAeuC,EAASO,uBAEnCxpB,IAJ2C,SAIvCvO,GACAw3B,EAASQ,mBAAmB/C,GAAej1B,OAlExC,IAuEL8V,EAAWzH,EAAOoB,OAAlBqG,OACNxV,OAAO8C,eAAeiL,EAAOd,MAAO,UAChClK,IAD0C,WAEtC,OAAOyS,GAEXvH,IAJ0C,SAItCvO,GACA8V,EAAS9V,EACTw3B,EAASjE,UAAmB,IAATzd,GACnB9Q,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,mBA/ErC,IAoFLsM,EAAUxL,EAAOoB,OAAjBoK,MACNvZ,OAAO8C,eAAeiL,EAAOd,MAAO,SAChClK,IADyC,WAErC,OAAOwW,GAEXtL,IAJyC,SAIrCvO,GACA,IAAM0D,EAAS1C,EAAGO,QAAQvB,GAASA,EAAQ6Z,EAC3CA,EAAQnW,EACR8zB,EAAS9zB,EAAS,OAAS,YAC3BsB,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,mBAKhDjN,OAAO8C,eAAeiL,EAAOd,MAAO,cAChClK,IAD8C,WAE1C,OAAOm0B,EAAS5D,iBAKxBtzB,OAAO8C,eAAeiL,EAAOd,MAAO,SAChClK,IADyC,WAErC,OAAOgL,EAAOI,cAAgBJ,EAAO4H,YAK7C5H,EAAOlL,QAAQ+L,MAAQsoB,EAASS,4BAG5B5pB,EAAOnL,UAAU0J,IACjByB,EAAOd,MAAMnG,aAAa,YAAa,GAG3CpC,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,cACxCvI,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,kBAGxC2qB,cAAc7pB,EAAO4d,OAAOkM,WAG5B9pB,EAAO4d,OAAOkM,UAAYC,YAAY,WAElC/pB,EAAOd,MAAM6M,SAAWod,EAASa,0BAGC,OAA9BhqB,EAAOd,MAAM+qB,cAAyBjqB,EAAOd,MAAM+qB,aAAejqB,EAAOd,MAAM6M,WAC/EpV,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,YAI5Cc,EAAOd,MAAM+qB,aAAejqB,EAAOd,MAAM6M,SAGX,IAA1B/L,EAAOd,MAAM6M,WACb8d,cAAc7pB,EAAO4d,OAAOkM,WAG5BnzB,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,oBAE7C,KAGHwS,WAAW,WAAA,OAAMnT,GAAGwe,MAAM5mB,KAAK6J,IAAS,MAE5CkqB,cAxLI,SAwLUr2B,GAEV,IAzVKs2B,EAyVChB,EAAWt1B,EAAM+N,OAoBvB,OAjBAioB,cAAc7pB,EAAO4d,OAAOjF,SAEb3Y,EAAOd,MAAM8N,UAAY,EAAG,GAAGpR,SAAS/H,EAAMqR,QAIzDlF,EAAOd,MAAM8N,SAAU,EACvBrW,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,WAUpCrL,EAAMqR,MACV,KAAM,EAEFvO,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,cAGxCc,EAAOd,MAAM6M,SAAWod,EAASa,yBACjCrzB,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,YAExC,MAEJ,KAAK,EACD2kB,GAAoB1tB,KAAK6J,GAAQ,GAG7BA,EAAOd,MAAMqW,MAEb4T,EAASM,YACTN,EAASI,aAET5yB,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,SAG5C,MAEJ,KAAK,EAEGc,EAAOd,MAAMmB,SAAWL,EAAO2T,MAAMmQ,UACrC9jB,EAAOd,MAAMsB,SAEbqjB,GAAoB1tB,KAAK6J,GAAQ,GAEjCrJ,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,WAGxCc,EAAO4d,OAAOjF,QAAUoR,YAAY,WAChCpzB,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,eACzC,IAKCc,EAAOd,MAAM0I,WAAauhB,EAAShD,gBACnCnmB,EAAOd,MAAM0I,SAAWuhB,EAAShD,cACjCxvB,EAAaR,KAAK6J,EAAQA,EAAOd,MAAO,mBAI5C6B,GAAS0M,eAAetX,KACpB6J,GA9ZXmqB,EA+Z2BhB,EAASiB,4BA9ZrDz3B,EAAGgC,MAAMw1B,GACFA,EAGJ/mB,EAAO+mB,EAAOrqB,IAAI,SAAAuqB,GAAA,OAASzD,GAAeyD,SA8ZzB,MAEJ,KAAK,EAEIrqB,EAAOwL,OACRxL,EAAO2T,MAAM2W,SAEjBzG,GAAoB1tB,KAAK6J,GAAQ,GAQzCrJ,EAAaR,KAAK6J,EAAQA,EAAOzI,SAASuE,UAAW,eAAe,GAChEmiB,KAAMpqB,EAAMqR,cC1d9BhG,IAEFkT,MAFU,WAID3c,KAAKyJ,OAMVlE,EAAYvF,KAAK8B,SAASuE,UAAWrG,KAAK2L,OAAO0G,WAAW/R,KAAKuE,QAAQ,MAAO7E,KAAKM,OAAO,GAG5FiF,EAAYvF,KAAK8B,SAASuE,UAAWrG,KAAK2L,OAAO0G,WAAW3J,SAAS7D,QAAQ,MAAO7E,KAAK0I,WAAW,GAIhG1I,KAAK2nB,SACLpiB,EAAYvF,KAAK8B,SAASuE,UAAWrG,KAAK2L,OAAO0G,WAAW/R,KAAKuE,QAAQ,MAAO,UAAU,GAI1F7E,KAAK4c,UAEL5c,KAAK8B,SAASC,QAAUwB,EAAc,OAClCyB,MAAOhF,KAAK2L,OAAO0G,WAAW7J,QAIlC3G,EAAK7B,KAAKyJ,MAAOzJ,KAAK8B,SAASC,SAG/B/B,KAAK8B,SAASihB,OAASxf,EAAc,OACjCyB,MAAOhF,KAAK2L,OAAO0G,WAAW0Q,SAGlC/iB,KAAK8B,SAASC,QAAQW,YAAY1C,KAAK8B,SAASihB,SAGhD/iB,KAAKwJ,QACLQ,EAAMM,OAAO5J,KAAKV,MACXA,KAAK6c,UACZwF,GAAQ1F,MAAMjc,KAAKV,MACZA,KAAK2Z,SACZuI,GAAMvF,MAAMjc,KAAKV,OAvCjBA,KAAK6L,MAAM2G,KAAK,6BCEtBsiB,GAAAA,WAMF,SAAAA,EAAYvqB,GAAQ,IAAAxK,EAAAC,KAAA+N,EAAA/N,KAAA80B,GAChB90B,KAAKuK,OAASA,EACdvK,KAAK4jB,YAAcrZ,EAAOoB,OAAOsX,IAAIW,YACrC5jB,KAAKkjB,SAAU,EACfljB,KAAKwpB,aAAc,EACnBxpB,KAAK8B,UACDuE,UAAW,KACX0uB,iBAAkB,MAEtB/0B,KAAKg1B,QAAU,KACfh1B,KAAKi1B,OAAS,KACdj1B,KAAKk1B,UAAY,KACjBl1B,KAAKG,UACLH,KAAKm1B,YAAc,KACnBn1B,KAAKo1B,eAAiB,KAGtBp1B,KAAKypB,eAAiB,IAAI/a,QAAQ,SAACC,EAASC,GAExC7O,EAAKU,GAAG,SAAUkO,GAGlB5O,EAAKU,GAAG,QAASmO,KAGrB5O,KAAKmL,gDAYF,IAAAuL,EAAA1W,KACCA,KAAKgO,UAEA9Q,EAAGE,OAAOmB,OAAOolB,SAAYzmB,EAAGE,OAAOmB,OAAOolB,OAAO0R,KAUtDr1B,KAAKunB,QATL4G,GAAWnuB,KAAKuK,OAAOoB,OAAOsW,KAAKK,UAAUH,KACxCpS,KAAK,WACF2G,EAAK6Q,UAERtX,MAAM,WAEHyG,EAAK4e,QAAQ,QAAS,IAAI5zB,MAAM,qEAW5C,IAAAuW,EAAAjY,KAGJA,KAAKu1B,iBAAiB,KAAO,WAG7Bv1B,KAAKypB,eAAe1Z,KAAK,WACrBkI,EAAKud,iBAAiB,0BAI1Bx1B,KAAKuiB,YAGLviB,KAAKy1B,8CA8BLz1B,KAAK8B,SAASuE,UAAY9C,EAAc,OACpCyB,MAAOhF,KAAKuK,OAAOoB,OAAO0G,WAAW4Q,MAEzCjjB,KAAKuK,OAAOzI,SAASuE,UAAU3D,YAAY1C,KAAK8B,SAASuE,WAGzDsd,OAAO0R,IAAI3jB,SAASgkB,aAAa/R,OAAO0R,IAAIM,eAAeC,UAAUC,SAGrElS,OAAO0R,IAAI3jB,SAASokB,UAAU91B,KAAKuK,OAAOoB,OAAOsX,IAAI9J,UAIrDnZ,KAAK8B,SAASizB,iBAAmB,IAAIpR,OAAO0R,IAAIU,mBAAmB/1B,KAAK8B,SAASuE,WAGjFrG,KAAKg2B,kDAMI,IAAAjd,EAAA/Y,KACDqG,EAAcrG,KAAKuK,OAAOzI,SAA1BuE,UAER,IAEIrG,KAAKi1B,OAAS,IAAItR,OAAO0R,IAAIY,UAAUj2B,KAAK8B,SAASizB,kBAGrD/0B,KAAKi1B,OAAOz1B,iBACRmkB,OAAO0R,IAAIa,sBAAsBC,KAAKC,mBACtC,SAAAh4B,GAAA,OAAS2a,EAAKsd,mBAAmBj4B,KACjC,GAEJ4B,KAAKi1B,OAAOz1B,iBAAiBmkB,OAAO0R,IAAIiB,aAAaH,KAAKI,SAAU,SAAAhkB,GAAA,OAASwG,EAAKyd,UAAUjkB,KAAQ,GAGpG,IAAM1D,EAAU,IAAI8U,OAAO0R,IAAIoB,WAC/B5nB,EAAQ6nB,SAAW12B,KAAK22B,OAIxB9nB,EAAQ+nB,kBAAoBvwB,EAAUwwB,YACtChoB,EAAQioB,mBAAqBzwB,EAAU6V,aACvCrN,EAAQkoB,qBAAuB1wB,EAAUwwB,YACzChoB,EAAQmoB,sBAAwB3wB,EAAU6V,aAG1CrN,EAAQooB,wBAAyB,EAGjCpoB,EAAQqoB,oBAAoBl3B,KAAKuK,OAAOwL,OAExC/V,KAAKi1B,OAAOe,WAAWnnB,GACzB,MAAO5P,GACLe,KAAKw2B,UAAUv3B,4CAQM,IAAAsa,EAAAvZ,KACzB,KADyBH,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,IAIrB,OAFAu0B,cAAcp0B,KAAKo1B,qBACnBp1B,KAAK8B,SAASuE,UAAUf,gBAAgB,mBAU5CtF,KAAKo1B,eAAiBd,YANP,WACX,IAAM/jB,EAAOD,GAAWmH,KAAKpD,IAAIkF,EAAKyb,QAAQmC,mBAAoB,IAC5DvjB,EAAWvG,EAAS,gBAAiBkM,EAAKhP,OAAOoB,QAAjD,MAA8D4E,EACpEgJ,EAAKzX,SAASuE,UAAU/C,aAAa,kBAAmBsQ,IAGlB,gDAO3BxV,GAAO,IAAAsb,EAAA1Z,KAEhB0R,EAAW,IAAIiS,OAAO0R,IAAI+B,qBAGhC1lB,EAAS2lB,6CAA8C,EACvD3lB,EAAS4lB,kBAAmB,EAI5Bt3B,KAAKg1B,QAAU52B,EAAMm5B,cAAcv3B,KAAKuK,OAAQmH,GAGhD1R,KAAKk1B,UAAYl1B,KAAKg1B,QAAQwC,eAGzBt6B,EAAGgC,MAAMc,KAAKk1B,YACfl1B,KAAKk1B,UAAU70B,QAAQ,SAAAo3B,GACnB,GAAiB,IAAbA,IAAgC,IAAdA,GAAmBA,EAAW/d,EAAKnP,OAAO4H,SAAU,CACtE,IAAMulB,EAAche,EAAKnP,OAAOzI,SAAS+P,SAEzC,GAAI3U,EAAGc,QAAQ05B,GAAc,CACzB,IAAMC,EAAgB,IAAMje,EAAKnP,OAAO4H,SAAWslB,EAC7Cn5B,EAAMiF,EAAc,QACtByB,MAAO0U,EAAKnP,OAAOoB,OAAO0G,WAAWoM,OAGzCngB,EAAI4I,MAAMgQ,KAAUygB,EAAcprB,WAAlC,IACAmrB,EAAYh1B,YAAYpE,OAWxC0B,KAAKg1B,QAAQvF,UAAUzvB,KAAKuK,OAAOyH,QAInChS,KAAKg1B,QAAQx1B,iBAAiBmkB,OAAO0R,IAAIiB,aAAaH,KAAKI,SAAU,SAAAhkB,GAAA,OAASmH,EAAK8c,UAAUjkB,KAG7F/V,OAAOS,KAAK0mB,OAAO0R,IAAIuC,QAAQzB,MAAM91B,QAAQ,SAAAC,GACzCoZ,EAAKsb,QAAQx1B,iBAAiBmkB,OAAO0R,IAAIuC,QAAQzB,KAAK71B,GAAO,SAAAlC,GAAA,OAASsb,EAAKme,UAAUz5B,OAIzF4B,KAAKs1B,QAAQ,4CASPl3B,GAAO,IAAAwc,EAAA5a,KACLqG,EAAcrG,KAAKuK,OAAOzI,SAA1BuE,UAIFyxB,EAAK15B,EAAM25B,QAGXv2B,EAAgB,SAAAlB,GAClB,IAAMlC,EAAAA,MAAckC,EAAKuE,QAAQ,KAAM,IAAIkI,cAC3C7L,EAAaR,KAAKka,EAAKrQ,OAAQqQ,EAAKrQ,OAAOd,MAAOrL,IAGtD,OAAQA,EAAMkC,MACV,KAAKqjB,OAAO0R,IAAIuC,QAAQzB,KAAK6B,OAGzBh4B,KAAKs1B,QAAQ,UAGb9zB,EAAcpD,EAAMkC,MAGpBN,KAAKi4B,eAAc,GAEdH,EAAGI,aAEJJ,EAAG9gB,MAAQ3Q,EAAUwwB,YACrBiB,EAAGrd,OAASpU,EAAU6V,cAK1B,MAEJ,KAAKyH,OAAO0R,IAAIuC,QAAQzB,KAAKgC,kBAKzB32B,EAAcpD,EAAMkC,MAyBpBN,KAAKo4B,UACL,MAEJ,KAAKzU,OAAO0R,IAAIuC,QAAQzB,KAAKkC,wBAKzB72B,EAAcpD,EAAMkC,MAEpBN,KAAKs4B,eAEL,MAEJ,KAAK3U,OAAO0R,IAAIuC,QAAQzB,KAAKoC,yBAMzB/2B,EAAcpD,EAAMkC,MAEpBN,KAAKi4B,gBAELj4B,KAAKw4B,gBAEL,MAEJ,KAAK7U,OAAO0R,IAAIuC,QAAQzB,KAAKsC,QAC7B,KAAK9U,OAAO0R,IAAIuC,QAAQzB,KAAKuC,SAC7B,KAAK/U,OAAO0R,IAAIuC,QAAQzB,KAAKwC,SAC7B,KAAKhV,OAAO0R,IAAIuC,QAAQzB,KAAKyC,WAC7B,KAAKjV,OAAO0R,IAAIuC,QAAQzB,KAAK0C,MACzBr3B,EAAcpD,EAAMkC,yCAYtBlC,GACN4B,KAAK84B,SACL94B,KAAKuK,OAAOsB,MAAM2G,KAAK,YAAapU,uCAQ5B,IAAA8c,EAAAlb,KACAqG,EAAcrG,KAAKuK,OAAOzI,SAA1BuE,UACJkK,OAAAA,EAGJvQ,KAAKuK,OAAO9J,GAAG,QAAS,WACpBya,EAAK+Z,OAAO8D,oBAGhB/4B,KAAKuK,OAAO9J,GAAG,UAAW,WAEtB,OADA8P,EAAO2K,EAAK3Q,OAAOI,cAIvB3K,KAAKuK,OAAO9J,GAAG,SAAU,WACrB,IAAMu4B,EAAa9d,EAAK3Q,OAAOI,YAE3BzN,EAAGgC,MAAMgc,EAAKga,YAIlBha,EAAKga,UAAU70B,QAAQ,SAACo3B,EAAUt1B,GAC1BoO,EAAOknB,GAAYA,EAAWuB,IAC9B9d,EAAK8Z,QAAQiE,iBACb/d,EAAKga,UAAUnJ,OAAO5pB,EAAO,QAOzC5D,OAAOiB,iBAAiB,SAAU,WAC1B0b,EAAK8Z,SACL9Z,EAAK8Z,QAAQkE,OAAO7yB,EAAUwwB,YAAaxwB,EAAU6V,aAAcyH,OAAO0R,IAAI8D,SAASC,yCAQ5F,IAAAxd,EAAA5b,KACKqG,EAAcrG,KAAKuK,OAAOzI,SAA1BuE,UAEHrG,KAAKypB,gBACNzpB,KAAKw4B,gBAITx4B,KAAKypB,eACA1Z,KAAK,WAEF6L,EAAK9Z,SAASizB,iBAAiBsE,aAE/B,IACSzd,EAAK4N,cAEN5N,EAAKoZ,QAAQsE,KAAKjzB,EAAUwwB,YAAaxwB,EAAU6V,aAAcyH,OAAO0R,IAAI8D,SAASC,QAIrFxd,EAAKoZ,QAAQ5T,SAGjBxF,EAAK4N,aAAc,EACrB,MAAO+P,GAGL3d,EAAK4a,UAAU+C,MAGtBtpB,MAAM,sDAQXjQ,KAAK8B,SAASuE,UAAUa,MAAMsyB,OAAS,GAGvCx5B,KAAKkjB,SAAU,EAGXljB,KAAKuK,OAAOI,YAAc3K,KAAKuK,OAAO4H,UACtCnS,KAAKuK,OAAOW,8CAShBlL,KAAK8B,SAASuE,UAAUa,MAAMsyB,OAAS,EAGvCx5B,KAAKkjB,SAAU,EAGfljB,KAAKuK,OAAOQ,yCAWR/K,KAAKwpB,aACLxpB,KAAKw4B,gBAITx4B,KAAKs1B,QAAQ,SAGbt1B,KAAKo4B,4CAMC,IAAAqB,EAAAz5B,KAENA,KAAKypB,eACA1Z,KAAK,WAEE0pB,EAAKzE,SACLyE,EAAKzE,QAAQ0E,UAIjBD,EAAKhQ,eAAiB,IAAI/a,QAAQ,SAAAC,GAC9B8qB,EAAKh5B,GAAG,SAAUkO,GAClB8qB,EAAKlvB,OAAOsB,MAAMC,IAAI2tB,EAAKzE,WAI/ByE,EAAKzD,eAER/lB,MAAM,8CAOP7R,GAAgB,IAAA,IAAAu7B,EAAA35B,KAAAc,EAAAjB,UAAA7C,OAAN+D,EAAMnE,MAAAkE,EAAA,EAAAA,EAAA,EAAA,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAND,EAAMC,EAAA,GAAAnB,UAAAmB,GACpB,IAAM44B,EAAW55B,KAAKG,OAAO/B,GAEzBlB,EAAGU,MAAMg8B,IACTA,EAASv5B,QAAQ,SAAA2mB,GACT9pB,EAAGQ,SAASspB,IACZA,EAAQ/lB,MAAM04B,EAAM54B,gCAYjC3C,EAAOuB,GAON,OANKzC,EAAGU,MAAMoC,KAAKG,OAAO/B,MACtB4B,KAAKG,OAAO/B,OAGhB4B,KAAKG,OAAO/B,GAAOoC,KAAKb,GAEjBK,8CAWMuQ,EAAMtO,GAAM,IAAA43B,EAAA75B,KACzBA,KAAKuK,OAAOsB,MAAMC,IAAlB,8BAAoD7J,GAEpDjC,KAAKm1B,YAAclZ,WAAW,WAC1B4d,EAAKf,SACLe,EAAKrE,iBAAiB,uBACvBjlB,4CAOUtO,GACR/E,EAAGC,gBAAgB6C,KAAKm1B,eACzBn1B,KAAKuK,OAAOsB,MAAMC,IAAlB,8BAAoD7J,GAEpDimB,aAAaloB,KAAKm1B,aAClBn1B,KAAKm1B,YAAc,sCA9hBvB,OACIn1B,KAAKuK,OAAOf,SAAWxJ,KAAKuK,OAAOqS,SAAW5c,KAAKuK,OAAOoB,OAAOsX,IAAIjV,UAAY9Q,EAAGgC,MAAMc,KAAK4jB,4CA2DnG,MAAUkW,8CAAQtd,IAXdud,eAAgB,2BAChBC,aAAc,2BACdC,OAAQ17B,OAAOyS,SAAShS,SACxBk7B,GAAIC,KAAKC,MACTC,SAAU,IACVC,UAAW,IACXC,SAAUv6B,KAAK4jB,oBA1FrBkR,GCXO0F,GACT,SAAAA,IAAezsB,EAAA/N,KAAAw6B,GACXx6B,KAAKy6B,WAAaD,EAAiBE,WAAWC,KAC9C36B,KAAK46B,WAAaJ,EAAiBK,WAAWC,OAC9C96B,KAAKuQ,KAAO,EACZvQ,KAAK+6B,KAAO,IAIpBP,GAAiBE,YACbC,KAAM,OACNK,KAAM,QAEVR,GAAiBK,YACbC,OAAQ,SACRG,OAAQ,UAGZ,I1BhB0B79B,G0BgBpB89B,IACFC,OAAQ,SACRC,QAAS,UACTC,OAAQ,UAGSC,GAAAA,WAEjB,SAAAA,EAAa/wB,GAAQwD,EAAA/N,KAAAs7B,GACjBt7B,KAAKuK,OAASA,EACdvK,KAAKu7B,mBACLv7B,KAAKw7B,qBAAuB,KAC5Bx7B,KAAKopB,2BAA6B8R,GAA2BG,OAC7Dr7B,KAAKmpB,qBAAsB,EAE3BnpB,KAAKy7B,gCAAkC,KACvCz7B,KAAK07B,iCAAmC,gFAOxC17B,KAAKu7B,mBACLv7B,KAAKw7B,qBAAuB,KAC5Bx7B,KAAKmpB,qBAAsB,EAC3BnpB,KAAK27B,gEAIL37B,KAAKopB,2BAA6B8R,GAA2BC,OAC7Dn7B,KAAK47B,4EAIL57B,KAAKopB,2BAA6B8R,GAA2BE,QAC7Dp7B,KAAK47B,2EAIL57B,KAAKopB,2BAA6B8R,GAA2BG,OAC7Dr7B,KAAK47B,sFAIL,IAAMC,EAAuBv1B,EAAW5F,KAAKV,KAAKuK,OAAQ,2BAC1D,OAAQvK,KAAKopB,4BACT,KAAK8R,GAA2BC,OAC5B51B,EAAY7E,KAAKV,KAAKuK,OAAQsxB,EAAsB,WAAW,GAC/Dt2B,EAAY7E,KAAKV,KAAKuK,OAAQsxB,EAAsB,UAAU,GAC9Dt2B,EAAY7E,KAAKV,KAAKuK,OAAQ,gCAAiC,UAAU,GACzE,MACJ,KAAK2wB,GAA2BE,QAC5B71B,EAAY7E,KAAKV,KAAKuK,OAAQsxB,EAAsB,WAAW,GAC/Dt2B,EAAY7E,KAAKV,KAAKuK,OAAQsxB,EAAsB,UAAU,GAC9Dt2B,EAAY7E,KAAKV,KAAKuK,OAAQ,gCAAiC,UAAU,GACzE,MACJ,KAAK2wB,GAA2BG,OAC5B91B,EAAY7E,KAAKV,KAAKuK,OAAQsxB,EAAsB,WAAW,GAC/Dt2B,EAAY7E,KAAKV,KAAKuK,OAAQsxB,EAAsB,UAAU,GAC9Dt2B,EAAY7E,KAAKV,KAAKuK,OAAQ,gCAAiC,UAAU,sCAQjF,GAAIvK,KAAKuK,OAAOnL,UAAU0J,GAEtB,IADA,IAAM0yB,EAAuBx7B,KAAK87B,eACzBrvB,EAAI,EAAGA,EAAIzM,KAAKu7B,gBAAgBv+B,OAAQyP,GAAK,EAAG,CACrD,IAAMsuB,EAAO/6B,KAAKu7B,gBAAgB9uB,GAClC,IAAKzM,KAAK+7B,oBAAoBhB,EAAKiB,KAAM,CACrC,IAAMC,EAAiBj8B,KAAKk8B,uBAAuBnB,GACnDS,EAAqB94B,YAAYu5B,6CAMhCE,GACTn8B,KAAKuK,OAAOnL,UAAU0J,KACtB9I,KAAKu7B,gBAAkBY,EACvBn8B,KAAKmpB,qBAAsB,EAC3BnpB,KAAKo8B,UACLp8B,KAAKq8B,8DAKLr8B,KAAKuK,OAAO2Y,QACZljB,KAAKy7B,gCAAkC,UAEvCz7B,KAAKy7B,gCAAkC,QAG3Cz7B,KAAKuK,OAAOQ,QAEZ,IAAMwF,EAAOkH,KAAK6kB,MAAMt8B,KAAKuK,OAAOI,aAC9BowB,EAAO/6B,KAAKu8B,uBAAuBhsB,GACzC,GAAIwqB,EAAM,CACN,IAAMS,EAAuBl1B,EAAW5F,KAAKV,KAAKuK,OAArB,0BAAyDwwB,EAAKiB,IAA9D,MAC7B,GAAIR,EAAsB,CACtB,IAAMgB,EAAmBhB,EAAqBj1B,cAAc,oCAC5D,GAAIi2B,EAAkB,CAClB,IAAMC,EAAa,IAAIp+B,MAAM,SAC7Bm+B,EAAiBh7B,cAAci7B,UAKvCz8B,KAAK08B,qBACLx7B,EAAaR,KAAKV,KAAKuK,OAAQvK,KAAKuK,OAAOd,MAAO,qBAAqB,GACnEid,aACInW,KAAAA,oDAMQmW,GACpB1mB,KAAKq8B,oBACL,IAAMM,EAAiBngC,OAAO8E,UAAWolB,GACrC+T,WAAYD,GAAiBE,WAAWC,OAE5C36B,KAAKu7B,gBAAgB/6B,KAAKm8B,GAC1B,IAAMV,EAAiBj8B,KAAKk8B,uBAAuBS,GACtB38B,KAAK87B,eACbp5B,YAAYu5B,6CAGlBvV,GACf,IAAM8U,EAAuBl1B,EAAW5F,KAAKV,KAAKuK,OAArB,gBAA6Cmc,EAAYsV,IAAzD,MAC7B,GAAIR,EAAsB,CACtBA,EAAqBoB,cAAc/4B,YAAY23B,GAC/C,IAAK,IAAI/uB,EAAI,EAAGA,EAAIzM,KAAKu7B,gBAAgBv+B,OAAQyP,GAAK,EAClD,GAAIzM,KAAKu7B,gBAAgB9uB,GAAGuvB,MAAQtV,EAAYsV,IAE5C,YADAh8B,KAAKu7B,gBAAgBxP,OAAOtf,EAAG,mDAOvB8D,GACpB,IAAK,IAAI9D,EAAI,EAAGA,EAAIzM,KAAKu7B,gBAAgBv+B,OAAQyP,GAAK,EAClD,GAAIzM,KAAKu7B,gBAAgB9uB,GAAG8D,OAASA,EACjC,OAAO,EAGf,OAAO,iDAGaA,GACpB,IAAK,IAAI9D,EAAI,EAAGA,EAAIzM,KAAKu7B,gBAAgBv+B,OAAQyP,GAAK,EAClD,GAAIzM,KAAKu7B,gBAAgB9uB,GAAG8D,OAASA,EACjC,OAAOvQ,KAAKu7B,gBAAgB9uB,GAGpC,OAAO,4CAWP,GAHIzM,KAAKw7B,uBAAyBx7B,KAAKw7B,qBAAqBoB,gBACxD58B,KAAKw7B,qBAAuB,MAEE,OAA9Bx7B,KAAKw7B,qBAA+B,CACpCx7B,KAAKw7B,qBAAuBj4B,EAAc,OACtCyB,MAAS,iCAEb,IAAM63B,EAAav2B,EAAW5F,KAAKV,KAAKuK,OAAQvK,KAAKuK,OAAOoB,OAAOyF,UAAUS,UACzEgrB,GACAA,EAAWn6B,YAAY1C,KAAKw7B,sBAGpC,OAAOx7B,KAAKw7B,iEAQKsB,GACjB,OAAqF,OAA9Ex2B,EAAW5F,KAAKV,KAAKuK,OAArB,0BAAuDuyB,EAAvD,qDAOapW,GAAa,IAAA3mB,EAAAC,KACzBmS,EAAanS,KAAKuK,OAAlB4H,SACFoE,EAAWmQ,EAAYnW,KAAO4B,EAAY,KAAO,EAEnD4qB,EAAgB,KAEdvB,EAAuBj4B,EAAc,OACvCy5B,UAAWtW,EAAYsV,IACvBh3B,MAAO,iBAKLi4B,EAAO15B,EAAc,QACvByB,MAFc,uBAIlBw2B,EAAqB94B,YAAYu6B,GAGjCA,EAAKz9B,iBAAiB,QAAS,SAACP,GAC5Bc,EAAKwK,OAAOI,YAAc+b,EAAYnW,KACtCtR,EAAE0lB,iBACF1lB,EAAEmb,oBAKN,IACM8iB,EAAmB35B,EAAc,OACnCyB,MAAAA,oCAFW0hB,EAAY+T,aAE8BD,GAAiBE,WAAWC,KAAO,yCAA2C,MAEvIa,EAAqB94B,YAAYw6B,GAIjC,IAAMC,EAAkB55B,EAAc,YAClCyB,MAAO,iCACPo4B,YAAa,gBACbC,UAAW,GACXC,KAAM,IAEVH,EAAgBl6B,MAAQyjB,EAAYqU,MAAQ,GAC5CmC,EAAiBx6B,YAAYy6B,GAI7B,IAAMI,EAAkBh6B,EAAc,QAClCyB,MAAO,oCAEXu4B,EAAgBnwB,UAAYsZ,EAAYqU,KACxCmC,EAAiBx6B,YAAY66B,GAI7B,IAAMC,EAAmBj6B,EAAc,QACnCyB,MAAO,qCAELy4B,EAAYnyB,GAASoH,WAAWhS,KAAKV,KAAKuK,OAAQ,SACxDizB,EAAiB96B,YAAY+6B,GAC7BP,EAAiBx6B,YAAY86B,GAE7BA,EAAiBh+B,iBAAiB,QAAS,SAACP,GACxCiC,EAAaR,KAAKX,EAAKwK,OAAQxK,EAAKwK,OAAOd,MAAO,qBAAqB,GACnEid,YAAAA,IAEJ3mB,EAAK29B,kBAAkBhX,KAK3B,IAAMrgB,EAAYrG,KAAK87B,eACjB6B,GAAct3B,EAAUwwB,YAAc,KAAOxwB,EAAUwwB,YAAe,KAAO,EAE/EtxB,EAAY23B,EAAkB,4CAD9B3mB,EAAUonB,GAOdT,EAAiB19B,iBAAiB,QAAS,SAACP,GACpCynB,EAAY+T,aAAeD,GAAiBE,WAAWC,OACnD56B,EAAKwK,OAAO2Y,QACZnjB,EAAK27B,iCAAmC,UAExC37B,EAAK27B,iCAAmC,QAE5C37B,EAAKwK,OAAOQ,QACZxF,EAAY23B,EAAkB,yCAAyC,GACvExW,EAAY+T,WAAaD,GAAiBE,WAAWC,KACrDwC,EAAgBj2B,MAAMuT,OAAS,OAC/B0iB,EAAgBj2B,MAAMuT,OAAY0iB,EAAgBziB,aAAlD,KACAyiB,EAAgBniB,WAKxBiB,WAAW,WACPkhB,EAAgBniB,SACjB,IAEHmiB,EAAgB39B,iBAAiB,QAAS,WACtC29B,EAAgBj2B,MAAMuT,OAAS,OAC/B0iB,EAAgBj2B,MAAMuT,OAAY0iB,EAAgBziB,aAAlD,OAGJ,IAAIkjB,GAAkB,EAoHtB,OAnHAT,EAAgB39B,iBAAiB,mBAAoB,SAACP,GAClD2+B,GAAkB,IAGtBT,EAAgB39B,iBAAiB,iBAAkB,SAACP,GAChDgd,WAAW,WACP2hB,GAAkB,GACnB,MAGPT,EAAgB39B,iBAAiB,UAAW,SAACP,GACzC,IAAK2+B,GAA6B,UAAV3+B,EAAEoE,IAAiB,CACvCqjB,EAAYqU,KAAOoC,EAAgBl6B,MACnCs6B,EAAgBnwB,UAAYsZ,EAAYqU,KACxCx1B,EAAY23B,EAAkB,yCAAyC,GACvExW,EAAY+T,WAAaD,GAAiBE,WAAWM,KACrDz1B,EAAYi2B,EAAsB,SAAS,GAC3CuB,EAAgB9gB,WAAW,WACvB1W,EAAYi2B,EAAsB,SAAS,IAC5C,KACHt6B,EAAaR,KAAKX,EAAKwK,OAAQxK,EAAKwK,OAAOd,MAAO,qBAAqB,GACnEid,YAAAA,IAEJzC,QAAQ4Z,MAAM,iBACd5Z,QAAQnY,IAAI/L,EAAK07B,gCAAiC17B,EAAK27B,kCACvDzX,QAAQ6Z,WACR,IACQ/9B,EAAK07B,kCACwC,YAAzC17B,EAAK07B,iCACL17B,EAAKwK,OAAOW,OAEhBnL,EAAK07B,gCAAkC,MAEvC17B,EAAK27B,mCACyC,YAA1C37B,EAAK27B,kCACL37B,EAAKwK,OAAOW,OAEhBnL,EAAK27B,iCAAmC,MAE9C,MAAOz8B,IAGTA,EAAE0lB,iBAEQ,WAAV1lB,EAAEoE,MACF85B,EAAgBl6B,MAAQyjB,EAAYqU,KACpCx1B,EAAY23B,EAAkB,yCAAyC,GACvExW,EAAY+T,WAAaD,GAAiBE,WAAWM,QAI7DmC,EAAgB39B,iBAAiB,OAAQ,SAACP,GACtCynB,EAAYqU,KAAOoC,EAAgBl6B,MACnCs6B,EAAgBnwB,UAAYsZ,EAAYqU,KACxCx1B,EAAY23B,EAAkB,yCAAyC,GACvExW,EAAY+T,WAAaD,GAAiBE,WAAWM,KACrDz1B,EAAYi2B,EAAsB,SAAS,GAC3CuB,EAAgB9gB,WAAW,WACvB1W,EAAYi2B,EAAsB,SAAS,IAC5C,KACHt6B,EAAaR,KAAKX,EAAKwK,OAAQxK,EAAKwK,OAAOd,MAAO,qBAAqB,GACnEid,YAAAA,IAEJznB,EAAE0lB,mBAGNsY,EAAKz9B,iBAAiB,aAAc,SAACP,GAC7B89B,IACA7U,aAAa6U,GACbA,EAAgB,MAEpBx3B,EAAY23B,EAAkB,yCAAyC,GACvE,IAAM72B,EAAYtG,EAAK+7B,eACjB6B,GAAct3B,EAAUwwB,YAAc,KAAOxwB,EAAUwwB,YAAe,KAAO,EAE/EtxB,EAAY23B,EAAkB,4CAD9B3mB,EAAUonB,GAKd1+B,EAAE0lB,mBAGNsY,EAAKz9B,iBAAiB,aAAc,SAACP,GACjC89B,EAAgB9gB,WAAW,WACvB1W,EAAY23B,EAAkB,yCAAyC,IACxE,KAEHj+B,EAAE0lB,mBAGNuY,EAAiB19B,iBAAiB,aAAc,SAACP,GACzC89B,IACA7U,aAAa6U,GACbA,EAAgB,MAEpBx3B,EAAY23B,EAAkB,yCAAyC,GACvE,IAAM72B,EAAYtG,EAAK+7B,eACjB6B,GAAct3B,EAAUwwB,YAAc,KAAOxwB,EAAUwwB,YAAe,KAAO,EAE/EtxB,EAAY23B,EAAkB,4CAD9B3mB,EAAUonB,GAKd1+B,EAAE0lB,mBAGNuY,EAAiB19B,iBAAiB,aAAc,SAACP,GAC7C89B,EAAgB9gB,WAAW,WACvB1W,EAAY23B,EAAkB,yCAAyC,IACxE,KAEHj+B,EAAE0lB,mBAGN6W,EAAqBt0B,MAAMgQ,KAA3B,QAA0CX,EAA1C,KACOilB,QA1ZMF,GCbfpxB,IAEF6zB,eAFW,SAEIz9B,EAAMuC,GAAY,IAAA9C,EAAAC,KACzB9C,EAAGM,OAAOqF,GACVc,EAAcrD,EAAMN,KAAKyJ,OACrBwB,IAAKpI,IAEF3F,EAAGU,MAAMiF,IAChBA,EAAWxC,QAAQ,SAAA29B,GACfr6B,EAAcrD,EAAMP,EAAK0J,MAAOu0B,MAO5CC,OAhBW,SAgBJ/hC,GAAO,IAAAwa,EAAA1W,KACL+L,EAAQ7P,EAAO,mBAMpB8N,EAAMyB,eAAe/K,KAAKV,MAG1B4D,EADehH,MAAMqF,KAAKjC,KAAKyJ,MAAMvD,iBAAiB,WAEtDlG,KAAK2R,SAASgH,cAAgB,EAG9B3Y,KAAK05B,QAAQh5B,KACTV,KACA,WACI0W,EAAKgQ,YAAYwX,QAEjBxnB,EAAKrX,QAAQmM,WAGb5H,EAAc8S,EAAKjN,OAGfvM,EAAGc,QAAQ0Y,EAAK5U,SAASuE,YACzBqQ,EAAK5U,SAASuE,UAAUf,gBAAgB,SAI5C,IAAM64B,EAAWznB,EAAKpW,KAChB89B,EAAe1nB,EAAKhO,SAGlBgD,EAAkBxP,EAAlBwP,QAASpL,EAASpE,EAAToE,KAlBf+9B,EAAAn7B,EAmB4CwI,EAnB5C,GAAA,GAAA4yB,EAAAD,EAmBO31B,SAAAA,OAnBP5I,IAAAw+B,EAmBkBza,GAAU7Z,MAnB5Bs0B,EAmBmCrzB,EAnBnCozB,EAmBmCpzB,IAC/BszB,EAAuB,UAAb71B,EAAuBpI,EAAO,MACxCuC,EAA0B,UAAb6F,MAA8BuC,IAAAA,GAEjDzO,OAAO8E,OAAOoV,GACVhO,SAAAA,EACApI,KAAAA,EAEAlB,UAAWkJ,EAAQG,MAAMnI,EAAMoI,EAAUgO,EAAK/K,OAAOhD,eAGrDw1B,IAAa79B,GAAQ89B,IAAiB11B,GAAYA,IAAamb,GAAU7Z,MAMzEpH,EAAc8T,EAAKjN,MAAO5G,IAE1B6T,EAAKjN,MAAQ,KACbiN,EAAKjN,MAAQlG,EAAcg7B,EAAS17B,IAIxC6T,EAAK5U,SAASuE,UAAU3D,YAAYgU,EAAKjN,OAGrCvM,EAAGO,QAAQvB,EAAMijB,YACjBzI,EAAK/K,OAAOwT,SAAWjjB,EAAMijB,UAI7BzI,EAAKlN,UACDkN,EAAK/K,OAAO6yB,aACZ9nB,EAAKjN,MAAMnG,aAAa,cAAe,IAEvCoT,EAAK/K,OAAOwT,UACZzI,EAAKjN,MAAMnG,aAAa,WAAY,IAEnCpG,EAAGgC,MAAMhD,EAAM6mB,UAChBrM,EAAKqM,OAAS7mB,EAAM6mB,QAEpBrM,EAAK/K,OAAOmU,KAAK3C,QACjBzG,EAAKjN,MAAMnG,aAAa,OAAQ,IAEhCoT,EAAK/K,OAAOoK,OACZW,EAAKjN,MAAMnG,aAAa,QAAS,IAEjCoT,EAAK/K,OAAOhD,aACZ+N,EAAKjN,MAAMnG,aAAa,cAAe,KAK/CwF,GAAGse,aAAa1mB,KAAKgW,GACrB5N,GAAGue,kCAAkC3mB,KAAKgW,GAGtCA,EAAKlN,UACLU,GAAO6zB,eAAer9B,KAAKgW,EAAM,SAAUhL,GAC3CgL,EAAKjN,MAAMnG,aAAa,MAAOoI,EAAQ,GAAGT,MAI9CyL,EAAK/K,OAAO8B,MAAQvR,EAAMuR,MAG1BhE,GAAMkT,MAAMjc,KAAKgW,GAGjB,IAAMlL,EAAUkL,EAAKrL,QAAQ9L,IAAI,WAC7BrC,EAAGG,OAAOmO,KACVkL,EAAKjN,MAAM+B,QAAUA,GAGzB,IAAIizB,EAAiB,KAErB,GAAI/nB,EAAKlN,QAAS,CAEd,GAAI,WAAYtN,EAAO,CACnBgO,GAAO6zB,eAAer9B,KAAKgW,EAAM,QAASxa,EAAM8c,QAChD,IAAM0lB,EAAgBxiC,EAAM8c,OAAOjW,OAAO,SAAArE,GAAA,OAASA,EAAMma,UAIzD,GAHI6lB,EAAc1hC,OAAS,IACvByhC,EAAiBC,EAAc,GAAGC,SAEnCjoB,EAAKjN,MAAME,YAAcvC,EAAQW,OAChC,IAAI,IAAI0E,EAAI,EAAGA,EAAGiK,EAAKjN,MAAME,WAAW3M,OAAQyP,IAC5CiK,EAAKjN,MAAME,WAAW8C,GAAGiR,KAAO,SAGxC/L,GAASnC,OAAO9O,KAAKgW,GAIzBA,EAAKjN,MAAM0B,QAIXuL,EAAKlN,SAAYkN,EAAKiR,UAAYjR,EAAKtX,UAAU0J,KAEjDA,GAAGwe,MAAM5mB,KAAKgW,GAIlBA,EAAK9E,WAAWpC,SAChBmC,GAASkN,WAAWne,KAAKgW,EAAM+nB,GAC/B,IAAMrzB,EAAQsL,EAAKrL,QAAQ9L,IAAI,SAC3BrC,EAAGG,OAAO+N,KACVsL,EAAKtL,MAAQA,EACbE,GAASC,cAAc7K,KAAKgW,EAAM,QAAStL,IAE/CsL,EAAKgQ,YAAY0V,YAErB,IAlJAp8B,KAAK6L,MAAM2G,KAAK,2BCGtBosB,GAAAA,WACF,SAAAA,EAAYzyB,EAAQ9M,GAAS,IAAAU,EAAAC,KAkFzB,GAlFyB+N,EAAA/N,KAAA4+B,GACzB5+B,KAAKmoB,UAGLnoB,KAAKunB,OAAQ,EACbvnB,KAAKojB,SAAU,EACfpjB,KAAK6+B,QAAS,EAGd7+B,KAAK4J,MAAQtB,EAAQsB,MAGrB5J,KAAKyJ,MAAQ0C,EAGTjP,EAAGM,OAAOwC,KAAKyJ,SACfzJ,KAAKyJ,MAAQhG,SAASyC,iBAAiBlG,KAAKyJ,SAI3ClL,OAAOugC,QAAU9+B,KAAKyJ,iBAAiBq1B,QAAW5hC,EAAGa,SAASiC,KAAKyJ,QAAUvM,EAAGU,MAAMoC,KAAKyJ,UAE5FzJ,KAAKyJ,MAAQzJ,KAAKyJ,MAAM,IAI5BzJ,KAAK2L,OAASrB,KAEV4U,GACA0f,EAAK1f,SACL7f,MACC,WACG,IACI,OAAOsC,KAAK0M,MAAMtO,EAAK0J,MAAMU,aAAa,qBAC5C,MAAOlL,GACL,UAJP,IAULe,KAAK8B,UACDuE,UAAW,KACXgL,WACAY,WACAJ,YACAC,UACAJ,UACI8B,KAAM,KACN0E,SACAH,SAEJpG,SAAU,MAId3R,KAAK2R,UACDwL,OAAQ,KACRxE,cAAe,EACf4E,KAAM,IAAIzf,SAIdkC,KAAK4R,YACDuL,QAAQ,GAIZnd,KAAKX,SACD+L,SACAI,YAKJxL,KAAK6L,MAAQ,IAAImY,GAAQhkB,KAAK2L,OAAOE,OAGrC7L,KAAK6L,MAAMC,IAAI,SAAU9L,KAAK2L,QAC9B3L,KAAK6L,MAAMC,IAAI,UAAWxD,IAGtBpL,EAAGC,gBAAgB6C,KAAKyJ,QAAWvM,EAAGc,QAAQgC,KAAKyJ,OAMvD,GAAIzJ,KAAKyJ,MAAMlI,KACXvB,KAAK6L,MAAM2G,KAAK,6BAKpB,GAAKxS,KAAK2L,OAAOqC,QAOjB,GAAK1F,EAAQG,QAAQI,IAArB,CAMA,IAAMyR,EAAQta,KAAKyJ,MAAMpH,WAAU,GACnCiY,EAAM6E,UAAW,EACjBnf,KAAK8B,SAASi9B,SAAWzkB,EAIzB,IAAMha,EAAON,KAAKyJ,MAAM80B,QAAQxxB,cAG5BqV,EAAS,KACTvjB,EAAM,KAGV,OAAQyB,GACJ,IAAK,MAKD,GAHA8hB,EAASpiB,KAAKyJ,MAAMlD,cAAc,UAG9BrJ,EAAGc,QAAQokB,IAaX,GAXAvjB,EAAMwd,GAAS+F,EAAOjY,aAAa,QACnCnK,KAAK0I,ShBpJlB,SAA0B7J,GAE7B,MAAI,wDAAwD4I,KAAK5I,GACtDglB,GAAUxB,QAIjB,wDAAwD5a,KAAK5I,GACtDglB,GAAU3B,MAGd,KgByIyB8c,CAAiBngC,EAAI0N,YAGrCvM,KAAK8B,SAASuE,UAAYrG,KAAKyJ,MAC/BzJ,KAAKyJ,MAAQ2Y,EAGbpiB,KAAK8B,SAASuE,UAAUzB,UAAY,GAGhC/F,EAAIogC,OAAOjiC,OAAQ,CACnB,IAAMkiC,GAAU,IAAK,QAEjBA,EAAO/4B,SAAStH,EAAIsgC,aAAa5/B,IAAI,eACrCS,KAAK2L,OAAOwT,UAAW,GAEvB+f,EAAO/4B,SAAStH,EAAIsgC,aAAa5/B,IAAI,WACrCS,KAAK2L,OAAOmU,KAAK3C,QAAS,GAK1Bnd,KAAK6c,WACL7c,KAAK2L,OAAOhD,YAAcu2B,EAAO/4B,SAAStH,EAAIsgC,aAAa5/B,IAAI,gBAC/DS,KAAK2L,OAAO8mB,GAAK5zB,EAAIsgC,aAAa5/B,IAAI,OAEtCS,KAAK2L,OAAOhD,aAAc,QAKlC3I,KAAK0I,SAAW1I,KAAKyJ,MAAMU,aAAanK,KAAK2L,OAAO9I,WAAWqb,MAAMxV,UAGrE1I,KAAKyJ,MAAMnE,gBAAgBtF,KAAK2L,OAAO9I,WAAWqb,MAAMxV,UAI5D,GAAIxL,EAAGgC,MAAMc,KAAK0I,YAAclM,OAAOS,KAAK4mB,IAAW1d,SAASnG,KAAK0I,UAEjE,YADA1I,KAAK6L,MAAM0G,MAAM,kCAKrBvS,KAAKM,KAAOwjB,GAAMtb,MAElB,MAEJ,IAAK,QACL,IAAK,QACDxI,KAAKM,KAAOA,EACZN,KAAK0I,SAAWmb,GAAU7Z,MAGtBhK,KAAKyJ,MAAMpE,aAAa,iBACxBrF,KAAK2L,OAAO6yB,aAAc,GAE1Bx+B,KAAKyJ,MAAMpE,aAAa,cACxBrF,KAAK2L,OAAOwT,UAAW,GAEvBnf,KAAKyJ,MAAMpE,aAAa,iBACxBrF,KAAK2L,OAAOhD,aAAc,GAE1B3I,KAAKyJ,MAAMpE,aAAa,WACxBrF,KAAK2L,OAAOoK,OAAQ,GAEpB/V,KAAKyJ,MAAMpE,aAAa,UACxBrF,KAAK2L,OAAOmU,KAAK3C,QAAS,GAG9B,MAEJ,QAEI,YADAnd,KAAK6L,MAAM0G,MAAM,kCAKzBvS,KAAKZ,UAAYkJ,EAAQG,MAAMzI,KAAKM,KAAMN,KAAK0I,SAAU1I,KAAK2L,OAAOhD,aAGhE3I,KAAKZ,UAAUyJ,KAKpB7I,KAAKO,kBAGLP,KAAKuiB,UAAY,IAAI6F,GAAUpoB,MAG/BA,KAAKqL,QAAU,IAAIyC,EAAQ9N,MAG3BA,KAAKyJ,MAAMlI,KAAOvB,KAGb9C,EAAGc,QAAQgC,KAAK8B,SAASuE,aAC1BrG,KAAK8B,SAASuE,UAAY9C,EAAc,OACxC1B,EAAK7B,KAAKyJ,MAAOzJ,KAAK8B,SAASuE,YAInCyC,GAAGse,aAAa1mB,KAAKV,MACrB8I,GAAGue,kCAAkC3mB,KAAKV,MAG1CyJ,GAAMkT,MAAMjc,KAAKV,MAGbA,KAAK2L,OAAOE,OACZpL,EAAGC,KAAKV,KAAMA,KAAK8B,SAASuE,UAAWrG,KAAK2L,OAAOxL,OAAOkT,KAAK,KAAM,SAAAjV,GACjE2B,EAAK8L,MAAMC,IAAX,UAAyB1N,EAAMkC,SAMnCN,KAAKwJ,SAAYxJ,KAAK2nB,UAAY3nB,KAAKZ,UAAU0J,KACjDA,GAAGwe,MAAM5mB,KAAKV,MAGlB2f,GAAKhD,MAAMjc,KAAKV,MAGhBA,KAAKuiB,UAAUlc,YAGfrG,KAAKuiB,UAAUtC,SAGfjgB,KAAK4R,WAAa,IAAIwT,GAAWplB,MAGjCA,KAAKijB,IAAM,IAAI6R,GAAI90B,MAEnBA,KAAK0mB,YAAc,IAAI4U,GAAYt7B,MAG/BA,KAAK2L,OAAOwT,UACZnf,KAAKkL,QA3DLlL,KAAK6L,MAAM0G,MAAM,iCA7GjBvS,KAAK6L,MAAM0G,MAAM,iCAPjBvS,KAAK6L,MAAM0G,MAAM,yCAZjBvS,KAAK6L,MAAM0G,MAAM,qFAkOrB,OAAKrV,EAAGQ,SAASsC,KAAKyJ,MAAMyB,MAKrBlL,KAAKyJ,MAAMyB,OAJP,qCAWNlL,KAAKkjB,SAAYhmB,EAAGQ,SAASsC,KAAKyJ,MAAMsB,QAI7C/K,KAAKyJ,MAAMsB,2CAmCJ7O,IAEQgB,EAAGO,QAAQvB,GAASA,GAAS8D,KAAKkjB,SAG7CljB,KAAKkL,OAELlL,KAAK+K,uCAQL/K,KAAKwJ,SACLxJ,KAAK+K,QACL/K,KAAKsR,WACEpU,EAAGQ,SAASsC,KAAKyJ,MAAM8lB,OAC9BvvB,KAAKyJ,MAAM8lB,yCAQfvvB,KAAK2K,YAAc,iCAOhB4C,GACHvN,KAAK2K,YAAc3K,KAAK2K,aAAezN,EAAGG,OAAOkQ,GAAYA,EAAWvN,KAAK2L,OAAO4B,0CAOhFA,GACJvN,KAAK2K,YAAc3K,KAAK2K,aAAezN,EAAGG,OAAOkQ,GAAYA,EAAWvN,KAAK2L,OAAO4B,iDAgIzE+G,GACX,IAAMtC,EAAShS,KAAKyJ,MAAMsM,MAAQ,EAAI/V,KAAKgS,OAC3ChS,KAAKgS,OAASA,GAAU9U,EAAGG,OAAOiX,GAAQA,EAAO,0CAOtCA,GACXtU,KAAK+oB,gBAAgBzU,0CAmRVpY,GACXyV,GAAS/R,OAAOc,KAAKV,KAAM9D,GAAO,qCAuF9BoM,EAAQY,SACRlJ,KAAKyJ,MAAM21B,wEAQJx/B,GAEX,GAAII,KAAKZ,UAAU0J,KAAO9I,KAAK4pB,QAAS,CAEpC,IAAMyV,EAAWz5B,EAAS5F,KAAK8B,SAASuE,UAAWrG,KAAK2L,OAAO0G,WAAWmN,cAGpEha,OAA0B,IAAX5F,OAAyBE,GAAaF,EAGrD0/B,EAAS/5B,EAAYvF,KAAK8B,SAASuE,UAAWrG,KAAK2L,OAAO0G,WAAWmN,aAAcha,GAOzF,GAJI85B,IAAWpiC,EAAGgC,MAAMc,KAAK2L,OAAO+F,WAChCpG,GAASyO,WAAWrZ,KAAKV,MAAM,GAG/Bs/B,IAAWD,EAAU,CACrB,IAAME,EAAYD,EAAS,iBAAmB,gBAC9Cp+B,EAAaR,KAAKV,KAAMA,KAAKyJ,MAAO81B,GAExC,OAAQD,EAEZ,OAAO,6BAQRlhC,EAAOuB,GACNc,EAAGC,KAAKV,KAAMA,KAAK8B,SAASuE,UAAWjI,EAAOuB,gCAQ7CvB,EAAOuB,GACRiB,EAAKF,KAAKV,KAAMA,KAAK8B,SAASuE,UAAWjI,EAAOuB,+BAQhDvB,EAAOuB,GACPgB,EAAIX,KAAK8B,SAASuE,UAAWjI,EAAOuB,mCAUhCA,GAAwB,IAAA+W,EAAA1W,KAAdw/B,EAAc3/B,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,IAAAA,UAAA,GAC5B,GAAKG,KAAKunB,MAAV,CAIA,IAAMgD,EAAO,WAET9mB,SAASkD,KAAKO,MAAMie,SAAW,GAG/BzO,EAAKwH,MAAQ,KAGTshB,GACIhjC,OAAOS,KAAKyZ,EAAK5U,UAAU9E,SAE3B4G,EAAc8S,EAAK5U,SAASuP,QAAQnG,MACpCtH,EAAc8S,EAAK5U,SAAS6P,UAC5B/N,EAAc8S,EAAK5U,SAASwJ,UAC5B1H,EAAc8S,EAAK5U,SAASC,SAG5B2U,EAAK5U,SAASuP,QAAQnG,KAAO,KAC7BwL,EAAK5U,SAAS6P,SAAW,KACzB+E,EAAK5U,SAASwJ,SAAW,KACzBoL,EAAK5U,SAASC,QAAU,MAIxB7E,EAAGQ,SAASiC,IACZA,MlCr6Bb,WACCK,MAAQA,KAAKO,iBACbP,KAAKO,eAAeF,QAAQ,SAAAuN,GAAQ,IACxB5P,EAAqC4P,EAArC5P,QAASsC,EAA4BsN,EAA5BtN,KAAMX,EAAsBiO,EAAtBjO,SAAUN,EAAYuO,EAAZvO,QACjCrB,EAAQyB,oBAAoBa,EAAMX,EAAUN,KAGhDW,KAAKO,oBkCk6BmBG,KAAKgW,GAGrBzS,EAAeyS,EAAK5U,SAASi9B,SAAUroB,EAAK5U,SAASuE,WAGrDnF,EAAaR,KAAKgW,EAAMA,EAAK5U,SAASi9B,SAAU,aAAa,GAGzD7hC,EAAGQ,SAASiC,IACZA,EAASe,KAAKgW,EAAK5U,SAASi9B,UAIhCroB,EAAK6Q,OAAQ,EAGbtL,WAAW,WACPvF,EAAK5U,SAAW,KAChB4U,EAAKjN,MAAQ,MACd,OAKXzJ,KAAKuvB,OAGDvvB,KAAKwJ,SAEL0e,aAAaloB,KAAKmoB,OAAO/E,SAGzBta,GAAG2J,qBAAqB/R,KAAKV,MAAM,GAGnCuqB,KACOvqB,KAAK6c,WAEZuX,cAAcp0B,KAAKmoB,OAAOkM,WAC1BD,cAAcp0B,KAAKmoB,OAAOjF,SAGP,OAAfljB,KAAKke,OAAkBhhB,EAAGQ,SAASsC,KAAKke,MAAMwb,UAC9C15B,KAAKke,MAAMwb,UAIfnP,KACOvqB,KAAK2Z,UAGO,OAAf3Z,KAAKke,OACLle,KAAKke,MAAMuhB,SAAS1vB,KAAKwa,GAI7BtO,WAAWsO,EAAM,wCAQhBjqB,GACL,OAAOgI,EAAQc,KAAK1I,KAAKV,KAAMM,mCAvxB/B,OAAOjE,QAAQ2D,KAAK0I,WAAamb,GAAU7Z,uCAI3C,OAAO3N,QAAQ2D,KAAK6c,WAAa7c,KAAK2Z,2CAItC,OAAOtd,QAAQ2D,KAAK0I,WAAamb,GAAUxB,yCAI3C,OAAOhmB,QAAQ2D,KAAK0I,WAAamb,GAAU3B,uCAI3C,OAAO7lB,QAAQ2D,KAAKM,OAASwjB,GAAMtb,uCAInC,OAAOnM,QAAQ2D,KAAKM,OAASwjB,GAAMvb,uCA8BnC,OAAOlM,QAAQ2D,KAAKunB,QAAUvnB,KAAK4K,SAAW5K,KAAK6pB,sCAOnD,OAAOxtB,QAAQ2D,KAAKyJ,MAAMmB,wCAO1B,OAAOvO,QAAQ2D,KAAK4K,QAA+B,IAArB5K,KAAK2K,2CAOnC,OAAOtO,QAAQ2D,KAAKyJ,MAAMogB,yCAyDd3tB,GAEZ,GAAK8D,KAAKmS,SAAV,CAKA,IAAMutB,EAAexiC,EAAGG,OAAOnB,IAAUA,EAAQ,EAGjD8D,KAAKyJ,MAAMkB,YAAc+0B,EAAejoB,KAAKrD,IAAIlY,EAAO8D,KAAKmS,UAAY,EAGzEnS,KAAK6L,MAAMC,IAAX,cAA6B9L,KAAK2K,YAAlC,6BAOA,OAAOrN,OAAO0C,KAAKyJ,MAAMkB,8CAMd,IACH2L,EAAatW,KAAKyJ,MAAlB6M,SAGR,OAAIpZ,EAAGG,OAAOiZ,GACHA,EAMPA,GAAYA,EAAStZ,QAAUgD,KAAKmS,SAAW,EACxCmE,EAAS+K,IAAI,GAAKrhB,KAAKmS,SAG3B,kCAOP,OAAO9V,QAAQ2D,KAAKyJ,MAAM8N,0CAQ1B,IAAMooB,EAAexoB,WAAWnX,KAAK2L,OAAOwG,UAGtCytB,GAAgB5/B,KAAKyJ,WAAa0I,SAClCA,EAAYjV,EAAGG,OAAOuiC,IAAiBA,IAAiBC,EAAAA,EAAeD,EAAJ,EAGzE,OAAOD,GAAgBxtB,+BAOhBlP,GACP,IAAI+O,EAAS/O,EAIT/F,EAAGM,OAAOwU,KACVA,EAAS1U,OAAO0U,IAIf9U,EAAGG,OAAO2U,KACXA,EAAShS,KAAKqL,QAAQ9L,IAAI,WAIzBrC,EAAGG,OAAO2U,KACRA,EAAWhS,KAAK2L,OAAhBqG,QAIHA,EAlBQ,IAmBRA,EAnBQ,GAsBRA,EArBQ,IAsBRA,EAtBQ,GA0BZhS,KAAK2L,OAAOqG,OAASA,EAGrBhS,KAAKyJ,MAAMuI,OAASA,GAGf9U,EAAGgC,MAAM+D,IAAUjD,KAAK+V,OAAS/D,EAAS,IAC3ChS,KAAK+V,OAAQ,mBAQjB,OAAOzY,OAAO0C,KAAKyJ,MAAMuI,kDAoBJ3L,GACjBnJ,EAAGc,QAAQqI,KACXrG,KAAK2L,OAAOkU,oBAAsBxZ,EAClCyC,GAAGue,kCAAkC3mB,KAAKV,mCAQxCyR,GACN,IAAI7R,EAAS6R,EAGRvU,EAAGO,QAAQmC,KACZA,EAASI,KAAKqL,QAAQ9L,IAAI,UAIzBrC,EAAGO,QAAQmC,KACZA,EAASI,KAAK2L,OAAOoK,OAIzB/V,KAAK2L,OAAOoK,MAAQnW,EAGpBI,KAAKyJ,MAAMsM,MAAQnW,kBAOnB,OAAOvD,QAAQ2D,KAAKyJ,MAAMsM,wCAQ1B,OAAK/V,KAAKwJ,YAINxJ,KAAK4pB,UAMLvtB,QAAQ2D,KAAKyJ,MAAMq2B,cACnBzjC,QAAQ2D,KAAKyJ,MAAMs2B,8BACnB1jC,QAAQ2D,KAAKyJ,MAAMu2B,aAAehgC,KAAKyJ,MAAMu2B,YAAYhjC,sCAQvDd,GACN,IAAIkP,EAAQ,KAERlO,EAAGG,OAAOnB,KACVkP,EAAQlP,GAGPgB,EAAGG,OAAO+N,KACXA,EAAQpL,KAAKqL,QAAQ9L,IAAI,UAGxBrC,EAAGG,OAAO+N,KACXA,EAAQpL,KAAK2L,OAAOP,MAAM2U,UAI1B3U,EAAQ,KACRA,EAAQ,IAERA,EAAQ,IACRA,EAAQ,GAGPpL,KAAK2L,OAAOP,MAAM/L,QAAQ8G,SAASiF,IAMxCpL,KAAK2L,OAAOP,MAAM2U,SAAW3U,EAG7BpL,KAAKyJ,MAAMkqB,aAAevoB,GARtBpL,KAAK6L,MAAM2G,KAAX,sBAAsCpH,EAAtC,qBAeJ,OAAO9N,OAAO0C,KAAKyJ,MAAMkqB,4CAQjBz3B,GACR,IAAMyP,EAAS3L,KAAK2L,OAAOH,QACrBnM,EAAUW,KAAKX,QAAQmM,QAE7B,GAAKnM,EAAQrC,OAAb,CAIA,IAAIwO,IACCtO,EAAGgC,MAAMhD,IAAUoB,OAAOpB,GAC3B8D,KAAKqL,QAAQ9L,IAAI,WACjBoM,EAAOoU,SACPpU,EAAOkN,SACT5R,KAAK/J,EAAGG,QAEV,GAAKgC,EAAQ8G,SAASqF,GAIX,GAAGA,GAAH,GAAoBtP,GAC3B8D,KAAKqL,QAAQZ,KACTe,QAAAA,QANwB,CAC5B,IAAMvI,EzBprBX,SAAiBrF,EAAOqF,GAC3B,OAAK/F,EAAGU,MAAMA,IAAWA,EAAMZ,OAIxBY,EAAMqO,OAAO,SAACg0B,EAAMC,GAAP,OAAiBzoB,KAAKwT,IAAIiV,EAAOj9B,GAASwU,KAAKwT,IAAIgV,EAAOh9B,GAASi9B,EAAOD,IAHnF,KyBkrBWE,CAAQ9gC,EAASmM,GAC/BxL,KAAK6L,MAAM2G,KAAX,+BAA+ChH,EAA/C,WAAiEvI,EAAjE,YACAuI,EAAUvI,EAQd/B,EAAaR,KAAKV,KAAMA,KAAKyJ,MAAO,oBAAoB,GAAS+B,QAAAA,IAGjEG,EAAOoU,SAAWvU,EAGlBxL,KAAKyJ,MAAM+B,QAAUA,mBAOrB,OAAOxL,KAAKyJ,MAAM+B,mCAQbtP,GACL,IAAM0D,EAAS1C,EAAGO,QAAQvB,GAASA,EAAQ8D,KAAK2L,OAAOmU,KAAK3C,OAC5Dnd,KAAK2L,OAAOmU,KAAK3C,OAASvd,EAC1BI,KAAKyJ,MAAMqW,KAAOlgB,kBAkDlB,OAAOvD,QAAQ2D,KAAKyJ,MAAMqW,mCAOnB5jB,GACPgO,GAAO+zB,OAAOv9B,KAAKV,KAAM9D,mBAOzB,OAAO8D,KAAKyJ,MAAMomB,wCAOX3zB,GACF8D,KAAK4c,QAKV9T,GAAG4e,UAAUhnB,KAAKV,KAAM9D,GAAO,GAAO+T,MAAM,cAJxCjQ,KAAK6L,MAAM2G,KAAK,oDAWpB,OAAKxS,KAAK4c,QAIH5c,KAAKyJ,MAAMU,aAAa,UAHpB,oCAUFjO,GACT,IAAM0D,EAAS1C,EAAGO,QAAQvB,GAASA,EAAQ8D,KAAK2L,OAAOwT,SACvDnf,KAAK2L,OAAOwT,SAAWvf,kBAOvB,OAAOvD,QAAQ2D,KAAK2L,OAAOwT,6CAedjjB,GACbyV,GAASlH,IAAI/J,KAAKV,KAAM9D,GAAO,mBAMhB,IAAAohB,EACmBtd,KAAK2R,SAA/BuH,EADOoE,EACPpE,QAASP,EADF2E,EACE3E,aACjB,OAAOO,EAAUP,GAAgB,wCAGjBzc,GAChB8D,KAAK2R,SAAS6H,SAAWtd,EACzB8D,KAAKqL,QAAQZ,KACTmO,gBAAiB1c,IAErByV,GAASyL,YAAY1c,KAAKV,KAAMA,KAAK2R,SAAS6H,0BAI9C,OAAOxZ,KAAKqL,QAAQ9L,IAAI,oBAAsBS,KAAK2L,OAAOgG,SAAS6H,wCAQ1Dtd,GACTyV,GAASiM,YAAYld,KAAKV,KAAM9D,GAAO,mBAOvC,OAAQyV,GAAS6M,gBAAgB9d,KAAKV,WAAamZ,mCAQ/Cjd,GACJ,IAAMkkC,EACG,qBADHA,EAEM,SAIZ,GAAK93B,EAAQU,IAAb,CAKA,IAAMpJ,EAAS1C,EAAGO,QAAQvB,GAASA,EAAQ8D,KAAKgJ,MAAQo3B,EAGxDpgC,KAAKyJ,MAAMR,0BAA0BrJ,EAASwgC,EAAaA,oBAO3D,OAAK93B,EAAQU,IAINhJ,KAAKyJ,MAAM42B,uBAHP,yCA8LE//B,EAAMoI,EAAU43B,GAC7B,OAAOh4B,EAAQG,MAAMnI,EAAMoI,EAAU43B,sCAQvBzhC,EAAKoG,GACnB,OAAOmK,GAAWvQ,EAAKoG,iCAQdP,GAAwB,IAAdrF,EAAcQ,UAAA7C,OAAA,QAAA8C,IAAAD,UAAA,GAAAA,UAAA,MAC7BmC,EAAU,KAUd,OARI9E,EAAGM,OAAOkH,GACV1C,EAAUpF,MAAMqF,KAAKwB,SAASyC,iBAAiBxB,IACxCxH,EAAGa,SAAS2G,GACnB1C,EAAUpF,MAAMqF,KAAKyC,GACdxH,EAAGU,MAAM8G,KAChB1C,EAAU0C,EAAS3B,OAAO7F,EAAGc,UAG7Bd,EAAGgC,MAAM8C,GACF,KAGJA,EAAQqI,IAAI,SAAAk2B,GAAA,OAAK,IAAI3B,EAAK2B,EAAGlhC,WA5lCtCu/B,UAgmCNA,GAAK1f,U5B9nCqB9hB,G4B8nCA8hB,G5B7nCfvd,KAAK0M,MAAM1M,KAAKC,UAAUxE,M4B8nCrCwhC,GAAKvY,MAAQA","file":"plyr.min.js","sourcesContent":["// ==========================================================================\n// Type checking utils\n// ==========================================================================\n\nconst getConstructor = input => (input !== null && typeof input !== 'undefined' ? input.constructor : null);\nconst instanceOf = (input, constructor) => Boolean(input && constructor && input instanceof constructor);\nconst isNullOrUndefined = input => input === null || typeof input === 'undefined';\nconst isObject = input => getConstructor(input) === Object;\nconst isNumber = input => getConstructor(input) === Number && !Number.isNaN(input);\nconst isString = input => getConstructor(input) === String;\nconst isBoolean = input => getConstructor(input) === Boolean;\nconst isFunction = input => getConstructor(input) === Function;\nconst isArray = input => Array.isArray(input);\nconst isWeakMap = input => instanceOf(input, WeakMap);\nconst isNodeList = input => instanceOf(input, NodeList);\nconst isElement = input => instanceOf(input, Element);\nconst isTextNode = input => getConstructor(input) === Text;\nconst isEvent = input => instanceOf(input, Event);\nconst isCue = input => instanceOf(input, window.TextTrackCue) || instanceOf(input, window.VTTCue);\nconst isTrack = input => instanceOf(input, TextTrack) || (!isNullOrUndefined(input) && isString(input.kind));\n\nconst isEmpty = input =>\n    isNullOrUndefined(input) ||\n    ((isString(input) || isArray(input) || isNodeList(input)) && !input.length) ||\n    (isObject(input) && !Object.keys(input).length);\n\nconst isUrl = input => {\n    // Accept a URL object\n    if (instanceOf(input, window.URL)) {\n        return true;\n    }\n\n    // Add the protocol if required\n    let string = input;\n    if (!input.startsWith('http://') || !input.startsWith('https://')) {\n        string = `http://${input}`;\n    }\n\n    try {\n        return !isEmpty(new URL(string).hostname);\n    } catch (e) {\n        return false;\n    }\n};\n\nexport default {\n    nullOrUndefined: isNullOrUndefined,\n    object: isObject,\n    number: isNumber,\n    string: isString,\n    boolean: isBoolean,\n    function: isFunction,\n    array: isArray,\n    weakMap: isWeakMap,\n    nodeList: isNodeList,\n    element: isElement,\n    textNode: isTextNode,\n    event: isEvent,\n    cue: isCue,\n    track: isTrack,\n    url: isUrl,\n    empty: isEmpty,\n};\n","// ==========================================================================\n// Event utils\n// ==========================================================================\n\nimport is from './is';\n\n// Check for passive event listener support\n// https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n// https://www.youtube.com/watch?v=NPM6172J22g\nconst supportsPassiveListeners = (() => {\n    // Test via a getter in the options object to see if the passive property is accessed\n    let supported = false;\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get() {\n                supported = true;\n                return null;\n            },\n        });\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n        // Do nothing\n    }\n\n    return supported;\n})();\n\n// Toggle event listener\nexport function toggleListener(element, event, callback, toggle = false, passive = true, capture = false) {\n    // Bail if no element, event, or callback\n    if (!element || !('addEventListener' in element) || is.empty(event) || !is.function(callback)) {\n        return;\n    }\n\n    // Allow multiple events\n    const events = event.split(' ');\n\n    // Build options\n    // Default to just the capture boolean for browsers with no passive listener support\n    let options = capture;\n\n    // If passive events listeners are supported\n    if (supportsPassiveListeners) {\n        options = {\n            // Whether the listener can be passive (i.e. default never prevented)\n            passive,\n            // Whether the listener is a capturing listener or not\n            capture,\n        };\n    }\n\n    // If a single node is passed, bind the event listener\n    events.forEach(type => {\n        if (this && this.eventListeners && toggle) {\n            // Cache event listener\n            this.eventListeners.push({ element, type, callback, options });\n        }\n\n        element[toggle ? 'addEventListener' : 'removeEventListener'](type, callback, options);\n    });\n}\n\n// Bind event handler\nexport function on(element, events = '', callback, passive = true, capture = false) {\n    toggleListener.call(this, element, events, callback, true, passive, capture);\n}\n\n// Unbind event handler\nexport function off(element, events = '', callback, passive = true, capture = false) {\n    toggleListener.call(this, element, events, callback, false, passive, capture);\n}\n\n// Bind once-only event handler\nexport function once(element, events = '', callback, passive = true, capture = false) {\n    function onceCallback(...args) {\n        off(element, events, onceCallback, passive, capture);\n        callback.apply(this, args);\n    }\n\n    toggleListener.call(this, element, events, onceCallback, true, passive, capture);\n}\n\n// Trigger event\nexport function triggerEvent(element, type = '', bubbles = false, detail = {}) {\n    // Bail if no element\n    if (!is.element(element) || is.empty(type)) {\n        return;\n    }\n\n    // Create and dispatch the event\n    const event = new CustomEvent(type, {\n        bubbles,\n        detail: Object.assign({}, detail, {\n            plyr: this,\n        }),\n    });\n\n    // Dispatch the event\n\n    try {\n        element.dispatchEvent(event);\n    } catch (err) {\n        throw new Error(`CustomEvent ${event.type}: ${JSON.stringify(event.detail)}`);\n    }\n}\n\n// Unbind all cached event listeners\nexport function unbindListeners() {\n    if (this && this.eventListeners) {\n        this.eventListeners.forEach(item => {\n            const { element, type, callback, options } = item;\n            element.removeEventListener(type, callback, options);\n        });\n\n        this.eventListeners = [];\n    }\n}\n\n// Run method when / if player is ready\nexport function ready() {\n    return new Promise(\n        resolve => (this.ready ? setTimeout(resolve, 0) : on.call(this, this.elements.container, 'ready', resolve)),\n    ).then(() => {});\n}\n","// ==========================================================================\n// Element utils\n// ==========================================================================\n\nimport { toggleListener } from './events';\nimport is from './is';\n\n// Wrap an element\nexport function wrap(elements, wrapper) {\n    // Convert `elements` to an array, if necessary.\n    const targets = elements.length ? elements : [elements];\n\n    // Loops backwards to prevent having to clone the wrapper on the\n    // first element (see `child` below).\n    Array.from(targets)\n        .reverse()\n        .forEach((element, index) => {\n            const child = index > 0 ? wrapper.cloneNode(true) : wrapper;\n\n            // Cache the current parent and sibling.\n            const parent = element.parentNode;\n            const sibling = element.nextSibling;\n\n            // Wrap the element (is automatically removed from its current\n            // parent).\n            child.appendChild(element);\n\n            // If the element had a sibling, insert the wrapper before\n            // the sibling to maintain the HTML structure; otherwise, just\n            // append it to the parent.\n            if (sibling) {\n                parent.insertBefore(child, sibling);\n            } else {\n                parent.appendChild(child);\n            }\n        });\n}\n\n// Set attributes\nexport function setAttributes(element, attributes) {\n    if (!is.element(element) || is.empty(attributes)) {\n        return;\n    }\n\n    // Assume null and undefined attributes should be left out,\n    // Setting them would otherwise convert them to \"null\" and \"undefined\"\n    Object.entries(attributes)\n        .filter(([, value]) => !is.nullOrUndefined(value))\n        .forEach(([key, value]) => element.setAttribute(key, value));\n}\n\n// Create a DocumentFragment\nexport function createElement(type, attributes, text) {\n    // Create a new <element>\n    const element = document.createElement(type);\n\n    // Set all passed attributes\n    if (is.object(attributes)) {\n        setAttributes(element, attributes);\n    }\n\n    // Add text node\n    if (is.string(text)) {\n        element.innerText = text;\n    }\n\n    // Return built element\n    return element;\n}\n\n// Inaert an element after another\nexport function insertAfter(element, target) {\n    target.parentNode.insertBefore(element, target.nextSibling);\n}\n\n// Insert a DocumentFragment\nexport function insertElement(type, parent, attributes, text) {\n    // Inject the new <element>\n    parent.appendChild(createElement(type, attributes, text));\n}\n\n// Remove element(s)\nexport function removeElement(element) {\n    if (is.nodeList(element) || is.array(element)) {\n        Array.from(element).forEach(removeElement);\n        return;\n    }\n\n    if (!is.element(element) || !is.element(element.parentNode)) {\n        return;\n    }\n\n    element.parentNode.removeChild(element);\n}\n\n// Remove all child elements\nexport function emptyElement(element) {\n    let { length } = element.childNodes;\n\n    while (length > 0) {\n        element.removeChild(element.lastChild);\n        length -= 1;\n    }\n}\n\n// Replace element\nexport function replaceElement(newChild, oldChild) {\n    if (!is.element(oldChild) || !is.element(oldChild.parentNode) || !is.element(newChild)) {\n        return null;\n    }\n\n    oldChild.parentNode.replaceChild(newChild, oldChild);\n\n    return newChild;\n}\n\n// Get an attribute object from a string selector\nexport function getAttributesFromSelector(sel, existingAttributes) {\n    // For example:\n    // '.test' to { class: 'test' }\n    // '#test' to { id: 'test' }\n    // '[data-test=\"test\"]' to { 'data-test': 'test' }\n\n    if (!is.string(sel) || is.empty(sel)) {\n        return {};\n    }\n\n    const attributes = {};\n    const existing = existingAttributes;\n\n    sel.split(',').forEach(s => {\n        // Remove whitespace\n        const selector = s.trim();\n        const className = selector.replace('.', '');\n        const stripped = selector.replace(/[[\\]]/g, '');\n\n        // Get the parts and value\n        const parts = stripped.split('=');\n        const key = parts[0];\n        const value = parts.length > 1 ? parts[1].replace(/[\"']/g, '') : '';\n\n        // Get the first character\n        const start = selector.charAt(0);\n\n        switch (start) {\n            case '.':\n                // Add to existing classname\n                if (is.object(existing) && is.string(existing.class)) {\n                    existing.class += ` ${className}`;\n                }\n\n                attributes.class = className;\n                break;\n\n            case '#':\n                // ID selector\n                attributes.id = selector.replace('#', '');\n                break;\n\n            case '[':\n                // Attribute selector\n                attributes[key] = value;\n\n                break;\n\n            default:\n                break;\n        }\n    });\n\n    return attributes;\n}\n\n// Toggle hidden\nexport function toggleHidden(element, hidden) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    let hide = hidden;\n\n    if (!is.boolean(hide)) {\n        hide = !element.hasAttribute('hidden');\n    }\n\n    if (hide) {\n        element.setAttribute('hidden', '');\n    } else {\n        element.removeAttribute('hidden');\n    }\n}\n\n// Mirror Element.classList.toggle, with IE compatibility for \"force\" argument\nexport function toggleClass(element, className, force) {\n    if (is.element(element)) {\n        let method = 'toggle';\n        if (typeof force !== 'undefined') {\n            method = force ? 'add' : 'remove';\n        }\n\n        element.classList[method](className);\n        return element.classList.contains(className);\n    }\n\n    return null;\n}\n\n// Has class name\nexport function hasClass(element, className) {\n    return is.element(element) && element.classList.contains(className);\n}\n\n// Element matches selector\nexport function matches(element, selector) {\n    const prototype = { Element };\n\n    function match() {\n        return Array.from(document.querySelectorAll(selector)).includes(this);\n    }\n\n    const matches =\n        prototype.matches ||\n        prototype.webkitMatchesSelector ||\n        prototype.mozMatchesSelector ||\n        prototype.msMatchesSelector ||\n        match;\n\n    return matches.call(element, selector);\n}\n\n// Find all elements\nexport function getElements(selector) {\n    return this.elements.container.querySelectorAll(selector);\n}\n\n// Find a single element\nexport function getElement(selector) {\n    return this.elements.container.querySelector(selector);\n}\n\n// Get the focused element\nexport function getFocusElement() {\n    let focused = document.activeElement;\n\n    if (!focused || focused === document.body) {\n        focused = null;\n    } else {\n        focused = document.querySelector(':focus');\n    }\n\n    return focused;\n}\n\n// Trap focus inside container\nexport function trapFocus(element = null, toggle = false) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    const focusable = getElements.call(this, 'button:not(:disabled), input:not(:disabled), [tabindex]');\n    const first = focusable[0];\n    const last = focusable[focusable.length - 1];\n\n    const trap = event => {\n        // Bail if not tab key or not fullscreen\n        if (event.key !== 'Tab' || event.keyCode !== 9) {\n            return;\n        }\n\n        // Get the current focused element\n        const focused = getFocusElement();\n\n        if (focused === last && !event.shiftKey) {\n            // Move focus to first element that can be tabbed if Shift isn't used\n            first.focus();\n            event.preventDefault();\n        } else if (focused === first && event.shiftKey) {\n            // Move focus to last element that can be tabbed if Shift is used\n            last.focus();\n            event.preventDefault();\n        }\n    };\n\n    toggleListener.call(this, this.elements.container, 'keydown', trap, toggle, false);\n}\n","// ==========================================================================\n// Animation utils\n// ==========================================================================\n\nimport { toggleHidden } from './elements';\nimport is from './is';\n\nexport const transitionEndEvent = (() => {\n    const element = document.createElement('span');\n\n    const events = {\n        WebkitTransition: 'webkitTransitionEnd',\n        MozTransition: 'transitionend',\n        OTransition: 'oTransitionEnd otransitionend',\n        transition: 'transitionend',\n    };\n\n    const type = Object.keys(events).find(event => element.style[event] !== undefined);\n\n    return is.string(type) ? events[type] : false;\n})();\n\n// Force repaint of element\nexport function repaint(element) {\n    setTimeout(() => {\n        toggleHidden(element, true);\n        element.offsetHeight; // eslint-disable-line\n        toggleHidden(element, false);\n    }, 0);\n}\n","// ==========================================================================\n// Browser sniffing\n// Unfortunately, due to mixed support, UA sniffing is required\n// ==========================================================================\n\nconst browser = {\n    isIE: /* @cc_on!@ */ false || !!document.documentMode,\n    isWebkit: 'WebkitAppearance' in document.documentElement.style && !/Edge/.test(navigator.userAgent),\n    isIPhone: /(iPhone|iPod)/gi.test(navigator.platform),\n    isIos: /(iPad|iPhone|iPod)/gi.test(navigator.platform),\n    isEdge: /Edge\\/\\d./i.test(navigator.userAgent),\n};\n\nexport default browser;\n","// ==========================================================================\n// Plyr support checks\n// ==========================================================================\n\nimport { transitionEndEvent } from './utils/animation';\nimport browser from './utils/browser';\nimport { createElement } from './utils/elements';\nimport is from './utils/is';\n\n// Default codecs for checking mimetype support\nconst defaultCodecs = {\n    'audio/ogg': 'vorbis',\n    'audio/wav': '1',\n    'video/webm': 'vp8, vorbis',\n    'video/mp4': 'avc1.42E01E, mp4a.40.2',\n    'video/ogg': 'theora',\n};\n\n// Check for feature support\nconst support = {\n    // Basic support\n    audio: 'canPlayType' in document.createElement('audio'),\n    video: 'canPlayType' in document.createElement('video'),\n\n    // Check for support\n    // Basic functionality vs full UI\n    check(type, provider, playsinline) {\n        const canPlayInline = browser.isIPhone && playsinline && support.playsinline;\n        const api = support[type] || provider !== 'html5';\n        const ui = api && support.rangeInput && (type !== 'video' || !browser.isIPhone || canPlayInline);\n\n        return {\n            api,\n            ui,\n        };\n    },\n\n    // Picture-in-picture support\n    // Safari only currently\n    pip: (() => !browser.isIPhone && is.function(createElement('video').webkitSetPresentationMode))(),\n\n    // Airplay support\n    // Safari only currently\n    airplay: is.function(window.WebKitPlaybackTargetAvailabilityEvent),\n\n    // Inline playback support\n    // https://webkit.org/blog/6784/new-video-policies-for-ios/\n    playsinline: 'playsInline' in document.createElement('video'),\n\n    // Check for mime type support against a player instance\n    // Credits: http://diveintohtml5.info/everything.html\n    // Related: http://www.leanbackplayer.com/test/h5mt.html\n    mime(inputType) {\n        const [mediaType] = inputType.split('/');\n        if (!this.isHTML5 || mediaType !== this.type) {\n            return false;\n        }\n\n        let type;\n        if (inputType && inputType.includes('codecs=')) {\n            // Use input directly\n            type = inputType;\n        } else if (inputType === 'audio/mpeg') {\n            // Skip codec\n            type = 'audio/mpeg;';\n        } else if (inputType in defaultCodecs) {\n            // Use codec\n            type = `${inputType}; codecs=\"${defaultCodecs[inputType]}\"`;\n        }\n\n        try {\n            return Boolean(type && this.media.canPlayType(type).replace(/no/, ''));\n        } catch (err) {\n            return false;\n        }\n    },\n\n    // Check for textTracks support\n    textTracks: 'textTracks' in document.createElement('video'),\n\n    // <input type=\"range\"> Sliders\n    rangeInput: (() => {\n        const range = document.createElement('input');\n        range.type = 'range';\n        return range.type === 'range';\n    })(),\n\n    // Touch\n    // NOTE: Remember a device can be mouse + touch enabled so we check on first touch event\n    touch: 'ontouchstart' in document.documentElement,\n\n    // Detect transitions support\n    transitions: transitionEndEvent !== false,\n\n    // Reduced motion iOS & MacOS setting\n    // https://webkit.org/blog/7551/responsive-design-for-motion/\n    reducedMotion: 'matchMedia' in window && window.matchMedia('(prefers-reduced-motion)').matches,\n};\n\nexport default support;\n","// ==========================================================================\n// Plyr HTML5 helpers\n// ==========================================================================\n\nimport controls from './controls';\nimport is from './utils/is';\nimport support from './support';\nimport { removeElement } from './utils/elements';\nimport { triggerEvent } from './utils/events';\n\nconst html5 = {\n    getSources() {\n        if (!this.isHTML5) {\n            return [];\n        }\n\n        const sources = Array.from(this.media.querySelectorAll('source'));\n\n        // Filter out unsupported sources\n        return sources.filter(source => support.mime.call(this, source.getAttribute('type')));\n    },\n\n    // Get quality levels\n    getQualityOptions() {\n        // Get sizes from <source> elements\n        return html5.getSources\n            .call(this)\n            .map(source => Number(source.getAttribute('size')))\n            .filter(Boolean);\n    },\n\n    extend() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        const player = this;\n\n        // Quality\n        Object.defineProperty(player.media, 'quality', {\n            configurable: true,\n            get() {\n                // Get sources\n                const sources = html5.getSources.call(player);\n                const source = sources.find(source => source.getAttribute('src') === player.source);\n\n                // Return size, if match is found\n                return source && Number(source.getAttribute('size'));\n            },\n            set(input) {\n                // Get sources\n                const sources = html5.getSources.call(player);\n\n                // Get first match for requested size\n                const source = sources.find(source => Number(source.getAttribute('size')) === input);\n\n                // No matching source found\n                if (!source) {\n                    return;\n                }\n\n                // Get current state\n                const { currentTime, paused, preload, readyState } = player.media;\n\n                player.pause();\n\n                setImmediate(() => {\n                    // Set new source\n                    player.media.src = source.getAttribute('src');\n\n                    // Prevent loading if preload=\"none\" and the current source isn't loaded (#1044)\n                    if (preload !== 'none' || readyState) {\n                        // Restore time\n                        player.once('loadedmetadata', () => {\n                            if (player.currentTime === 0) {\n                                player.currentTime = currentTime;\n                            }\n\n                            // Resume playing\n                            if (!paused) {\n                                player.play();\n                            }\n                        });\n\n                        // Load new source\n                        player.media.load();\n                    }\n\n                    // restore speed\n                    const speed = player.storage.get('speed');\n                    if (is.number(speed)) {\n                        player.speed = speed;\n                        controls.updateSetting.call(player, 'speed', speed);\n                    }\n\n                    // Trigger change event\n                    triggerEvent.call(player, player.media, 'qualitychange', false, {\n                        quality: input,\n                    });\n                });\n            },\n        });\n    },\n\n    // Cancel current network requests\n    // See https://github.com/sampotts/plyr/issues/174\n    cancelRequests() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        const sources = html5.getSources.call(this);\n        if (sources && sources.length > 0) {\n            // set source to blank string to avoid memory leak\n            sources.forEach((source) => {\n                source.setAttribute('src', '');\n            });\n            this.media.load();\n        }\n        // Remove child sources\n        removeElement(sources);\n\n        // Set blank video src attribute\n        // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\n        // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\n        this.media.setAttribute('src', this.config.blankVideo);\n\n        // Load the new empty source\n        // This will cancel existing requests\n        // See https://github.com/sampotts/plyr/issues/174\n        this.media.load();\n\n        // Debugging\n        this.debug.log('Cancelled network requests');\n    },\n};\n\nexport default html5;\n","// ==========================================================================\n// Object utils\n// ==========================================================================\n\nimport is from './is';\n\n// Clone nested objects\nexport function cloneDeep(object) {\n    return JSON.parse(JSON.stringify(object));\n}\n\n// Get a nested value in an object\nexport function getDeep(object, path) {\n    return path.split('.').reduce((obj, key) => obj && obj[key], object);\n}\n\n// Deep extend destination object with N more objects\nexport function extend(target = {}, ...sources) {\n    if (!sources.length) {\n        return target;\n    }\n\n    const source = sources.shift();\n\n    if (!is.object(source)) {\n        return target;\n    }\n\n    Object.keys(source).forEach(key => {\n        if (is.object(source[key])) {\n            if (!Object.keys(target).includes(key)) {\n                Object.assign(target, { [key]: {} });\n            }\n\n            extend(target[key], source[key]);\n        } else {\n            Object.assign(target, { [key]: source[key] });\n        }\n    });\n\n    return extend(target, ...sources);\n}\n","// ==========================================================================\n// String utils\n// ==========================================================================\n\nimport is from './is';\n\n// Generate a random ID\nexport function generateId(prefix) {\n    return `${prefix}-${Math.floor(Math.random() * 10000)}`;\n}\n\n// Format string\nexport function format(input, ...args) {\n    if (is.empty(input)) {\n        return input;\n    }\n\n    return input.toString().replace(/{(\\d+)}/g, (match, i) => args[i].toString());\n}\n\n// Get percentage\nexport function getPercentage(current, max) {\n    if (current === 0 || max === 0 || Number.isNaN(current) || Number.isNaN(max)) {\n        return 0;\n    }\n\n    return (current / max * 100).toFixed(2);\n}\n\n// Replace all occurances of a string in a string\nexport function replaceAll(input = '', find = '', replace = '') {\n    return input.replace(\n        new RegExp(find.toString().replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1'), 'g'),\n        replace.toString(),\n    );\n}\n\n// Convert to title case\nexport function toTitleCase(input = '') {\n    return input.toString().replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase());\n}\n\n// Convert string to pascalCase\nexport function toPascalCase(input = '') {\n    let string = input.toString();\n\n    // Convert kebab case\n    string = replaceAll(string, '-', ' ');\n\n    // Convert snake case\n    string = replaceAll(string, '_', ' ');\n\n    // Convert to title case\n    string = toTitleCase(string);\n\n    // Convert to pascal case\n    return replaceAll(string, ' ', '');\n}\n\n// Convert string to pascalCase\nexport function toCamelCase(input = '') {\n    let string = input.toString();\n\n    // Convert to pascal case\n    string = toPascalCase(string);\n\n    // Convert first character to lowercase\n    return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\n// Remove HTML from a string\nexport function stripHTML(source) {\n    const fragment = document.createDocumentFragment();\n    const element = document.createElement('div');\n    fragment.appendChild(element);\n    element.innerHTML = source;\n    return fragment.firstChild.innerText;\n}\n\n// Like outerHTML, but also works for DocumentFragment\nexport function getHTML(element) {\n    const wrapper = document.createElement('div');\n    wrapper.appendChild(element);\n    return wrapper.innerHTML;\n}\n","// ==========================================================================\n// Plyr internationalization\n// ==========================================================================\n\nimport is from './utils/is';\nimport { getDeep } from './utils/objects';\nimport { replaceAll } from './utils/strings';\n\nconst i18n = {\n    get(key = '', config = {}) {\n        if (is.empty(key) || is.empty(config)) {\n            return '';\n        }\n\n        let string = getDeep(config.i18n, key);\n\n        if (is.empty(string)) {\n            return '';\n        }\n\n        const replace = {\n            '{seektime}': config.seekTime,\n            '{title}': config.title,\n        };\n\n        Object.entries(replace).forEach(([key, value]) => {\n            string = replaceAll(string, key, value);\n        });\n\n        return string;\n    },\n};\n\nexport default i18n;\n","// ==========================================================================\n// Array utils\n// ==========================================================================\n\nimport is from './is';\n\n// Remove duplicates in an array\nexport function dedupe(array) {\n    if (!is.array(array)) {\n        return array;\n    }\n\n    return array.filter((item, index) => array.indexOf(item) === index);\n}\n\n// Get the closest value in an array\nexport function closest(array, value) {\n    if (!is.array(array) || !array.length) {\n        return null;\n    }\n\n    return array.reduce((prev, curr) => (Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev));\n}\n","// ==========================================================================\n// Plyr storage\n// ==========================================================================\n\nimport is from './utils/is';\nimport { extend } from './utils/objects';\n\nclass Storage {\n    constructor(player) {\n        this.enabled = player.config.storage.enabled;\n        this.key = player.config.storage.key;\n    }\n\n    // Check for actual support (see if we can use it)\n    static get supported() {\n        try {\n            if (!('localStorage' in window)) {\n                return false;\n            }\n\n            const test = '___test';\n\n            // Try to use it (it might be disabled, e.g. user is in private mode)\n            // see: https://github.com/sampotts/plyr/issues/131\n            window.localStorage.setItem(test, test);\n            window.localStorage.removeItem(test);\n\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    get(key) {\n        if (!Storage.supported || !this.enabled) {\n            return null;\n        }\n\n        const store = window.localStorage.getItem(this.key);\n\n        if (is.empty(store)) {\n            return null;\n        }\n\n        const json = JSON.parse(store);\n\n        return is.string(key) && key.length ? json[key] : json;\n    }\n\n    set(object) {\n        // Bail if we don't have localStorage support or it's disabled\n        if (!Storage.supported || !this.enabled) {\n            return;\n        }\n\n        // Can only store objectst\n        if (!is.object(object)) {\n            return;\n        }\n\n        // Get current storage\n        let storage = this.get();\n\n        // Default to empty object\n        if (is.empty(storage)) {\n            storage = {};\n        }\n\n        // Update the working copy of the values\n        extend(storage, object);\n\n        // Update storage\n        window.localStorage.setItem(this.key, JSON.stringify(storage));\n    }\n}\n\nexport default Storage;\n","// ==========================================================================\n// Fetch wrapper\n// Using XHR to avoid issues with older browsers\n// ==========================================================================\n\nexport default function fetch(url, responseType = 'text') {\n    return new Promise((resolve, reject) => {\n        try {\n            const request = new XMLHttpRequest();\n\n            // Check for CORS support\n            if (!('withCredentials' in request)) {\n                return;\n            }\n\n            request.addEventListener('load', () => {\n                if (responseType === 'text') {\n                    try {\n                        resolve(JSON.parse(request.responseText));\n                    } catch (e) {\n                        resolve(request.responseText);\n                    }\n                } else {\n                    resolve(request.response);\n                }\n            });\n\n            request.addEventListener('error', () => {\n                throw new Error(request.status);\n            });\n\n            request.open('GET', url, true);\n\n            // Set the required response type\n            request.responseType = responseType;\n\n            request.send();\n        } catch (e) {\n            reject(e);\n        }\n    });\n}\n","// ==========================================================================\n// Sprite loader\n// ==========================================================================\n\nimport Storage from '../storage';\nimport fetch from './fetch';\nimport is from './is';\n\n// Load an external SVG sprite\nexport default function loadSprite(url, id) {\n    if (!is.string(url)) {\n        return;\n    }\n\n    const prefix = 'cache';\n    const hasId = is.string(id);\n    let isCached = false;\n\n    const exists = () => document.getElementById(id) !== null;\n\n    const update = (container, data) => {\n        container.innerHTML = data;\n\n        // Check again incase of race condition\n        if (hasId && exists()) {\n            return;\n        }\n\n        // Inject the SVG to the body\n        document.body.insertAdjacentElement('afterbegin', container);\n    };\n\n    // Only load once if ID set\n    if (!hasId || !exists()) {\n        const useStorage = Storage.supported;\n\n        // Create container\n        const container = document.createElement('div');\n        container.setAttribute('hidden', '');\n\n        if (hasId) {\n            container.setAttribute('id', id);\n        }\n\n        // Check in cache\n        if (useStorage) {\n            const cached = window.localStorage.getItem(`${prefix}-${id}`);\n            isCached = cached !== null;\n\n            if (isCached) {\n                const data = JSON.parse(cached);\n                update(container, data.content);\n            }\n        }\n\n        // Get the sprite\n        fetch(url)\n            .then(result => {\n                if (is.empty(result)) {\n                    return;\n                }\n\n                if (useStorage) {\n                    window.localStorage.setItem(\n                        `${prefix}-${id}`,\n                        JSON.stringify({\n                            content: result,\n                        }),\n                    );\n                }\n\n                update(container, result);\n            })\n            .catch(() => {});\n    }\n}\n","// ==========================================================================\n// Time utils\n// ==========================================================================\n\nimport is from './is';\n\n// Time helpers\nexport const getHours = value => parseInt((value / 60 / 60) % 60, 10);\nexport const getMinutes = value => parseInt((value / 60) % 60, 10);\nexport const getSeconds = value => parseInt(value % 60, 10);\n\n// Format time to UI friendly string\nexport function formatTime(time = 0, displayHours = false, inverted = false) {\n    // Bail if the value isn't a number\n    if (!is.number(time)) {\n        return formatTime(null, displayHours, inverted);\n    }\n\n    // Format time component to add leading zero\n    const format = value => `0${value}`.slice(-2);\n\n    // Breakdown to hours, mins, secs\n    let hours = getHours(time);\n    const mins = getMinutes(time);\n    const secs = getSeconds(time);\n\n    // Do we need to display hours?\n    if (displayHours || hours > 0) {\n        hours = `${hours}:`;\n    } else {\n        hours = '';\n    }\n\n    // Render\n    return `${inverted && time > 0 ? '-' : ''}${hours}${format(mins)}:${format(secs)}`;\n}\n","// ==========================================================================\n// Plyr controls\n// ==========================================================================\n\nimport captions from './captions';\nimport html5 from './html5';\nimport i18n from './i18n';\nimport support from './support';\nimport { repaint, transitionEndEvent } from './utils/animation';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport {\n    createElement,\n    emptyElement,\n    getAttributesFromSelector,\n    getElement,\n    getElements,\n    hasClass,\n    matches,\n    removeElement,\n    setAttributes,\n    toggleClass,\n    toggleHidden,\n} from './utils/elements';\nimport { off, on } from './utils/events';\nimport is from './utils/is';\nimport loadSprite from './utils/loadSprite';\nimport { extend } from './utils/objects';\nimport { getPercentage, replaceAll, toCamelCase, toTitleCase } from './utils/strings';\nimport { formatTime, getHours } from './utils/time';\n\n// TODO: Don't export a massive object - break down and create class\nconst controls = {\n    // Get icon URL\n    getIconUrl() {\n        const url = new URL(this.config.iconUrl, window.location);\n        const cors = url.host !== window.location.host || (browser.isIE && !window.svg4everybody);\n\n        return {\n            url: this.config.iconUrl,\n            cors,\n        };\n    },\n\n    // Find the UI controls\n    findElements() {\n        try {\n            this.elements.controls = getElement.call(this, this.config.selectors.controls.wrapper);\n\n            // Buttons\n            this.elements.buttons = {\n                play: getElements.call(this, this.config.selectors.buttons.play),\n                pause: getElement.call(this, this.config.selectors.buttons.pause),\n                restart: getElement.call(this, this.config.selectors.buttons.restart),\n                rewind: getElement.call(this, this.config.selectors.buttons.rewind),\n                fastForward: getElement.call(this, this.config.selectors.buttons.fastForward),\n                mute: getElement.call(this, this.config.selectors.buttons.mute),\n                pip: getElement.call(this, this.config.selectors.buttons.pip),\n                airplay: getElement.call(this, this.config.selectors.buttons.airplay),\n                settings: getElement.call(this, this.config.selectors.buttons.settings),\n                captions: getElement.call(this, this.config.selectors.buttons.captions),\n                fullscreen: getElement.call(this, this.config.selectors.buttons.fullscreen),\n            };\n\n            // Progress\n            this.elements.progress = getElement.call(this, this.config.selectors.progress);\n\n            // Inputs\n            this.elements.inputs = {\n                seek: getElement.call(this, this.config.selectors.inputs.seek),\n                volume: getElement.call(this, this.config.selectors.inputs.volume),\n            };\n\n            // Display\n            this.elements.display = {\n                buffer: getElement.call(this, this.config.selectors.display.buffer),\n                currentTime: getElement.call(this, this.config.selectors.display.currentTime),\n                duration: getElement.call(this, this.config.selectors.display.duration),\n            };\n\n            // Seek tooltip\n            if (is.element(this.elements.progress)) {\n                this.elements.display.seekTooltip = this.elements.progress.querySelector(\n                    `.${this.config.classNames.tooltip}`,\n                );\n            }\n\n            return true;\n        } catch (error) {\n            // Log it\n            this.debug.warn('It looks like there is a problem with your custom controls HTML', error);\n\n            // Restore native video controls\n            this.toggleNativeControls(true);\n\n            return false;\n        }\n    },\n\n    // Create <svg> icon\n    createIcon(type, attributes) {\n        const namespace = 'http://www.w3.org/2000/svg';\n        const iconUrl = controls.getIconUrl.call(this);\n        const iconPath = `${!iconUrl.cors ? iconUrl.url : ''}#${this.config.iconPrefix}`;\n\n        // Create <svg>\n        const icon = document.createElementNS(namespace, 'svg');\n        setAttributes(\n            icon,\n            extend(attributes, {\n                role: 'presentation',\n                focusable: 'false',\n            }),\n        );\n\n        // Create the <use> to reference sprite\n        const use = document.createElementNS(namespace, 'use');\n        const path = `${iconPath}-${type}`;\n\n        // Set `href` attributes\n        // https://github.com/sampotts/plyr/issues/460\n        // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:href\n        if ('href' in use) {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\n        } else {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', path);\n        }\n\n        // Add <use> to <svg>\n        icon.appendChild(use);\n\n        return icon;\n    },\n\n    // Create hidden text label\n    createLabel(type, attr = {}) {\n        // Skip i18n for abbreviations and brand names\n        const universals = {\n            pip: 'PIP',\n            airplay: 'AirPlay',\n        };\n        const text = universals[type] || i18n.get(type, this.config);\n\n        const attributes = Object.assign({}, attr, {\n            class: [attr.class, this.config.classNames.hidden].filter(Boolean).join(' '),\n        });\n        return createElement('span', attributes, text);\n    },\n\n    // Create a badge\n    createBadge(text) {\n        if (is.empty(text)) {\n            return null;\n        }\n\n        const badge = createElement('span', {\n            class: this.config.classNames.menu.value,\n        });\n\n        badge.appendChild(\n            createElement(\n                'span',\n                {\n                    class: this.config.classNames.menu.badge,\n                },\n                text,\n            ),\n        );\n\n        return badge;\n    },\n\n    // Create a <button>\n    createButton(buttonType, attr) {\n        const button = createElement('button');\n        const attributes = Object.assign({}, attr);\n        let type = toCamelCase(buttonType);\n\n        let toggle = false;\n        let label;\n        let icon;\n        let labelPressed;\n        let iconPressed;\n\n        if (!('type' in attributes)) {\n            attributes.type = 'button';\n        }\n\n        if ('class' in attributes) {\n            if (!attributes.class.includes(this.config.classNames.control)) {\n                attributes.class += ` ${this.config.classNames.control}`;\n            }\n        } else {\n            attributes.class = this.config.classNames.control;\n        }\n\n        // Large play button\n        switch (buttonType) {\n            case 'play':\n                toggle = true;\n                label = 'play';\n                labelPressed = 'pause';\n                icon = 'play';\n                iconPressed = 'pause';\n                break;\n\n            case 'mute':\n                toggle = true;\n                label = 'mute';\n                labelPressed = 'unmute';\n                icon = 'volume';\n                iconPressed = 'muted';\n                break;\n\n            case 'captions':\n                toggle = true;\n                label = 'enableCaptions';\n                labelPressed = 'disableCaptions';\n                icon = 'captions-off';\n                iconPressed = 'captions-on';\n                break;\n\n            case 'zoom':\n                toggle = true;\n                label = 'enterZoom';\n                labelPressed = 'exitZoom';\n                icon = 'enter-zoom';\n                iconPressed = 'exit-zoom';\n                break;\n\n            case 'fullscreen':\n                toggle = true;\n                label = 'enterFullscreen';\n                labelPressed = 'exitFullscreen';\n                icon = 'enter-fullscreen';\n                iconPressed = 'exit-fullscreen';\n                break;\n\n            case 'play-large':\n                attributes.class += ` ${this.config.classNames.control}--overlaid`;\n                type = 'play';\n                label = 'play';\n                icon = 'play';\n                break;\n\n            case 'add-lecture-note':\n                type = 'add-lecture-note';\n                label = '筆記標註';\n                icon = 'add-lecture-note';\n\n            default:\n                label = type;\n                icon = buttonType;\n        }\n\n        // Setup toggle icon and labels\n        if (toggle) {\n            // Icon\n            button.appendChild(controls.createIcon.call(this, iconPressed, { class: 'icon--pressed' }));\n            button.appendChild(controls.createIcon.call(this, icon, { class: 'icon--not-pressed' }));\n\n            // Label/Tooltip\n            button.appendChild(controls.createLabel.call(this, labelPressed, { class: 'label--pressed' }));\n            button.appendChild(controls.createLabel.call(this, label, { class: 'label--not-pressed' }));\n        } else {\n            button.appendChild(controls.createIcon.call(this, icon));\n            button.appendChild(controls.createLabel.call(this, label));\n        }\n\n        // Merge attributes\n        extend(attributes, getAttributesFromSelector(this.config.selectors.buttons[type], attributes));\n\n        setAttributes(button, attributes);\n\n        // We have multiple play buttons\n        if (type === 'play') {\n            if (!is.array(this.elements.buttons[type])) {\n                this.elements.buttons[type] = [];\n            }\n\n            this.elements.buttons[type].push(button);\n        } else {\n            this.elements.buttons[type] = button;\n        }\n\n        // Toggle classname when pressed property is set\n        const className = this.config.classNames.controlPressed;\n        Object.defineProperty(button, 'pressed', {\n            enumerable: true,\n            get() {\n                return hasClass(button, className);\n            },\n            set(pressed = false) {\n                toggleClass(button, className, pressed);\n            },\n        });\n\n        return button;\n    },\n\n    // Create an <input type='range'>\n    createRange(type, attributes) {\n        // Seek input\n        const input = createElement(\n            'input',\n            extend(\n                getAttributesFromSelector(this.config.selectors.inputs[type]),\n                {\n                    type: 'range',\n                    min: 0,\n                    max: 100,\n                    step: 0.01,\n                    value: 0,\n                    autocomplete: 'off',\n                    // A11y fixes for https://github.com/sampotts/plyr/issues/905\n                    role: 'slider',\n                    'aria-label': i18n.get(type, this.config),\n                    'aria-valuemin': 0,\n                    'aria-valuemax': 100,\n                    'aria-valuenow': 0,\n                },\n                attributes,\n            ),\n        );\n\n        this.elements.inputs[type] = input;\n\n        // Set the fill for webkit now\n        controls.updateRangeFill.call(this, input);\n\n        return input;\n    },\n\n    // Create a <progress>\n    createProgress(type, attributes) {\n        const progress = createElement(\n            'progress',\n            extend(\n                getAttributesFromSelector(this.config.selectors.display[type]),\n                {\n                    min: 0,\n                    max: 100,\n                    value: 0,\n                    role: 'presentation',\n                    'aria-hidden': true,\n                },\n                attributes,\n            ),\n        );\n\n        // Create the label inside\n        if (type !== 'volume') {\n            progress.appendChild(createElement('span', null, '0'));\n\n            const suffixKey = {\n                played: 'played',\n                buffer: 'buffered',\n            }[type];\n            const suffix = suffixKey ? i18n.get(suffixKey, this.config) : '';\n\n            progress.innerText = `% ${suffix.toLowerCase()}`;\n        }\n\n        this.elements.display[type] = progress;\n\n        return progress;\n    },\n\n    // Create time display\n    createTime(type) {\n        const attributes = getAttributesFromSelector(this.config.selectors.display[type]);\n\n        const container = createElement(\n            'div',\n            extend(attributes, {\n                class: `plyr__time ${attributes.class}`,\n                'aria-label': i18n.get(type, this.config),\n            }),\n            '00:00',\n        );\n\n        // Reference for updates\n        this.elements.display[type] = container;\n\n        return container;\n    },\n\n    // Create a settings menu item\n    createMenuItem({ value, list, type, title, badge = null, checked = false }) {\n        const item = createElement('li');\n\n        const label = createElement('label', {\n            class: this.config.classNames.control,\n        });\n\n        const radio = createElement(\n            'input',\n            extend(getAttributesFromSelector(this.config.selectors.inputs[type]), {\n                type: 'radio',\n                name: `plyr-${type}`,\n                value,\n                checked,\n                class: 'plyr__sr-only',\n            }),\n        );\n\n        const faux = createElement('span', { hidden: '' });\n\n        label.appendChild(radio);\n        label.appendChild(faux);\n        label.insertAdjacentHTML('beforeend', title);\n\n        if (is.element(badge)) {\n            label.appendChild(badge);\n        }\n\n        item.appendChild(label);\n        list.appendChild(item);\n    },\n\n    // Format a time for display\n    formatTime(time = 0, inverted = false) {\n        // Bail if the value isn't a number\n        if (!is.number(time)) {\n            return time;\n        }\n\n        // Always display hours if duration is over an hour\n        const forceHours = getHours(this.duration) > 0;\n\n        return formatTime(time, forceHours, inverted);\n    },\n\n    // Update the displayed time\n    updateTimeDisplay(target = null, time = 0, inverted = false) {\n        // Bail if there's no element to display or the value isn't a number\n        if (!is.element(target) || !is.number(time)) {\n            return;\n        }\n\n        // eslint-disable-next-line no-param-reassign\n        target.innerText = controls.formatTime(time, inverted);\n    },\n\n    // Update volume UI and storage\n    updateVolume() {\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Update range\n        if (is.element(this.elements.inputs.volume)) {\n            controls.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume);\n        }\n\n        // Update mute state\n        if (is.element(this.elements.buttons.mute)) {\n            this.elements.buttons.mute.pressed = this.muted || this.volume === 0;\n        }\n    },\n\n    // Update seek value and lower fill\n    setRange(target, value = 0) {\n        if (!is.element(target)) {\n            return;\n        }\n\n        // eslint-disable-next-line\n        target.value = value;\n\n        // Webkit range fill\n        controls.updateRangeFill.call(this, target);\n    },\n\n    // Update <progress> elements\n    updateProgress(event) {\n        if (!this.supported.ui || !is.event(event)) {\n            return;\n        }\n\n        let value = 0;\n\n        const setProgress = (target, input) => {\n            const value = is.number(input) ? input : 0;\n            const progress = is.element(target) ? target : this.elements.display.buffer;\n\n            // Update value and label\n            if (is.element(progress)) {\n                progress.value = value;\n\n                // Update text label inside\n                const label = progress.getElementsByTagName('span')[0];\n                if (is.element(label)) {\n                    label.childNodes[0].nodeValue = value;\n                }\n            }\n        };\n\n        if (event) {\n            switch (event.type) {\n                // Video playing\n                case 'timeupdate':\n                case 'seeking':\n                case 'seeked':\n                    value = getPercentage(this.currentTime, this.duration);\n\n                    // Set seek range value only if it's a 'natural' time event\n                    if (event.type === 'timeupdate') {\n                        controls.setRange.call(this, this.elements.inputs.seek, value);\n                    }\n\n                    break;\n\n                // Check buffer status\n                case 'playing':\n                case 'progress':\n                    setProgress(this.elements.display.buffer, this.buffered * 100);\n\n                    break;\n\n                default:\n                    break;\n            }\n        }\n    },\n\n    // Webkit polyfill for lower fill range\n    updateRangeFill(target) {\n        // Get range from event if event passed\n        const range = is.event(target) ? target.target : target;\n\n        // Needs to be a valid <input type='range'>\n        if (!is.element(range) || range.getAttribute('type') !== 'range') {\n            return;\n        }\n\n        // Set aria values for https://github.com/sampotts/plyr/issues/905\n        if (matches(range, this.config.selectors.inputs.seek)) {\n            range.setAttribute('aria-valuenow', this.currentTime);\n            const currentTime = controls.formatTime(this.currentTime);\n            const duration = controls.formatTime(this.duration);\n            const format = i18n.get('seekLabel', this.config);\n            range.setAttribute(\n                'aria-valuetext',\n                format.replace('{currentTime}', currentTime).replace('{duration}', duration),\n            );\n        } else if (matches(range, this.config.selectors.inputs.volume)) {\n            const percent = range.value * 100;\n            range.setAttribute('aria-valuenow', percent);\n            range.setAttribute('aria-valuetext', `${percent}%`);\n        } else {\n            range.setAttribute('aria-valuenow', range.value);\n        }\n\n        // WebKit only\n        if (!browser.isWebkit) {\n            return;\n        }\n\n        // Set CSS custom property\n        range.style.setProperty('--value', `${range.value / range.max * 100}%`);\n    },\n\n    // Update hover tooltip for seeking\n    updateSeekTooltip(event) {\n        // Bail if setting not true\n        if (\n            !this.config.tooltips.seek ||\n            !is.element(this.elements.inputs.seek) ||\n            !is.element(this.elements.display.seekTooltip) ||\n            this.duration === 0\n        ) {\n            return;\n        }\n\n        // Calculate percentage\n        let percent = 0;\n        const clientRect = this.elements.progress.getBoundingClientRect();\n        const visible = `${this.config.classNames.tooltip}--visible`;\n\n        const toggle = toggle => {\n            toggleClass(this.elements.display.seekTooltip, visible, toggle);\n        };\n\n        // Hide on touch\n        if (this.touch) {\n            toggle(false);\n            return;\n        }\n\n        // Determine percentage, if already visible\n        if (is.event(event)) {\n            percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n        } else if (hasClass(this.elements.display.seekTooltip, visible)) {\n            percent = parseFloat(this.elements.display.seekTooltip.style.left, 10);\n        } else {\n            return;\n        }\n\n        // Set bounds\n        if (percent < 0) {\n            percent = 0;\n        } else if (percent > 100) {\n            percent = 100;\n        }\n\n        // Display the time a click would seek to\n        controls.updateTimeDisplay.call(this, this.elements.display.seekTooltip, this.duration / 100 * percent);\n\n        // Set position\n        this.elements.display.seekTooltip.style.left = `${percent}%`;\n\n        // Show/hide the tooltip\n        // If the event is a moues in/out and percentage is inside bounds\n        if (is.event(event) && ['mouseenter', 'mouseleave'].includes(event.type)) {\n            toggle(event.type === 'mouseenter');\n        }\n    },\n\n    // Handle time change event\n    timeUpdate(event) {\n        // Only invert if only one time element is displayed and used for both duration and currentTime\n        const invert = !is.element(this.elements.display.duration) && this.config.invertTime;\n\n        // Duration\n        controls.updateTimeDisplay.call(\n            this,\n            this.elements.display.currentTime,\n            invert ? this.duration - this.currentTime : this.currentTime,\n            invert,\n        );\n\n        // Ignore updates while seeking\n        if (event && event.type === 'timeupdate' && this.media.seeking) {\n            return;\n        }\n\n        // Playing progress\n        controls.updateProgress.call(this, event);\n    },\n\n    // Show the duration on metadataloaded or durationchange events\n    durationUpdate() {\n        // Bail if no UI or durationchange event triggered after playing/seek when invertTime is false\n        if (!this.supported.ui || (!this.config.invertTime && this.currentTime)) {\n            return;\n        }\n\n        // If duration is the 2**32 (shaka), Infinity (HLS), DASH-IF (Number.MAX_SAFE_INTEGER || Number.MAX_VALUE) indicating live we hide the currentTime and progressbar.\n        // https://github.com/video-dev/hls.js/blob/5820d29d3c4c8a46e8b75f1e3afa3e68c1a9a2db/src/controller/buffer-controller.js#L415\n        // https://github.com/google/shaka-player/blob/4d889054631f4e1cf0fbd80ddd2b71887c02e232/lib/media/streaming_engine.js#L1062\n        // https://github.com/Dash-Industry-Forum/dash.js/blob/69859f51b969645b234666800d4cb596d89c602d/src/dash/models/DashManifestModel.js#L338\n        if (this.duration >= 2**32) {\n            toggleHidden(this.elements.display.currentTime, true);\n            toggleHidden(this.elements.progress, true);\n            return;\n        }\n\n        // Update ARIA values\n        if (is.element(this.elements.inputs.seek)) {\n            this.elements.inputs.seek.setAttribute('aria-valuemax', this.duration);\n        }\n\n        // If there's a spot to display duration\n        const hasDuration = is.element(this.elements.display.duration);\n\n        // If there's only one time display, display duration there\n        if (!hasDuration && this.config.displayDuration && this.paused) {\n            controls.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration);\n        }\n\n        // If there's a duration element, update content\n        if (hasDuration) {\n            controls.updateTimeDisplay.call(this, this.elements.display.duration, this.duration);\n        }\n\n        // Update the tooltip (if visible)\n        controls.updateSeekTooltip.call(this);\n    },\n\n    // Hide/show a tab\n    toggleTab(setting, toggle) {\n        toggleHidden(this.elements.settings.tabs[setting], !toggle);\n    },\n\n    // Set the quality menu\n    setQualityMenu(options) {\n        // Menu required\n        if (!is.element(this.elements.settings.panes.quality)) {\n            return;\n        }\n\n        const type = 'quality';\n        const list = this.elements.settings.panes.quality.querySelector('ul');\n\n        // Set options if passed and filter based on uniqueness and config\n        if (is.array(options)) {\n            this.options.quality = dedupe(options).filter(quality => this.config.quality.options.includes(quality));\n        }\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.quality) && this.options.quality.length > 1;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Get the badge HTML for HD, 4K etc\n        const getBadge = quality => {\n            const label = i18n.get(`qualityBadge.${quality}`, this.config);\n\n            if (!label.length) {\n                return null;\n            }\n\n            return controls.createBadge.call(this, label);\n        };\n\n        // Sort options by the config and then render options\n        this.options.quality\n            .sort((a, b) => {\n                const sorting = this.config.quality.options;\n                return sorting.indexOf(a) > sorting.indexOf(b) ? 1 : -1;\n            })\n            .forEach(quality => {\n                controls.createMenuItem.call(this, {\n                    value: quality,\n                    list,\n                    type,\n                    title: controls.getLabel.call(this, 'quality', quality),\n                    badge: getBadge(quality),\n                });\n            });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Translate a value into a nice label\n    getLabel(setting, value) {\n        switch (setting) {\n            case 'speed':\n                return value === 1 ? i18n.get('normal', this.config) : `${value}&times;`;\n\n            case 'quality':\n                if (is.number(value)) {\n                    const label = i18n.get(`qualityLabel.${value}`, this.config);\n\n                    if (!label.length) {\n                        return `${value}p`;\n                    }\n\n                    return label;\n                }\n\n                return toTitleCase(value);\n\n            case 'captions':\n                return captions.getLabel.call(this);\n\n            case 'caption-position':\n                return i18n.get(`captionPositionLabel.${value}`, this.config);\n\n            default:\n                return null;\n        }\n    },\n\n    // Update the selected setting\n    updateSetting(setting, container, input) {\n        const pane = this.elements.settings.panes[setting];\n        let value = null;\n        let list = container;\n\n        if (setting === 'captions') {\n            value = this.currentTrack;\n        } else if (setting === 'caption-position') {\n            value = this.captionPosition;\n        } else {\n            value = !is.empty(input) ? input : this[setting];\n\n            // Get default\n            if (is.empty(value)) {\n                value = this.config[setting].default;\n            }\n\n            // Unsupported value\n            if (!is.empty(this.options[setting]) && !this.options[setting].includes(value)) {\n                this.debug.warn(`Unsupported value of '${value}' for ${setting}`);\n                return;\n            }\n\n            // Disabled value\n            // We generate resolution option from real contents.\n            // Therefore, bypasss checking on ‘quality’ config.\n            if (setting !== 'quality' && !this.config[setting].options.includes(value)) {\n                this.debug.warn(`Disabled value of '${value}' for ${setting}`);\n                return;\n            }\n        }\n\n        // Get the list if we need to\n        if (!is.element(list)) {\n            list = pane && pane.querySelector('ul');\n        }\n\n        // If there's no list it means it's not been rendered...\n        if (!is.element(list)) {\n            return;\n        }\n\n        // Update the label\n        const label = this.elements.settings.tabs[setting].querySelector(`.${this.config.classNames.menu.value}`);\n        label.innerHTML = controls.getLabel.call(this, setting, value);\n\n        // Find the radio option and check it\n        const target = list && list.querySelector(`input[value=\"${value}\"]`);\n\n        if (is.element(target)) {\n            target.checked = true;\n        }\n    },\n\n    // Set the looping options\n    /* setLoopMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panes.loop)) {\n            return;\n        }\n\n        const options = ['start', 'end', 'all', 'reset'];\n        const list = this.elements.settings.panes.loop.querySelector('ul');\n\n        // Show the pane and tab\n        toggleHidden(this.elements.settings.tabs.loop, false);\n        toggleHidden(this.elements.settings.panes.loop, false);\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.loop.options);\n        controls.toggleTab.call(this, 'loop', toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        options.forEach(option => {\n            const item = createElement('li');\n\n            const button = createElement(\n                'button',\n                extend(getAttributesFromSelector(this.config.selectors.buttons.loop), {\n                    type: 'button',\n                    class: this.config.classNames.control,\n                    'data-plyr-loop-action': option,\n                }),\n                i18n.get(option, this.config)\n            );\n\n            if (['start', 'end'].includes(option)) {\n                const badge = controls.createBadge.call(this, '00:00');\n                button.appendChild(badge);\n            }\n\n            item.appendChild(button);\n            list.appendChild(item);\n        });\n    }, */\n\n    // Get current selected caption language\n    // TODO: rework this to user the getter in the API?\n\n    // Set a list of available captions languages\n    setCaptionsMenu() {\n        // TODO: Captions or language? Currently it's mixed\n        const type = 'captions';\n        const list = this.elements.settings.panes.captions.querySelector('ul');\n        const tracks = captions.getTracks.call(this);\n\n        // Toggle the pane and tab\n        controls.toggleTab.call(this, type, tracks.length);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If there's no captions, bail\n        if (!tracks.length) {\n            return;\n        }\n\n        // Generate options data\n        const options = tracks.map((track, value) => ({\n            value,\n            checked: this.captions.toggled && this.currentTrack === value,\n            title: captions.getLabel.call(this, track),\n            badge: track.language && controls.createBadge.call(this, track.language.toUpperCase()),\n            list,\n            type: 'language',\n        }));\n\n        // Add the \"Disabled\" option to turn off captions\n        options.unshift({\n            value: -1,\n            checked: !this.captions.toggled,\n            title: i18n.get('disabled', this.config),\n            list,\n            type: 'language',\n        });\n\n        // Generate options\n        options.forEach(controls.createMenuItem.bind(this));\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    setCaptionsPositionMenu() {\n        if (!this.config.controls.includes('caption-position')) {\n            return;\n        }\n\n        if (!is.element(this.elements.settings.panes['caption-position'])) {\n            return;\n        }\n\n        const type = 'caption-position';\n\n        controls.toggleTab.call(this, type, true);\n\n        // Get the list to populate\n        const list = this.elements.settings.panes['caption-position'].querySelector('ul');\n\n        // Empty the menu\n        emptyElement(list);\n\n        const positions = ['top', 'bottom'];\n\n        // Create items\n        positions.forEach(position => {\n            controls.createMenuItem.call(this, {\n                value: position,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'caption-position', position),\n            });\n        });\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set a list of available captions languages\n    setSpeedMenu(options) {\n        // Do nothing if not selected\n        if (!this.config.controls.includes('settings') || !this.config.settings.includes('speed')) {\n            return;\n        }\n\n        // Menu required\n        if (!is.element(this.elements.settings.panes.speed)) {\n            return;\n        }\n\n        const type = 'speed';\n\n        // Set the speed options\n        if (is.array(options)) {\n            this.options.speed = options;\n        } else if (this.isHTML5 || this.isVimeo) {\n            this.options.speed = [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\n        }\n\n        // Set options if passed and filter based on config\n        this.options.speed = this.options.speed.filter(speed => this.config.speed.options.includes(speed));\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.speed) && this.options.speed.length > 1;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Get the list to populate\n        const list = this.elements.settings.panes.speed.querySelector('ul');\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Create items\n        this.options.speed.forEach(speed => {\n            controls.createMenuItem.call(this, {\n                value: speed,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'speed', speed),\n            });\n        });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Check if we need to hide/show the settings menu\n    checkMenu() {\n        const { tabs } = this.elements.settings;\n        const visible = !is.empty(tabs) && Object.values(tabs).some(tab => !tab.hidden);\n\n        toggleHidden(this.elements.settings.menu, !visible);\n    },\n\n    // Show/hide menu\n    toggleMenu(event) {\n        const { form } = this.elements.settings;\n        const button = this.elements.buttons.settings;\n\n        // Menu and button are required\n        if (!is.element(form) || !is.element(button)) {\n            return;\n        }\n\n        const show = is.boolean(event) ? event : is.element(form) && form.hasAttribute('hidden');\n\n        if (is.event(event)) {\n            const isMenuItem = is.element(form) && form.contains(event.target);\n            const isButton = event.target === this.elements.buttons.settings;\n\n            // If the click was inside the form or if the click\n            // wasn't the button or menu item and we're trying to\n            // show the menu (a doc click shouldn't show the menu)\n            if (isMenuItem || (!isMenuItem && !isButton && show)) {\n                return;\n            }\n\n            // Prevent the toggle being caught by the doc listener\n            if (isButton) {\n                event.stopPropagation();\n            }\n        }\n\n        // Set form and button attributes\n        if (is.element(button)) {\n            button.setAttribute('aria-expanded', show);\n        }\n\n        if (is.element(form)) {\n            toggleHidden(form, !show);\n            toggleClass(this.elements.container, this.config.classNames.menu.open, show);\n\n            if (show) {\n                form.removeAttribute('tabindex');\n            } else {\n                form.setAttribute('tabindex', -1);\n            }\n        }\n    },\n\n    // Get the natural size of a tab\n    getTabSize(tab) {\n        const clone = tab.cloneNode(true);\n        clone.style.position = 'absolute';\n        clone.style.opacity = 0;\n        clone.removeAttribute('hidden');\n\n        // Prevent input's being unchecked due to the name being identical\n        Array.from(clone.querySelectorAll('input[name]')).forEach(input => {\n            const name = input.getAttribute('name');\n            input.setAttribute('name', `${name}-clone`);\n        });\n\n        // Append to parent so we get the \"real\" size\n        tab.parentNode.appendChild(clone);\n\n        // Get the sizes before we remove\n        const width = clone.scrollWidth;\n        const height = clone.scrollHeight;\n\n        // Remove from the DOM\n        removeElement(clone);\n\n        return {\n            width,\n            height,\n        };\n    },\n\n    // Toggle Menu\n    showTab(target = '') {\n        const { menu } = this.elements.settings;\n        const pane = document.getElementById(target);\n\n        // Nothing to show, bail\n        if (!is.element(pane)) {\n            return;\n        }\n\n        // Are we targeting a tab? If not, bail\n        const isTab = pane.getAttribute('role') === 'tabpanel';\n        if (!isTab) {\n            return;\n        }\n\n        // Hide all other tabs\n        // Get other tabs\n        const current = menu.querySelector('[role=\"tabpanel\"]:not([hidden])');\n        const container = current.parentNode;\n\n        // Set other toggles to be expanded false\n        Array.from(menu.querySelectorAll(`[aria-controls=\"${current.getAttribute('id')}\"]`)).forEach(toggle => {\n            toggle.setAttribute('aria-expanded', false);\n        });\n\n        // If we can do fancy animations, we'll animate the height/width\n        if (support.transitions && !support.reducedMotion) {\n            // Set the current width as a base\n            container.style.width = `${current.scrollWidth}px`;\n            container.style.height = `${current.scrollHeight}px`;\n\n            // Get potential sizes\n            const size = controls.getTabSize.call(this, pane);\n\n            // Restore auto height/width\n            const restore = e => {\n                // We're only bothered about height and width on the container\n                if (e.target !== container || !['width', 'height'].includes(e.propertyName)) {\n                    return;\n                }\n\n                // Revert back to auto\n                container.style.width = '';\n                container.style.height = '';\n\n                // Only listen once\n                off.call(this, container, transitionEndEvent, restore);\n            };\n\n            // Listen for the transition finishing and restore auto height/width\n            on.call(this, container, transitionEndEvent, restore);\n\n            // Set dimensions to target\n            container.style.width = `${size.width}px`;\n            container.style.height = `${size.height}px`;\n        }\n\n        // Set attributes on current tab\n        toggleHidden(current, true);\n        current.setAttribute('tabindex', -1);\n\n        // Set attributes on target\n        toggleHidden(pane, false);\n\n        const tabs = getElements.call(this, `[aria-controls=\"${target}\"]`);\n        Array.from(tabs).forEach(tab => {\n            tab.setAttribute('aria-expanded', true);\n        });\n        pane.removeAttribute('tabindex');\n\n        // Focus the first item\n        pane.querySelectorAll('button:not(:disabled), input:not(:disabled), [tabindex]')[0].focus();\n    },\n\n    // Build the default HTML\n    // TODO: Set order based on order in the config.controls array?\n    create(data) {\n        // Do nothing if we want no controls\n        if (is.empty(this.config.controls)) {\n            return null;\n        }\n\n        // Create the container\n        const container = createElement('div', getAttributesFromSelector(this.config.selectors.controls.wrapper));\n\n        // Restart button\n        if (this.config.controls.includes('restart')) {\n            container.appendChild(controls.createButton.call(this, 'restart'));\n        }\n\n        // Rewind button\n        if (this.config.controls.includes('rewind')) {\n            container.appendChild(controls.createButton.call(this, 'rewind'));\n        }\n\n        // Play/Pause button\n        if (this.config.controls.includes('play')) {\n            container.appendChild(controls.createButton.call(this, 'play'));\n        }\n\n        // Fast forward button\n        if (this.config.controls.includes('fast-forward')) {\n            container.appendChild(controls.createButton.call(this, 'fast-forward'));\n        }\n\n        // Progress\n        if (this.config.controls.includes('progress')) {\n            const progress = createElement('div', getAttributesFromSelector(this.config.selectors.progress));\n\n            // Seek range slider\n            progress.appendChild(\n                controls.createRange.call(this, 'seek', {\n                    id: `plyr-seek-${data.id}`,\n                }),\n            );\n\n            // Buffer progress\n            progress.appendChild(controls.createProgress.call(this, 'buffer'));\n\n            // TODO: Add loop display indicator\n\n            // Seek tooltip\n            if (this.config.tooltips.seek) {\n                const tooltip = createElement(\n                    'span',\n                    {\n                        class: this.config.classNames.tooltip,\n                    },\n                    '00:00',\n                );\n\n                progress.appendChild(tooltip);\n                this.elements.display.seekTooltip = tooltip;\n            }\n\n            this.elements.progress = progress;\n            container.appendChild(this.elements.progress);\n        }\n\n        // Media current time display\n        if (this.config.controls.includes('current-time')) {\n            container.appendChild(controls.createTime.call(this, 'currentTime'));\n        }\n\n        // Media duration display\n        if (this.config.controls.includes('duration')) {\n            container.appendChild(controls.createTime.call(this, 'duration'));\n        }\n\n        // Toggle mute button\n        if (this.config.controls.includes('mute')) {\n            container.appendChild(controls.createButton.call(this, 'mute'));\n        }\n\n        // Volume range control\n        if (this.config.controls.includes('volume')) {\n            const volume = createElement('div', {\n                class: 'plyr__volume',\n            });\n\n            // Set the attributes\n            const attributes = {\n                max: 1,\n                step: 0.05,\n                value: this.config.volume,\n            };\n\n            // Create the volume range slider\n            volume.appendChild(\n                controls.createRange.call(\n                    this,\n                    'volume',\n                    extend(attributes, {\n                        id: `plyr-volume-${data.id}`,\n                    }),\n                ),\n            );\n\n            this.elements.volume = volume;\n\n            container.appendChild(volume);\n        }\n\n        // Toggle captions button\n        if (this.config.controls.includes('captions')) {\n            container.appendChild(controls.createButton.call(this, 'captions'));\n        }\n\n        // Settings button / menu\n        if (this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\n            const menu = createElement('div', {\n                class: 'plyr__menu',\n                hidden: '',\n            });\n\n            menu.appendChild(\n                controls.createButton.call(this, 'settings', {\n                    id: `plyr-settings-toggle-${data.id}`,\n                    'aria-haspopup': true,\n                    'aria-controls': `plyr-settings-${data.id}`,\n                    'aria-expanded': false,\n                }),\n            );\n\n            const form = createElement('form', {\n                class: 'plyr__menu__container',\n                id: `plyr-settings-${data.id}`,\n                hidden: '',\n                'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n                role: 'tablist',\n                tabindex: -1,\n            });\n\n            const inner = createElement('div');\n\n            const home = createElement('div', {\n                id: `plyr-settings-${data.id}-home`,\n                'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n                role: 'tabpanel',\n            });\n\n            // Create the tab list\n            const tabs = createElement('ul', {\n                role: 'tablist',\n            });\n\n            // Build the tabs\n            this.config.settings.forEach(type => {\n                const tab = createElement('li', {\n                    role: 'tab',\n                    hidden: '',\n                });\n\n                const button = createElement(\n                    'button',\n                    extend(getAttributesFromSelector(this.config.selectors.buttons.settings), {\n                        type: 'button',\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\n                        id: `plyr-settings-${data.id}-${type}-tab`,\n                        'aria-haspopup': true,\n                        'aria-controls': `plyr-settings-${data.id}-${type}`,\n                        'aria-expanded': false,\n                    }),\n                    i18n.get(type, this.config),\n                );\n\n                const value = createElement('span', {\n                    class: this.config.classNames.menu.value,\n                });\n\n                // Speed contains HTML entities\n                value.innerHTML = data[type];\n\n                button.appendChild(value);\n                tab.appendChild(button);\n                tabs.appendChild(tab);\n\n                this.elements.settings.tabs[type] = tab;\n            });\n\n            home.appendChild(tabs);\n            inner.appendChild(home);\n\n            // Build the panes\n            this.config.settings.forEach(type => {\n                const pane = createElement('div', {\n                    id: `plyr-settings-${data.id}-${type}`,\n                    hidden: '',\n                    'aria-labelled-by': `plyr-settings-${data.id}-${type}-tab`,\n                    role: 'tabpanel',\n                    tabindex: -1,\n                });\n\n                const back = createElement(\n                    'button',\n                    {\n                        type: 'button',\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--back`,\n                        'aria-haspopup': true,\n                        'aria-controls': `plyr-settings-${data.id}-home`,\n                        'aria-expanded': false,\n                    },\n                    i18n.get(type, this.config),\n                );\n\n                pane.appendChild(back);\n\n                const options = createElement('ul');\n\n                pane.appendChild(options);\n                inner.appendChild(pane);\n\n                this.elements.settings.panes[type] = pane;\n            });\n\n            form.appendChild(inner);\n            menu.appendChild(form);\n            container.appendChild(menu);\n\n            this.elements.settings.form = form;\n            this.elements.settings.menu = menu;\n        }\n\n        // Picture in picture button\n        if (this.config.controls.includes('pip') && support.pip) {\n            container.appendChild(controls.createButton.call(this, 'pip'));\n        }\n\n        // Airplay button\n        if (this.config.controls.includes('airplay') && support.airplay) {\n            container.appendChild(controls.createButton.call(this, 'airplay'));\n        }\n\n        if (this.config.controls.includes('zoom')) {\n            container.appendChild(controls.createButton.call(this, 'zoom'));\n        }\n\n        // Toggle fullscreen button\n        if (this.config.controls.includes('fullscreen')) {\n            container.appendChild(controls.createButton.call(this, 'fullscreen'));\n        }\n\n        // Larger overlaid play button\n        if (this.config.controls.includes('play-large')) {\n            this.elements.container.appendChild(controls.createButton.call(this, 'play-large'));\n        }\n\n        this.elements.controls = container;\n\n        if (this.isHTML5) {\n            controls.setQualityMenu.call(this, html5.getQualityOptions.call(this));\n        }\n\n        controls.setSpeedMenu.call(this);\n\n        return container;\n    },\n\n    // Insert controls\n    inject() {\n        // Sprite\n        if (this.config.loadSprite) {\n            const icon = controls.getIconUrl.call(this);\n\n            // Only load external sprite using AJAX\n            if (icon.cors) {\n                loadSprite(icon.url, 'sprite-plyr');\n            }\n        }\n\n        // Create a unique ID\n        this.id = Math.floor(Math.random() * 10000);\n\n        // Null by default\n        let container = null;\n        this.elements.controls = null;\n\n        // Set template properties\n        const props = {\n            id: this.id,\n            seektime: this.config.seekTime,\n            title: this.config.title,\n        };\n        let update = true;\n\n        if (is.string(this.config.controls) || is.element(this.config.controls)) {\n            // String or HTMLElement passed as the option\n            container = this.config.controls;\n        } else if (is.function(this.config.controls)) {\n            // A custom function to build controls\n            // The function can return a HTMLElement or String\n            container = this.config.controls.call(this, props);\n            if (is.element(container)) {\n                update = false;\n            }\n        } else {\n            // Create controls\n            container = controls.create.call(this, {\n                id: this.id,\n                seektime: this.config.seekTime,\n                speed: this.speed,\n                quality: this.quality,\n                captions: captions.getLabel.call(this),\n                // TODO: Looping\n                // loop: 'None',\n            });\n            update = false;\n        }\n\n        // Replace props with their value\n        const replace = input => {\n            let result = input;\n\n            Object.entries(props).forEach(([key, value]) => {\n                result = replaceAll(result, `{${key}}`, value);\n            });\n\n            return result;\n        };\n\n        // Update markup\n        if (update) {\n            if (is.string(this.config.controls)) {\n                container = replace(container);\n            } else if (is.element(container)) {\n                container.innerHTML = replace(container.innerHTML);\n            }\n        }\n\n        // Controls container\n        let target;\n\n        // Inject to custom location\n        if (is.string(this.config.selectors.controls.container)) {\n            target = document.querySelector(this.config.selectors.controls.container);\n        }\n\n        // Inject into the container by default\n        if (!is.element(target)) {\n            target = this.elements.container;\n        }\n\n        // Inject controls HTML (needs to be before captions, hence \"afterbegin\")\n        const insertMethod = is.element(container) ? 'insertAdjacentElement' : 'insertAdjacentHTML';\n        target[insertMethod]('afterbegin', container);\n\n        // Find the elements if need be\n        if (!is.element(this.elements.controls)) {\n            controls.findElements.call(this);\n        }\n\n        // Edge sometimes doesn't finish the paint so force a redraw\n        if (window.navigator.userAgent.includes('Edge')) {\n            repaint(target);\n        }\n\n        // Setup tooltips\n        if (this.config.tooltips.controls) {\n            const { classNames, selectors } = this.config;\n            const selector = `${selectors.controls.wrapper} ${selectors.labels} .${classNames.hidden}`;\n            const labels = getElements.call(this, selector);\n\n            Array.from(labels).forEach(label => {\n                toggleClass(label, this.config.classNames.hidden, false);\n                toggleClass(label, this.config.classNames.tooltip, true);\n            });\n        }\n    },\n};\n\nexport default controls;\n","// ==========================================================================\n// URL utils\n// ==========================================================================\n\nimport is from './is';\n\n/**\n * Parse a string to a URL object\n * @param {string} input - the URL to be parsed\n * @param {boolean} safe - failsafe parsing\n */\nexport function parseUrl(input, safe = true) {\n    let url = input;\n\n    if (safe) {\n        const parser = document.createElement('a');\n        parser.href = url;\n        url = parser.href;\n    }\n\n    try {\n        return new URL(url);\n    } catch (e) {\n        return null;\n    }\n}\n\n// Convert object to URLSearchParams\nexport function buildUrlParams(input) {\n    const params = new URLSearchParams();\n\n    if (is.object(input)) {\n        Object.entries(input).forEach(([key, value]) => {\n            params.set(key, value);\n        });\n    }\n\n    return params;\n}\n","// ==========================================================================\n// Plyr Captions\n// TODO: Create as class\n// ==========================================================================\n\nimport controls from './controls';\nimport i18n from './i18n';\nimport support from './support';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport {\n    createElement,\n    emptyElement,\n    getAttributesFromSelector,\n    insertAfter,\n    removeElement,\n    toggleClass,\n    hasClass,\n} from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport fetch from './utils/fetch';\nimport is from './utils/is';\nimport { getHTML } from './utils/strings';\nimport { parseUrl } from './utils/urls';\n\nconst captions = {\n    // Setup captions\n    setup() {\n        // Requires UI support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Only Vimeo and HTML5 video supported at this point\n        if (!this.isVideo || this.isYouTube || (this.isHTML5 && !support.textTracks)) {\n            // Clear menu and hide\n            if (\n                is.array(this.config.controls) &&\n                this.config.controls.includes('settings') &&\n                this.config.settings.includes('captions')\n            ) {\n                controls.setCaptionsMenu.call(this);\n                controls.setCaptionsPositionMenu.call(this);\n            }\n\n            return;\n        }\n\n        // Inject the container\n        if (!is.element(this.elements.captions)) {\n            this.elements.captions = createElement('div', getAttributesFromSelector(this.config.selectors.captions));\n\n            insertAfter(this.elements.captions, this.elements.wrapper);\n        }\n\n        // Fix IE captions if CORS is used\n        // Fetch captions and inject as blobs instead (data URIs not supported!)\n        if (browser.isIE && window.URL) {\n            const elements = this.media.querySelectorAll('track');\n\n            Array.from(elements).forEach(track => {\n                const src = track.getAttribute('src');\n                const url = parseUrl(src);\n\n                if (\n                    url !== null &&\n                    url.hostname !== window.location.href.hostname &&\n                    ['http:', 'https:'].includes(url.protocol)\n                ) {\n                    fetch(src, 'blob')\n                        .then(blob => {\n                            track.setAttribute('src', window.URL.createObjectURL(blob));\n                        })\n                        .catch(() => {\n                            removeElement(track);\n                        });\n                }\n            });\n        }\n\n        // Get and set initial data\n        // The \"preferred\" options are not realized unless / until the wanted language has a match\n        // * languages: Array of user's browser languages.\n        // * language:  The language preferred by user settings or config\n        // * active:    The state preferred by user settings or config\n        // * toggled:   The real captions state\n\n        const languages = dedupe(\n            Array.from(navigator.languages || navigator.language || navigator.userLanguage).map(language => language.split('-')[0]),\n        );\n\n        let language = (this.storage.get('language') || this.config.captions.language || 'auto').toLowerCase();\n\n        // Use first browser language when language is 'auto'\n        if (language === 'auto') {\n            [language] = languages;\n        }\n\n        let active = this.storage.get('captions');\n        if (!is.boolean(active)) {\n            ({ active } = this.config.captions);\n        }\n\n        Object.assign(this.captions, {\n            toggled: false,\n            active,\n            language,\n            languages,\n        });\n\n        captions.setPosition.call(this, this.captionPosition);\n\n        // Watch changes to textTracks and update captions menu\n        if (this.isHTML5) {\n            const trackEvents = this.config.captions.update ? 'addtrack removetrack' : 'removetrack';\n            on.call(this, this.media.textTracks, trackEvents, captions.update.bind(this));\n        }\n\n        // Update available languages in list next tick (the event must not be triggered before the listeners)\n        setTimeout(captions.update.bind(this), 0);\n    },\n\n    // Update available language options in settings based on tracks\n    update() {\n        const tracks = captions.getTracks.call(this, true);\n        // Get the wanted language\n        const { active, language, meta, currentTrackNode } = this.captions;\n        const languageExists = Boolean(tracks.find(track => track.language === language));\n\n        // Handle tracks (add event listener and \"pseudo\"-default)\n        if (this.isHTML5 && this.isVideo) {\n            tracks.filter(track => !meta.get(track)).forEach(track => {\n                this.debug.log('Track added', track);\n                // Attempt to store if the original dom element was \"default\"\n                meta.set(track, {\n                    default: track.mode === 'showing',\n                });\n\n                // Turn off native caption rendering to avoid double captions\n                track.mode = 'hidden';\n\n                // Add event listener for cue changes\n                on.call(this, track, 'cuechange', () => captions.updateCues.call(this));\n            });\n        }\n\n        // Update language first time it matches, or if the previous matching track was removed\n        if ((languageExists && this.language !== language) || !tracks.includes(currentTrackNode)) {\n            captions.setLanguage.call(this, language);\n            captions.toggle.call(this, active && languageExists);\n        }\n\n        // Enable or disable captions based on track length\n        toggleClass(this.elements.container, this.config.classNames.captions.enabled, !is.empty(tracks));\n\n        // for custom control\n        if (is.string(this.config.controls) || is.function(this.config.controls)) {\n            if (this.config.customMenu && is.function(this.config.customMenu.caption)) {\n                this.config.customMenu.caption.call(this);\n            }\n        } else if ((this.config.controls || []).includes('settings') && this.config.settings.includes('captions')) {\n            // Update available languages in list\n            controls.setCaptionsMenu.call(this);\n        }\n    },\n\n    // Toggle captions display\n    // Used internally for the toggleCaptions method, with the passive option forced to false\n    toggle(input, passive = true) {\n        // If there's no full support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        const { toggled } = this.captions; // Current state\n        const activeClass = this.config.classNames.captions.active;\n\n        // Get the next state\n        // If the method is called without parameter, toggle based on current value\n        const active = is.nullOrUndefined(input) ? !toggled : input;\n\n        // Update state and trigger event\n        if (active !== toggled) {\n            // When passive, don't override user preferences\n            if (!passive) {\n                this.captions.active = active;\n                this.storage.set({ captions: active });\n            }\n\n            // Force language if the call isn't passive and there is no matching language to toggle to\n            if (!this.language && active && !passive) {\n                const tracks = captions.getTracks.call(this);\n                const track = captions.findTrack.call(this, [this.captions.language, ...this.captions.languages], true);\n\n                // Override user preferences to avoid switching languages if a matching track is added\n                this.captions.language = track.language;\n\n                // Set caption, but don't store in localStorage as user preference\n                captions.set.call(this, tracks.indexOf(track));\n                return;\n            }\n\n            // Toggle button if it's enabled\n            if (this.elements.buttons.captions) {\n                this.elements.buttons.captions.pressed = active;\n            }\n\n            // Add class hook\n            toggleClass(this.elements.container, activeClass, active);\n\n            this.captions.toggled = active;\n\n            // Update settings menu\n            controls.updateSetting.call(this, 'captions');\n\n            // Trigger event (not used internally)\n            triggerEvent.call(this, this.media, active ? 'captionsenabled' : 'captionsdisabled');\n        }\n    },\n\n    // Set captions by track index\n    // Used internally for the currentTrack setter with the passive option forced to false\n    set(index, passive = true) {\n        const tracks = captions.getTracks.call(this);\n\n        // Disable captions if setting to -1\n        if (index === -1) {\n            captions.toggle.call(this, false, passive);\n            return;\n        }\n\n        if (!is.number(index)) {\n            this.debug.warn('Invalid caption argument', index);\n            return;\n        }\n\n        if (!(index in tracks)) {\n            this.debug.warn('Track not found', index);\n            return;\n        }\n\n        if (this.captions.currentTrack !== index) {\n            this.captions.currentTrack = index;\n            const track = tracks[index];\n            if(!browser.isEdge){\n                track.mode = 'showing';\n            }\n            const { language } = track || {};\n\n            // Store reference to node for invalidation on remove\n            this.captions.currentTrackNode = track;\n\n            // Update settings menu\n            controls.updateSetting.call(this, 'captions');\n\n            // When passive, don't override user preferences\n            if (!passive) {\n                this.captions.language = language;\n                this.storage.set({ language });\n            }\n\n            // Handle Vimeo captions\n            if (this.isVimeo) {\n                this.embed.enableTextTrack(language);\n            }\n\n            // Trigger event\n            triggerEvent.call(this, this.media, 'languagechange');\n        }\n\n        // Show captions\n        captions.toggle.call(this, true, passive);\n\n        if (this.isHTML5 && this.isVideo) {\n            // If we change the active track while a cue is already displayed we need to update it\n            captions.updateCues.call(this);\n        }\n    },\n\n    // Set captions by language\n    // Used internally for the language setter with the passive option forced to false\n    setLanguage(input, passive = true) {\n        if (!is.string(input)) {\n            this.debug.warn('Invalid language argument', input);\n            return;\n        }\n        // Normalize\n        const language = input.toLowerCase();\n        this.captions.language = language;\n\n        // Set currentTrack\n        const tracks = captions.getTracks.call(this);\n        const track = captions.findTrack.call(this, [language]);\n        captions.set.call(this, tracks.indexOf(track), passive);\n    },\n\n    // Get current valid caption tracks\n    // If update is false it will also ignore tracks without metadata\n    // This is used to \"freeze\" the language options when captions.update is false\n    getTracks(update = false) {\n        // Handle media or textTracks missing or null\n        const tracks = Array.from((this.media || {}).textTracks || []);\n        // For HTML5, use cache instead of current tracks when it exists (if captions.update is false)\n        // Filter out removed tracks and tracks that aren't captions/subtitles (for example metadata)\n        return tracks\n            .filter(track => !this.isHTML5 || update || this.captions.meta.has(track))\n            .filter(track => ['captions', 'subtitles'].includes(track.kind));\n    },\n\n    // Match tracks based on languages and get the first\n    findTrack(languages, force = false) {\n        const tracks = captions.getTracks.call(this);\n        const sortIsDefault = track => Number((this.captions.meta.get(track) || {}).default);\n        const sorted = Array.from(tracks).sort((a, b) => sortIsDefault(b) - sortIsDefault(a));\n        let track;\n        languages.every(language => {\n            track = sorted.find(track => track.language === language);\n            return !track; // Break iteration if there is a match\n        });\n        // If no match is found but is required, get first\n        return track || (force ? sorted[0] : undefined);\n    },\n\n    // Get the current track\n    getCurrentTrack() {\n        return captions.getTracks.call(this)[this.currentTrack];\n    },\n\n    // Get UI label for track\n    getLabel(track) {\n        let currentTrack = track;\n\n        if (!is.track(currentTrack) && support.textTracks && this.captions.toggled) {\n            currentTrack = captions.getCurrentTrack.call(this);\n        }\n\n        if (is.track(currentTrack)) {\n            if (!is.empty(currentTrack.label)) {\n                return currentTrack.label;\n            }\n\n            if (!is.empty(currentTrack.language)) {\n                return track.language.toUpperCase();\n            }\n\n            return i18n.get('enabled', this.config);\n        }\n\n        return i18n.get('disabled', this.config);\n    },\n\n    // Update captions using current track's active cues\n    // Also optional array argument in case there isn't any track (ex: vimeo)\n    updateCues(input) {\n        // Requires UI\n        if (!this.supported.ui) {\n            return;\n        }\n\n        if (!is.element(this.elements.captions)) {\n            this.debug.warn('No captions element to render to');\n            return;\n        }\n\n        // Only accept array or empty input\n        if (!is.nullOrUndefined(input) && !Array.isArray(input)) {\n            this.debug.warn('updateCues: Invalid input', input);\n            return;\n        }\n\n        let cues = input;\n\n        // Get cues from track\n        if (!cues) {\n            const track = captions.getCurrentTrack.call(this);\n            cues = Array.from((track || {}).activeCues || [])\n                .map(cue => cue.getCueAsHTML())\n                .map(getHTML);\n        }\n\n        // Set new caption text\n        const content = cues.map(cueText => cueText.trim()).join('\\n');\n        const changed = content !== this.elements.captions.innerHTML;\n\n        if (changed) {\n            // Empty the container and create a new child element\n            emptyElement(this.elements.captions);\n            const caption = createElement('span', getAttributesFromSelector(this.config.selectors.caption));\n            caption.innerHTML = content;\n            this.elements.captions.appendChild(caption);\n\n            // Trigger event\n            triggerEvent.call(this, this.media, 'cuechange');\n        }\n    },\n\n    setPosition(position) {\n        // if already setup correct class name, just ignore\n        if (hasClass(this.elements.captions, this.config.classNames.captionPosition.replace('{0}', 'top'))) {\n            if (position === 'top') return;\n        } else if (position === 'bottom') {\n            return;\n        }\n        toggleClass(this.elements.captions, this.config.classNames.captionPosition.replace('{0}', 'top'));\n\n        // Update settings menu\n        controls.updateSetting.call(this, 'caption-position');\n    },\n\n    setDefault(defaultLanguage = null) {\n        const captionsActive = this.storage.get('captions');\n        const captionsLanguage = this.storage.get('language') || defaultLanguage;\n        // if storage has caption active and,\n        if (\n            (is.boolean(captionsActive) && captionsActive && is.string(captionsLanguage)) ||\n            (!is.boolean(captionsActive) && is.string(captionsLanguage))\n        ) {\n            const tracks = captions.getTracks.call(this, true);\n            const findLanguageList = [captionsLanguage];\n            if (defaultLanguage) {\n                findLanguageList.push(defaultLanguage);\n            }\n            Array.prototype.push.apply(findLanguageList, this.captions.languages);\n            const track = captions.findTrack.call(this, findLanguageList, true);\n            captions.set.call(this, tracks.indexOf(track));\n        }\n    },\n};\n\nexport default captions;\n","// ==========================================================================\n// Plyr default config\n// ==========================================================================\n\nconst defaults = {\n    // Disable\n    enabled: true,\n\n    // Custom media title\n    title: '',\n\n    // Logging to console\n    debug: false,\n\n    // Auto play (if supported)\n    autoplay: false,\n\n    // Only allow one media playing at once (vimeo only)\n    autopause: true,\n\n    // Allow inline playback on iOS (this effects YouTube/Vimeo - HTML5 requires the attribute present)\n    // TODO: Remove iosNative fullscreen option in favour of this (logic needs work)\n    playsinline: true,\n\n    // Default time to skip when rewind/fast forward\n    seekTime: 10,\n\n    // Default volume\n    volume: 1,\n    muted: false,\n\n    // Pass a custom duration\n    duration: null,\n\n    // Display the media duration on load in the current time position\n    // If you have opted to display both duration and currentTime, this is ignored\n    displayDuration: true,\n\n    // Invert the current time to be a countdown\n    invertTime: true,\n\n    // Clicking the currentTime inverts it's value to show time left rather than elapsed\n    toggleInvert: true,\n\n    // Aspect ratio (for embeds)\n    ratio: '16:9',\n\n    // Click video container to play/pause\n    clickToPlay: true,\n\n    // Auto hide the controls\n    hideControls: true,\n\n    // Reset to start when playback ended\n    resetOnEnd: false,\n\n    // Disable the standard context menu\n    disableContextMenu: true,\n\n    // Sprite (for icons)\n    loadSprite: true,\n    iconPrefix: 'plyr',\n    iconUrl: 'https://cdn.plyr.io/3.3.12/plyr.svg',\n\n    // Blank video (used to prevent errors on source change)\n    blankVideo: 'https://cdn.plyr.io/static/blank.mp4',\n\n    logo: {\n        url: undefined,\n        link: undefined,\n    },\n\n    // fullscreen container, default is plyr container\n    fullscreenContainer: undefined,\n\n    // Quality default\n    quality: {\n        default: 576,\n        options: [\n            4320,\n            2880,\n            2160,\n            1440,\n            1080,\n            720,\n            576,\n            480,\n            360,\n            240,\n            'default', // YouTube's \"auto\"\n        ],\n    },\n\n    // Set loops\n    loop: {\n        active: false,\n        // start: null,\n        // end: null,\n    },\n\n    // Speed default and options to display\n    speed: {\n        selected: 1,\n        options: [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2],\n    },\n\n    // Keyboard shortcut settings\n    keyboard: {\n        focused: true,\n        global: false,\n    },\n\n    // Display tooltips\n    tooltips: {\n        controls: false,\n        seek: true,\n    },\n\n    // Captions settings\n    captions: {\n        active: false,\n        language: 'auto',\n        position: 'bottom',\n        // Listen to new tracks added after Plyr is initialized.\n        // This is needed for streaming captions, but may result in unselectable options\n        update: false,\n    },\n\n    // Fullscreen settings\n    fullscreen: {\n        enabled: true, // Allow fullscreen?\n        fallback: true, // Fallback for vintage browsers\n        iosNative: false, // Use the native fullscreen in iOS (disables custom controls)\n    },\n\n    // Local storage\n    storage: {\n        enabled: true,\n        key: 'plyr',\n    },\n\n    // Default controls\n    controls: [\n        'play-large',\n        // 'restart',\n        // 'rewind',\n        'play',\n        // 'fast-forward',\n        'progress',\n        'current-time',\n        'mute',\n        'volume',\n        'captions',\n        'caption-position',\n        'settings',\n        'pip',\n        'airplay',\n        'zoom',\n        'fullscreen',\n    ],\n    settings: ['captions', 'caption-position', 'quality', 'speed'],\n\n    // Localisation\n    i18n: {\n        restart: 'Restart',\n        rewind: 'Rewind {seektime}s',\n        play: 'Play',\n        pause: 'Pause',\n        fastForward: 'Forward {seektime}s',\n        seek: 'Seek',\n        seekLabel: '{currentTime} of {duration}',\n        played: 'Played',\n        buffered: 'Buffered',\n        currentTime: 'Current time',\n        duration: 'Duration',\n        volume: 'Volume',\n        mute: 'Mute',\n        unmute: 'Unmute',\n        enableCaptions: 'Enable captions',\n        disableCaptions: 'Disable captions',\n        enterFullscreen: 'Enter fullscreen',\n        exitFullscreen: 'Exit fullscreen',\n        enterZoom: 'zoom',\n        exitZoom: 'reset screen size',\n        frameTitle: 'Player for {title}',\n        captions: 'Captions',\n        noCaptions: 'No captions',\n        'caption-position': 'Caption Position',\n        'captionPositionLabel': {\n            top: 'Top',\n            bottom: 'Bottom',\n        },\n        settings: 'Settings',\n        menuBack: 'Go back to previous menu',\n        speed: 'Speed',\n        normal: 'Normal',\n        quality: 'Quality',\n        loop: 'Loop',\n        start: 'Start',\n        end: 'End',\n        all: 'All',\n        reset: 'Reset',\n        disabled: 'Disabled',\n        enabled: 'Enabled',\n        advertisement: 'Ad',\n        qualityBadge: {\n            2160: '4K',\n            1440: 'HD',\n            1080: 'HD',\n            720: 'HD',\n            576: 'SD',\n            480: 'SD',\n        },\n    },\n\n    // URLs\n    urls: {\n        vimeo: {\n            sdk: 'https://player.vimeo.com/api/player.js',\n            iframe: 'https://player.vimeo.com/video/{0}?{1}',\n            api: 'https://vimeo.com/api/v2/video/{0}.json',\n        },\n        youtube: {\n            sdk: 'https://www.youtube.com/iframe_api',\n            api:\n                'https://www.googleapis.com/youtube/v3/videos?id={0}&key={1}&fields=items(snippet(title))&part=snippet',\n        },\n        googleIMA: {\n            sdk: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js',\n        },\n    },\n\n    // custom control menu setup function\n    customMenu: {\n        caption: null,\n    },\n\n    // Custom control listeners\n    listeners: {\n        seek: null,\n        play: null,\n        pause: null,\n        restart: null,\n        rewind: null,\n        fastForward: null,\n        mute: null,\n        volume: null,\n        captions: null,\n        fullscreen: null,\n        pip: null,\n        airplay: null,\n        speed: null,\n        quality: null,\n        loop: null,\n        language: null,\n    },\n\n    // Events to watch and bubble\n    events: [\n        // Events to watch on HTML5 media elements and bubble\n        // https://developer.mozilla.org/en/docs/Web/Guide/Events/Media_events\n        'ended',\n        'progress',\n        'stalled',\n        'playing',\n        'waiting',\n        'canplay',\n        'canplaythrough',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'timeupdate',\n        'volumechange',\n        'play',\n        'pause',\n        'error',\n        'seeking',\n        'seeked',\n        'emptied',\n        'ratechange',\n        'cuechange',\n\n        // Custom events\n        'enterfullscreen',\n        'exitfullscreen',\n        'enterzoomfullscreen',\n        'exitzoomfullscreen',\n        'captionsenabled',\n        'captionsdisabled',\n        'languagechange',\n        'controlshidden',\n        'controlsshown',\n        'ready',\n\n        // YouTube\n        'statechange',\n        'qualitychange',\n        'qualityrequested',\n\n        // Ads\n        'adsloaded',\n        'adscontentpause',\n        'adscontentresume',\n        'adstarted',\n        'adsmidpoint',\n        'adscomplete',\n        'adsallcomplete',\n        'adsimpression',\n        'adsclick',\n    ],\n\n    // Selectors\n    // Change these to match your template if using custom HTML\n    selectors: {\n        editable: 'input, textarea, select, [contenteditable]',\n        container: '.plyr',\n        controls: {\n            container: null,\n            wrapper: '.plyr__controls',\n            layer: {\n                topLayer: '.plyr__controls-top',\n                bottomLayer: '.plyr__controls-bottom',\n            },\n            bottom: {\n                left: '.plyr__controls-bottom-left',\n                right: '.plyr__controls-bottom-right',\n            },\n        },\n        labels: '[data-plyr]',\n        buttons: {\n            play: '[data-plyr=\"play\"]',\n            pause: '[data-plyr=\"pause\"]',\n            restart: '[data-plyr=\"restart\"]',\n            rewind: '[data-plyr=\"rewind\"]',\n            fastForward: '[data-plyr=\"fast-forward\"]',\n            mute: '[data-plyr=\"mute\"]',\n            captions: '[data-plyr=\"captions\"]',\n            zoom: '[data-plyr=\"zoom\"]',\n            fullscreen: '[data-plyr=\"fullscreen\"]',\n            pip: '[data-plyr=\"pip\"]',\n            airplay: '[data-plyr=\"airplay\"]',\n            settings: '[data-plyr=\"settings\"]',\n            loop: '[data-plyr=\"loop\"]',\n        },\n        inputs: {\n            seek: '[data-plyr=\"seek\"]',\n            volume: '[data-plyr=\"volume\"]',\n            speed: '[data-plyr=\"speed\"]',\n            language: '[data-plyr=\"language\"]',\n            'caption-position': '[data-plyr=\"caption-position\"]',\n            quality: '[data-plyr=\"quality\"]',\n        },\n        display: {\n            currentTime: '.plyr__time--current',\n            duration: '.plyr__time--duration',\n            buffer: '.plyr__progress__buffer',\n            loop: '.plyr__progress__loop', // Used later\n            volume: '.plyr__volume--display',\n        },\n        progress: '.plyr__progress',\n        captions: '.plyr__captions',\n        caption: '.plyr__caption',\n        menu: {\n            quality: '.js-plyr__menu__list--quality',\n        },\n    },\n\n    // Class hooks added to the player in different states\n    classNames: {\n        type: 'plyr--{0}',\n        provider: 'plyr--{0}',\n        video: 'plyr__video-wrapper',\n        embed: 'plyr__video-embed',\n        embedContainer: 'plyr__video-embed__container',\n        poster: 'plyr__poster',\n        posterEnabled: 'plyr__poster-enabled',\n        ads: 'plyr__ads',\n        control: 'plyr__control',\n        controlPressed: 'plyr__control--pressed',\n        playing: 'plyr--playing',\n        paused: 'plyr--paused',\n        stopped: 'plyr--stopped',\n        loading: 'plyr--loading',\n        hover: 'plyr--hover',\n        tooltip: 'plyr__tooltip',\n        cues: 'plyr__cues',\n        hidden: 'plyr__sr-only',\n        hideControls: 'plyr--hide-controls',\n        isIos: 'plyr--is-ios',\n        isTouch: 'plyr--is-touch',\n        uiSupported: 'plyr--full-ui',\n        noTransition: 'plyr--no-transition',\n        logo: 'plyr--logo',\n        menu: {\n            value: 'plyr__menu__value',\n            badge: 'plyr__badge',\n            open: 'plyr--menu-open',\n        },\n        captions: {\n            enabled: 'plyr--captions-enabled',\n            active: 'plyr--captions-active',\n        },\n        captionPosition: 'plyr__caption_position__{0}',\n        fullscreen: {\n            enabled: 'plyr--fullscreen-enabled',\n            fallback: 'plyr--fullscreen-fallback',\n        },\n        pip: {\n            supported: 'plyr--pip-supported',\n            active: 'plyr--pip-active',\n        },\n        airplay: {\n            supported: 'plyr--airplay-supported',\n            active: 'plyr--airplay-active',\n        },\n        tabFocus: 'plyr__tab-focus',\n        outerContainer: 'plyr__outer-container',\n    },\n\n    // Embed attributes\n    attributes: {\n        embed: {\n            provider: 'data-plyr-provider',\n            id: 'data-plyr-embed-id',\n        },\n    },\n\n    // API keys\n    keys: {\n        google: null,\n    },\n\n    // Advertisements plugin\n    // Register for an account here: http://vi.ai/publisher-video-monetization/?aid=plyrio\n    ads: {\n        enabled: false,\n        publisherId: '',\n    },\n};\n\nexport default defaults;\n","// ==========================================================================\n// Plyr supported types and providers\n// ==========================================================================\n\nexport const providers = {\n    html5: 'html5',\n    youtube: 'youtube',\n    vimeo: 'vimeo',\n};\n\nexport const types = {\n    audio: 'audio',\n    video: 'video',\n};\n\n/**\n * Get provider by URL\n * @param {string} url\n */\nexport function getProviderByUrl(url) {\n    // YouTube\n    if (/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.?be)\\/.+$/.test(url)) {\n        return providers.youtube;\n    }\n\n    // Vimeo\n    if (/^https?:\\/\\/player.vimeo.com\\/video\\/\\d{0,9}(?=\\b|\\/)/.test(url)) {\n        return providers.vimeo;\n    }\n\n    return null;\n}\n\nexport default { providers, types };\n","// ==========================================================================\n// Console wrapper\n// ==========================================================================\n\nconst noop = () => {};\n\nexport default class Console {\n    constructor(enabled = false) {\n        this.enabled = window.console && enabled;\n\n        if (this.enabled) {\n            this.log('Debugging enabled');\n        }\n    }\n\n    get log() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.log, console) : noop;\n    }\n\n    get warn() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.warn, console) : noop;\n    }\n\n    get error() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.error, console) : noop;\n    }\n}\n","// ==========================================================================\n// Fullscreen wrapper\n// https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API#prefixing\n// ==========================================================================\n\nimport browser from './utils/browser';\nimport { hasClass, toggleClass, trapFocus } from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport is from './utils/is';\n\nfunction onChange(isZoom = false) {\n    if (!this.enabled) {\n        return;\n    }\n\n    if (!isZoom) {\n        // Update toggle button\n        const button = this.player.elements.buttons.fullscreen;\n        if (is.element(button)) {\n            button.pressed = this.active;\n        }\n    } else {\n        const button = this.player.elements.buttons.zoom;\n        if (is.element(button)) {\n            button.pressed = this.zoomActive;\n        }\n    }\n\n    // Trigger an event\n    if (this.isIosNative || !this.isOutterContainerSet) {\n        if (!isZoom) {\n            triggerEvent.call(this.player, this.target, this.active ? 'enterfullscreen' : 'exitfullscreen', true);\n        } else {\n            triggerEvent.call(this.player, this.target, this.zoomActive ? 'enterzoomfullscreen' : 'exitzoomfullscreen', true);\n        }\n    } else {\n        if (!isZoom) {\n            triggerEvent.call(\n                this.player,\n                this.player.elements.container,\n                this.active ? 'enterfullscreen' : 'exitfullscreen',\n                true,\n            );\n        } else {\n            triggerEvent.call(\n                this.player,\n                this.player.elements.container,\n                this.zoomActive ? 'enterzoomfullscreen' : 'exitzoomfullscreen',\n                true,\n            );\n        }\n    }\n\n    // Trap focus in container\n    if (!browser.isIos) {\n        trapFocus.call(this.player, this.target, this.active);\n    }\n}\n\nfunction toggleFallback(toggle = false) {\n    // Store or restore scroll position\n    if (toggle) {\n        this.scrollPosition = {\n            x: window.scrollX || 0,\n            y: window.scrollY || 0,\n        };\n    } else {\n        window.scrollTo(this.scrollPosition.x, this.scrollPosition.y);\n    }\n\n    // Toggle scroll\n    document.body.style.overflow = toggle ? 'hidden' : '';\n\n    // Toggle class hook\n    if (this.target === this.player.elements.container) {\n        toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\n    } else {\n        toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\n        toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.fallback, toggle);\n    }\n\n\n    // Toggle button and fire events\n    onChange.call(this, true);\n}\n\nclass Fullscreen {\n    constructor(player) {\n        // Keep reference to parent\n        this.player = player;\n\n        // Get prefix\n        this.prefix = Fullscreen.prefix;\n        this.property = Fullscreen.property;\n\n        // Scroll position\n        this.scrollPosition = { x: 0, y: 0 };\n\n        // Register event listeners\n        // Handle event (incase user presses escape etc)\n        on.call(\n            this.player,\n            document,\n            this.prefix === 'ms' ? 'MSFullscreenChange' : `${this.prefix}fullscreenchange`,\n            () => {\n                // TODO: Filter for target??\n                onChange.call(this);\n            },\n        );\n\n        // Fullscreen toggle on double click\n        on.call(this.player, this.player.elements.container, 'dblclick', event => {\n            // Ignore double click in controls\n            if (is.element(this.player.elements.controls) && this.player.elements.controls.contains(event.target)) {\n                return;\n            }\n\n            this.toggle();\n        });\n\n        // Update the UI\n        this.update();\n    }\n\n    // Determine if native supported\n    static get native() {\n        return !!(\n            document.fullscreenEnabled ||\n            document.webkitFullscreenEnabled ||\n            document.mozFullScreenEnabled ||\n            document.msFullscreenEnabled\n        );\n    }\n\n    // Get the prefix for handlers\n    static get prefix() {\n        // No prefix\n        if (is.function(document.exitFullscreen)) {\n            return '';\n        }\n\n        // Check for fullscreen support by vendor prefix\n        let value = '';\n        const prefixes = ['webkit', 'moz', 'ms'];\n\n        prefixes.some(pre => {\n            if (is.function(document[`${pre}ExitFullscreen`]) || is.function(document[`${pre}CancelFullScreen`])) {\n                value = pre;\n                return true;\n            }\n\n            return false;\n        });\n\n        return value;\n    }\n\n    static get property() {\n        return this.prefix === 'moz' ? 'FullScreen' : 'Fullscreen';\n    }\n\n    // Determine if fullscreen is enabled\n    get enabled() {\n        return (\n            (Fullscreen.native || this.player.config.fullscreen.fallback) &&\n            this.player.config.fullscreen.enabled &&\n            this.player.supported.ui &&\n            this.player.isVideo\n        );\n    }\n\n    // Get active state\n    get active() {\n        if (!this.enabled) {\n            return false;\n        }\n\n        // Fallback using classname\n        if (!Fullscreen.native) {\n            return hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n        }\n\n        const element = !this.prefix ? document.fullscreenElement : document[`${this.prefix}${this.property}Element`];\n\n        return element === this.target;\n    }\n\n    get zoomActive() {\n        return hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n    }\n\n    get isIosNative() {\n        return browser.isIos && this.player.config.fullscreen.iosNative;\n    }\n\n    get isOutterContainerSet() {\n        return !!this.player.config.fullscreenContainer;\n    }\n\n    // Get target element\n    get target() {\n        if (this.isIosNative) {\n            return this.player.media;\n        } else if (this.isOutterContainerSet) {\n            return this.player.config.fullscreenContainer;\n        }\n        return this.player.elements.container;\n    }\n\n    // Update UI\n    update() {\n        if (this.enabled) {\n            this.player.debug.log(`${Fullscreen.native ? 'Native' : 'Fallback'} fullscreen enabled`);\n        } else {\n            this.player.debug.log('Fullscreen not supported and fallback disabled');\n        }\n\n        // Add styling hook to show button\n        toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.enabled);\n    }\n\n    // Make an element fullscreen\n    enter() {\n        if (!this.enabled) {\n            return;\n        }\n\n        if (this.zoomActive) {\n            this.toggleZoom();\n        }\n\n        // iOS native fullscreen doesn't need the request step\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            if (this.player.playing) {\n                this.target.webkitEnterFullscreen();\n            }\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, true);\n        } else if (!this.prefix) {\n            this.target.requestFullscreen();\n        } else if (!is.empty(this.prefix)) {\n            this.target[`${this.prefix}Request${this.property}`]();\n        }\n    }\n\n    // Bail from fullscreen\n    exit() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            this.target.webkitExitFullscreen();\n            this.player.play();\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, false);\n        } else if (!this.prefix) {\n            (document.cancelFullScreen || document.exitFullscreen).call(document);\n        } else if (!is.empty(this.prefix)) {\n            const action = this.prefix === 'moz' ? 'Cancel' : 'Exit';\n            document[`${this.prefix}${action}${this.property}`]();\n        }\n    }\n\n    toggleZoom() {\n        if (!this.zoomActive) {\n            toggleFallback.call(this, true);\n        } else {\n            toggleFallback.call(this, false);\n        }\n    }\n\n    // Toggle state\n    toggle() {\n        if (!this.active) {\n            this.enter();\n        } else {\n            this.exit();\n        }\n    }\n}\n\nexport default Fullscreen;\n","import captions from './captions';\nimport controls from './controls';\nimport html5 from './html5';\nimport i18n from './i18n';\nimport { dedupe } from './utils/arrays';\nimport { createElement, emptyElement, getAttributesFromSelector } from './utils/elements';\nimport is from './utils/is';\nimport { extend } from './utils/objects';\n\nconst hahow = {\n    createControls(data) {\n        // Create the container\n        const container = createElement('div', getAttributesFromSelector(this.config.selectors.controls.wrapper));\n\n        const topLayer = createElement('div', getAttributesFromSelector(this.config.selectors.controls.layer.topLayer));\n        const bottomLayer = createElement(\n            'div',\n            getAttributesFromSelector(this.config.selectors.controls.layer.bottomLayer),\n        );\n        const bottomLeft = createElement('div', getAttributesFromSelector(this.config.selectors.controls.bottom.left));\n        const bottomRight = createElement(\n            'div',\n            getAttributesFromSelector(this.config.selectors.controls.bottom.right),\n        );\n\n        bottomLayer.appendChild(bottomLeft);\n        bottomLayer.appendChild(bottomRight);\n        container.appendChild(topLayer);\n        container.appendChild(bottomLayer);\n\n        // Rewind button\n        bottomLeft.appendChild(controls.createButton.call(this, 'rewind'));\n\n        // Play/Pause button\n        bottomLeft.appendChild(controls.createButton.call(this, 'play'));\n\n        // Fast forward button\n        bottomLeft.appendChild(controls.createButton.call(this, 'fast-forward'));\n\n        // Progress\n        const progress = createElement('div', getAttributesFromSelector(this.config.selectors.progress));\n\n        // Seek range slider\n        progress.appendChild(\n            controls.createRange.call(this, 'seek', {\n                id: `plyr-seek-${data.id}`,\n            }),\n        );\n\n        // Buffer progress\n        progress.appendChild(controls.createProgress.call(this, 'buffer'));\n\n        // TODO: Add loop display indicator\n\n        // Seek tooltip\n        if (this.config.tooltips.seek) {\n            const tooltip = createElement(\n                'span',\n                {\n                    class: this.config.classNames.tooltip,\n                },\n                '00:00',\n            );\n\n            progress.appendChild(tooltip);\n            this.elements.display.seekTooltip = tooltip;\n        }\n\n        this.elements.progress = progress;\n        topLayer.appendChild(this.elements.progress);\n\n        // Media current time display\n        bottomLeft.appendChild(controls.createTime.call(this, 'currentTime'));\n\n        // Media duration display\n        bottomLeft.appendChild(controls.createTime.call(this, 'duration'));\n\n        // Add lecture note button\n        const addLecturneNoteBtn = controls.createButton.call(this, 'add-lecture-note', {\n            class: 'plyr__add-lecture-note hidden',\n        });\n        addLecturneNoteBtn.appendChild(createElement('span', {}, '筆記標註'));\n        bottomRight.appendChild(addLecturneNoteBtn);\n\n        addLecturneNoteBtn.addEventListener('click', (e) => {\n            this.lectureNote.addLectureNote();\n            e.stopPropagation();\n        });\n\n        // Toggle mute button\n        bottomRight.appendChild(controls.createButton.call(this, 'mute'));\n\n        // Volume range control\n        const volume = createElement('div', {\n            class: 'plyr__volume',\n        });\n\n        // Set the attributes\n        const attributes = {\n            max: 1,\n            step: 0.05,\n            value: this.config.volume,\n        };\n\n        // Create the volume range slider\n        volume.appendChild(\n            controls.createRange.call(\n                this,\n                'volume',\n                extend(attributes, {\n                    id: `plyr-volume-${data.id}`,\n                }),\n            ),\n        );\n\n        this.elements.volume = volume;\n\n        bottomRight.appendChild(volume);\n\n        // Settings button / menu\n        const menu = createElement('div', {\n            class: 'plyr__menu',\n            hidden: '',\n        });\n\n        menu.appendChild(\n            controls.createButton.call(this, 'settings', {\n                id: `plyr-settings-toggle-${data.id}`,\n                'aria-haspopup': true,\n                'aria-controls': `plyr-settings-${data.id}`,\n                'aria-expanded': false,\n            }),\n        );\n\n        const form = createElement('form', {\n            class: 'plyr__menu__container',\n            id: `plyr-settings-${data.id}`,\n            hidden: '',\n            'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n            role: 'tablist',\n            tabindex: -1,\n        });\n\n        const inner = createElement('div');\n\n        const home = createElement('div', {\n            id: `plyr-settings-${data.id}-home`,\n            'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n            role: 'tabpanel',\n        });\n\n        // Create the tab list\n        const tabs = createElement('ul', {\n            role: 'tablist',\n        });\n\n        // Build the tabs\n        this.config.settings.forEach(type => {\n            const tab = createElement('li', {\n                role: 'tab',\n                hidden: '',\n            });\n\n            const button = createElement(\n                'button',\n                extend(getAttributesFromSelector(this.config.selectors.buttons.settings), {\n                    type: 'button',\n                    class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\n                    id: `plyr-settings-${data.id}-${type}-tab`,\n                    'aria-haspopup': true,\n                    'aria-controls': `plyr-settings-${data.id}-${type}`,\n                    'aria-expanded': false,\n                }),\n                i18n.get(type, this.config),\n            );\n\n            const value = createElement('span', {\n                class: this.config.classNames.menu.value,\n            });\n\n            // Speed contains HTML entities\n            value.innerHTML = data[type];\n\n            button.appendChild(value);\n            tab.appendChild(button);\n            tabs.appendChild(tab);\n\n            this.elements.settings.tabs[type] = tab;\n        });\n\n        home.appendChild(tabs);\n        inner.appendChild(home);\n\n        // Build the panes\n        this.config.settings.forEach(type => {\n            const pane = createElement('div', {\n                id: `plyr-settings-${data.id}-${type}`,\n                class: 'subpanel',\n                hidden: '',\n                'aria-labelled-by': `plyr-settings-${data.id}-${type}-tab`,\n                role: 'tabpanel',\n                tabindex: -1,\n            });\n\n            const back = createElement(\n                'button',\n                {\n                    type: 'button',\n                    class: `${this.config.classNames.control} ${this.config.classNames.control}--back`,\n                    'aria-haspopup': true,\n                    'aria-controls': `plyr-settings-${data.id}-home`,\n                    'aria-expanded': false,\n                },\n                i18n.get(type, this.config),\n            );\n\n            pane.appendChild(back);\n\n            const options = createElement('ul');\n\n            pane.appendChild(options);\n            inner.appendChild(pane);\n\n            this.elements.settings.panes[type] = pane;\n        });\n\n        form.appendChild(inner);\n        menu.appendChild(form);\n        bottomRight.appendChild(menu);\n\n        this.elements.settings.form = form;\n        this.elements.settings.menu = menu;\n\n        bottomRight.appendChild(controls.createButton.call(this, 'zoom'));\n\n        // Toggle fullscreen button\n        bottomRight.appendChild(controls.createButton.call(this, 'fullscreen'));\n\n        this.elements.controls = container;\n\n        if (this.isHTML5) {\n            hahow.setQualityMenu.call(this, html5.getQualityOptions.call(this));\n        }\n\n        hahow.setSpeedMenu.call(this);\n        hahow.setCaptionsMenu.call(this);\n        hahow.setCaptionsPositionMenu.call(this);\n\n        return container;\n    },\n\n    // Set the quality menu\n    setQualityMenu(options) {\n        const type = 'quality';\n        const list = this.elements.settings.panes.quality.querySelector('ul');\n\n        // Set options if passed and filter based on uniqueness and config\n        if (is.array(options)) {\n            this.options.quality = dedupe(options);\n        }\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.quality) && this.options.quality.length > 1;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Sort options by the config and then render options\n        this.options.quality\n            .sort((a, b) => a - b)\n            .forEach(quality => {\n                controls.createMenuItem.call(this, {\n                    value: quality,\n                    list,\n                    type,\n                    title: controls.getLabel.call(this, 'quality', quality),\n                });\n            });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set a list of available captions languages\n    setCaptionsMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panes.captions)) {\n            return;\n        }\n\n        // TODO: Captions or language? Currently it's mixed\n        const type = 'captions';\n        const list = this.elements.settings.panes.captions.querySelector('ul');\n        const tracks = captions.getTracks.call(this);\n\n        // Toggle the pane and tab\n        controls.toggleTab.call(this, type, true);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If there's no captions, bail\n        if (!tracks.length) {\n            controls.createMenuItem.bind(this)({\n                value: -1,\n                checked: !this.captions.toggled,\n                title: i18n.get('noCaptions', this.config),\n                list,\n                type: 'language',\n            });\n            controls.updateSetting.call(this, type, list);\n            return;\n        }\n\n        // Generate options data\n        const options = tracks.map((track, value) => ({\n            value,\n            checked: this.captions.toggled && this.currentTrack === value,\n            title: captions.getLabel.call(this, track),\n            badge: track.language && controls.createBadge.call(this, track.language.toUpperCase()),\n            list,\n            type: 'language',\n        }));\n\n        // Add the \"Disabled\" option to turn off captions\n        options.unshift({\n            value: -1,\n            checked: !this.captions.toggled,\n            title: i18n.get('disabled', this.config),\n            list,\n            type: 'language',\n        });\n\n        // Generate options\n        options.forEach(controls.createMenuItem.bind(this));\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    setCaptionsPositionMenu() {\n        if (!is.element(this.elements.settings.panes['caption-position'])) {\n            return;\n        }\n\n        const type = 'caption-position';\n\n        controls.toggleTab.call(this, type, true);\n\n        // Get the list to populate\n        const list = this.elements.settings.panes['caption-position'].querySelector('ul');\n\n        // Empty the menu\n        emptyElement(list);\n\n        const positions = ['top', 'bottom'];\n\n        // Create items\n        positions.forEach(position => {\n            controls.createMenuItem.call(this, {\n                value: position,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'caption-position', position),\n            });\n        });\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set a list of available captions languages\n    setSpeedMenu(options) {\n        // Menu required\n        if (!is.element(this.elements.settings.panes.speed)) {\n            return;\n        }\n\n        const type = 'speed';\n\n        // Set the speed options\n        if (is.array(options)) {\n            this.options.speed = options;\n        } else if (this.isHTML5 || this.isVimeo) {\n            this.options.speed = [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\n        }\n\n        // Set options if passed and filter based on config\n        this.options.speed = this.options.speed.filter(speed => this.config.speed.options.includes(speed));\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.speed) && this.options.speed.length > 1;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Get the list to populate\n        const list = this.elements.settings.panes.speed.querySelector('ul');\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Create items\n        this.options.speed.forEach(speed => {\n            controls.createMenuItem.call(this, {\n                value: speed,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'speed', speed),\n            });\n        });\n\n        controls.updateSetting.call(this, type, list);\n    },\n};\n\nexport default hahow;\n","// ==========================================================================\n// Load image avoiding xhr/fetch CORS issues\n// Server status can't be obtained this way unfortunately, so this uses \"naturalWidth\" to determine if the image has loaded\n// By default it checks if it is at least 1px, but you can add a second argument to change this\n// ==========================================================================\n\nexport default function loadImage(src, minWidth = 1) {\n    return new Promise((resolve, reject) => {\n        const image = new Image();\n\n        const handler = () => {\n            delete image.onload;\n            delete image.onerror;\n            (image.naturalWidth >= minWidth ? resolve : reject)(image);\n        };\n\n        Object.assign(image, { onload: handler, onerror: handler, src });\n    });\n}\n","// ==========================================================================\n// Plyr UI\n// ==========================================================================\n\nimport captions from './captions';\nimport controls from './controls';\nimport i18n from './i18n';\nimport support from './support';\nimport browser from './utils/browser';\nimport { getElement, toggleClass } from './utils/elements';\nimport { ready, triggerEvent } from './utils/events';\nimport is from './utils/is';\nimport loadImage from './utils/loadImage';\n\nconst ui = {\n    addStyleHook() {\n        toggleClass(this.elements.container, this.config.selectors.container.replace('.', ''), true);\n        toggleClass(this.elements.container, this.config.classNames.uiSupported, this.supported.ui);\n    },\n\n    addStylehookToFullscreenContainer () {\n        // append plyr__outer-container class name to outer container\n        if (this.config.fullscreenContainer) {\n            toggleClass(this.config.fullscreenContainer, this.config.classNames.outerContainer, true);\n        }\n    },\n\n    // Toggle native HTML5 media controls\n    toggleNativeControls(toggle = false) {\n        if (toggle && this.isHTML5) {\n            this.media.setAttribute('controls', '');\n        } else {\n            this.media.removeAttribute('controls');\n        }\n    },\n\n    // Setup the UI\n    build() {\n        // Re-attach media element listeners\n        // TODO: Use event bubbling?\n        this.listeners.media();\n\n        // Don't setup interface if no support\n        if (!this.supported.ui) {\n            this.debug.warn(`Basic support only for ${this.provider} ${this.type}`);\n\n            // Restore native controls\n            ui.toggleNativeControls.call(this, true);\n\n            this.ready = true;\n\n            // Bail\n            return;\n        }\n\n        // Inject custom controls if not present\n        if (!is.element(this.elements.controls)) {\n            // Inject custom controls\n            controls.inject.call(this);\n\n            // Re-attach control listeners\n            this.listeners.controls();\n        }\n\n        // Remove native controls\n        ui.toggleNativeControls.call(this);\n\n        // Setup captions for HTML5\n        if (this.isHTML5) {\n            captions.setup.call(this);\n        }\n\n        // Reset volume\n        this.volume = null;\n\n        // Reset mute state\n        this.muted = null;\n\n        // Reset speed\n        this.speed = null;\n\n        // Reset loop state\n        this.loop = null;\n\n        // Reset quality setting\n        this.quality = null;\n\n        // Reset volume display\n        controls.updateVolume.call(this);\n\n        // Reset time display\n        controls.timeUpdate.call(this);\n\n        // Update the UI\n        ui.checkPlaying.call(this);\n\n        // Check for picture-in-picture support\n        toggleClass(\n            this.elements.container,\n            this.config.classNames.pip.supported,\n            support.pip && this.isHTML5 && this.isVideo,\n        );\n\n        // Check for airplay support\n        toggleClass(this.elements.container, this.config.classNames.airplay.supported, support.airplay && this.isHTML5);\n\n        // Add iOS class\n        toggleClass(this.elements.container, this.config.classNames.isIos, browser.isIos);\n\n        // Add touch class\n        toggleClass(this.elements.container, this.config.classNames.isTouch, this.touch);\n\n        // Ready for API calls\n        this.ready = true;\n\n        // Ready event at end of execution stack\n        setTimeout(() => {\n            triggerEvent.call(this, this.media, 'ready');\n        }, 0);\n\n        // Set the title\n        ui.setTitle.call(this);\n\n        // Assure the poster image is set, if the property was added before the element was created\n        if (this.poster) {\n            ui.setPoster.call(this, this.poster, false).catch(() => {});\n        }\n\n        // Manually set the duration if user has overridden it.\n        // The event listeners for it doesn't get called if preload is disabled (#701)\n        if (this.config.duration) {\n            controls.durationUpdate.call(this);\n        }\n    },\n\n    // Setup aria attribute for play and iframe title\n    setTitle() {\n        // Find the current text\n        let label = i18n.get('play', this.config);\n\n        // If there's a media title set, use that for the label\n        if (is.string(this.config.title) && !is.empty(this.config.title)) {\n            label += `, ${this.config.title}`;\n        }\n\n        // If there's a play button, set label\n        Array.from(this.elements.buttons.play || []).forEach(button => {\n            button.setAttribute('aria-label', label);\n        });\n\n        // Set iframe title\n        // https://github.com/sampotts/plyr/issues/124\n        if (this.isEmbed) {\n            const iframe = getElement.call(this, 'iframe');\n\n            if (!is.element(iframe)) {\n                return;\n            }\n\n            // Default to media type\n            const title = !is.empty(this.config.title) ? this.config.title : 'video';\n            const format = i18n.get('frameTitle', this.config);\n\n            iframe.setAttribute('title', format.replace('{title}', title));\n        }\n    },\n\n    // Toggle poster\n    togglePoster(enable) {\n        toggleClass(this.elements.container, this.config.classNames.posterEnabled, enable);\n    },\n\n    // Set the poster image (async)\n    // Used internally for the poster setter, with the passive option forced to false\n    setPoster(poster, passive = true) {\n        // Don't override if call is passive\n        if (passive && this.poster) {\n            return Promise.reject(new Error('Poster already set'));\n        }\n\n        // Set property synchronously to respect the call order\n        this.media.setAttribute('poster', poster);\n\n        // Wait until ui is ready\n        return (\n            ready\n                .call(this)\n                // Load image\n                .then(() => loadImage(poster))\n                .catch(err => {\n                    // Hide poster on error unless it's been set by another call\n                    if (poster === this.poster) {\n                        ui.togglePoster.call(this, false);\n                    }\n                    // Rethrow\n                    throw err;\n                })\n                .then(() => {\n                    // Prevent race conditions\n                    if (poster !== this.poster) {\n                        throw new Error('setPoster cancelled by later call to setPoster');\n                    }\n                })\n                .then(() => {\n                    Object.assign(this.elements.poster.style, {\n                        backgroundImage: `url('${poster}')`,\n                        // Reset backgroundSize as well (since it can be set to \"cover\" for padded thumbnails for youtube)\n                        backgroundSize: '',\n                    });\n                    ui.togglePoster.call(this, true);\n                    return poster;\n                })\n        );\n    },\n\n    // Check playing state\n    checkPlaying(event) {\n        // Class hooks\n        toggleClass(this.elements.container, this.config.classNames.playing, this.playing);\n        toggleClass(this.elements.container, this.config.classNames.paused, this.paused);\n        toggleClass(this.elements.container, this.config.classNames.stopped, this.stopped);\n\n        // Set state\n        Array.from(this.elements.buttons.play || []).forEach(target => {\n            target.pressed = this.playing;\n        });\n\n        // Only update controls on non timeupdate events\n        if (is.event(event) && event.type === 'timeupdate') {\n            return;\n        }\n\n        // Toggle controls\n        ui.toggleControls.call(this);\n    },\n\n    // Check if media is loading\n    checkLoading(event) {\n        this.loading = ['stalled', 'waiting'].includes(event.type);\n\n        // Clear timer\n        clearTimeout(this.timers.loading);\n\n        // Timer to prevent flicker when seeking\n        this.timers.loading = setTimeout(() => {\n            // Update progress bar loading class state\n            toggleClass(this.elements.container, this.config.classNames.loading, this.loading);\n\n            // Update controls visibility\n            ui.toggleControls.call(this);\n        }, this.loading ? 250 : 0);\n    },\n\n    // Toggle controls based on state and `force` argument\n    toggleControls(force) {\n        const { controls } = this.elements;\n\n        if (controls && this.config.hideControls) {\n            // Show controls if force, loading, paused, or button interaction, otherwise hide\n            this.toggleControls(Boolean(force || this.loading || this.paused || controls.pressed || controls.hover));\n        }\n    },\n};\n\nexport default ui;\n","// ==========================================================================\n// Plyr Event Listeners\n// ==========================================================================\n\nimport controls from './controls';\nimport ui from './ui';\nimport browser from './utils/browser';\nimport { getElement, getElements, getFocusElement, matches, toggleClass, toggleHidden } from './utils/elements';\nimport { on, once, toggleListener, triggerEvent } from './utils/events';\nimport is from './utils/is';\n\nclass Listeners {\n    constructor(player) {\n        this.player = player;\n        this.lastKey = null;\n\n        this.handleKey = this.handleKey.bind(this);\n        this.toggleMenu = this.toggleMenu.bind(this);\n        this.firstTouch = this.firstTouch.bind(this);\n    }\n\n    // Handle key presses\n    handleKey(event) {\n        const code = event.keyCode ? event.keyCode : event.which;\n        const pressed = event.type === 'keydown';\n        const repeat = pressed && code === this.lastKey;\n\n        // Bail if a modifier key is set\n        if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n            return;\n        }\n\n        // If the event is bubbled from the media element\n        // Firefox doesn't get the keycode for whatever reason\n        if (!is.number(code)) {\n            return;\n        }\n\n        // Seek by the number keys\n        const seekByKey = () => {\n            // Divide the max duration into 10th's and times by the number value\n            this.player.currentTime = this.player.duration / 10 * (code - 48);\n        };\n\n        // Handle the key on keydown\n        // Reset on keyup\n        if (pressed) {\n            // Which keycodes should we prevent default\n            const preventDefault = [27, 32, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 56, 57, 67, 70, 73, 75, 76, 77, 79];\n\n            // Check focused element\n            // and if the focused element is not editable (e.g. text input)\n            // and any that accept key input http://webaim.org/techniques/keyboard/\n            const focused = getFocusElement();\n            if (\n                is.element(focused) &&\n                (focused !== this.player.elements.inputs.seek &&\n                    matches(focused, this.player.config.selectors.editable))\n            ) {\n                return;\n            }\n\n            // If the code is found prevent default (e.g. prevent scrolling for arrows)\n            if (preventDefault.includes(code)) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n\n            switch (code) {\n                case 27:\n                    // esc escape fullscreen mode\n                    if (this.player.fullscreen.enabled) {\n                        this.player.fullscreen.exit();\n                    }\n                    break;\n                case 48:\n                case 49:\n                case 50:\n                case 51:\n                case 52:\n                case 53:\n                case 54:\n                case 55:\n                case 56:\n                case 57:\n                    // 0-9\n                    if (!repeat) {\n                        seekByKey();\n                    }\n                    break;\n\n                case 32:\n                case 75:\n                    // Space and K key\n                    if (!repeat) {\n                        this.player.togglePlay();\n                    }\n                    break;\n\n                case 38:\n                    // Arrow up\n                    this.player.increaseVolume(0.1);\n                    break;\n\n                case 40:\n                    // Arrow down\n                    this.player.decreaseVolume(0.1);\n                    break;\n\n                case 77:\n                    // M key\n                    if (!repeat) {\n                        this.player.muted = !this.player.muted;\n                    }\n                    break;\n\n                case 39:\n                    // Arrow forward\n                    this.player.forward();\n                    break;\n\n                case 37:\n                    // Arrow back\n                    this.player.rewind();\n                    break;\n\n                case 70:\n                    // F key\n                    this.player.fullscreen.toggle();\n                    break;\n\n                case 67:\n                    // C key\n                    if (!repeat) {\n                        this.player.toggleCaptions();\n                    }\n                    break;\n\n                case 76:\n                    // L key\n                    this.player.loop = !this.player.loop;\n                    break;\n\n                case 78:\n                    // N key\n                    if (this.player.lectureNote && this.player.lectureNote.isLoadedLectureNote && this.player.lectureNote.addLectureNoteButtonStatus === 'enable') {\n                        this.player.lectureNote.addLectureNote();\n                    }\n                    break;\n\n                    /* case 73:\n                    this.setLoop('start');\n                    break;\n\n                case 76:\n                    this.setLoop();\n                    break;\n\n                case 79:\n                    this.setLoop('end');\n                    break; */\n\n                default:\n                    break;\n            }\n\n            // Escape is handle natively when in full screen\n            // So we only need to worry about non native\n            if (!this.player.fullscreen.enabled && this.player.fullscreen.active && code === 27) {\n                this.player.fullscreen.toggle();\n            }\n\n            // Store last code for next cycle\n            this.lastKey = code;\n        } else {\n            this.lastKey = null;\n        }\n    }\n\n    // Toggle menu\n    toggleMenu(event) {\n        controls.toggleMenu.call(this.player, event);\n    }\n\n    // Device is touch enabled\n    firstTouch() {\n        this.player.touch = true;\n\n        // Add touch class\n        toggleClass(this.player.elements.container, this.player.config.classNames.isTouch, true);\n    }\n\n    // Global window & document listeners\n    global(toggle = true) {\n        // Keyboard shortcuts\n        if (this.player.config.keyboard.global) {\n            toggleListener.call(this.player, window, 'keydown keyup', this.handleKey, toggle, false);\n        }\n\n        // Click anywhere closes menu\n        toggleListener.call(this.player, document.body, 'click', this.toggleMenu, toggle);\n\n        // Detect touch by events\n        once.call(this.player, document.body, 'touchstart', this.firstTouch);\n    }\n\n    // Container listeners\n    container() {\n        // Keyboard shortcuts\n        if (!this.player.config.keyboard.global && this.player.config.keyboard.focused) {\n            on.call(this.player, this.player.elements.container, 'keydown keyup', this.handleKey, false);\n        }\n\n        // Detect tab focus\n        // Remove class on blur/focusout\n        on.call(this.player, this.player.elements.container, 'focusout', event => {\n            toggleClass(event.target, this.player.config.classNames.tabFocus, false);\n        });\n        // Add classname to tabbed elements\n        on.call(this.player, this.player.elements.container, 'keydown', event => {\n            if (event.keyCode !== 9) {\n                return;\n            }\n\n            // Delay the adding of classname until the focus has changed\n            // This event fires before the focusin event\n            setTimeout(() => {\n                toggleClass(getFocusElement(), this.player.config.classNames.tabFocus, true);\n            }, 0);\n        });\n\n        // Toggle controls on mouse events and entering fullscreen\n        on.call(\n            this.player,\n            this.player.elements.container,\n            'mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen',\n            event => {\n                const { controls } = this.player.elements;\n\n                // Remove button states for fullscreen\n                if (event.type === 'enterfullscreen') {\n                    controls.pressed = false;\n                    controls.hover = false;\n                }\n\n                // Show, then hide after a timeout unless another control event occurs\n                const show = ['touchstart', 'touchmove', 'mousemove'].includes(event.type);\n\n                let delay = 0;\n\n                if (show) {\n                    ui.toggleControls.call(this.player, true);\n                    // Use longer timeout for touch devices\n                    delay = this.player.touch ? 3000 : 2000;\n                }\n\n                // Clear timer\n                clearTimeout(this.player.timers.controls);\n                // Timer to prevent flicker when seeking\n                this.player.timers.controls = setTimeout(() => ui.toggleControls.call(this.player, false), delay);\n            },\n        );\n    }\n\n    // Listen for media events\n    media() {\n        if (!this.player.media.isAlreadyRegisterEventListener) {\n            this.player.media.isAlreadyRegisterEventListener = true;\n            // Time change on media\n            on.call(this.player, this.player.media, 'timeupdate seeking seeked', event =>\n                controls.timeUpdate.call(this.player, event),\n            );\n\n            // Display duration\n            on.call(this.player, this.player.media, 'durationchange loadeddata loadedmetadata', event =>\n                controls.durationUpdate.call(this.player, event),\n            );\n\n            // Check for audio tracks on load\n            // We can't use `loadedmetadata` as it doesn't seem to have audio tracks at that point\n            on.call(this.player, this.player.media, 'canplay', () => {\n                toggleHidden(this.player.elements.volume, !this.player.hasAudio);\n                toggleHidden(this.player.elements.buttons.mute, !this.player.hasAudio);\n            });\n\n            // Handle the media finishing\n            on.call(this.player, this.player.media, 'ended', () => {\n                // Show poster on end\n                if (this.player.isHTML5 && this.player.isVideo && this.player.config.resetOnEnd) {\n                    // Restart\n                    this.player.restart();\n                }\n            });\n\n            // Check for buffer progress\n            on.call(this.player, this.player.media, 'progress playing seeking seeked', event =>\n                controls.updateProgress.call(this.player, event),\n            );\n\n            // Handle volume changes\n            on.call(this.player, this.player.media, 'volumechange', event =>\n                controls.updateVolume.call(this.player, event),\n            );\n\n            // Handle play/pause\n            on.call(this.player, this.player.media, 'playing play pause ended emptied timeupdate', event =>\n                ui.checkPlaying.call(this.player, event),\n            );\n\n            // Loading state\n            on.call(this.player, this.player.media, 'waiting canplay seeked playing', event =>\n                ui.checkLoading.call(this.player, event),\n            );\n\n            // If autoplay, then load advertisement if required\n            // TODO: Show some sort of loading state while the ad manager loads else there's a delay before ad shows\n            on.call(this.player, this.player.media, 'playing', () => {\n                if (!this.player.ads) {\n                    return;\n                }\n\n                // If ads are enabled, wait for them first\n                if (this.player.ads.enabled && !this.player.ads.initialized) {\n                    // Wait for manager response\n                    this.player.ads.managerPromise.then(() => this.player.ads.play()).catch(() => this.player.play());\n                }\n            });\n\n            // Volume change\n            on.call(this.player, this.player.media, 'volumechange', () => {\n                // Save to storage\n                this.player.storage.set({ volume: this.player.volume, muted: this.player.muted });\n            });\n\n            // Speed change\n            on.call(this.player, this.player.media, 'ratechange', () => {\n                // Update UI\n                controls.updateSetting.call(this.player, 'speed');\n\n                // Save to storage\n                this.player.storage.set({ speed: this.player.speed });\n            });\n\n            // Quality change\n            on.call(this.player, this.player.media, 'qualitychange', event => {\n                // Update UI\n                controls.updateSetting.call(this.player, 'quality', null, event.detail.quality);\n            });\n\n            // Proxy events to container\n            // Bubble up key events for Edge\n            const proxyEvents = this.player.config.events.concat(['keyup', 'keydown']).join(' ');\n            on.call(this.player, this.player.media, proxyEvents, event => {\n                let { detail = {} } = event;\n\n                // Get error details from media\n                if (event.type === 'error') {\n                    detail = this.player.media.error;\n                }\n\n                triggerEvent.call(this.player, this.player.elements.container, event.type, true, detail);\n            });\n        }\n\n        // Click video\n        if (this.player.supported.ui && this.player.config.clickToPlay && !this.player.isAudio) {\n            // Re-fetch the wrapper\n            const wrapper = getElement.call(this.player, `.${this.player.config.classNames.video}`);\n\n            // Bail if there's no wrapper (this should never happen)\n            if (!is.element(wrapper)) {\n                return;\n            }\n\n            if (!wrapper.isAlreadyRegisterEventListener) {\n                wrapper.isAlreadyRegisterEventListener = true;\n                // On click play, pause ore restart\n                on.call(this.player, wrapper, 'click', () => {\n                    // Touch devices will just show controls (if we're hiding controls)\n                    if (this.player.config.hideControls && this.player.touch && !this.player.paused) {\n                        return;\n                    }\n\n                    if (this.player.paused) {\n                        this.player.play();\n                    } else if (this.player.ended) {\n                        this.player.restart();\n                        this.player.play();\n                    } else {\n                        this.player.pause();\n                    }\n                });\n\n                // Disable right click\n                if (this.player.supported.ui && this.player.config.disableContextMenu) {\n                    on.call(\n                        this.player,\n                        this.player.elements.wrapper,\n                        'contextmenu',\n                        event => {\n                            event.preventDefault();\n                        },\n                        false,\n                    );\n                }\n            }\n        }\n    }\n\n    // Listen for control events\n    controls() {\n        // IE doesn't support input event, so we fallback to change\n        const inputEvent = browser.isIE ? 'change' : 'input';\n\n        // Run default and custom handlers\n        const proxy = (event, defaultHandler, customHandlerKey) => {\n            const customHandler = this.player.config.listeners[customHandlerKey];\n            const hasCustomHandler = is.function(customHandler);\n            let returned = true;\n\n            // Execute custom handler\n            if (hasCustomHandler) {\n                returned = customHandler.call(this.player, event);\n            }\n\n            // Only call default handler if not prevented in custom handler\n            if (returned && is.function(defaultHandler)) {\n                defaultHandler.call(this.player, event);\n            }\n        };\n\n        // Trigger custom and default handlers\n        const bind = (element, type, defaultHandler, customHandlerKey, passive = true) => {\n            const customHandler = this.player.config.listeners[customHandlerKey];\n            const hasCustomHandler = is.function(customHandler);\n\n            on.call(\n                this.player,\n                element,\n                type,\n                event => proxy(event, defaultHandler, customHandlerKey),\n                passive && !hasCustomHandler,\n            );\n        };\n\n        // Play/pause toggle\n        if (this.player.elements.buttons.play) {\n            Array.from(this.player.elements.buttons.play).forEach(button => {\n                bind(button, 'click', this.player.togglePlay, 'play');\n            });\n        }\n\n        // Pause\n        bind(this.player.elements.buttons.restart, 'click', this.player.restart, 'restart');\n\n        // Rewind\n        bind(this.player.elements.buttons.rewind, 'click', this.player.rewind, 'rewind');\n\n        // Rewind\n        bind(this.player.elements.buttons.fastForward, 'click', this.player.forward, 'fastForward');\n\n        // Mute toggle\n        bind(\n            this.player.elements.buttons.mute,\n            'click',\n            () => {\n                this.player.muted = !this.player.muted;\n            },\n            'mute',\n        );\n\n        // Captions toggle\n        bind(this.player.elements.buttons.captions, 'click', () => this.player.toggleCaptions());\n\n        // zoom toggle\n        on(\n            this.player.elements.buttons.zoom,\n            'click',\n            () => {\n                this.player.fullscreen.toggleZoom();\n            },\n            'zoom',\n        );\n\n        // Fullscreen toggle\n        bind(\n            this.player.elements.buttons.fullscreen,\n            'click',\n            () => {\n                this.player.fullscreen.toggle();\n            },\n            'fullscreen',\n        );\n\n        // Picture-in-Picture\n        bind(\n            this.player.elements.buttons.pip,\n            'click',\n            () => {\n                this.player.pip = 'toggle';\n            },\n            'pip',\n        );\n\n        // Airplay\n        bind(this.player.elements.buttons.airplay, 'click', this.player.airplay, 'airplay');\n\n        // Settings menu\n        bind(this.player.elements.buttons.settings, 'click', event => {\n            controls.toggleMenu.call(this.player, event);\n        });\n\n        // Settings menu\n        bind(this.player.elements.settings.form, 'click', event => {\n            event.stopPropagation();\n\n            // Go back to home tab on click\n            const showHomeTab = () => {\n                const id = `plyr-settings-${this.player.id}-home`;\n                controls.showTab.call(this.player, id);\n            };\n\n            // Settings menu items - use event delegation as items are added/removed\n            if (matches(event.target, this.player.config.selectors.inputs.language)) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.currentTrack = Number(event.target.value);\n                        // showHomeTab();\n                    },\n                    'language',\n                );\n            } else if (matches(event.target, this.player.config.selectors.inputs.quality)) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.quality = event.target.value;\n                        // showHomeTab();\n                    },\n                    'quality',\n                );\n            } else if (matches(event.target, this.player.config.selectors.inputs.speed)) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.speed = parseFloat(event.target.value);\n                        // showHomeTab();\n                    },\n                    'speed',\n                );\n            } else if (matches(event.target, this.player.config.selectors.inputs['caption-position'])) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.captionPosition = event.target.value;\n                    },\n                    'caption-position',\n                );\n            } else {\n                const tab = event.target;\n                controls.showTab.call(this.player, tab.getAttribute('aria-controls'));\n            }\n        });\n\n        // Set range input alternative \"value\", which matches the tooltip time (#954)\n        bind(this.player.elements.inputs.seek, 'mousedown mousemove', event => {\n            const clientRect = this.player.elements.progress.getBoundingClientRect();\n            const percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n            event.currentTarget.setAttribute('seek-value', percent);\n        });\n\n        // Pause while seeking\n        bind(this.player.elements.inputs.seek, 'mousedown mouseup keydown keyup touchstart touchend', event => {\n            const seek = event.currentTarget;\n\n            const code = event.keyCode ? event.keyCode : event.which;\n            const eventType = event.type;\n\n            if ((eventType === 'keydown' || eventType === 'keyup') && (code !== 39 && code !== 37)) {\n                return;\n            }\n            // Was playing before?\n            const play = seek.hasAttribute('play-on-seeked');\n\n            // Done seeking\n            const done = ['mouseup', 'touchend', 'keyup'].includes(event.type);\n\n            // If we're done seeking and it was playing, resume playback\n            if (play && done) {\n                seek.removeAttribute('play-on-seeked');\n                this.player.play();\n            } else if (!done && this.player.playing) {\n                seek.setAttribute('play-on-seeked', '');\n                this.player.pause();\n            }\n        });\n\n        // Seek\n        bind(\n            this.player.elements.inputs.seek,\n            inputEvent,\n            event => {\n                const seek = event.currentTarget;\n\n                // If it exists, use seek-value instead of \"value\" for consistency with tooltip time (#954)\n                let seekTo = seek.getAttribute('seek-value');\n\n                if (is.empty(seekTo)) {\n                    seekTo = seek.value;\n                }\n\n                seek.removeAttribute('seek-value');\n\n                this.player.currentTime = seekTo / seek.max * this.player.duration;\n            },\n            'seek',\n        );\n\n        // Current time invert\n        // Only if one time element is used for both currentTime and duration\n        if (this.player.config.toggleInvert && !is.element(this.player.elements.display.duration)) {\n            bind(this.player.elements.display.currentTime, 'click', () => {\n                // Do nothing if we're at the start\n                if (this.player.currentTime === 0) {\n                    return;\n                }\n\n                this.player.config.invertTime = !this.player.config.invertTime;\n\n                controls.timeUpdate.call(this.player);\n            });\n        }\n\n        // Volume\n        bind(\n            this.player.elements.inputs.volume,\n            inputEvent,\n            event => {\n                this.player.volume = event.target.value;\n            },\n            'volume',\n        );\n\n        // Polyfill for lower fill in <input type=\"range\"> for webkit\n        if (browser.isWebkit) {\n            Array.from(getElements.call(this.player, 'input[type=\"range\"]')).forEach(element => {\n                bind(element, 'input', event => controls.updateRangeFill.call(this.player, event.target));\n            });\n        }\n\n        // Seek tooltip\n        bind(this.player.elements.progress, 'mouseenter mouseleave mousemove', event =>\n            controls.updateSeekTooltip.call(this.player, event),\n        );\n\n        // Update controls.hover state (used for ui.toggleControls to avoid hiding when interacting)\n        bind(this.player.elements.controls, 'mouseenter mouseleave', event => {\n            this.player.elements.controls.hover = !this.player.touch && event.type === 'mouseenter';\n        });\n\n        // Update controls.pressed state (used for ui.toggleControls to avoid hiding when interacting)\n        bind(this.player.elements.controls, 'mousedown mouseup touchstart touchend touchcancel', event => {\n            this.player.elements.controls.pressed = ['mousedown', 'touchstart'].includes(event.type);\n        });\n\n        // Focus in/out on controls\n        bind(this.player.elements.controls, 'focusin focusout', event => {\n            const { config, elements, timers } = this.player;\n\n            // Skip transition to prevent focus from scrolling the parent element\n            toggleClass(elements.controls, config.classNames.noTransition, event.type === 'focusin');\n\n            // Toggle\n            ui.toggleControls.call(this.player, event.type === 'focusin');\n\n            // If focusin, hide again after delay\n            if (event.type === 'focusin') {\n                // Restore transition\n                setTimeout(() => {\n                    toggleClass(elements.controls, config.classNames.noTransition, false);\n                }, 0);\n\n                // Delay a little more for keyboard users\n                const delay = this.touch ? 3000 : 4000;\n\n                // Clear timer\n                clearTimeout(timers.controls);\n                // Hide\n                timers.controls = setTimeout(() => ui.toggleControls.call(this.player, false), delay);\n            }\n        });\n\n        // Mouse wheel for volume\n        bind(\n            this.player.elements.inputs.volume,\n            'wheel',\n            event => {\n                // Detect \"natural\" scroll - suppored on OS X Safari only\n                // Other browsers on OS X will be inverted until support improves\n                const inverted = event.webkitDirectionInvertedFromDevice;\n\n                // Get delta from event. Invert if `inverted` is true\n                const [x, y] = [event.deltaX, -event.deltaY].map(value => (inverted ? -value : value));\n\n                // Using the biggest delta, normalize to 1 or -1 (or 0 if no delta)\n                const direction = Math.sign(Math.abs(x) > Math.abs(y) ? x : y);\n\n                // Change the volume by 2%\n                this.player.increaseVolume(direction / 50);\n\n                // Don't break page scrolling at max and min\n                const { volume } = this.player.media;\n                if ((direction === 1 && volume < 1) || (direction === -1 && volume > 0)) {\n                    event.preventDefault();\n                }\n            },\n            'volume',\n            false,\n        );\n    }\n}\n\nexport default Listeners;\n","import { setAttributes, toggleClass } from './utils/elements';\n\nconst logo = {\n    setup() {\n        // add custom logo\n        if (this.config.logo && this.config.logo.url) {\n            // build logo container\n            const logoContainer = document.createElement('div');\n            toggleClass(logoContainer, this.config.classNames.logo, true);\n\n            // image put into logo container if link not present\n            let imageContainer = logoContainer;\n\n            if (this.config.logo.link) {\n                // if logo.link setup, put image into a\n                const linkElement = document.createElement('a');\n                setAttributes(linkElement, {\n                    href: this.config.logo.link,\n                });\n                logoContainer.appendChild(linkElement);\n                imageContainer = linkElement;\n            }\n\n            // build logo image\n            const logoElement = document.createElement('img');\n            setAttributes(logoElement, {\n                src: this.config.logo.url,\n            });\n            imageContainer.appendChild(logoElement);\n            this.elements.container.appendChild(logoContainer);\n        }\n    },\n};\n\nexport default logo;\n","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.loadjs = factory();\n  }\n}(this, function() {\n/**\n * Global dependencies.\n * @global {Object} document - DOM\n */\n\nvar devnull = function() {},\n    bundleIdCache = {},\n    bundleResultCache = {},\n    bundleCallbackQueue = {};\n\n\n/**\n * Subscribe to bundle load event.\n * @param {string[]} bundleIds - Bundle ids\n * @param {Function} callbackFn - The callback function\n */\nfunction subscribe(bundleIds, callbackFn) {\n  // listify\n  bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n\n  var depsNotFound = [],\n      i = bundleIds.length,\n      numWaiting = i,\n      fn,\n      bundleId,\n      r,\n      q;\n\n  // define callback function\n  fn = function (bundleId, pathsNotFound) {\n    if (pathsNotFound.length) depsNotFound.push(bundleId);\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(depsNotFound);\n  };\n\n  // register callback\n  while (i--) {\n    bundleId = bundleIds[i];\n\n    // execute callback if in result cache\n    r = bundleResultCache[bundleId];\n    if (r) {\n      fn(bundleId, r);\n      continue;\n    }\n\n    // add to callback queue\n    q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n    q.push(fn);\n  }\n}\n\n\n/**\n * Publish bundle load event.\n * @param {string} bundleId - Bundle id\n * @param {string[]} pathsNotFound - List of files not found\n */\nfunction publish(bundleId, pathsNotFound) {\n  // exit if id isn't defined\n  if (!bundleId) return;\n\n  var q = bundleCallbackQueue[bundleId];\n\n  // cache result\n  bundleResultCache[bundleId] = pathsNotFound;\n\n  // exit if queue is empty\n  if (!q) return;\n\n  // empty callback queue\n  while (q.length) {\n    q[0](bundleId, pathsNotFound);\n    q.splice(0, 1);\n  }\n}\n\n\n/**\n * Execute callbacks.\n * @param {Object or Function} args - The callback args\n * @param {string[]} depsNotFound - List of dependencies not found\n */\nfunction executeCallbacks(args, depsNotFound) {\n  // accept function as argument\n  if (args.call) args = {success: args};\n\n  // success and error callbacks\n  if (depsNotFound.length) (args.error || devnull)(depsNotFound);\n  else (args.success || devnull)(args);\n}\n\n\n/**\n * Load individual file.\n * @param {string} path - The file path\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFile(path, callbackFn, args, numTries) {\n  var doc = document,\n      async = args.async,\n      maxTries = (args.numRetries || 0) + 1,\n      beforeCallbackFn = args.before || devnull,\n      pathStripped = path.replace(/^(css|img)!/, ''),\n      isCss,\n      e;\n\n  numTries = numTries || 0;\n\n  if (/(^css!|\\.css$)/.test(path)) {\n    isCss = true;\n\n    // css\n    e = doc.createElement('link');\n    e.rel = 'stylesheet';\n    e.href = pathStripped; //.replace(/^css!/, '');  // remove \"css!\" prefix\n  } else if (/(^img!|\\.(png|gif|jpg|svg)$)/.test(path)) {\n    // image\n    e = doc.createElement('img');\n    e.src = pathStripped;    \n  } else {\n    // javascript\n    e = doc.createElement('script');\n    e.src = path;\n    e.async = async === undefined ? true : async;\n  }\n\n  e.onload = e.onerror = e.onbeforeload = function (ev) {\n    var result = ev.type[0];\n\n    // Note: The following code isolates IE using `hideFocus` and treats empty\n    // stylesheets as failures to get around lack of onerror support\n    if (isCss && 'hideFocus' in e) {\n      try {\n        if (!e.sheet.cssText.length) result = 'e';\n      } catch (x) {\n        // sheets objects created from load errors don't allow access to\n        // `cssText`\n        result = 'e';\n      }\n    }\n\n    // handle retries in case of load failure\n    if (result == 'e') {\n      // increment counter\n      numTries += 1;\n\n      // exit function and try again\n      if (numTries < maxTries) {\n        return loadFile(path, callbackFn, args, numTries);\n      }\n    }\n\n    // execute callback\n    callbackFn(path, result, ev.defaultPrevented);\n  };\n\n  // add to document (unless callback returns `false`)\n  if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n}\n\n\n/**\n * Load multiple files.\n * @param {string[]} paths - The file paths\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFiles(paths, callbackFn, args) {\n  // listify paths\n  paths = paths.push ? paths : [paths];\n\n  var numWaiting = paths.length,\n      x = numWaiting,\n      pathsNotFound = [],\n      fn,\n      i;\n\n  // define callback function\n  fn = function(path, result, defaultPrevented) {\n    // handle error\n    if (result == 'e') pathsNotFound.push(path);\n\n    // handle beforeload event. If defaultPrevented then that means the load\n    // will be blocked (ex. Ghostery/ABP on Safari)\n    if (result == 'b') {\n      if (defaultPrevented) pathsNotFound.push(path);\n      else return;\n    }\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(pathsNotFound);\n  };\n\n  // load scripts\n  for (i=0; i < x; i++) loadFile(paths[i], fn, args);\n}\n\n\n/**\n * Initiate script load and register bundle.\n * @param {(string|string[])} paths - The file paths\n * @param {(string|Function)} [arg1] - The bundleId or success callback\n * @param {Function} [arg2] - The success or error callback\n * @param {Function} [arg3] - The error callback\n */\nfunction loadjs(paths, arg1, arg2) {\n  var bundleId,\n      args;\n\n  // bundleId (if string)\n  if (arg1 && arg1.trim) bundleId = arg1;\n\n  // args (default is {})\n  args = (bundleId ? arg2 : arg1) || {};\n\n  // throw error if bundle is already defined\n  if (bundleId) {\n    if (bundleId in bundleIdCache) {\n      throw \"LoadJS\";\n    } else {\n      bundleIdCache[bundleId] = true;\n    }\n  }\n\n  // load scripts\n  loadFiles(paths, function (pathsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, pathsNotFound);\n\n    // publish bundle load event\n    publish(bundleId, pathsNotFound);\n  }, args);\n}\n\n\n/**\n * Execute callbacks when dependencies have been satisfied.\n * @param {(string|string[])} deps - List of bundle ids\n * @param {Object} args - success/error arguments\n */\nloadjs.ready = function ready(deps, args) {\n  // subscribe to bundle load event\n  subscribe(deps, function (depsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, depsNotFound);\n  });\n\n  return loadjs;\n};\n\n\n/**\n * Manually satisfy bundle dependencies.\n * @param {string} bundleId - The bundle id\n */\nloadjs.done = function done(bundleId) {\n  publish(bundleId, []);\n};\n\n\n/**\n * Reset loadjs dependencies statuses\n */\nloadjs.reset = function reset() {\n  bundleIdCache = {};\n  bundleResultCache = {};\n  bundleCallbackQueue = {};\n};\n\n\n/**\n * Determine if bundle has already been defined\n * @param String} bundleId - The bundle id\n */\nloadjs.isDefined = function isDefined(bundleId) {\n  return bundleId in bundleIdCache;\n};\n\n\n// export\nreturn loadjs;\n\n}));\n","// ==========================================================================\n// Load an external script\n// ==========================================================================\n\nimport loadjs from 'loadjs';\n\nexport default function loadScript(url) {\n    return new Promise((resolve, reject) => {\n        loadjs(url, {\n            success: resolve,\n            error: reject,\n        });\n    });\n}\n","// ==========================================================================\n// Vimeo plugin\n// ==========================================================================\n\nimport captions from '../captions';\nimport controls from '../controls';\nimport ui from '../ui';\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport loadScript from '../utils/loadScript';\nimport { format, stripHTML } from '../utils/strings';\nimport { buildUrlParams } from '../utils/urls';\n\n// Parse Vimeo ID from URL\nfunction parseId(url) {\n    if (is.empty(url)) {\n        return null;\n    }\n\n    if (is.number(Number(url))) {\n        return url;\n    }\n\n    const regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Get aspect ratio for dimensions\nfunction getAspectRatio(width, height) {\n    const getRatio = (w, h) => (h === 0 ? w : getRatio(h, w % h));\n    const ratio = getRatio(width, height);\n    return `${width / ratio}:${height / ratio}`;\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n        this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst vimeo = {\n    setup() {\n        // Add embed class for responsive\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set intial ratio\n        vimeo.setAspectRatio.call(this);\n\n        // Load the API if not already\n        if (!is.object(window.Vimeo)) {\n            loadScript(this.config.urls.vimeo.sdk)\n                .then(() => {\n                    vimeo.ready.call(this);\n                })\n                .catch(error => {\n                    this.debug.warn('Vimeo API failed to load', error);\n                });\n        } else {\n            vimeo.ready.call(this);\n        }\n    },\n\n    // Set aspect ratio\n    // For Vimeo we have an extra 300% height <div> to hide the standard controls and UI\n    setAspectRatio(input) {\n        const [x, y] = (is.string(input) ? input : this.config.ratio).split(':');\n        const padding = 100 / x * y;\n        this.elements.wrapper.style.paddingBottom = `${padding}%`;\n\n        if (this.supported.ui) {\n            const height = 240;\n            const offset = (height - padding) / (height / 50);\n\n            this.media.style.transform = `translateY(-${offset}%)`;\n        }\n    },\n\n    // API Ready\n    ready() {\n        const player = this;\n\n        // Get Vimeo params for the iframe\n        const options = {\n            loop: player.config.loop.active,\n            autoplay: player.autoplay,\n            // muted: player.muted,\n            byline: false,\n            portrait: false,\n            title: false,\n            speed: true,\n            transparent: 0,\n            gesture: 'media',\n            playsinline: !this.config.fullscreen.iosNative,\n        };\n        const params = buildUrlParams(options);\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (is.empty(source)) {\n            source = player.media.getAttribute(player.config.attributes.embed.id);\n        }\n\n        const id = parseId(source);\n\n        // Build an iframe\n        const iframe = createElement('iframe');\n        const src = format(player.config.urls.vimeo.iframe, id, params);\n        iframe.setAttribute('src', src);\n        iframe.setAttribute('allowfullscreen', '');\n        iframe.setAttribute('allowtransparency', '');\n        iframe.setAttribute('allow', 'autoplay');\n\n        // Get poster, if already set\n        const { poster } = player;\n\n        // Inject the package\n        const wrapper = createElement('div', { poster, class: player.config.classNames.embedContainer });\n        wrapper.appendChild(iframe);\n        player.media = replaceElement(wrapper, player.media);\n\n        // Get poster image\n        fetch(format(player.config.urls.vimeo.api, id), 'json').then(response => {\n            if (is.empty(response)) {\n                return;\n            }\n\n            // Get the URL for thumbnail\n            const url = new URL(response[0].thumbnail_large);\n\n            // Get original image\n            url.pathname = `${url.pathname.split('_')[0]}.jpg`;\n\n            // Set and show poster\n            ui.setPoster.call(player, url.href).catch(() => {});\n        });\n\n        // Setup instance\n        // https://github.com/vimeo/player.js\n        player.embed = new window.Vimeo.Player(iframe, {\n            autopause: player.config.autopause,\n            muted: player.muted,\n        });\n\n        player.media.paused = true;\n        player.media.currentTime = 0;\n\n        // Disable native text track rendering\n        if (player.supported.ui) {\n            player.embed.disableTextTrack();\n        }\n\n        // Create a faux HTML5 API using the Vimeo API\n        player.media.play = () => {\n            assurePlaybackState.call(player, true);\n            return player.embed.play();\n        };\n\n        player.media.pause = () => {\n            assurePlaybackState.call(player, false);\n            return player.embed.pause();\n        };\n\n        player.media.stop = () => {\n            player.pause();\n            player.currentTime = 0;\n        };\n\n        // Seeking\n        let { currentTime } = player.media;\n        Object.defineProperty(player.media, 'currentTime', {\n            get() {\n                return currentTime;\n            },\n            set(time) {\n                // Vimeo will automatically play on seek if the video hasn't been played before\n\n                // Get current paused state and volume etc\n                const { embed, media, paused, volume } = player;\n                const restorePause = paused && !embed.hasPlayed;\n\n                // Set seeking state and trigger event\n                media.seeking = true;\n                triggerEvent.call(player, media, 'seeking');\n\n                // If paused, mute until seek is complete\n                Promise.resolve(restorePause && embed.setVolume(0))\n                    // Seek\n                    .then(() => embed.setCurrentTime(time))\n                    // Restore paused\n                    .then(() => restorePause && embed.pause())\n                    // Restore volume\n                    .then(() => restorePause && embed.setVolume(volume))\n                    .catch(() => {\n                        // Do nothing\n                    });\n            },\n        });\n\n        // Playback speed\n        let speed = player.config.speed.selected;\n        Object.defineProperty(player.media, 'playbackRate', {\n            get() {\n                return speed;\n            },\n            set(input) {\n                player.embed\n                    .setPlaybackRate(input)\n                    .then(() => {\n                        speed = input;\n                        triggerEvent.call(player, player.media, 'ratechange');\n                    })\n                    .catch(error => {\n                        // Hide menu item (and menu if empty)\n                        if (error.name === 'Error') {\n                            controls.setSpeedMenu.call(player, []);\n                        }\n                    });\n            },\n        });\n\n        // Volume\n        let { volume } = player.config;\n        Object.defineProperty(player.media, 'volume', {\n            get() {\n                return volume;\n            },\n            set(input) {\n                player.embed.setVolume(input).then(() => {\n                    volume = input;\n                    triggerEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Muted\n        let { muted } = player.config;\n        Object.defineProperty(player.media, 'muted', {\n            get() {\n                return muted;\n            },\n            set(input) {\n                const toggle = is.boolean(input) ? input : false;\n\n                player.embed.setVolume(toggle ? 0 : player.config.volume).then(() => {\n                    muted = toggle;\n                    triggerEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Loop\n        let { loop } = player.config;\n        Object.defineProperty(player.media, 'loop', {\n            get() {\n                return loop;\n            },\n            set(input) {\n                const toggle = is.boolean(input) ? input : player.config.loop.active;\n\n                player.embed.setLoop(toggle).then(() => {\n                    loop = toggle;\n                });\n            },\n        });\n\n        // Source\n        let currentSrc;\n        player.embed\n            .getVideoUrl()\n            .then(value => {\n                currentSrc = value;\n            })\n            .catch(error => {\n                this.debug.warn(error);\n            });\n\n        Object.defineProperty(player.media, 'currentSrc', {\n            get() {\n                return currentSrc;\n            },\n        });\n\n        // Ended\n        Object.defineProperty(player.media, 'ended', {\n            get() {\n                return player.currentTime === player.duration;\n            },\n        });\n\n        // Set aspect ratio based on video size\n        Promise.all([player.embed.getVideoWidth(), player.embed.getVideoHeight()]).then(dimensions => {\n            const ratio = getAspectRatio(dimensions[0], dimensions[1]);\n            vimeo.setAspectRatio.call(this, ratio);\n        });\n\n        // Set autopause\n        player.embed.setAutopause(player.config.autopause).then(state => {\n            player.config.autopause = state;\n        });\n\n        // Get title\n        player.embed.getVideoTitle().then(title => {\n            player.config.title = title;\n            ui.setTitle.call(this);\n        });\n\n        // Get current time\n        player.embed.getCurrentTime().then(value => {\n            currentTime = value;\n            triggerEvent.call(player, player.media, 'timeupdate');\n        });\n\n        // Get duration\n        player.embed.getDuration().then(value => {\n            player.media.duration = value;\n            triggerEvent.call(player, player.media, 'durationchange');\n        });\n\n        // Get captions\n        player.embed.getTextTracks().then(tracks => {\n            player.media.textTracks = tracks;\n            captions.setup.call(player);\n        });\n\n        player.embed.on('cuechange', ({ cues = [] }) => {\n            const strippedCues = cues.map(cue => stripHTML(cue.text));\n            captions.updateCues.call(player, strippedCues);\n        });\n\n        player.embed.on('loaded', () => {\n            // Assure state and events are updated on autoplay\n            player.embed.getPaused().then(paused => {\n                assurePlaybackState.call(player, !paused);\n                if (!paused) {\n                    triggerEvent.call(player, player.media, 'playing');\n                }\n            });\n\n            if (is.element(player.embed.element) && player.supported.ui) {\n                const frame = player.embed.element;\n\n                // Fix keyboard focus issues\n                // https://github.com/sampotts/plyr/issues/317\n                frame.setAttribute('tabindex', -1);\n            }\n        });\n\n        player.embed.on('play', () => {\n            assurePlaybackState.call(player, true);\n            triggerEvent.call(player, player.media, 'playing');\n        });\n\n        player.embed.on('pause', () => {\n            assurePlaybackState.call(player, false);\n        });\n\n        player.embed.on('timeupdate', data => {\n            player.media.seeking = false;\n            currentTime = data.seconds;\n            triggerEvent.call(player, player.media, 'timeupdate');\n        });\n\n        player.embed.on('progress', data => {\n            player.media.buffered = data.percent;\n            triggerEvent.call(player, player.media, 'progress');\n\n            // Check all loaded\n            if (parseInt(data.percent, 10) === 1) {\n                triggerEvent.call(player, player.media, 'canplaythrough');\n            }\n\n            // Get duration as if we do it before load, it gives an incorrect value\n            // https://github.com/sampotts/plyr/issues/891\n            player.embed.getDuration().then(value => {\n                if (value !== player.media.duration) {\n                    player.media.duration = value;\n                    triggerEvent.call(player, player.media, 'durationchange');\n                }\n            });\n        });\n\n        player.embed.on('seeked', () => {\n            player.media.seeking = false;\n            triggerEvent.call(player, player.media, 'seeked');\n        });\n\n        player.embed.on('ended', () => {\n            player.media.paused = true;\n            triggerEvent.call(player, player.media, 'ended');\n        });\n\n        player.embed.on('error', detail => {\n            player.media.error = detail;\n            triggerEvent.call(player, player.media, 'error');\n        });\n\n        // Rebuild UI\n        setTimeout(() => ui.build.call(player), 0);\n    },\n};\n\nexport default vimeo;\n","// ==========================================================================\n// YouTube plugin\n// ==========================================================================\n\nimport controls from '../controls';\nimport ui from '../ui';\nimport { dedupe } from '../utils/arrays';\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport loadImage from '../utils/loadImage';\nimport loadScript from '../utils/loadScript';\nimport { format, generateId } from '../utils/strings';\n\n// Parse YouTube ID from URL\nfunction parseId(url) {\n    if (is.empty(url)) {\n        return null;\n    }\n\n    const regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Standardise YouTube quality unit\nfunction mapQualityUnit(input) {\n    const qualities = {\n        hd2160: 2160,\n        hd1440: 1440,\n        hd1080: 1080,\n        hd720: 720,\n        large: 480,\n        medium: 360,\n        small: 240,\n        tiny: 144,\n    };\n\n    const entry = Object.entries(qualities).find(entry => entry.includes(input));\n\n    if (entry) {\n        // Get the match corresponding to the input\n        return entry.find(value => value !== input);\n    }\n\n    return 'default';\n}\n\nfunction mapQualityUnits(levels) {\n    if (is.empty(levels)) {\n        return levels;\n    }\n\n    return dedupe(levels.map(level => mapQualityUnit(level)));\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n        this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst youtube = {\n    setup() {\n        // Add embed class for responsive\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set aspect ratio\n        youtube.setAspectRatio.call(this);\n\n        // Setup API\n        if (is.object(window.YT) && is.function(window.YT.Player)) {\n            youtube.ready.call(this);\n        } else {\n            // Load the API\n            loadScript(this.config.urls.youtube.sdk).catch(error => {\n                this.debug.warn('YouTube API failed to load', error);\n            });\n\n            // Setup callback for the API\n            // YouTube has it's own system of course...\n            window.onYouTubeReadyCallbacks = window.onYouTubeReadyCallbacks || [];\n\n            // Add to queue\n            window.onYouTubeReadyCallbacks.push(() => {\n                youtube.ready.call(this);\n            });\n\n            // Set callback to process queue\n            window.onYouTubeIframeAPIReady = () => {\n                window.onYouTubeReadyCallbacks.forEach(callback => {\n                    callback();\n                });\n            };\n        }\n    },\n\n    // Get the media title\n    getTitle(videoId) {\n        // Try via undocumented API method first\n        // This method disappears now and then though...\n        // https://github.com/sampotts/plyr/issues/709\n        if (is.function(this.embed.getVideoData)) {\n            const { title } = this.embed.getVideoData();\n\n            if (is.empty(title)) {\n                this.config.title = title;\n                ui.setTitle.call(this);\n                return;\n            }\n        }\n\n        // Or via Google API\n        const key = this.config.keys.google;\n        if (is.string(key) && !is.empty(key)) {\n            const url = format(this.config.urls.youtube.api, videoId, key);\n\n            fetch(url)\n                .then(result => {\n                    if (is.object(result)) {\n                        this.config.title = result.items[0].snippet.title;\n                        ui.setTitle.call(this);\n                    }\n                })\n                .catch(() => {});\n        }\n    },\n\n    // Set aspect ratio\n    setAspectRatio() {\n        const ratio = this.config.ratio.split(':');\n        this.elements.wrapper.style.paddingBottom = `${100 / ratio[0] * ratio[1]}%`;\n    },\n\n    // API ready\n    ready() {\n        const player = this;\n\n        // Ignore already setup (race condition)\n        const currentId = player.media.getAttribute('id');\n        if (!is.empty(currentId) && currentId.startsWith('youtube-')) {\n            return;\n        }\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (is.empty(source)) {\n            source = player.media.getAttribute(this.config.attributes.embed.id);\n        }\n\n        // Replace the <iframe> with a <div> due to YouTube API issues\n        const videoId = parseId(source);\n        const id = generateId(player.provider);\n\n        // Get poster, if already set\n        const { poster } = player;\n\n        // Replace media element\n        const container = createElement('div', { id, poster });\n        player.media = replaceElement(container, player.media);\n\n        // Id to poster wrapper\n        const posterSrc = format => `https://img.youtube.com/vi/${videoId}/${format}default.jpg`;\n\n        // Check thumbnail images in order of quality, but reject fallback thumbnails (120px wide)\n        loadImage(posterSrc('maxres'), 121) // Higest quality and unpadded\n            .catch(() => loadImage(posterSrc('sd'), 121)) // 480p padded 4:3\n            .catch(() => loadImage(posterSrc('hq'))) // 360p padded 4:3. Always exists\n            .then(image => ui.setPoster.call(player, image.src))\n            .then(posterSrc => {\n                // If the image is padded, use background-size \"cover\" instead (like youtube does too with their posters)\n                if (!posterSrc.includes('maxres')) {\n                    player.elements.poster.style.backgroundSize = 'cover';\n                }\n            })\n            .catch(() => {});\n\n        // Setup instance\n        // https://developers.google.com/youtube/iframe_api_reference\n        player.embed = new window.YT.Player(id, {\n            videoId,\n            playerVars: {\n                autoplay: player.config.autoplay ? 1 : 0, // Autoplay\n                hl: player.config.hl, // iframe interface language\n                controls: player.supported.ui ? 0 : 1, // Only show controls if not fully supported\n                rel: 0, // No related vids\n                showinfo: 0, // Hide info\n                iv_load_policy: 3, // Hide annotations\n                modestbranding: 1, // Hide logos as much as possible (they still show one in the corner when paused)\n                disablekb: 1, // Disable keyboard as we handle it\n                playsinline: 1, // Allow iOS inline playback\n\n                // Tracking for stats\n                // origin: window ? `${window.location.protocol}//${window.location.host}` : null,\n                widget_referrer: window ? window.location.href : null,\n\n                // Captions are flaky on YouTube\n                cc_load_policy: player.captions.active ? 1 : 0,\n                cc_lang_pref: player.config.captions.language,\n            },\n            events: {\n                onError(event) {\n                    // YouTube may fire onError twice, so only handle it once\n                    if (!player.media.error) {\n                        const code = event.data;\n                        // Messages copied from https://developers.google.com/youtube/iframe_api_reference#onError\n                        const message =\n                            {\n                                2: 'The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.',\n                                5: 'The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.',\n                                100: 'The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.',\n                                101: 'The owner of the requested video does not allow it to be played in embedded players.',\n                                150: 'The owner of the requested video does not allow it to be played in embedded players.',\n                            }[code] || 'An unknown error occured';\n\n                        player.media.error = { code, message };\n\n                        triggerEvent.call(player, player.media, 'error');\n                    }\n                },\n                onPlaybackQualityChange() {\n                    triggerEvent.call(player, player.media, 'qualitychange', false, {\n                        quality: player.media.quality,\n                    });\n                },\n                onPlaybackRateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get current speed\n                    player.media.playbackRate = instance.getPlaybackRate();\n\n                    triggerEvent.call(player, player.media, 'ratechange');\n                },\n                onReady(event) {\n                    // Bail if onReady has already been called. See issue #1108\n                    if (is.function(player.media.play)) {\n                        return;\n                    }\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get the title\n                    youtube.getTitle.call(player, videoId);\n\n                    // Create a faux HTML5 API using the YouTube API\n                    player.media.play = () => {\n                        assurePlaybackState.call(player, true);\n                        instance.playVideo();\n                    };\n\n                    player.media.pause = () => {\n                        assurePlaybackState.call(player, false);\n                        instance.pauseVideo();\n                    };\n\n                    player.media.stop = () => {\n                        instance.stopVideo();\n                    };\n\n                    player.media.duration = instance.getDuration();\n                    player.media.paused = true;\n\n                    // Seeking\n                    player.media.currentTime = 0;\n                    Object.defineProperty(player.media, 'currentTime', {\n                        get() {\n                            return Number(instance.getCurrentTime());\n                        },\n                        set(time) {\n                            // If paused and never played, mute audio preventively (YouTube starts playing on seek if the video hasn't been played yet).\n                            if (player.paused && !player.embed.hasPlayed) {\n                                player.embed.mute();\n                            }\n\n                            // Set seeking state and trigger event\n                            player.media.seeking = true;\n                            triggerEvent.call(player, player.media, 'seeking');\n\n                            // Seek after events sent\n                            instance.seekTo(time);\n                        },\n                    });\n\n                    // Playback speed\n                    Object.defineProperty(player.media, 'playbackRate', {\n                        get() {\n                            return instance.getPlaybackRate();\n                        },\n                        set(input) {\n                            instance.setPlaybackRate(input);\n                        },\n                    });\n\n                    // Quality\n                    Object.defineProperty(player.media, 'quality', {\n                        get() {\n                            return mapQualityUnit(instance.getPlaybackQuality());\n                        },\n                        set(input) {\n                            instance.setPlaybackQuality(mapQualityUnit(input));\n                        },\n                    });\n\n                    // Volume\n                    let { volume } = player.config;\n                    Object.defineProperty(player.media, 'volume', {\n                        get() {\n                            return volume;\n                        },\n                        set(input) {\n                            volume = input;\n                            instance.setVolume(volume * 100);\n                            triggerEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Muted\n                    let { muted } = player.config;\n                    Object.defineProperty(player.media, 'muted', {\n                        get() {\n                            return muted;\n                        },\n                        set(input) {\n                            const toggle = is.boolean(input) ? input : muted;\n                            muted = toggle;\n                            instance[toggle ? 'mute' : 'unMute']();\n                            triggerEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Source\n                    Object.defineProperty(player.media, 'currentSrc', {\n                        get() {\n                            return instance.getVideoUrl();\n                        },\n                    });\n\n                    // Ended\n                    Object.defineProperty(player.media, 'ended', {\n                        get() {\n                            return player.currentTime === player.duration;\n                        },\n                    });\n\n                    // Get available speeds\n                    player.options.speed = instance.getAvailablePlaybackRates();\n\n                    // Set the tabindex to avoid focus entering iframe\n                    if (player.supported.ui) {\n                        player.media.setAttribute('tabindex', -1);\n                    }\n\n                    triggerEvent.call(player, player.media, 'timeupdate');\n                    triggerEvent.call(player, player.media, 'durationchange');\n\n                    // Reset timer\n                    clearInterval(player.timers.buffering);\n\n                    // Setup buffering\n                    player.timers.buffering = setInterval(() => {\n                        // Get loaded % from YouTube\n                        player.media.buffered = instance.getVideoLoadedFraction();\n\n                        // Trigger progress only when we actually buffer something\n                        if (player.media.lastBuffered === null || player.media.lastBuffered < player.media.buffered) {\n                            triggerEvent.call(player, player.media, 'progress');\n                        }\n\n                        // Set last buffer point\n                        player.media.lastBuffered = player.media.buffered;\n\n                        // Bail if we're at 100%\n                        if (player.media.buffered === 1) {\n                            clearInterval(player.timers.buffering);\n\n                            // Trigger event\n                            triggerEvent.call(player, player.media, 'canplaythrough');\n                        }\n                    }, 200);\n\n                    // Rebuild UI\n                    setTimeout(() => ui.build.call(player), 50);\n                },\n                onStateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Reset timer\n                    clearInterval(player.timers.playing);\n\n                    const seeked = player.media.seeking && [1, 2].includes(event.data);\n\n                    if (seeked) {\n                        // Unset seeking and fire seeked event\n                        player.media.seeking = false;\n                        triggerEvent.call(player, player.media, 'seeked');\n                    }\n\n                    // Handle events\n                    // -1   Unstarted\n                    // 0    Ended\n                    // 1    Playing\n                    // 2    Paused\n                    // 3    Buffering\n                    // 5    Video cued\n                    switch (event.data) {\n                        case -1:\n                            // Update scrubber\n                            triggerEvent.call(player, player.media, 'timeupdate');\n\n                            // Get loaded % from YouTube\n                            player.media.buffered = instance.getVideoLoadedFraction();\n                            triggerEvent.call(player, player.media, 'progress');\n\n                            break;\n\n                        case 0:\n                            assurePlaybackState.call(player, false);\n\n                            // YouTube doesn't support loop for a single video, so mimick it.\n                            if (player.media.loop) {\n                                // YouTube needs a call to `stopVideo` before playing again\n                                instance.stopVideo();\n                                instance.playVideo();\n                            } else {\n                                triggerEvent.call(player, player.media, 'ended');\n                            }\n\n                            break;\n\n                        case 1:\n                            // Restore paused state (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (player.media.paused && !player.embed.hasPlayed) {\n                                player.media.pause();\n                            } else {\n                                assurePlaybackState.call(player, true);\n\n                                triggerEvent.call(player, player.media, 'playing');\n\n                                // Poll to get playback progress\n                                player.timers.playing = setInterval(() => {\n                                    triggerEvent.call(player, player.media, 'timeupdate');\n                                }, 50);\n\n                                // Check duration again due to YouTube bug\n                                // https://github.com/sampotts/plyr/issues/374\n                                // https://code.google.com/p/gdata-issues/issues/detail?id=8690\n                                if (player.media.duration !== instance.getDuration()) {\n                                    player.media.duration = instance.getDuration();\n                                    triggerEvent.call(player, player.media, 'durationchange');\n                                }\n\n                                // Get quality\n                                controls.setQualityMenu.call(\n                                    player,\n                                    mapQualityUnits(instance.getAvailableQualityLevels()),\n                                );\n                            }\n\n                            break;\n\n                        case 2:\n                            // Restore audio (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (!player.muted) {\n                                player.embed.unMute();\n                            }\n                            assurePlaybackState.call(player, false);\n\n                            break;\n\n                        default:\n                            break;\n                    }\n\n                    triggerEvent.call(player, player.elements.container, 'statechange', false, {\n                        code: event.data,\n                    });\n                },\n            },\n        });\n    },\n};\n\nexport default youtube;\n","// ==========================================================================\n// Plyr Media\n// ==========================================================================\n\nimport html5 from './html5';\nimport vimeo from './plugins/vimeo';\nimport youtube from './plugins/youtube';\nimport { createElement, toggleClass, wrap } from './utils/elements';\n\nconst media = {\n    // Setup media\n    setup() {\n        // If there's no media, bail\n        if (!this.media) {\n            this.debug.warn('No media element found!');\n            return;\n        }\n\n        // Add type class\n        toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', this.type), true);\n\n        // Add provider class\n        toggleClass(this.elements.container, this.config.classNames.provider.replace('{0}', this.provider), true);\n\n        // Add video class for embeds\n        // This will require changes if audio embeds are added\n        if (this.isEmbed) {\n            toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', 'video'), true);\n        }\n\n        // Inject the player wrapper\n        if (this.isVideo) {\n            // Create the wrapper div\n            this.elements.wrapper = createElement('div', {\n                class: this.config.classNames.video,\n            });\n\n            // Wrap the video in a container\n            wrap(this.media, this.elements.wrapper);\n\n            // Faux poster container\n            this.elements.poster = createElement('div', {\n                class: this.config.classNames.poster,\n            });\n\n            this.elements.wrapper.appendChild(this.elements.poster);\n        }\n\n        if (this.isHTML5) {\n            html5.extend.call(this);\n        } else if (this.isYouTube) {\n            youtube.setup.call(this);\n        } else if (this.isVimeo) {\n            vimeo.setup.call(this);\n        }\n    },\n};\n\nexport default media;\n","// ==========================================================================\n// Advertisement plugin using Google IMA HTML5 SDK\n// Create an account with our ad partner, vi here:\n// https://www.vi.ai/publisher-video-monetization/\n// ==========================================================================\n\n/* global google */\n\nimport i18n from '../i18n';\nimport { createElement } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport is from '../utils/is';\nimport loadScript from '../utils/loadScript';\nimport { formatTime } from '../utils/time';\nimport { buildUrlParams } from '../utils/urls';\n\nclass Ads {\n    /**\n     * Ads constructor.\n     * @param {object} player\n     * @return {Ads}\n     */\n    constructor(player) {\n        this.player = player;\n        this.publisherId = player.config.ads.publisherId;\n        this.playing = false;\n        this.initialized = false;\n        this.elements = {\n            container: null,\n            displayContainer: null,\n        };\n        this.manager = null;\n        this.loader = null;\n        this.cuePoints = null;\n        this.events = {};\n        this.safetyTimer = null;\n        this.countdownTimer = null;\n\n        // Setup a promise to resolve when the IMA manager is ready\n        this.managerPromise = new Promise((resolve, reject) => {\n            // The ad is loaded and ready\n            this.on('loaded', resolve);\n\n            // Ads failed\n            this.on('error', reject);\n        });\n\n        this.load();\n    }\n\n    get enabled() {\n        return (\n            this.player.isHTML5 && this.player.isVideo && this.player.config.ads.enabled && !is.empty(this.publisherId)\n        );\n    }\n\n    /**\n     * Load the IMA SDK\n     */\n    load() {\n        if (this.enabled) {\n            // Check if the Google IMA3 SDK is loaded or load it ourselves\n            if (!is.object(window.google) || !is.object(window.google.ima)) {\n                loadScript(this.player.config.urls.googleIMA.sdk)\n                    .then(() => {\n                        this.ready();\n                    })\n                    .catch(() => {\n                        // Script failed to load or is blocked\n                        this.trigger('error', new Error('Google IMA SDK failed to load'));\n                    });\n            } else {\n                this.ready();\n            }\n        }\n    }\n\n    /**\n     * Get the ads instance ready\n     */\n    ready() {\n        // Start ticking our safety timer. If the whole advertisement\n        // thing doesn't resolve within our set time; we bail\n        this.startSafetyTimer(12000, 'ready()');\n\n        // Clear the safety timer\n        this.managerPromise.then(() => {\n            this.clearSafetyTimer('onAdsManagerLoaded()');\n        });\n\n        // Set listeners on the Plyr instance\n        this.listeners();\n\n        // Setup the IMA SDK\n        this.setupIMA();\n    }\n\n    // Build the default tag URL\n    get tagUrl() {\n        const params = {\n            AV_PUBLISHERID: '58c25bb0073ef448b1087ad6',\n            AV_CHANNELID: '5a0458dc28a06145e4519d21',\n            AV_URL: window.location.hostname,\n            cb: Date.now(),\n            AV_WIDTH: 640,\n            AV_HEIGHT: 480,\n            AV_CDIM2: this.publisherId,\n        };\n\n        const base = 'https://go.aniview.com/api/adserver6/vast/';\n\n        return `${base}?${buildUrlParams(params)}`;\n    }\n\n    /**\n     * In order for the SDK to display ads for our video, we need to tell it where to put them,\n     * so here we define our ad container. This div is set up to render on top of the video player.\n     * Using the code below, we tell the SDK to render ads within that div. We also provide a\n     * handle to the content video player - the SDK will poll the current time of our player to\n     * properly place mid-rolls. After we create the ad display container, we initialize it. On\n     * mobile devices, this initialization is done as the result of a user action.\n     */\n    setupIMA() {\n        // Create the container for our advertisements\n        this.elements.container = createElement('div', {\n            class: this.player.config.classNames.ads,\n        });\n        this.player.elements.container.appendChild(this.elements.container);\n\n        // So we can run VPAID2\n        google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED);\n\n        // Set language\n        google.ima.settings.setLocale(this.player.config.ads.language);\n\n        // We assume the adContainer is the video container of the plyr element\n        // that will house the ads\n        this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container);\n\n        // Request video ads to be pre-loaded\n        this.requestAds();\n    }\n\n    /**\n     * Request advertisements\n     */\n    requestAds() {\n        const { container } = this.player.elements;\n\n        try {\n            // Create ads loader\n            this.loader = new google.ima.AdsLoader(this.elements.displayContainer);\n\n            // Listen and respond to ads loaded and error events\n            this.loader.addEventListener(\n                google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n                event => this.onAdsManagerLoaded(event),\n                false,\n            );\n            this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error), false);\n\n            // Request video ads\n            const request = new google.ima.AdsRequest();\n            request.adTagUrl = this.tagUrl;\n\n            // Specify the linear and nonlinear slot sizes. This helps the SDK\n            // to select the correct creative if multiple are returned\n            request.linearAdSlotWidth = container.offsetWidth;\n            request.linearAdSlotHeight = container.offsetHeight;\n            request.nonLinearAdSlotWidth = container.offsetWidth;\n            request.nonLinearAdSlotHeight = container.offsetHeight;\n\n            // We only overlay ads as we only support video.\n            request.forceNonLinearFullSlot = false;\n\n            // Mute based on current state\n            request.setAdWillPlayMuted(!this.player.muted);\n\n            this.loader.requestAds(request);\n        } catch (e) {\n            this.onAdError(e);\n        }\n    }\n\n    /**\n     * Update the ad countdown\n     * @param {boolean} start\n     */\n    pollCountdown(start = false) {\n        if (!start) {\n            clearInterval(this.countdownTimer);\n            this.elements.container.removeAttribute('data-badge-text');\n            return;\n        }\n\n        const update = () => {\n            const time = formatTime(Math.max(this.manager.getRemainingTime(), 0));\n            const label = `${i18n.get('advertisement', this.player.config)} - ${time}`;\n            this.elements.container.setAttribute('data-badge-text', label);\n        };\n\n        this.countdownTimer = setInterval(update, 100);\n    }\n\n    /**\n     * This method is called whenever the ads are ready inside the AdDisplayContainer\n     * @param {Event} adsManagerLoadedEvent\n     */\n    onAdsManagerLoaded(event) {\n        // Get the ads manager\n        const settings = new google.ima.AdsRenderingSettings();\n\n        // Tell the SDK to save and restore content video state on our behalf\n        settings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n        settings.enablePreloading = true;\n\n        // The SDK is polling currentTime on the contentPlayback. And needs a duration\n        // so it can determine when to start the mid- and post-roll\n        this.manager = event.getAdsManager(this.player, settings);\n\n        // Get the cue points for any mid-rolls by filtering out the pre- and post-roll\n        this.cuePoints = this.manager.getCuePoints();\n\n        // Add advertisement cue's within the time line if available\n        if (!is.empty(this.cuePoints)) {\n            this.cuePoints.forEach(cuePoint => {\n                if (cuePoint !== 0 && cuePoint !== -1 && cuePoint < this.player.duration) {\n                    const seekElement = this.player.elements.progress;\n\n                    if (is.element(seekElement)) {\n                        const cuePercentage = 100 / this.player.duration * cuePoint;\n                        const cue = createElement('span', {\n                            class: this.player.config.classNames.cues,\n                        });\n\n                        cue.style.left = `${cuePercentage.toString()}%`;\n                        seekElement.appendChild(cue);\n                    }\n                }\n            });\n        }\n\n        // Get skippable state\n        // TODO: Skip button\n        // this.player.debug.warn(this.manager.getAdSkippableState());\n\n        // Set volume to match player\n        this.manager.setVolume(this.player.volume);\n\n        // Add listeners to the required events\n        // Advertisement error events\n        this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error));\n\n        // Advertisement regular events\n        Object.keys(google.ima.AdEvent.Type).forEach(type => {\n            this.manager.addEventListener(google.ima.AdEvent.Type[type], event => this.onAdEvent(event));\n        });\n\n        // Resolve our adsManager\n        this.trigger('loaded');\n    }\n\n    /**\n     * This is where all the event handling takes place. Retrieve the ad from the event. Some\n     * events (e.g. ALL_ADS_COMPLETED) don't have the ad object associated\n     * https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdEvent.Type\n     * @param {Event} event\n     */\n    onAdEvent(event) {\n        const { container } = this.player.elements;\n\n        // Retrieve the ad from the event. Some events (e.g. ALL_ADS_COMPLETED)\n        // don't have ad object associated\n        const ad = event.getAd();\n\n        // Proxy event\n        const dispatchEvent = type => {\n            const event = `ads${type.replace(/_/g, '').toLowerCase()}`;\n            triggerEvent.call(this.player, this.player.media, event);\n        };\n\n        switch (event.type) {\n            case google.ima.AdEvent.Type.LOADED:\n                // This is the first event sent for an ad - it is possible to determine whether the\n                // ad is a video ad or an overlay\n                this.trigger('loaded');\n\n                // Bubble event\n                dispatchEvent(event.type);\n\n                // Start countdown\n                this.pollCountdown(true);\n\n                if (!ad.isLinear()) {\n                    // Position AdDisplayContainer correctly for overlay\n                    ad.width = container.offsetWidth;\n                    ad.height = container.offsetHeight;\n                }\n\n                // console.info('Ad type: ' + event.getAd().getAdPodInfo().getPodIndex());\n                // console.info('Ad time: ' + event.getAd().getAdPodInfo().getTimeOffset());\n                break;\n\n            case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n                // All ads for the current videos are done. We can now request new advertisements\n                // in case the video is re-played\n\n                // Fire event\n                dispatchEvent(event.type);\n\n                // TODO: Example for what happens when a next video in a playlist would be loaded.\n                // So here we load a new video when all ads are done.\n                // Then we load new ads within a new adsManager. When the video\n                // Is started - after - the ads are loaded, then we get ads.\n                // You can also easily test cancelling and reloading by running\n                // player.ads.cancel() and player.ads.play from the console I guess.\n                // this.player.source = {\n                //     type: 'video',\n                //     title: 'View From A Blue Moon',\n                //     sources: [{\n                //         src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.mp4', type:\n                // 'video/mp4', }], poster:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg', tracks:\n                // [ { kind: 'captions', label: 'English', srclang: 'en', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt',\n                // default: true, }, { kind: 'captions', label: 'French', srclang: 'fr', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt', }, ],\n                // };\n\n                // TODO: So there is still this thing where a video should only be allowed to start\n                // playing when the IMA SDK is ready or has failed\n\n                this.loadAds();\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:\n                // This event indicates the ad has started - the video player can adjust the UI,\n                // for example display a pause button and remaining time. Fired when content should\n                // be paused. This usually happens right before an ad is about to cover the content\n\n                dispatchEvent(event.type);\n\n                this.pauseContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:\n                // This event indicates the ad has finished - the video player can perform\n                // appropriate UI actions, such as removing the timer for remaining time detection.\n                // Fired when content should be resumed. This usually happens when an ad finishes\n                // or collapses\n\n                dispatchEvent(event.type);\n\n                this.pollCountdown();\n\n                this.resumeContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.STARTED:\n            case google.ima.AdEvent.Type.MIDPOINT:\n            case google.ima.AdEvent.Type.COMPLETE:\n            case google.ima.AdEvent.Type.IMPRESSION:\n            case google.ima.AdEvent.Type.CLICK:\n                dispatchEvent(event.type);\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    /**\n     * Any ad error handling comes through here\n     * @param {Event} event\n     */\n    onAdError(event) {\n        this.cancel();\n        this.player.debug.warn('Ads error', event);\n    }\n\n    /**\n     * Setup hooks for Plyr and window events. This ensures\n     * the mid- and post-roll launch at the correct time. And\n     * resize the advertisement when the player resizes\n     */\n    listeners() {\n        const { container } = this.player.elements;\n        let time;\n\n        // Add listeners to the required events\n        this.player.on('ended', () => {\n            this.loader.contentComplete();\n        });\n\n        this.player.on('seeking', () => {\n            time = this.player.currentTime;\n            return time;\n        });\n\n        this.player.on('seeked', () => {\n            const seekedTime = this.player.currentTime;\n\n            if (is.empty(this.cuePoints)) {\n                return;\n            }\n\n            this.cuePoints.forEach((cuePoint, index) => {\n                if (time < cuePoint && cuePoint < seekedTime) {\n                    this.manager.discardAdBreak();\n                    this.cuePoints.splice(index, 1);\n                }\n            });\n        });\n\n        // Listen to the resizing of the window. And resize ad accordingly\n        // TODO: eventually implement ResizeObserver\n        window.addEventListener('resize', () => {\n            if (this.manager) {\n                this.manager.resize(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n            }\n        });\n    }\n\n    /**\n     * Initialize the adsManager and start playing advertisements\n     */\n    play() {\n        const { container } = this.player.elements;\n\n        if (!this.managerPromise) {\n            this.resumeContent();\n        }\n\n        // Play the requested advertisement whenever the adsManager is ready\n        this.managerPromise\n            .then(() => {\n                // Initialize the container. Must be done via a user action on mobile devices\n                this.elements.displayContainer.initialize();\n\n                try {\n                    if (!this.initialized) {\n                        // Initialize the ads manager. Ad rules playlist will start at this time\n                        this.manager.init(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n\n                        // Call play to start showing the ad. Single video and overlay ads will\n                        // start at this time; the call will be ignored for ad rules\n                        this.manager.start();\n                    }\n\n                    this.initialized = true;\n                } catch (adError) {\n                    // An error may be thrown if there was a problem with the\n                    // VAST response\n                    this.onAdError(adError);\n                }\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Resume our video\n     */\n    resumeContent() {\n        // Hide the advertisement container\n        this.elements.container.style.zIndex = '';\n\n        // Ad is stopped\n        this.playing = false;\n\n        // Play our video\n        if (this.player.currentTime < this.player.duration) {\n            this.player.play();\n        }\n    }\n\n    /**\n     * Pause our video\n     */\n    pauseContent() {\n        // Show the advertisement container\n        this.elements.container.style.zIndex = 3;\n\n        // Ad is playing.\n        this.playing = true;\n\n        // Pause our video.\n        this.player.pause();\n    }\n\n    /**\n     * Destroy the adsManager so we can grab new ads after this. If we don't then we're not\n     * allowed to call new ads based on google policies, as they interpret this as an accidental\n     * video requests. https://developers.google.com/interactive-\n     * media-ads/docs/sdks/android/faq#8\n     */\n    cancel() {\n        // Pause our video\n        if (this.initialized) {\n            this.resumeContent();\n        }\n\n        // Tell our instance that we're done for now\n        this.trigger('error');\n\n        // Re-create our adsManager\n        this.loadAds();\n    }\n\n    /**\n     * Re-create our adsManager\n     */\n    loadAds() {\n        // Tell our adsManager to go bye bye\n        this.managerPromise\n            .then(() => {\n                // Destroy our adsManager\n                if (this.manager) {\n                    this.manager.destroy();\n                }\n\n                // Re-set our adsManager promises\n                this.managerPromise = new Promise(resolve => {\n                    this.on('loaded', resolve);\n                    this.player.debug.log(this.manager);\n                });\n\n                // Now request some new advertisements\n                this.requestAds();\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Handles callbacks after an ad event was invoked\n     * @param {string} event - Event type\n     */\n    trigger(event, ...args) {\n        const handlers = this.events[event];\n\n        if (is.array(handlers)) {\n            handlers.forEach(handler => {\n                if (is.function(handler)) {\n                    handler.apply(this, args);\n                }\n            });\n        }\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     * @return {Ads}\n     */\n    on(event, callback) {\n        if (!is.array(this.events[event])) {\n            this.events[event] = [];\n        }\n\n        this.events[event].push(callback);\n\n        return this;\n    }\n\n    /**\n     * Setup a safety timer for when the ad network doesn't respond for whatever reason.\n     * The advertisement has 12 seconds to get its things together. We stop this timer when the\n     * advertisement is playing, or when a user action is required to start, then we clear the\n     * timer on ad ready\n     * @param {number} time\n     * @param {string} from\n     */\n    startSafetyTimer(time, from) {\n        this.player.debug.log(`Safety timer invoked from: ${from}`);\n\n        this.safetyTimer = setTimeout(() => {\n            this.cancel();\n            this.clearSafetyTimer('startSafetyTimer()');\n        }, time);\n    }\n\n    /**\n     * Clear our safety timer(s)\n     * @param {string} from\n     */\n    clearSafetyTimer(from) {\n        if (!is.nullOrUndefined(this.safetyTimer)) {\n            this.player.debug.log(`Safety timer cleared from: ${from}`);\n\n            clearTimeout(this.safetyTimer);\n            this.safetyTimer = null;\n        }\n    }\n}\n\nexport default Ads;\n","import { createElement, getElement, toggleClass } from '../utils/elements';\nimport {triggerEvent} from '../utils/events';\n\nimport controls from '../controls';\n\nexport class LectureNoteModel {\n    constructor () {\n        this.showStatus = LectureNoteModel.ShowStatus.Edit;\n        this.noteStatus = LectureNoteModel.NoteStatus.Create;\n        this.time = 0;\n        this.note = '';\n    }\n}\n\nLectureNoteModel.ShowStatus = {\n    Edit: 'Edit',\n    Hide: 'Hide',\n};\nLectureNoteModel.NoteStatus = {\n    Create: 'Create',\n    Normal: 'Normal',\n};\n\nconst AddLectureNoteButtonStatus = {\n    Enable: 'enable',\n    Disable: 'disable',\n    Hidden: 'hidden',\n};\n\nexport default class LectureNote {\n\n    constructor (player) {\n        this.player = player;\n        this.lectureNoteList = [];\n        this.lectureNoteContainer = null;\n        this.addLectureNoteButtonStatus = AddLectureNoteButtonStatus.Hidden;\n        this.isLoadedLectureNote = false;\n\n        this.beforeAddLectureNotePlayerState = null;\n        this.beforeEditLectureNotePlayerState = null;\n    }\n\n    setup () {\n    }\n\n    clear () {\n        this.lectureNoteList = [];\n        this.lectureNoteContainer = null;\n        this.isLoadedLectureNote = false;\n        this.hiddenLectureNote();\n    }\n\n    enableLectureNote () {\n        this.addLectureNoteButtonStatus = AddLectureNoteButtonStatus.Enable;\n        this.updateAddLectureNoteButtonUI();\n    }\n\n    disableLectureNote () {\n        this.addLectureNoteButtonStatus = AddLectureNoteButtonStatus.Disable;\n        this.updateAddLectureNoteButtonUI();\n    }\n\n    hiddenLectureNote () {\n        this.addLectureNoteButtonStatus = AddLectureNoteButtonStatus.Hidden;\n        this.updateAddLectureNoteButtonUI();\n    }\n\n    updateAddLectureNoteButtonUI () {\n        const addLectureNoteButton = getElement.call(this.player, '.plyr__add-lecture-note');\n        switch (this.addLectureNoteButtonStatus) {\n            case AddLectureNoteButtonStatus.Enable:\n                toggleClass.call(this.player, addLectureNoteButton, 'disable', false);\n                toggleClass.call(this.player, addLectureNoteButton, 'hidden', false);\n                toggleClass.call(this.player, '.plyr__lecture-note-container', 'hidden', false);\n                break;\n            case AddLectureNoteButtonStatus.Disable:\n                toggleClass.call(this.player, addLectureNoteButton, 'disable', true);\n                toggleClass.call(this.player, addLectureNoteButton, 'hidden', false);\n                toggleClass.call(this.player, '.plyr__lecture-note-container', 'hidden', false);\n                break;\n            case AddLectureNoteButtonStatus.Hidden:\n                toggleClass.call(this.player, addLectureNoteButton, 'disable', true);\n                toggleClass.call(this.player, addLectureNoteButton, 'hidden', true);\n                toggleClass.call(this.player, '.plyr__lecture-note-container', 'hidden', true);\n                break;\n            default:\n                break;\n        }\n    }\n\n    setupUI () {\n        if (this.player.supported.ui) {\n            const lectureNoteContainer = this.getContainer();\n            for (let i = 0; i < this.lectureNoteList.length; i += 1) {\n                const note = this.lectureNoteList[i];\n                if (!this.isLectureNoteExists(note._id)) {\n                    const lectureNoteDOM = this.generateLectureNoteDOM(note);\n                    lectureNoteContainer.appendChild(lectureNoteDOM);\n                }\n            }\n        }\n    }\n\n    initLectureNote (lectureNotes) {\n        if (this.player.supported.ui) {\n            this.lectureNoteList = lectureNotes;\n            this.isLoadedLectureNote = true;\n            this.setupUI();\n            this.enableLectureNote();\n        }\n    }\n\n    addLectureNote () {\n        if (this.player.playing) {\n            this.beforeAddLectureNotePlayerState = 'playing';\n        } else {\n            this.beforeAddLectureNotePlayerState = 'pause';\n        }\n\n        this.player.pause();\n\n        const time = Math.round(this.player.currentTime);\n        const note = this.getSameTimeLectureNote(time);\n        if (note) {\n            const lectureNoteContainer = getElement.call(this.player, `.lecture-note[data-id=\"${  note._id  }\"]`);\n            if (lectureNoteContainer) {\n                const contentContianer = lectureNoteContainer.querySelector('.lecture-note__content-container');\n                if (contentContianer) {\n                    const clickEvent = new Event('click');\n                    contentContianer.dispatchEvent(clickEvent);\n                }\n            }\n\n        } else {\n            this.disableLectureNote();\n            triggerEvent.call(this.player, this.player.media, 'lecturenotecreate', true , {\n                lectureNote: {\n                    time,\n                },\n            });\n        }\n    }\n\n    completeAddLectureNote (lectureNote) {\n        this.enableLectureNote();\n        const newLectureNote = Object.assign({}, lectureNote, {\n            showStatus: LectureNoteModel.ShowStatus.Edit,\n        });\n        this.lectureNoteList.push(newLectureNote);\n        const lectureNoteDOM = this.generateLectureNoteDOM(newLectureNote);\n        const lectureNoteContainer = this.getContainer();\n        lectureNoteContainer.appendChild(lectureNoteDOM);\n    }\n\n    removeLectureNote (lectureNote) {\n        const lectureNoteContainer = getElement.call(this.player, `div[data-id=\"${lectureNote._id}\"]`);\n        if (lectureNoteContainer) {\n            lectureNoteContainer.parentElement.removeChild(lectureNoteContainer);\n            for (let i = 0; i < this.lectureNoteList.length; i += 1) {\n                if (this.lectureNoteList[i]._id === lectureNote._id) {\n                    this.lectureNoteList.splice(i, 1);\n                    return;\n                }\n            }\n        }\n    }\n\n    hasSameTimeLectureNote (time) {\n        for (let i = 0; i < this.lectureNoteList.length; i += 1) {\n            if (this.lectureNoteList[i].time === time) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    getSameTimeLectureNote (time) {\n        for (let i = 0; i < this.lectureNoteList.length; i += 1) {\n            if (this.lectureNoteList[i].time === time) {\n                return this.lectureNoteList[i];\n            }\n        }\n        return null;\n    }\n\n    /**\n     * @private\n     * @return {null|*}\n     */\n    getContainer () {\n        if (this.lectureNoteContainer && !this.lectureNoteContainer.parentElement) {\n            this.lectureNoteContainer = null;\n        }\n        if (this.lectureNoteContainer === null) {\n            this.lectureNoteContainer = createElement('div', {\n                'class': 'plyr__lecture-note-container',\n            });\n            const progresses = getElement.call(this.player, this.player.config.selectors.progress);\n            if (progresses) {\n                progresses.appendChild(this.lectureNoteContainer);\n            }\n        }\n        return this.lectureNoteContainer;\n    }\n\n    /**\n     * @private\n     * @param lectureNoteId\n     * @return {boolean}\n     */\n    isLectureNoteExists (lectureNoteId) {\n        return getElement.call(this.player, `.lecture-note[data-id=\"${lectureNoteId}\"]`) !== null;\n    }\n\n    /**\n     * @private\n     * @param lectureNote\n     */\n    generateLectureNoteDOM (lectureNote) {\n        const { duration } = this.player;\n        const percent = (lectureNote.time / duration) * 100 || 0;\n\n        let cancelTimeout = null;\n\n        const lectureNoteContainer = createElement('div', {\n            'data-id': lectureNote._id,\n            class: 'lecture-note',\n        });\n\n        /* lecture-note__mark */\n        const className = 'lecture-note__mark';\n        const mark = createElement('span', {\n            class: className,\n        });\n        lectureNoteContainer.appendChild(mark);\n\n        // 點擊 mark 跳到對應的播放時間\n        mark.addEventListener('click', (e) => {\n            this.player.currentTime = lectureNote.time;\n            e.preventDefault();\n            e.stopPropagation();\n        });\n        /* lecture-note__mark */\n\n        /* lecture-note__content-container */\n        const status = lectureNote.showStatus;\n        const contentContainer = createElement('div', {\n            class: `lecture-note__content-container ${status === LectureNoteModel.ShowStatus.Edit ? ' lecture-note__content-container--edit' : ''}`,\n        });\n        lectureNoteContainer.appendChild(contentContainer);\n        /* lecture-note__content-container */\n\n        /* lecture-note__content-textarea */\n        const contentTextarea = createElement('textarea', {\n            class: 'lecture-note__content-textarea',\n            placeholder: '新增筆記 (限 50 字)',\n            maxLength: 50,\n            rows: 1,\n        });\n        contentTextarea.value = lectureNote.note || '';\n        contentContainer.appendChild(contentTextarea);\n        /* lecture-note__content-textarea */\n\n        /* lecture-note__content-show-text */\n        const contentShowText = createElement('span', {\n            class: 'lecture-note__content-show-text',\n        });\n        contentShowText.innerHTML = lectureNote.note;\n        contentContainer.appendChild(contentShowText);\n        /* lecture-note__content-show-text */\n\n        /* lecture-note__trash-icon-wrapper */\n        const trashIconWrapper = createElement('span', {\n            class: 'lecture-note__trash-icon-wrapper',\n        });\n        const trashIcon = controls.createIcon.call(this.player, 'trash');\n        trashIconWrapper.appendChild(trashIcon);\n        contentContainer.appendChild(trashIconWrapper);\n        // 點擊垃圾桶 icon 刪除 lecturenote\n        trashIconWrapper.addEventListener('click', (e) => {\n            triggerEvent.call(this.player, this.player.media, 'lecturenotedelete', true ,{\n                lectureNote,\n            });\n            this.removeLectureNote(lectureNote);\n        });\n        /* lecture-note__trash-icon-wrapper */\n\n        // 修正產生 DOM 時，靠近影片結束時，筆記會跑版的問題\n        const container = this.getContainer();\n        const leftLimit = ((container.offsetWidth - 200) / container.offsetWidth) * 100 || 0;\n        if (percent > leftLimit) {\n            toggleClass(contentContainer, 'lecture-note__content-container--near-end', true);\n        } else {\n            toggleClass(contentContainer, 'lecture-note__content-container--near-end', false);\n        }\n\n        // 點擊 container 開啟編輯模式\n        contentContainer.addEventListener('click', (e) => {\n            if (lectureNote.showStatus !== LectureNoteModel.ShowStatus.Edit) {\n                if (this.player.playing) {\n                    this.beforeEditLectureNotePlayerState = 'playing';\n                } else {\n                    this.beforeEditLectureNotePlayerState = 'pause';\n                }\n                this.player.pause();\n                toggleClass(contentContainer, 'lecture-note__content-container--edit', true);\n                lectureNote.showStatus = LectureNoteModel.ShowStatus.Edit;\n                contentTextarea.style.height = 'auto';\n                contentTextarea.style.height = `${contentTextarea.scrollHeight}px`;\n                contentTextarea.focus();\n            }\n        });\n\n\n        setTimeout(() => {\n            contentTextarea.focus();\n        }, 50);\n\n        contentTextarea.addEventListener('keyup', () => {\n            contentTextarea.style.height = 'auto';\n            contentTextarea.style.height = `${contentTextarea.scrollHeight}px`;\n        });\n\n        let isInComposition = false;\n        contentTextarea.addEventListener('compositionstart', (e) => {\n            isInComposition = true;\n        });\n\n        contentTextarea.addEventListener('compositionend', (e) => {\n            setTimeout(() => {\n                isInComposition = false;\n            }, 10);\n        });\n\n        contentTextarea.addEventListener('keydown', (e) => {\n            if (!isInComposition && e.key === 'Enter') {\n                lectureNote.note = contentTextarea.value;\n                contentShowText.innerHTML = lectureNote.note;\n                toggleClass(contentContainer, 'lecture-note__content-container--edit', false);\n                lectureNote.showStatus = LectureNoteModel.ShowStatus.Hide;\n                toggleClass(lectureNoteContainer, 'hover', true);\n                cancelTimeout = setTimeout(() => {\n                    toggleClass(lectureNoteContainer, 'hover', false);\n                }, 1000);\n                triggerEvent.call(this.player, this.player.media, 'lecturenoteupdate', true, {\n                    lectureNote,\n                });\n                console.group('keydown enter');\n                console.log(this.beforeAddLectureNotePlayerState, this.beforeEditLectureNotePlayerState);\n                console.groupEnd();\n                try{\n                    if (this.beforeAddLectureNotePlayerState) {\n                        if (this.beforeAddLectureNotePlayerState === 'playing') {\n                            this.player.play();\n                        }\n                        this.beforeAddLectureNotePlayerState = null;\n                    }\n                    if (this.beforeEditLectureNotePlayerState) {\n                        if (this.beforeEditLectureNotePlayerState === 'playing') {\n                            this.player.play();\n                        }\n                        this.beforeEditLectureNotePlayerState = null;\n                    }\n                } catch (e) {\n                    // ignore\n                }\n                e.preventDefault();\n            }\n            if (e.key === 'Escape') {\n                contentTextarea.value = lectureNote.note;\n                toggleClass(contentContainer, 'lecture-note__content-container--edit', false);\n                lectureNote.showStatus = LectureNoteModel.ShowStatus.Hide;\n            }\n        });\n\n        contentTextarea.addEventListener('blur', (e) => {\n            lectureNote.note = contentTextarea.value;\n            contentShowText.innerHTML = lectureNote.note;\n            toggleClass(contentContainer, 'lecture-note__content-container--edit', false);\n            lectureNote.showStatus = LectureNoteModel.ShowStatus.Hide;\n            toggleClass(lectureNoteContainer, 'hover', true);\n            cancelTimeout = setTimeout(() => {\n                toggleClass(lectureNoteContainer, 'hover', false);\n            }, 1000);\n            triggerEvent.call(this.player, this.player.media, 'lecturenoteupdate', true, {\n                lectureNote,\n            });\n            e.preventDefault();\n        });\n\n        mark.addEventListener('mouseenter', (e) => {\n            if (cancelTimeout) {\n                clearTimeout(cancelTimeout);\n                cancelTimeout = null;\n            }\n            toggleClass(contentContainer, 'lecture-note__content-container--show', true);\n            const container = this.getContainer();\n            const leftLimit = ((container.offsetWidth - 200) / container.offsetWidth) * 100 || 0;\n            if (percent > leftLimit) {\n                toggleClass(contentContainer, 'lecture-note__content-container--near-end', true);\n            } else {\n                toggleClass(contentContainer, 'lecture-note__content-container--near-end', false);\n            }\n            e.preventDefault();\n        });\n\n        mark.addEventListener('mouseleave', (e) => {\n            cancelTimeout = setTimeout(() => {\n                toggleClass(contentContainer, 'lecture-note__content-container--show', false);\n            }, 500);\n\n            e.preventDefault();\n        });\n\n        contentContainer.addEventListener('mouseenter', (e) => {\n            if (cancelTimeout) {\n                clearTimeout(cancelTimeout);\n                cancelTimeout = null;\n            }\n            toggleClass(contentContainer, 'lecture-note__content-container--show', true);\n            const container = this.getContainer();\n            const leftLimit = ((container.offsetWidth - 200) / container.offsetWidth) * 100 || 0;\n            if (percent > leftLimit) {\n                toggleClass(contentContainer, 'lecture-note__content-container--near-end', true);\n            } else {\n                toggleClass(contentContainer, 'lecture-note__content-container--near-end', false);\n            }\n            e.preventDefault();\n        });\n\n        contentContainer.addEventListener('mouseleave', (e) => {\n            cancelTimeout = setTimeout(() => {\n                toggleClass(contentContainer, 'lecture-note__content-container--show', false);\n            }, 500);\n\n            e.preventDefault();\n        });\n\n        lectureNoteContainer.style.left = `calc(${percent}%)`;\n        return lectureNoteContainer;\n    }\n}\n","// ==========================================================================\n// Plyr source update\n// ==========================================================================\n\nimport captions from './captions';\nimport { providers } from './config/types';\nimport controls from './controls';\nimport html5 from './html5';\nimport media from './media';\nimport support from './support';\nimport ui from './ui';\nimport { createElement, insertElement, removeElement, setAttributes } from './utils/elements';\nimport is from './utils/is';\nimport browser from './utils/browser';\nimport { getDeep } from './utils/objects';\n\nconst source = {\n    // Add elements to HTML5 media (source, tracks, etc)\n    insertElements(type, attributes) {\n        if (is.string(attributes)) {\n            insertElement(type, this.media, {\n                src: attributes,\n            });\n        } else if (is.array(attributes)) {\n            attributes.forEach(attribute => {\n                insertElement(type, this.media, attribute);\n            });\n        }\n    },\n\n    // Update source\n    // Sources are not checked for support so be careful\n    change(input) {\n        if (!getDeep(input, 'sources.length')) {\n            this.debug.warn('Invalid source format');\n            return;\n        }\n\n        // Cancel current network requests\n        html5.cancelRequests.call(this);\n\n        const tracks = Array.from(this.media.querySelectorAll('track'));\n        removeElement(tracks);\n        this.captions.currentTrack = -1;\n\n        // Destroy instance and re-setup\n        this.destroy.call(\n            this,\n            () => {\n                this.lectureNote.clear();\n                // Reset quality options\n                this.options.quality = [];\n\n                // Remove elements\n                removeElement(this.media);\n\n                // Reset class name\n                if (is.element(this.elements.container)) {\n                    this.elements.container.removeAttribute('class');\n                }\n\n                // retain old provider and type\n                const prevType = this.type;\n                const prevProvider = this.provider;\n\n                // Set the type and provider\n                const { sources, type } = input;\n                const [{ provider = providers.html5, src }] = sources;\n                const tagName = provider === 'html5' ? type : 'div';\n                const attributes = provider === 'html5' ? {} : { src };\n\n                Object.assign(this, {\n                    provider,\n                    type,\n                    // Check for support\n                    supported: support.check(type, provider, this.config.playsinline),\n                });\n\n                if (prevType === type && prevProvider === provider && provider === providers.html5) {\n                    /**\n                     * if provider is html5 and setting is same as prev source,\n                     * retain media element (because ios system has limited resource,\n                     * can't create many video resource)\n                     */\n                    setAttributes(this.media, attributes);\n                } else {\n                    this.media = null;\n                    this.media = createElement(tagName, attributes);\n                }\n\n                // Inject the new element\n                this.elements.container.appendChild(this.media);\n\n                // Autoplay the new source?\n                if (is.boolean(input.autoplay)) {\n                    this.config.autoplay = input.autoplay;\n                }\n\n                // Set attributes for audio and video\n                if (this.isHTML5) {\n                    if (this.config.crossorigin) {\n                        this.media.setAttribute('crossorigin', '');\n                    }\n                    if (this.config.autoplay) {\n                        this.media.setAttribute('autoplay', '');\n                    }\n                    if (!is.empty(input.poster)) {\n                        this.poster = input.poster;\n                    }\n                    if (this.config.loop.active) {\n                        this.media.setAttribute('loop', '');\n                    }\n                    if (this.config.muted) {\n                        this.media.setAttribute('muted', '');\n                    }\n                    if (this.config.playsinline) {\n                        this.media.setAttribute('playsinline', '');\n                    }\n                }\n\n                // Restore class hook\n                ui.addStyleHook.call(this);\n                ui.addStylehookToFullscreenContainer.call(this);\n\n                // Set new sources for html5\n                if (this.isHTML5) {\n                    source.insertElements.call(this, 'source', sources);\n                    this.media.setAttribute('src', sources[0].src);\n                }\n\n                // Set video title\n                this.config.title = input.title;\n\n                // Set up from scratch\n                media.setup.call(this);\n\n                // restore video quality\n                const quality = this.storage.get('quality');\n                if (is.number(quality)) {\n                    this.media.quality = quality;\n                }\n\n                let defaultCaption = null;\n                // HTML5 stuff\n                if (this.isHTML5) {\n                    // Setup captions\n                    if ('tracks' in input) {\n                        source.insertElements.call(this, 'track', input.tracks);\n                        const defaultTracks = input.tracks.filter(track => track.default);\n                        if (defaultTracks.length > 0 ){\n                            defaultCaption = defaultTracks[0].srclang;\n                        }\n                        if(this.media.textTracks && browser.isEdge){\n                            for(var i = 0; i< this.media.textTracks.length; i++){\n                                this.media.textTracks[i].mode = 'hidden';\n                            }\n                        }\n                        captions.update.call(this);\n                    }\n\n                    // Load HTML5 sources\n                    this.media.load();\n                }\n\n                // If HTML5 or embed but not fully supported, setupInterface and call ready now\n                if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n                    // Setup interface\n                    ui.build.call(this);\n                }\n\n                // Update the fullscreen support\n                this.fullscreen.update();\n                captions.setDefault.call(this, defaultCaption);\n                const speed = this.storage.get('speed');\n                if (is.number(speed)) {\n                    this.speed = speed;\n                    controls.updateSetting.call(this, 'speed', speed);\n                }\n                this.lectureNote.setupUI();\n            },\n            true,\n        );\n    },\n};\n\nexport default source;\n","// ==========================================================================\n// Plyr\n// plyr.js v3.3.23\n// https://github.com/sampotts/plyr\n// License: The MIT License (MIT)\n// ==========================================================================\n\nimport captions from './captions';\nimport defaults from './config/defaults';\nimport { getProviderByUrl, providers, types } from './config/types';\nimport Console from './console';\nimport controls from './controls';\nimport Fullscreen from './fullscreen';\nimport hahow from './hahowCustomControl';\nimport Listeners from './listeners';\nimport logo from './logo';\nimport media from './media';\nimport Ads from './plugins/ads';\n\nimport LectureNote from './plugins/lectureNote';\nimport source from './source';\nimport Storage from './storage';\nimport support from './support';\nimport ui from './ui';\nimport { closest } from './utils/arrays';\nimport { createElement, hasClass, removeElement, replaceElement, toggleClass, wrap } from './utils/elements';\nimport { off, on, once, triggerEvent, unbindListeners } from './utils/events';\nimport is from './utils/is';\nimport loadSprite from './utils/loadSprite';\nimport { cloneDeep, extend } from './utils/objects';\nimport { parseUrl } from './utils/urls';\n\n// Private properties\n// TODO: Use a WeakMap for private globals\n// const globals = new WeakMap();\n\n// Plyr instance\nclass Plyr {\n    constructor(target, options) {\n        this.timers = {};\n\n        // State\n        this.ready = false;\n        this.loading = false;\n        this.failed = false;\n\n        // Touch device\n        this.touch = support.touch;\n\n        // Set the media element\n        this.media = target;\n\n        // String selector passed\n        if (is.string(this.media)) {\n            this.media = document.querySelectorAll(this.media);\n        }\n\n        // jQuery, NodeList or Array passed, use first element\n        if ((window.jQuery && this.media instanceof jQuery) || is.nodeList(this.media) || is.array(this.media)) {\n            // eslint-disable-next-line\n            this.media = this.media[0];\n        }\n\n        // Set config\n        this.config = extend(\n            {},\n            defaults,\n            Plyr.defaults,\n            options || {},\n            (() => {\n                try {\n                    return JSON.parse(this.media.getAttribute('data-plyr-config'));\n                } catch (e) {\n                    return {};\n                }\n            })(),\n        );\n\n        // Elements cache\n        this.elements = {\n            container: null,\n            buttons: {},\n            display: {},\n            progress: {},\n            inputs: {},\n            settings: {\n                menu: null,\n                panes: {},\n                tabs: {},\n            },\n            captions: null,\n        };\n\n        // Captions\n        this.captions = {\n            active: null,\n            currentTrack: -1,\n            meta: new WeakMap(),\n        };\n\n        // Fullscreen\n        this.fullscreen = {\n            active: false,\n        };\n\n        // Options\n        this.options = {\n            speed: [],\n            quality: [],\n        };\n\n        // Debugging\n        // TODO: move to globals\n        this.debug = new Console(this.config.debug);\n\n        // Log config options and support\n        this.debug.log('Config', this.config);\n        this.debug.log('Support', support);\n\n        // We need an element to setup\n        if (is.nullOrUndefined(this.media) || !is.element(this.media)) {\n            this.debug.error('Setup failed: no suitable element passed');\n            return;\n        }\n\n        // Bail if the element is initialized\n        if (this.media.plyr) {\n            this.debug.warn('Target already setup');\n            return;\n        }\n\n        // Bail if not enabled\n        if (!this.config.enabled) {\n            this.debug.error('Setup failed: disabled by config');\n            return;\n        }\n\n        // Bail if disabled or no basic support\n        // You may want to disable certain UAs etc\n        if (!support.check().api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        // Cache original element state for .destroy()\n        const clone = this.media.cloneNode(true);\n        clone.autoplay = false;\n        this.elements.original = clone;\n\n        // Set media type based on tag or data attribute\n        // Supported: video, audio, vimeo, youtube\n        const type = this.media.tagName.toLowerCase();\n\n        // Embed properties\n        let iframe = null;\n        let url = null;\n\n        // Different setup based on type\n        switch (type) {\n            case 'div':\n                // Find the frame\n                iframe = this.media.querySelector('iframe');\n\n                // <iframe> type\n                if (is.element(iframe)) {\n                    // Detect provider\n                    url = parseUrl(iframe.getAttribute('src'));\n                    this.provider = getProviderByUrl(url.toString());\n\n                    // Rework elements\n                    this.elements.container = this.media;\n                    this.media = iframe;\n\n                    // Reset classname\n                    this.elements.container.className = '';\n\n                    // Get attributes from URL and set config\n                    if (url.search.length) {\n                        const truthy = ['1', 'true'];\n\n                        if (truthy.includes(url.searchParams.get('autoplay'))) {\n                            this.config.autoplay = true;\n                        }\n                        if (truthy.includes(url.searchParams.get('loop'))) {\n                            this.config.loop.active = true;\n                        }\n\n                        // TODO: replace fullscreen.iosNative with this playsinline config option\n                        // YouTube requires the playsinline in the URL\n                        if (this.isYouTube) {\n                            this.config.playsinline = truthy.includes(url.searchParams.get('playsinline'));\n                            this.config.hl = url.searchParams.get('hl');\n                        } else {\n                            this.config.playsinline = true;\n                        }\n                    }\n                } else {\n                    // <div> with attributes\n                    this.provider = this.media.getAttribute(this.config.attributes.embed.provider);\n\n                    // Remove attribute\n                    this.media.removeAttribute(this.config.attributes.embed.provider);\n                }\n\n                // Unsupported or missing provider\n                if (is.empty(this.provider) || !Object.keys(providers).includes(this.provider)) {\n                    this.debug.error('Setup failed: Invalid provider');\n                    return;\n                }\n\n                // Audio will come later for external providers\n                this.type = types.video;\n\n                break;\n\n            case 'video':\n            case 'audio':\n                this.type = type;\n                this.provider = providers.html5;\n\n                // Get config from attributes\n                if (this.media.hasAttribute('crossorigin')) {\n                    this.config.crossorigin = true;\n                }\n                if (this.media.hasAttribute('autoplay')) {\n                    this.config.autoplay = true;\n                }\n                if (this.media.hasAttribute('playsinline')) {\n                    this.config.playsinline = true;\n                }\n                if (this.media.hasAttribute('muted')) {\n                    this.config.muted = true;\n                }\n                if (this.media.hasAttribute('loop')) {\n                    this.config.loop.active = true;\n                }\n\n                break;\n\n            default:\n                this.debug.error('Setup failed: unsupported type');\n                return;\n        }\n\n        // Check for support again but with type\n        this.supported = support.check(this.type, this.provider, this.config.playsinline);\n\n        // If no support for even API, bail\n        if (!this.supported.api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        this.eventListeners = [];\n\n        // Create listeners\n        this.listeners = new Listeners(this);\n\n        // Setup local storage for user settings\n        this.storage = new Storage(this);\n\n        // Store reference\n        this.media.plyr = this;\n\n        // Wrap media\n        if (!is.element(this.elements.container)) {\n            this.elements.container = createElement('div');\n            wrap(this.media, this.elements.container);\n        }\n\n        // Add style hook\n        ui.addStyleHook.call(this);\n        ui.addStylehookToFullscreenContainer.call(this);\n\n        // Setup media\n        media.setup.call(this);\n\n        // Listen for events if debugging\n        if (this.config.debug) {\n            on.call(this, this.elements.container, this.config.events.join(' '), event => {\n                this.debug.log(`event: ${event.type}`);\n            });\n        }\n\n        // Setup interface\n        // If embed but not fully supported, build interface now to avoid flash of controls\n        if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n            ui.build.call(this);\n        }\n\n        logo.setup.call(this);\n\n        // Container listeners\n        this.listeners.container();\n\n        // Global listeners\n        this.listeners.global();\n\n        // Setup fullscreen\n        this.fullscreen = new Fullscreen(this);\n\n        // Setup ads if provided\n        this.ads = new Ads(this);\n\n        this.lectureNote = new LectureNote(this);\n\n        // Autoplay if required\n        if (this.config.autoplay) {\n            this.play();\n        }\n    }\n\n    // ---------------------------------------\n    // API\n    // ---------------------------------------\n\n    /**\n     * Types and provider helpers\n     */\n    get isHTML5() {\n        return Boolean(this.provider === providers.html5);\n    }\n\n    get isEmbed() {\n        return Boolean(this.isYouTube || this.isVimeo);\n    }\n\n    get isYouTube() {\n        return Boolean(this.provider === providers.youtube);\n    }\n\n    get isVimeo() {\n        return Boolean(this.provider === providers.vimeo);\n    }\n\n    get isVideo() {\n        return Boolean(this.type === types.video);\n    }\n\n    get isAudio() {\n        return Boolean(this.type === types.audio);\n    }\n\n    /**\n     * Play the media, or play the advertisement (if they are not blocked)\n     */\n    play() {\n        if (!is.function(this.media.play)) {\n            return null;\n        }\n\n        // Return the promise (for HTML5)\n        return this.media.play();\n    }\n\n    /**\n     * Pause the media\n     */\n    pause() {\n        if (!this.playing || !is.function(this.media.pause)) {\n            return;\n        }\n\n        this.media.pause();\n    }\n\n    /**\n     * Get playing state\n     */\n    get playing() {\n        return Boolean(this.ready && !this.paused && !this.ended);\n    }\n\n    /**\n     * Get paused state\n     */\n    get paused() {\n        return Boolean(this.media.paused);\n    }\n\n    /**\n     * Get stopped state\n     */\n    get stopped() {\n        return Boolean(this.paused && this.currentTime === 0);\n    }\n\n    /**\n     * Get ended state\n     */\n    get ended() {\n        return Boolean(this.media.ended);\n    }\n\n    /**\n     * Toggle playback based on current status\n     * @param {boolean} input\n     */\n    togglePlay(input) {\n        // Toggle based on current state if nothing passed\n        const toggle = is.boolean(input) ? input : !this.playing;\n\n        if (toggle) {\n            this.play();\n        } else {\n            this.pause();\n        }\n    }\n\n    /**\n     * Stop playback\n     */\n    stop() {\n        if (this.isHTML5) {\n            this.pause();\n            this.restart();\n        } else if (is.function(this.media.stop)) {\n            this.media.stop();\n        }\n    }\n\n    /**\n     * Restart playback\n     */\n    restart() {\n        this.currentTime = 0;\n    }\n\n    /**\n     * Rewind\n     * @param {number} seekTime - how far to rewind in seconds. Defaults to the config.seekTime\n     */\n    rewind(seekTime) {\n        this.currentTime = this.currentTime - (is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Fast forward\n     * @param {number} seekTime - how far to fast forward in seconds. Defaults to the config.seekTime\n     */\n    forward(seekTime) {\n        this.currentTime = this.currentTime + (is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Seek to a time\n     * @param {number} input - where to seek to in seconds. Defaults to 0 (the start)\n     */\n    set currentTime(input) {\n        // Bail if media duration isn't available yet\n        if (!this.duration) {\n            return;\n        }\n\n        // Validate input\n        const inputIsValid = is.number(input) && input > 0;\n\n        // Set\n        this.media.currentTime = inputIsValid ? Math.min(input, this.duration) : 0;\n\n        // Logging\n        this.debug.log(`Seeking to ${this.currentTime} seconds`);\n    }\n\n    /**\n     * Get current time\n     */\n    get currentTime() {\n        return Number(this.media.currentTime);\n    }\n\n    /**\n     * Get buffered\n     */\n    get buffered() {\n        const { buffered } = this.media;\n\n        // YouTube / Vimeo return a float between 0-1\n        if (is.number(buffered)) {\n            return buffered;\n        }\n\n        // HTML5\n        // TODO: Handle buffered chunks of the media\n        // (i.e. seek to another section buffers only that section)\n        if (buffered && buffered.length && this.duration > 0) {\n            return buffered.end(0) / this.duration;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Get seeking status\n     */\n    get seeking() {\n        return Boolean(this.media.seeking);\n    }\n\n    /**\n     * Get the duration of the current media\n     */\n    get duration() {\n        // Faux duration set via config\n        const fauxDuration = parseFloat(this.config.duration);\n\n        // Media duration can be NaN or Infinity before the media has loaded\n        const realDuration = (this.media || {}).duration;\n        const duration = !is.number(realDuration) || realDuration === Infinity ? 0 : realDuration;\n\n        // If config duration is funky, use regular duration\n        return fauxDuration || duration;\n    }\n\n    /**\n     * Set the player volume\n     * @param {number} value - must be between 0 and 1. Defaults to the value from local storage and config.volume if not set in storage\n     */\n    set volume(value) {\n        let volume = value;\n        const max = 1;\n        const min = 0;\n\n        if (is.string(volume)) {\n            volume = Number(volume);\n        }\n\n        // Load volume from storage if no value specified\n        if (!is.number(volume)) {\n            volume = this.storage.get('volume');\n        }\n\n        // Use config if all else fails\n        if (!is.number(volume)) {\n            ({ volume } = this.config);\n        }\n\n        // Maximum is volumeMax\n        if (volume > max) {\n            volume = max;\n        }\n        // Minimum is volumeMin\n        if (volume < min) {\n            volume = min;\n        }\n\n        // Update config\n        this.config.volume = volume;\n\n        // Set the player volume\n        this.media.volume = volume;\n\n        // If muted, and we're increasing volume manually, reset muted state\n        if (!is.empty(value) && this.muted && volume > 0) {\n            this.muted = false;\n        }\n    }\n\n    /**\n     * Get the current player volume\n     */\n    get volume() {\n        return Number(this.media.volume);\n    }\n\n    /**\n     * Increase volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    increaseVolume(step) {\n        const volume = this.media.muted ? 0 : this.volume;\n        this.volume = volume + (is.number(step) ? step : 0);\n    }\n\n    /**\n     * Decrease volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    decreaseVolume(step) {\n        this.increaseVolume(-step);\n    }\n\n    set fullscreenContainer (container) {\n        if (is.element(container)) {\n            this.config.fullscreenContainer = container;\n            ui.addStylehookToFullscreenContainer.call(this);\n        }\n    }\n\n    /**\n     * Set muted state\n     * @param {boolean} mute\n     */\n    set muted(mute) {\n        let toggle = mute;\n\n        // Load muted state from storage\n        if (!is.boolean(toggle)) {\n            toggle = this.storage.get('muted');\n        }\n\n        // Use config if all else fails\n        if (!is.boolean(toggle)) {\n            toggle = this.config.muted;\n        }\n\n        // Update config\n        this.config.muted = toggle;\n\n        // Set mute on the player\n        this.media.muted = toggle;\n    }\n\n    /**\n     * Get current muted state\n     */\n    get muted() {\n        return Boolean(this.media.muted);\n    }\n\n    /**\n     * Check if the media has audio\n     */\n    get hasAudio() {\n        // Assume yes for all non HTML5 (as we can't tell...)\n        if (!this.isHTML5) {\n            return true;\n        }\n\n        if (this.isAudio) {\n            return true;\n        }\n\n        // Get audio tracks\n        return (\n            Boolean(this.media.mozHasAudio) ||\n            Boolean(this.media.webkitAudioDecodedByteCount) ||\n            Boolean(this.media.audioTracks && this.media.audioTracks.length)\n        );\n    }\n\n    /**\n     * Set playback speed\n     * @param {number} speed - the speed of playback (0.5-2.0)\n     */\n    set speed(input) {\n        let speed = null;\n\n        if (is.number(input)) {\n            speed = input;\n        }\n\n        if (!is.number(speed)) {\n            speed = this.storage.get('speed');\n        }\n\n        if (!is.number(speed)) {\n            speed = this.config.speed.selected;\n        }\n\n        // Set min/max\n        if (speed < 0.1) {\n            speed = 0.1;\n        }\n        if (speed > 2.0) {\n            speed = 2.0;\n        }\n\n        if (!this.config.speed.options.includes(speed)) {\n            this.debug.warn(`Unsupported speed (${speed})`);\n            return;\n        }\n\n        // Update config\n        this.config.speed.selected = speed;\n\n        // Set media speed\n        this.media.playbackRate = speed;\n    }\n\n    /**\n     * Get current playback speed\n     */\n    get speed() {\n        return Number(this.media.playbackRate);\n    }\n\n    /**\n     * Set playback quality\n     * Currently HTML5 & YouTube only\n     * @param {number} input - Quality level\n     */\n    set quality(input) {\n        const config = this.config.quality;\n        const options = this.options.quality;\n\n        if (!options.length) {\n            return;\n        }\n\n        let quality = [\n            !is.empty(input) && Number(input),\n            this.storage.get('quality'),\n            config.selected,\n            config.default,\n        ].find(is.number);\n\n        if (!options.includes(quality)) {\n            const value = closest(options, quality);\n            this.debug.warn(`Unsupported quality option: ${quality}, using ${value} instead`);\n            quality = value;\n        } else if (`${quality}` === `${input}`) {\n            this.storage.set({\n                quality,\n            });\n        }\n\n        // Trigger request event\n        triggerEvent.call(this, this.media, 'qualityrequested', false, { quality });\n\n        // Update config\n        config.selected = quality;\n\n        // Set quality\n        this.media.quality = quality;\n    }\n\n    /**\n     * Get current quality level\n     */\n    get quality() {\n        return this.media.quality;\n    }\n\n    /**\n     * Toggle loop\n     * TODO: Finish fancy new logic. Set the indicator on load as user may pass loop as config\n     * @param {boolean} input - Whether to loop or not\n     */\n    set loop(input) {\n        const toggle = is.boolean(input) ? input : this.config.loop.active;\n        this.config.loop.active = toggle;\n        this.media.loop = toggle;\n\n        // Set default to be a true toggle\n        /* const type = ['start', 'end', 'all', 'none', 'toggle'].includes(input) ? input : 'toggle';\n\n        switch (type) {\n            case 'start':\n                if (this.config.loop.end && this.config.loop.end <= this.currentTime) {\n                    this.config.loop.end = null;\n                }\n                this.config.loop.start = this.currentTime;\n                // this.config.loop.indicator.start = this.elements.display.played.value;\n                break;\n\n            case 'end':\n                if (this.config.loop.start >= this.currentTime) {\n                    return this;\n                }\n                this.config.loop.end = this.currentTime;\n                // this.config.loop.indicator.end = this.elements.display.played.value;\n                break;\n\n            case 'all':\n                this.config.loop.start = 0;\n                this.config.loop.end = this.duration - 2;\n                this.config.loop.indicator.start = 0;\n                this.config.loop.indicator.end = 100;\n                break;\n\n            case 'toggle':\n                if (this.config.loop.active) {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = null;\n                } else {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = this.duration - 2;\n                }\n                break;\n\n            default:\n                this.config.loop.start = 0;\n                this.config.loop.end = null;\n                break;\n        } */\n    }\n\n    /**\n     * Get current loop state\n     */\n    get loop() {\n        return Boolean(this.media.loop);\n    }\n\n    /**\n     * Set new media source\n     * @param {object} input - The new source object (see docs)\n     */\n    set source(input) {\n        source.change.call(this, input);\n    }\n\n    /**\n     * Get current source\n     */\n    get source() {\n        return this.media.currentSrc;\n    }\n\n    /**\n     * Set the poster image for a video\n     * @param {input} - the URL for the new poster image\n     */\n    set poster(input) {\n        if (!this.isVideo) {\n            this.debug.warn('Poster can only be set for video');\n            return;\n        }\n\n        ui.setPoster.call(this, input, false).catch(() => {});\n    }\n\n    /**\n     * Get the current poster image\n     */\n    get poster() {\n        if (!this.isVideo) {\n            return null;\n        }\n\n        return this.media.getAttribute('poster');\n    }\n\n    /**\n     * Set the autoplay state\n     * @param {boolean} input - Whether to autoplay or not\n     */\n    set autoplay(input) {\n        const toggle = is.boolean(input) ? input : this.config.autoplay;\n        this.config.autoplay = toggle;\n    }\n\n    /**\n     * Get the current autoplay state\n     */\n    get autoplay() {\n        return Boolean(this.config.autoplay);\n    }\n\n    /**\n     * Toggle captions\n     * @param {boolean} input - Whether to enable captions\n     */\n    toggleCaptions(input) {\n        captions.toggle.call(this, input, false);\n    }\n\n    /**\n     * Set the caption track by index\n     * @param {number} - Caption index\n     */\n    set currentTrack(input) {\n        captions.set.call(this, input, false);\n    }\n\n    /**\n     * Get the current caption track index (-1 if disabled)\n     */\n    get currentTrack() {\n        const { toggled, currentTrack } = this.captions;\n        return toggled ? currentTrack : -1;\n    }\n\n    set captionPosition(input) {\n        this.captions.position = input;\n        this.storage.set({\n            captionPosition: input,\n        });\n        captions.setPosition.call(this, this.captions.position);\n    }\n\n    get captionPosition() {\n        return this.storage.get('captionPosition') || this.config.captions.position;\n    }\n\n    /**\n     * Set the wanted language for captions\n     * Since tracks can be added later it won't update the actual caption track until there is a matching track\n     * @param {string} - Two character ISO language code (e.g. EN, FR, PT, etc)\n     */\n    set language(input) {\n        captions.setLanguage.call(this, input, false);\n    }\n\n    /**\n     * Get the current track's language\n     */\n    get language() {\n        return (captions.getCurrentTrack.call(this) || {}).language;\n    }\n\n    /**\n     * Toggle picture-in-picture playback on WebKit/MacOS\n     * TODO: update player with state, support, enabled\n     * TODO: detect outside changes\n     */\n    set pip(input) {\n        const states = {\n            pip: 'picture-in-picture',\n            inline: 'inline',\n        };\n\n        // Bail if no support\n        if (!support.pip) {\n            return;\n        }\n\n        // Toggle based on current state if not passed\n        const toggle = is.boolean(input) ? input : this.pip === states.inline;\n\n        // Toggle based on current state\n        this.media.webkitSetPresentationMode(toggle ? states.pip : states.inline);\n    }\n\n    /**\n     * Get the current picture-in-picture state\n     */\n    get pip() {\n        if (!support.pip) {\n            return null;\n        }\n\n        return this.media.webkitPresentationMode;\n    }\n\n    /**\n     * Trigger the airplay dialog\n     * TODO: update player with state, support, enabled\n     */\n    airplay() {\n        // Show dialog if supported\n        if (support.airplay) {\n            this.media.webkitShowPlaybackTargetPicker();\n        }\n    }\n\n    /**\n     * Toggle the player controls\n     * @param {boolean} [toggle] - Whether to show the controls\n     */\n    toggleControls(toggle) {\n        // Don't toggle if missing UI support or if it's audio\n        if (this.supported.ui && !this.isAudio) {\n            // Get state before change\n            const isHidden = hasClass(this.elements.container, this.config.classNames.hideControls);\n\n            // Negate the argument if not undefined since adding the class to hides the controls\n            const force = typeof toggle === 'undefined' ? undefined : !toggle;\n\n            // Apply and get updated state\n            const hiding = toggleClass(this.elements.container, this.config.classNames.hideControls, force);\n\n            // Close menu\n            if (hiding && !is.empty(this.config.settings)) {\n                controls.toggleMenu.call(this, false);\n            }\n            // Trigger event on change\n            if (hiding !== isHidden) {\n                const eventName = hiding ? 'controlshidden' : 'controlsshown';\n                triggerEvent.call(this, this.media, eventName);\n            }\n            return !hiding;\n        }\n        return false;\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    on(event, callback) {\n        on.call(this, this.elements.container, event, callback);\n    }\n\n    /**\n     * Add event listeners once\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    once(event, callback) {\n        once.call(this, this.elements.container, event, callback);\n    }\n\n    /**\n     * Remove event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    off(event, callback) {\n        off(this.elements.container, event, callback);\n    }\n\n    /**\n     * Destroy an instance\n     * Event listeners are removed when elements are removed\n     * http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\n     * @param {function} callback - Callback for when destroy is complete\n     * @param {boolean} soft - Whether it's a soft destroy (for source changes etc)\n     */\n    destroy(callback, soft = false) {\n        if (!this.ready) {\n            return;\n        }\n\n        const done = () => {\n            // Reset overflow (incase destroyed while in fullscreen)\n            document.body.style.overflow = '';\n\n            // GC for embed\n            this.embed = null;\n\n            // If it's a soft destroy, make minimal changes\n            if (soft) {\n                if (Object.keys(this.elements).length) {\n                    // Remove elements\n                    removeElement(this.elements.buttons.play);\n                    removeElement(this.elements.captions);\n                    removeElement(this.elements.controls);\n                    removeElement(this.elements.wrapper);\n\n                    // Clear for GC\n                    this.elements.buttons.play = null;\n                    this.elements.captions = null;\n                    this.elements.controls = null;\n                    this.elements.wrapper = null;\n                }\n\n                // Callback\n                if (is.function(callback)) {\n                    callback();\n                }\n            } else {\n                // Unbind listeners\n                unbindListeners.call(this);\n\n                // Replace the container with the original element provided\n                replaceElement(this.elements.original, this.elements.container);\n\n                // Event\n                triggerEvent.call(this, this.elements.original, 'destroyed', true);\n\n                // Callback\n                if (is.function(callback)) {\n                    callback.call(this.elements.original);\n                }\n\n                // Reset state\n                this.ready = false;\n\n                // Clear for garbage collection\n                setTimeout(() => {\n                    this.elements = null;\n                    this.media = null;\n                }, 200);\n            }\n        };\n\n        // Stop playback\n        this.stop();\n\n        // Provider specific stuff\n        if (this.isHTML5) {\n            // Clear timeout\n            clearTimeout(this.timers.loading);\n\n            // Restore native video controls\n            ui.toggleNativeControls.call(this, true);\n\n            // Clean up\n            done();\n        } else if (this.isYouTube) {\n            // Clear timers\n            clearInterval(this.timers.buffering);\n            clearInterval(this.timers.playing);\n\n            // Destroy YouTube API\n            if (this.embed !== null && is.function(this.embed.destroy)) {\n                this.embed.destroy();\n            }\n\n            // Clean up\n            done();\n        } else if (this.isVimeo) {\n            // Destroy Vimeo API\n            // then clean up (wait, to prevent postmessage errors)\n            if (this.embed !== null) {\n                this.embed.unload().then(done);\n            }\n\n            // Vimeo does not always return\n            setTimeout(done, 200);\n        }\n    }\n\n    /**\n     * Check for support for a mime type (HTML5 only)\n     * @param {string} type - Mime type\n     */\n    supports(type) {\n        return support.mime.call(this, type);\n    }\n\n    /**\n     * Check for support\n     * @param {string} type - Player type (audio/video)\n     * @param {string} provider - Provider (html5/youtube/vimeo)\n     * @param {bool} inline - Where player has `playsinline` sttribute\n     */\n    static supported(type, provider, inline) {\n        return support.check(type, provider, inline);\n    }\n\n    /**\n     * Load an SVG sprite into the page\n     * @param {string} url - URL for the SVG sprite\n     * @param {string} [id] - Unique ID\n     */\n    static loadSprite(url, id) {\n        return loadSprite(url, id);\n    }\n\n    /**\n     * Setup multiple instances\n     * @param {*} selector\n     * @param {object} options\n     */\n    static setup(selector, options = {}) {\n        let targets = null;\n\n        if (is.string(selector)) {\n            targets = Array.from(document.querySelectorAll(selector));\n        } else if (is.nodeList(selector)) {\n            targets = Array.from(selector);\n        } else if (is.array(selector)) {\n            targets = selector.filter(is.element);\n        }\n\n        if (is.empty(targets)) {\n            return null;\n        }\n\n        return targets.map(t => new Plyr(t, options));\n    }\n}\n\nPlyr.defaults = cloneDeep(defaults);\nPlyr.hahow = hahow;\nexport default Plyr;\n"]}