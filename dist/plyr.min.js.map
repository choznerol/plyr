{"version":3,"sources":["src/js/utils/is.js","src/js/utils/events.js","src/js/utils/elements.js","src/js/utils/animation.js","src/js/utils/browser.js","src/js/support.js","src/js/html5.js","src/js/utils/arrays.js","src/js/utils/objects.js","src/js/utils/strings.js","src/js/utils/i18n.js","src/js/storage.js","src/js/utils/fetch.js","src/js/utils/loadSprite.js","src/js/utils/time.js","src/js/controls.js","src/js/utils/urls.js","src/js/captions.js","src/js/config/defaults.js","src/js/config/states.js","src/js/config/types.js","src/js/console.js","src/js/fullscreen.js","src/js/hahowCustomControl.js","src/js/utils/loadImage.js","src/js/ui.js","src/js/listeners.js","src/js/logo.js","node_modules/loadjs/dist/loadjs.umd.js","src/js/utils/loadScript.js","src/js/plugins/vimeo.js","src/js/plugins/youtube.js","src/js/media.js","src/js/plugins/ads.js","src/js/plugins/lectureNote.js","src/js/source.js","src/js/plyr.js"],"names":["getConstructor","input","constructor","instanceOf","Boolean","isNullOrUndefined","isObject","Object","isString","String","isArray","Array","isNodeList","NodeList","isEmpty","length","keys","is","nullOrUndefined","object","number","Number","isNaN","string","boolean","function","Function","array","weakMap","WeakMap","nodeList","element","Element","textNode","Text","event","Event","keyboardEvent","KeyboardEvent","cue","window","TextTrackCue","VTTCue","track","TextTrack","kind","url","URL","startsWith","concat","hostname","e","empty","supportsPassiveListeners","supported","options","defineProperty","get","addEventListener","removeEventListener","toggleListener","callback","_this","this","toggle","arguments","undefined","passive","capture","events","split","forEach","type","eventListeners","push","on","call","off","once","onceCallback","_len","args","_key","apply","triggerEvent","bubbles","detail","CustomEvent","assign","plyr","dispatchEvent","err","Error","JSON","stringify","wrap","elements","wrapper","targets","from","reverse","index","child","cloneNode","parent","parentNode","sibling","nextSibling","appendChild","insertBefore","setAttributes","attributes","entries","filter","_ref","value","_slicedToArray","_ref3","_ref4","key","setAttribute","createElement","text","document","innerText","insertElement","removeElement","removeChild","emptyElement","childNodes","lastChild","replaceElement","newChild","oldChild","replaceChild","getAttributesFromSelector","sel","existingAttributes","existing","s","selector","trim","className","replace","parts","charAt","class","id","toggleHidden","hidden","hide","removeAttribute","toggleClass","force","map","method","classList","contains","hasClass","matches","querySelectorAll","includes","getElements","container","getElement","querySelector","setFocus","tabFocus","focus","config","classNames","transitionEndEvent","WebkitTransition","MozTransition","OTransition","transition","find","style","repaint","setTimeout","offsetHeight","range","browser","isIE","documentMode","isWebkit","documentElement","test","navigator","userAgent","isIPhone","platform","isIos","defaultCodecs","audio/ogg","audio/wav","video/webm","video/mp4","video/ogg","support","audio","video","check","provider","playsinline","canPlayInline","api","ui","rangeInput","pip","webkitSetPresentationMode","pictureInPictureEnabled","disablePictureInPicture","airplay","WebKitPlaybackTargetAvailabilityEvent","mime","inputType","mediaType","isHTML5","media","canPlayType","textTracks","touch","transitions","reducedMotion","matchMedia","html5","getSources","source","getAttribute","getQualityOptions","extend","player","configurable","set","_player$media","currentTime","paused","preload","readyState","pause","src","play","load","speed","storage","controls","updateSetting","quality","cancelRequests","sources","blankVideo","debug","log","dedupe","item","indexOf","getDeep","path","reduce","obj","target","shift","_defineProperty","format","toString","match","i","replaceAll","RegExp","toTitleCase","toUpperCase","substr","toLowerCase","toCamelCase","toPascalCase","slice","getHTML","innerHTML","resources","vimeo","youtube","i18n","{seektime}","seekTime","{title}","title","_ref2","Storage","_classCallCheck","enabled","store","localStorage","getItem","json","parse","setItem","removeItem","fetch","responseType","Promise","resolve","reject","request","XMLHttpRequest","responseText","response","status","open","send","loadSprite","hasId","exists","getElementById","update","data","body","insertAdjacentElement","useStorage","cached","content","then","result","catch","getHours","parseInt","getMinutes","getSeconds","formatTime","time","displayHours","inverted","hours","mins","secs","getIconUrl","cors","iconUrl","location","host","svg4everybody","findElements","selectors","buttons","restart","rewind","fastForward","mute","settings","captions","fullscreen","progress","inputs","seek","volume","display","buffer","duration","seekTooltip","tooltip","error","warn","toggleNativeControls","createIcon","iconPath","iconPrefix","icon","createElementNS","role","focusable","use","setAttributeNS","createLabel","attr","join","createBadge","badge","menu","createButton","buttonType","props","label","labelPressed","iconPressed","control","button","createRange","min","max","step","autocomplete","aria-label","aria-valuemin","aria-valuemax","aria-valuenow","updateRangeFill","createProgress","aria-hidden","suffixKey","played","suffix","createTime","bindMenuItemShortcuts","menuItem","which","preventDefault","stopPropagation","isRadioButton","showMenuPanel","nextElementSibling","firstElementChild","previousElementSibling","lastElementChild","focusFirstMenuItem","createMenuItem","_this2","list","_ref$badge","_ref$checked","checked","aria-checked","flex","enumerable","children","node","listeners","bind","currentTrack","parseFloat","updateTimeDisplay","updateVolume","setRange","muted","pressed","updateProgress","_this3","current","toFixed","getElementsByTagName","nodeValue","setProgress","buffered","percent","setProperty","updateSeekTooltip","_this4","tooltips","clientRect","getBoundingClientRect","visible","width","pageX","left","timeUpdate","invert","invertTime","seeking","durationUpdate","Math","pow","hasDuration","displayDuration","toggleMenuButton","setting","pane","panels","setCaptionsPositionMenu","default","getLabel","setQualityMenu","_this5","checkMenu","sort","a","b","sorting","getBadge","setCaptionsMenu","_this6","tracks","getTracks","toggled","language","unshift","_this7","panes","toggleTab","position","setSpeedMenu","_this8","isVimeo","values","some","popup","firstItem","toggleMenu","show","isMenuItem","getMenuSize","tab","clone","opacity","scrollWidth","height","scrollHeight","_this9","size","restore","propertyName","setDownloadLink","download","create","_this10","aria-haspopup","aria-controls","aria-expanded","inner","home","backButton","href","urls","isEmbed","inject","_this11","floor","random","seektime","addProperty","controlPressed","_this$config","labels","parseUrl","parser","buildUrlParams","params","URLSearchParams","setup","isVideo","isYouTube","protocol","blob","createObjectURL","languages","userLanguage","active","setPosition","captionPosition","trackEvents","_this$captions","meta","currentTrackNode","languageExists","mode","updateCues","setLanguage","customMenu","caption","activeClass","findTrack","_toConsumableArray","embed","enableTextTrack","has","sortIsDefault","sorted","every","getCurrentTrack","cues","activeCues","getCueAsHTML","cueText","setDefault","defaultLanguage","captionsActive","captionsLanguage","findLanguageList","prototype","defaults","autoplay","autopause","toggleInvert","ratio","clickToPlay","hideControls","resetOnEnd","disableContextMenu","logo","link","fullscreenContainer","loop","selected","keyboard","focused","global","fallback","iosNative","seekLabel","unmute","enableCaptions","disableCaptions","enterFullscreen","exitFullscreen","enterZoom","exitZoom","frameTitle","noCaptions","caption-position","captionPositionLabel","top","bottom","menuBack","normal","start","end","all","reset","disabled","advertisement","qualityBadge","2160","1440","1080","720","576","480","sdk","iframe","googleIMA","editable","layer","topLayer","bottomLayer","right","zoom","embedContainer","poster","posterEnabled","ads","playing","stopped","loading","hover","isTouch","uiSupported","noTransition","outerContainer","google","publisherId","providers","types","noop","Console","console","onChange","isZoom","zoomActive","isIosNative","isOutterContainerSet","first","last","keyCode","activeElement","shiftKey","toggleFallback","scrollPosition","x","scrollX","y","scrollY","scrollTo","overflow","viewport","head","property","hasProperty","cleanupViewport","part","Fullscreen","prefix","native","toggleZoom","webkitEnterFullscreen","requestFullscreen","webkitExitFullscreen","action","cancelFullScreen","exit","enter","fullscreenElement","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","pre","hahow","createControls","bottomLeft","bottomRight","addLecturneNoteBtn","lectureNote","addLectureNote","form","aria-labelled-by","tabindex","tabs","back","loadImage","minWidth","image","Image","handler","onload","onerror","naturalWidth","addStyleHook","addStylehookToFullscreenContainer","build","ready","checkPlaying","setTitle","setPoster","togglePoster","enable","backgroundImage","backgroundSize","toggleControls","checkLoading","clearTimeout","timers","recentTouchSeek","lastSeekTime","Date","now","Listeners","lastKey","focusTimer","lastKeyDown","handleKey","setTabFocus","firstTouch","code","repeat","altKey","ctrlKey","metaKey","togglePlay","increaseVolume","decreaseVolume","forward","toggleCaptions","isLoadedLectureNote","addLectureNoteButtonStatus","timeStamp","wasKeyDown","delay","hasAudio","initialized","managerPromise","isAudio","ended","proxyEvents","_event$detail","defaultHandler","customHandlerKey","customHandler","returned","hasCustomHandler","proxy","inputEvent","rect","currentTarget","hasAttribute","done","seekTo","webkitDirectionInvertedFromDevice","_map2","deltaX","deltaY","direction","sign","abs","logoContainer","imageContainer","linkElement","logoElement","module","exports","devnull","bundleIdCache","bundleResultCache","bundleCallbackQueue","publish","bundleId","pathsNotFound","q","splice","executeCallbacks","depsNotFound","success","loadFile","callbackFn","numTries","isCss","doc","async","maxTries","numRetries","beforeCallbackFn","before","pathStripped","rel","onbeforeload","ev","sheet","cssText","defaultPrevented","loadjs","paths","arg1","arg2","fn","numWaiting","loadFiles","deps","bundleIds","r","subscribe","isDefined","factory","loadScript","assurePlaybackState","hasPlayed","setAspectRatio","Vimeo","_split2","padding","paddingBottom","offset","transform","byline","portrait","transparent","gesture","$2","thumbnail_large","pathname","Player","disableTextTrack","stop","restorePause","setVolume","setCurrentTime","setPlaybackRate","name","currentSrc","setLoop","getVideoUrl","getVideoWidth","getVideoHeight","dimensions","getRatio","w","h","getAspectRatio","setAutopause","state","getVideoTitle","getCurrentTime","getDuration","getTextTracks","_ref$cues","strippedCues","fragment","createDocumentFragment","firstChild","getPaused","seconds","YT","onYouTubeReadyCallbacks","onYouTubeIframeAPIReady","getTitle","videoId","getVideoData","items","snippet","currentId","posterSrc","playerVars","hl","showinfo","iv_load_policy","modestbranding","disablekb","widget_referrer","cc_load_policy","cc_lang_pref","onError","message","2","5","100","101","150","onPlaybackRateChange","instance","playbackRate","getPlaybackRate","onReady","playVideo","pauseVideo","stopVideo","getAvailablePlaybackRates","clearInterval","buffering","setInterval","getVideoLoadedFraction","lastBuffered","onStateChange","unMute","Ads","displayContainer","manager","loader","cuePoints","safetyTimer","countdownTimer","ima","trigger","startSafetyTimer","clearSafetyTimer","setupIMA","setVpaidMode","ImaSdkSettings","VpaidMode","ENABLED","setLocale","AdDisplayContainer","requestAds","AdsLoader","AdsManagerLoadedEvent","Type","ADS_MANAGER_LOADED","onAdsManagerLoaded","AdErrorEvent","AD_ERROR","onAdError","AdsRequest","adTagUrl","tagUrl","linearAdSlotWidth","offsetWidth","linearAdSlotHeight","nonLinearAdSlotWidth","nonLinearAdSlotHeight","forceNonLinearFullSlot","setAdWillPlayMuted","getRemainingTime","AdsRenderingSettings","restoreCustomPlaybackStateOnAdBreakComplete","enablePreloading","getAdsManager","getCuePoints","cuePoint","seekElement","cuePercentage","AdEvent","onAdEvent","ad","getAd","LOADED","pollCountdown","isLinear","ALL_ADS_COMPLETED","loadAds","CONTENT_PAUSE_REQUESTED","pauseContent","CONTENT_RESUME_REQUESTED","resumeContent","STARTED","MIDPOINT","COMPLETE","IMPRESSION","CLICK","cancel","contentComplete","seekedTime","discardAdBreak","resize","ViewMode","NORMAL","initialize","init","adError","zIndex","destroy","handlers","_this12","AV_PUBLISHERID","AV_CHANNELID","AV_URL","cb","AV_WIDTH","AV_HEIGHT","AV_CDIM2","LectureNoteModel","showStatus","ShowStatus","Edit","noteStatus","NoteStatus","Create","note","Hide","Normal","AddLectureNoteButtonStatus","Enable","Disable","Hidden","LectureNote","lectureNoteList","lectureNoteContainer","beforeAddLectureNotePlayerState","beforeEditLectureNotePlayerState","hiddenLectureNote","updateAddLectureNoteButtonUI","addLectureNoteButton","getContainer","isLectureNoteExists","_id","lectureNoteDOM","generateLectureNoteDOM","lectureNotes","setupUI","enableLectureNote","round","getSameTimeLectureNote","contentContianer","clickEvent","disableLectureNote","newLectureNote","parentElement","progresses","lectureNoteId","cancelTimeout","data-id","mark","contentContainer","contentTextarea","placeholder","maxLength","rows","contentShowText","trashIconWrapper","trashIcon","removeLectureNote","isInComposition","group","groupEnd","leftLimit","insertElements","attribute","change","clear","prevType","prevProvider","_sources$","_sources$$provider","tagName","crossorigin","defaultCaption","defaultTracks","srclang","Plyr","failed","jQuery","original","getProviderByUrl","search","truthy","searchParams","webkitShowPlaybackTargetPicker","isHidden","hiding","eventName","soft","unload","inputIsValid","fauxDuration","realDuration","Infinity","mozHasAudio","webkitAudioDecodedByteCount","audioTracks","prev","curr","closest","requestPictureInPicture","exitPictureInPicture","webkitPresentationMode","pictureInPictureElement","inline","t"],"mappings":"82CAIA,IAAMA,EAAiB,SAAAC,GAAK,OAAKA,MAAAA,EAAiDA,EAAMC,YAAc,MAChGC,EAAa,SAACF,EAAOC,GAAR,OAAwBE,QAAQH,GAASC,GAAeD,aAAiBC,IACtFG,EAAoB,SAAAJ,GAAK,OAAIA,MAAAA,GAC7BK,EAAW,SAAAL,GAAK,OAAID,EAAeC,KAAWM,QAE9CC,EAAW,SAAAP,GAAK,OAAID,EAAeC,KAAWQ,QAG9CC,EAAU,SAAAT,GAAK,OAAIU,MAAMD,QAAQT,IAEjCW,EAAa,SAAAX,GAAK,OAAIE,EAAWF,EAAOY,WAQxCC,EAAU,SAAAb,GAAK,OACjBI,EAAkBJ,KAChBO,EAASP,IAAUS,EAAQT,IAAUW,EAAWX,MAAYA,EAAMc,QACnET,EAASL,KAAWM,OAAOS,KAAKf,GAAOc,QA0B5CE,EAAe,CACXC,gBAAiBb,EACjBc,OAAQb,EACRc,OA9Ca,SAAAnB,GAAK,OAAID,EAAeC,KAAWoB,SAAWA,OAAOC,MAAMrB,IA+CxEsB,OAAQf,EACRgB,QA9Cc,SAAAvB,GAAK,OAAID,EAAeC,KAAWG,SA+CjDqB,SA9Ce,SAAAxB,GAAK,OAAID,EAAeC,KAAWyB,UA+ClDC,MAAOjB,EACPkB,QA9Cc,SAAA3B,GAAK,OAAIE,EAAWF,EAAO4B,UA+CzCC,SAAUlB,EACVmB,QA9Cc,SAAA9B,GAAK,OAAIE,EAAWF,EAAO+B,UA+CzCC,SA9Ce,SAAAhC,GAAK,OAAID,EAAeC,KAAWiC,MA+ClDC,MA9CY,SAAAlC,GAAK,OAAIE,EAAWF,EAAOmC,QA+CvCC,cA9CoB,SAAApC,GAAK,OAAIE,EAAWF,EAAOqC,gBA+C/CC,IA9CU,SAAAtC,GAAK,OAAIE,EAAWF,EAAOuC,OAAOC,eAAiBtC,EAAWF,EAAOuC,OAAOE,SA+CtFC,MA9CY,SAAA1C,GAAK,OAAIE,EAAWF,EAAO2C,aAAgBvC,EAAkBJ,IAAUO,EAASP,EAAM4C,OA+ClGC,IAxCU,SAAA7C,GAEV,GAAIE,EAAWF,EAAOuC,OAAOO,KACzB,OAAO,EAIX,IAAKvC,EAASP,GACV,OAAO,EAIX,IAAIsB,EAAStB,EACRA,EAAM+C,WAAW,YAAe/C,EAAM+C,WAAW,cAClDzB,EAAM,UAAA0B,OAAahD,IAGvB,IACI,OAAQa,EAAQ,IAAIiC,IAAIxB,GAAQ2B,UAClC,MAAOC,GACL,OAAO,IAqBXC,MAAOtC,GC3DLuC,EAA4B,WAE9B,IAAIC,GAAY,EAChB,IACI,IAAMC,EAAUhD,OAAOiD,eAAe,GAAI,UAAW,CACjDC,IADiD,WAG7C,OADAH,GAAY,EACL,QAGfd,OAAOkB,iBAAiB,OAAQ,KAAMH,GACtCf,OAAOmB,oBAAoB,OAAQ,KAAMJ,GAC3C,MAAOJ,IAIT,OAAOG,EAhBuB,GAoB3B,SAASM,EAAe7B,EAASI,EAAO0B,GAA2D,IAAAC,EAAAC,KAAjDC,EAAiDC,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,IAAAA,UAAA,GAAjCE,IAAiCF,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,KAAAA,UAAA,GAAjBG,EAAiBH,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,IAAAA,UAAA,GAEtG,GAAKlC,GAAa,qBAAsBA,IAAYd,EAAGmC,MAAMjB,IAAWlB,EAAGQ,SAASoC,GAApF,CAKA,IAAMQ,EAASlC,EAAMmC,MAAM,KAIvBf,EAAUa,EAGVf,IACAE,EAAU,CAENY,QAAAA,EAEAC,QAAAA,IAKRC,EAAOE,QAAQ,SAAAC,GACPV,GAAQA,EAAKW,gBAAkBT,GAE/BF,EAAKW,eAAeC,KAAK,CAAE3C,QAAAA,EAASyC,KAAAA,EAAMX,SAAAA,EAAUN,QAAAA,IAGxDxB,EAAQiC,EAAS,mBAAqB,uBAAuBQ,EAAMX,EAAUN,MAK9E,SAASoB,EAAG5C,GAAiE,IAAxDsC,EAAwDJ,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAA/C,GAAIJ,EAA2CI,UAAAlD,OAAA,EAAAkD,UAAA,QAAAC,EAAjCC,IAAiCF,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,KAAAA,UAAA,GAAjBG,EAAiBH,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,IAAAA,UAAA,GAChFL,EAAegB,KAAKb,KAAMhC,EAASsC,EAAQR,GAAU,EAAMM,EAASC,GAIjE,SAASS,EAAI9C,GAAiE,IAAxDsC,EAAwDJ,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAA/C,GAAIJ,EAA2CI,UAAAlD,OAAA,EAAAkD,UAAA,QAAAC,EAAjCC,IAAiCF,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,KAAAA,UAAA,GAAjBG,EAAiBH,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,IAAAA,UAAA,GACjFL,EAAegB,KAAKb,KAAMhC,EAASsC,EAAQR,GAAU,EAAOM,EAASC,GAIlE,SAASU,EAAK/C,GAAiE,IAAxDsC,EAAwDJ,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAA/C,GAAIJ,EAA2CI,UAAAlD,OAAA,EAAAkD,UAAA,QAAAC,EAAjCC,IAAiCF,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,KAAAA,UAAA,GAAjBG,EAAiBH,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,IAAAA,UAAA,GAMlFL,EAAegB,KAAKb,KAAMhC,EAASsC,EALnC,SAASU,IACLF,EAAI9C,EAASsC,EAAQU,EAAcZ,EAASC,GADjB,IAAA,IAAAY,EAAAf,UAAAlD,OAANkE,EAAM,IAAAtE,MAAAqE,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAND,EAAMC,GAAAjB,UAAAiB,GAE3BrB,EAASsB,MAAMpB,KAAMkB,KAGgC,EAAMd,EAASC,GAIrE,SAASgB,EAAarD,GAAkD,IAAzCyC,EAAyCP,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAAlC,GAAIoB,EAA8BpB,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,IAAAA,UAAA,GAAbqB,EAAarB,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GAEvE,GAAKhD,EAAGc,QAAQA,KAAYd,EAAGmC,MAAMoB,GAArC,CAKA,IAAMrC,EAAQ,IAAIoD,YAAYf,EAAM,CAChCa,QAAAA,EACAC,OAAQ/E,OAAOiF,OAAO,GAAIF,EAAQ,CAC9BG,KAAM1B,SAKd,IACIhC,EAAQ2D,cAAcvD,GACxB,MAAOwD,GACL,MAAM,IAAIC,MAAJ,eAAA3C,OAAyBd,EAAMqC,KAA/B,MAAAvB,OAAwC4C,KAAKC,UAAU3D,EAAMmD,YC9FpE,SAASS,EAAKC,EAAUC,GAE3B,IAAMC,EAAUF,EAASjF,OAASiF,EAAW,CAACA,GAI9CrF,MAAMwF,KAAKD,GACNE,UACA7B,QAAQ,SAACxC,EAASsE,GACf,IAAMC,EAAQD,EAAQ,EAAIJ,EAAQM,WAAU,GAAQN,EAG9CO,EAASzE,EAAQ0E,WACjBC,EAAU3E,EAAQ4E,YAIxBL,EAAMM,YAAY7E,GAKd2E,EACAF,EAAOK,aAAaP,EAAOI,GAE3BF,EAAOI,YAAYN,KAM5B,SAASQ,EAAc/E,EAASgF,GAC9B9F,EAAGc,QAAQA,KAAYd,EAAGmC,MAAM2D,IAMrCxG,OAAOyG,QAAQD,GACVE,OAAO,SAAAC,GAAA,IAAIC,EAAJC,EAAAF,EAAA,GAAA,GAAA,OAAgBjG,EAAGC,gBAAgBiG,KAC1C5C,QAAQ,SAAA8C,GAAA,IAAAC,EAAAF,EAAAC,EAAA,GAAEE,EAAFD,EAAA,GAAOH,EAAPG,EAAA,GAAA,OAAkBvF,EAAQyF,aAAaD,EAAKJ,KAItD,SAASM,EAAcjD,EAAMuC,EAAYW,GAE5C,IAAM3F,EAAU4F,SAASF,cAAcjD,GAavC,OAVIvD,EAAGE,OAAO4F,IACVD,EAAc/E,EAASgF,GAIvB9F,EAAGM,OAAOmG,KACV3F,EAAQ6F,UAAYF,GAIjB3F,EAaJ,SAAS8F,EAAcrD,EAAMgC,EAAQO,EAAYW,GAC/CzG,EAAGc,QAAQyE,IAIhBA,EAAOI,YAAYa,EAAcjD,EAAMuC,EAAYW,IAIhD,SAASI,EAAc/F,GACtBd,EAAGa,SAASC,IAAYd,EAAGU,MAAMI,GACjCpB,MAAMwF,KAAKpE,GAASwC,QAAQuD,GAI3B7G,EAAGc,QAAQA,IAAad,EAAGc,QAAQA,EAAQ0E,aAIhD1E,EAAQ0E,WAAWsB,YAAYhG,GAI5B,SAASiG,EAAajG,GACzB,GAAKd,EAAGc,QAAQA,GAMhB,IAPkC,IAK5BhB,EAAWgB,EAAQkG,WAAnBlH,OAECA,EAAS,GACZgB,EAAQgG,YAAYhG,EAAQmG,WAC5BnH,GAAU,EAKX,SAASoH,EAAeC,EAAUC,GACrC,OAAKpH,EAAGc,QAAQsG,IAAcpH,EAAGc,QAAQsG,EAAS5B,aAAgBxF,EAAGc,QAAQqG,IAI7EC,EAAS5B,WAAW6B,aAAaF,EAAUC,GAEpCD,GALI,KASR,SAASG,EAA0BC,EAAKC,GAM3C,IAAKxH,EAAGM,OAAOiH,IAAQvH,EAAGmC,MAAMoF,GAC5B,MAAO,GAGX,IAAMzB,EAAa,GACb2B,EAAWD,EA0CjB,OAxCAD,EAAIlE,MAAM,KAAKC,QAAQ,SAAAoE,GAEnB,IAAMC,EAAWD,EAAEE,OACbC,EAAYF,EAASG,QAAQ,IAAK,IAIlCC,EAHWJ,EAASG,QAAQ,SAAU,IAGrBzE,MAAM,KACvBiD,EAAMyB,EAAM,GACZ7B,EAAQ6B,EAAMjI,OAAS,EAAIiI,EAAM,GAAGD,QAAQ,QAAS,IAAM,GAKjE,OAFcH,EAASK,OAAO,IAG1B,IAAK,IAEGhI,EAAGE,OAAOuH,IAAazH,EAAGM,OAAOmH,EAASQ,SAC1CR,EAASQ,OAAT,IAAAjG,OAAsB6F,IAG1B/B,EAAWmC,MAAQJ,EACnB,MAEJ,IAAK,IAED/B,EAAWoC,GAAKP,EAASG,QAAQ,IAAK,IACtC,MAEJ,IAAK,IAEDhC,EAAWQ,GAAOJ,KASvBJ,EAIJ,SAASqC,EAAarH,EAASsH,GAClC,GAAKpI,EAAGc,QAAQA,GAAhB,CAIA,IAAIuH,EAAOD,EAENpI,EAAGO,QAAQ8H,KACZA,GAAQvH,EAAQsH,QAGhBC,EACAvH,EAAQyF,aAAa,SAAU,IAE/BzF,EAAQwH,gBAAgB,WAKzB,SAASC,EAAYzH,EAAS+G,EAAWW,GAC5C,GAAIxI,EAAGa,SAASC,GACZ,OAAOpB,MAAMwF,KAAKpE,GAAS2H,IAAI,SAAAvG,GAAC,OAAIqG,EAAYrG,EAAG2F,EAAWW,KAGlE,GAAIxI,EAAGc,QAAQA,GAAU,CACrB,IAAI4H,EAAS,SAMb,YALqB,IAAVF,IACPE,EAASF,EAAQ,MAAQ,UAG7B1H,EAAQ6H,UAAUD,GAAQb,GACnB/G,EAAQ6H,UAAUC,SAASf,GAGtC,OAAO,EAIJ,SAASgB,EAAS/H,EAAS+G,GAC9B,OAAO7H,EAAGc,QAAQA,IAAYA,EAAQ6H,UAAUC,SAASf,GAItD,SAASiB,EAAQhI,EAAS6G,GAc7B,OAXA,WACI,OAAOjI,MAAMwF,KAAKwB,SAASqC,iBAAiBpB,IAAWqB,SAASlG,OAUrDa,KAAK7C,EAAS6G,GAI1B,SAASsB,EAAYtB,GACxB,OAAO7E,KAAKiC,SAASmE,UAAUH,iBAAiBpB,GAI7C,SAASwB,EAAWxB,GACvB,OAAO7E,KAAKiC,SAASmE,UAAUE,cAAczB,GAqC1C,SAAS0B,IAA2C,IAAlCvI,EAAkCkC,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAAxB,KAAMsG,EAAkBtG,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,IAAAA,UAAA,GAClDhD,EAAGc,QAAQA,KAKhBA,EAAQyI,QAGJD,GACAf,EAAYzH,EAASgC,KAAK0G,OAAOC,WAAWH,WCpS7C,IACGxI,EAEAsC,EAOAG,EAVGmG,GACH5I,EAAU4F,SAASF,cAAc,QAEjCpD,EAAS,CACXuG,iBAAkB,sBAClBC,cAAe,gBACfC,YAAa,gCACbC,WAAY,iBAGVvG,EAAOjE,OAAOS,KAAKqD,GAAQ2G,KAAK,SAAA7I,GAAK,YAA6B+B,IAAzBnC,EAAQkJ,MAAM9I,OAEtDlB,EAAGM,OAAOiD,IAAQH,EAAOG,IAI7B,SAAS0G,EAAQnJ,GACpBoJ,WAAW,WACP,IACI/B,EAAarH,GAAS,GACtBA,EAAQqJ,aACRhC,EAAarH,GAAS,GACxB,MAAOoB,MAGV,GC3BP,IC+FckI,ED/FRC,EAAU,CACZC,OAAgC5D,SAAS6D,aACzCC,SAAU,qBAAsB9D,SAAS+D,gBAAgBT,QAAU,OAAOU,KAAKC,UAAUC,WACzFC,SAAU,kBAAkBH,KAAKC,UAAUG,UAC3CC,MAAO,uBAAuBL,KAAKC,UAAUG,WCC3CE,EAAgB,CAClBC,YAAa,SACbC,YAAa,IACbC,aAAc,cACdC,YAAa,yBACbC,YAAa,UAIXC,EAAU,CAEZC,MAAO,gBAAiB7E,SAASF,cAAc,SAC/CgF,MAAO,gBAAiB9E,SAASF,cAAc,SAI/CiF,MAPY,SAONlI,EAAMmI,EAAUC,GAClB,IAAMC,EAAgBvB,EAAQQ,UAAYc,GAAeL,EAAQK,YAC3DE,EAAMP,EAAQ/H,IAAsB,UAAbmI,EAG7B,MAAO,CACHG,IAAAA,EACAC,GAJOD,GAAOP,EAAQS,aAAwB,UAATxI,IAAqB8G,EAAQQ,UAAYe,KAUtFI,MACQ3B,EAAQQ,WAMR7K,EAAGQ,SAASgG,EAAc,SAASyF,8BAMnCvF,SAASwF,yBAA4B1F,EAAc,SAAS2F,0BASpEC,QAASpM,EAAGQ,SAASe,OAAO8K,uCAI5BV,YAAa,gBAAiBjF,SAASF,cAAc,SAKrD8F,KAnDY,SAmDPC,GAAW,IAMRhJ,EALGiJ,EADKrG,EACQoG,EAAUlJ,MAAM,KADxB,GAAA,GAEZ,IAAKP,KAAK2J,SAAWD,IAAc1J,KAAKS,KACpC,OAAO,EAIPgJ,GAAaA,EAAUvD,SAAS,WAEhCzF,EAAOgJ,EACc,eAAdA,EAEPhJ,EAAO,cACAgJ,KAAavB,IAEpBzH,EAAI,GAAAvB,OAAMuK,EAAN,cAAAvK,OAA4BgJ,EAAcuB,GAA1C,MAGR,IACI,OAAOpN,QAAQoE,GAAQT,KAAK4J,MAAMC,YAAYpJ,GAAMuE,QAAQ,KAAM,KACpE,MAAOpD,GACL,OAAO,IAKfkI,WAAY,eAAgBlG,SAASF,cAAc,SAGnDuF,YACU3B,EAAQ1D,SAASF,cAAc,SACrC4D,EAAM7G,KAAO,QACS,UAAf6G,EAAM7G,MAKjBsJ,MAAO,iBAAkBnG,SAAS+D,gBAGlCqC,aAAoC,IAAvBpD,EAIbqD,cAAe,eAAgBxL,QAAUA,OAAOyL,WAAW,4BAA4BlE,SCxGrFmE,EAAQ,CACVC,WADU,WACG,IAAArK,EAAAC,KACT,OAAKA,KAAK2J,QAIM/M,MAAMwF,KAAKpC,KAAK4J,MAAM3D,iBAAiB,WAGxC/C,OAAO,SAAAmH,GAAM,OAAI7B,EAAQgB,KAAK3I,KAAKd,EAAMsK,EAAOC,aAAa,WANjE,IAUfC,kBAbU,WAeN,OAAOJ,EAAMC,WACRvJ,KAAKb,MACL2F,IAAI,SAAA0E,GAAM,OAAI/M,OAAO+M,EAAOC,aAAa,WACzCpH,OAAO7G,UAGhBmO,OArBU,WAsBN,GAAKxK,KAAK2J,QAAV,CAIA,IAAMc,EAASzK,KAGfxD,OAAOiD,eAAegL,EAAOb,MAAO,UAAW,CAC3Cc,cAAc,EACdhL,IAF2C,WAIvC,IACM2K,EADUF,EAAMC,WAAWvJ,KAAK4J,GACfxD,KAAK,SAAAoD,GAAM,OAAIA,EAAOC,aAAa,SAAWG,EAAOJ,SAG5E,OAAOA,GAAU/M,OAAO+M,EAAOC,aAAa,UAEhDK,IAV2C,SAUvCzO,GAEA,IAGMmO,EAHUF,EAAMC,WAAWvJ,KAAK4J,GAGfxD,KAAK,SAAAoD,GAAM,OAAI/M,OAAO+M,EAAOC,aAAa,WAAapO,IAG9E,GAAKmO,EAAL,CARO,IAAAO,EAa8CH,EAAOb,MAApDiB,EAbDD,EAaCC,YAAaC,EAbdF,EAacE,OAAQC,EAbtBH,EAasBG,QAASC,EAb/BJ,EAa+BI,WAEtCP,EAAOQ,QAEP7D,WAAW,WAEPqD,EAAOb,MAAMsB,IAAMb,EAAOC,aAAa,QAGvB,SAAZS,GAAsBC,KAEtBP,EAAO1J,KAAK,iBAAkB,WACC,IAAvB0J,EAAOI,cACPJ,EAAOI,YAAcA,GAIpBC,GACDL,EAAOU,SAKfV,EAAOb,MAAMwB,QAIjB,IAAMC,EAAQZ,EAAOa,QAAQ5L,IAAI,SAC7BxC,EAAGG,OAAOgO,KACVZ,EAAOY,MAAQA,EACfE,GAASC,cAAc3K,KAAK4J,EAAQ,QAASY,IAIjDhK,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,iBAAiB,EAAO,CAC5D6B,QAASvP,KAEd,SAOfwP,eAhGU,WAiGN,GAAK1L,KAAK2J,QAAV,CAIA,IAAMgC,EAAUxB,EAAMC,WAAWvJ,KAAKb,MAClC2L,GAAWA,EAAQ3O,OAAS,IAE5B2O,EAAQnL,QAAQ,SAAC6J,GACbA,EAAO5G,aAAa,MAAO,MAE/BzD,KAAK4J,MAAMwB,QAGfrH,EAAc4H,GAKd3L,KAAK4J,MAAMnG,aAAa,MAAOzD,KAAK0G,OAAOkF,YAK3C5L,KAAK4J,MAAMwB,OAGXpL,KAAK6L,MAAMC,IAAI,iCC9HhB,SAASC,EAAOnO,GACnB,OAAKV,EAAGU,MAAMA,GAIPA,EAAMsF,OAAO,SAAC8I,EAAM1J,GAAP,OAAiB1E,EAAMqO,QAAQD,KAAU1J,IAHlD1E,ECGR,SAASsO,EAAQ9O,EAAQ+O,GAC5B,OAAOA,EAAK5L,MAAM,KAAK6L,OAAO,SAACC,EAAK7I,GAAN,OAAc6I,GAAOA,EAAI7I,IAAMpG,GAI1D,SAASoN,IAAgC,IAAA,IAAzB8B,EAAyBpM,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAAhB,GAAgBe,EAAAf,UAAAlD,OAAT2O,EAAS,IAAA/O,MAAAqE,EAAA,EAAAA,EAAA,EAAA,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAATwK,EAASxK,EAAA,GAAAjB,UAAAiB,GAC5C,IAAKwK,EAAQ3O,OACT,OAAOsP,EAGX,IAAMjC,EAASsB,EAAQY,QAEvB,OAAKrP,EAAGE,OAAOiN,IAIf7N,OAAOS,KAAKoN,GAAQ7J,QAAQ,SAAAgD,GACpBtG,EAAGE,OAAOiN,EAAO7G,KACZhH,OAAOS,KAAKqP,GAAQpG,SAAS1C,IAC9BhH,OAAOiF,OAAO6K,EAAdE,EAAA,GAAyBhJ,EAAM,KAGnCgH,EAAO8B,EAAO9I,GAAM6G,EAAO7G,KAE3BhH,OAAOiF,OAAO6K,EAAdE,EAAA,GAAyBhJ,EAAM6G,EAAO7G,OAIvCgH,EAAMpJ,WAAN,EAAA,CAAOkL,GAAPpN,OAAkByM,KAfdW,ECbR,SAASG,EAAOvQ,GAAgB,IAAA,IAAA+E,EAAAf,UAAAlD,OAANkE,EAAM,IAAAtE,MAAAqE,EAAA,EAAAA,EAAA,EAAA,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAND,EAAMC,EAAA,GAAAjB,UAAAiB,GACnC,OAAIjE,EAAGmC,MAAMnD,GACFA,EAGJA,EAAMwQ,WAAW1H,QAAQ,WAAY,SAAC2H,EAAOC,GAAR,OAAc1L,EAAK0L,GAAGF,aAa/D,SAASG,IAAgD,IAArC3Q,EAAqCgE,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAA7B,GAAI+G,EAAyB/G,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAAlB,GAAI8E,EAAc9E,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GACxD,OAAOhE,EAAM8I,QACT,IAAI8H,OAAO7F,EAAKyF,WAAW1H,QAAQ,6BAA6B,QAAS,KACzEA,EAAQ0H,YAKT,SAASK,IACZ,OADoC7M,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAAJ,IACnBwM,WAAW1H,QAAQ,SAAU,SAAArB,GAAI,OAAIA,EAAKuB,OAAO,GAAG8H,cAAgBrJ,EAAKsJ,OAAO,GAAGC,gBAqB7F,SAASC,IAAwB,IAChC3P,GADgC0C,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAAJ,IACbwM,WAMnB,OAHAlP,EArBG,WAAkC,IACjCA,GADiC0C,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAAJ,IACdwM,WAYnB,OATAlP,EAASqP,EAAWrP,EAAQ,IAAK,KAGjCA,EAASqP,EAAWrP,EAAQ,IAAK,KAM1BqP,EAHPrP,EAASuP,EAAYvP,GAGK,IAAK,IAQtB4P,CAAa5P,IAGR0H,OAAO,GAAGgI,cAAgB1P,EAAO6P,MAAM,GAalD,SAASC,EAAQtP,GACpB,IAAMkE,EAAU0B,SAASF,cAAc,OAEvC,OADAxB,EAAQW,YAAY7E,GACbkE,EAAQqL,UC1EnB,IAAMC,GAAY,CACdtE,IAAK,MACLI,QAAS,UACTa,MAAO,QACPsD,MAAO,QACPC,QAAS,WAGPC,GAAO,WACkB,IAAvBnK,EAAuBtD,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAAjB,GAAIwG,EAAaxG,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GACnB,GAAIhD,EAAGmC,MAAMmE,IAAQtG,EAAGmC,MAAMqH,GAC1B,MAAO,GAGX,IAAIlJ,EAAS0O,EAAQxF,EAAOiH,KAAMnK,GAElC,GAAItG,EAAGmC,MAAM7B,GACT,OAAIhB,OAAOS,KAAKuQ,IAAWtH,SAAS1C,GACzBgK,GAAUhK,GAGd,GAGX,IAAMwB,EAAU,CACZ4I,aAAclH,EAAOmH,SACrBC,UAAWpH,EAAOqH,OAOtB,OAJAvR,OAAOyG,QAAQ+B,GAASxE,QAAQ,SAAA2C,GAAkB,IAAA6K,EAAA3K,EAAAF,EAAA,GAAhBK,EAAgBwK,EAAA,GAAX5K,EAAW4K,EAAA,GAC9CxQ,EAASqP,EAAWrP,EAAQgG,EAAKJ,KAG9B5F,GCnCTyQ,cACF,SAAAA,EAAYxD,GAAQyD,EAAAlO,KAAAiO,GAChBjO,KAAKmO,QAAU1D,EAAO/D,OAAO4E,QAAQ6C,QACrCnO,KAAKwD,IAAMiH,EAAO/D,OAAO4E,QAAQ9H,0CAuBjCA,GACA,IAAKyK,EAAQ1O,YAAcS,KAAKmO,QAC5B,OAAO,KAGX,IAAMC,EAAQ3P,OAAO4P,aAAaC,QAAQtO,KAAKwD,KAE/C,GAAItG,EAAGmC,MAAM+O,GACT,OAAO,KAGX,IAAMG,EAAOzM,KAAK0M,MAAMJ,GAExB,OAAOlR,EAAGM,OAAOgG,IAAQA,EAAIxG,OAASuR,EAAK/K,GAAO+K,8BAGlDnR,GAEA,GAAK6Q,EAAQ1O,WAAcS,KAAKmO,SAK3BjR,EAAGE,OAAOA,GAAf,CAKA,IAAIkO,EAAUtL,KAAKN,MAGfxC,EAAGmC,MAAMiM,KACTA,EAAU,IAIdd,EAAOc,EAASlO,GAGhBqB,OAAO4P,aAAaI,QAAQzO,KAAKwD,IAAK1B,KAAKC,UAAUuJ,yCAzDrD,IACI,KAAM,iBAAkB7M,QACpB,OAAO,EAUX,OAHAA,OAAO4P,aAAaI,QAJP,UAAA,WAKbhQ,OAAO4P,aAAaK,WALP,YAON,EACT,MAAOtP,GACL,OAAO,YCxBJ,SAASuP,GAAM5P,GAA4B,IAAvB6P,EAAuB1O,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAAR,OAC9C,OAAO,IAAI2O,QAAQ,SAACC,EAASC,GACzB,IACI,IAAMC,EAAU,IAAIC,eAGpB,KAAM,oBAAqBD,GACvB,OAGJA,EAAQrP,iBAAiB,OAAQ,WAC7B,GAAqB,SAAjBiP,EACA,IACIE,EAAQhN,KAAK0M,MAAMQ,EAAQE,eAC7B,MAAO9P,GACL0P,EAAQE,EAAQE,mBAGpBJ,EAAQE,EAAQG,YAIxBH,EAAQrP,iBAAiB,QAAS,WAC9B,MAAM,IAAIkC,MAAMmN,EAAQI,UAG5BJ,EAAQK,KAAK,MAAOtQ,GAAK,GAGzBiQ,EAAQJ,aAAeA,EAEvBI,EAAQM,OACV,MAAOlQ,GACL2P,EAAO3P,MC7BJ,SAASmQ,GAAWxQ,EAAKqG,GACpC,GAAKlI,EAAGM,OAAOuB,GAAf,CAIA,IACMyQ,EAAQtS,EAAGM,OAAO4H,GAGlBqK,EAAS,WAAA,OAAsC,OAAhC7L,SAAS8L,eAAetK,IAEvCuK,EAAS,SAACvJ,EAAWwJ,GACvBxJ,EAAUmH,UAAYqC,EAGlBJ,GAASC,KAKb7L,SAASiM,KAAKC,sBAAsB,aAAc1J,IAItD,IAAKoJ,IAAUC,IAAU,CACrB,IAAMM,EAAa9B,GAAQ1O,UAGrB6G,EAAYxC,SAASF,cAAc,OAQzC,GAPA0C,EAAU3C,aAAa,SAAU,IAE7B+L,GACApJ,EAAU3C,aAAa,KAAM2B,GAI7B2K,EAAY,CACZ,IAAMC,EAASvR,OAAO4P,aAAaC,QAApB,GAAApP,OAhCR,QAgCQ,KAAAA,OAAyCkG,IAGxD,GAFsB,OAAX4K,EAEG,CACV,IAAMJ,EAAO9N,KAAK0M,MAAMwB,GACxBL,EAAOvJ,EAAWwJ,EAAKK,UAK/BtB,GAAM5P,GACDmR,KAAK,SAAAC,GACEjT,EAAGmC,MAAM8Q,KAITJ,GACAtR,OAAO4P,aAAaI,QAApB,GAAAvP,OAjDD,QAiDC,KAAAA,OACiBkG,GACbtD,KAAKC,UAAU,CACXkO,QAASE,KAKrBR,EAAOvJ,EAAW+J,MAErBC,MAAM,gBClEZ,IAAMC,GAAW,SAAAjN,GAAK,OAAIkN,SAAUlN,EAAQ,GAAK,GAAM,GAAI,KACrDmN,GAAa,SAAAnN,GAAK,OAAIkN,SAAUlN,EAAQ,GAAM,GAAI,KAClDoN,GAAa,SAAApN,GAAK,OAAIkN,SAASlN,EAAQ,GAAI,KAGjD,SAASqN,KAA6D,IAAlDC,EAAkDxQ,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAA3C,EAAGyQ,EAAwCzQ,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,IAAAA,UAAA,GAAlB0Q,EAAkB1Q,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,IAAAA,UAAA,GAEzE,IAAKhD,EAAGG,OAAOqT,GACX,OAAOD,GAAW,KAAME,EAAcC,GAI1C,IAAMnE,EAAS,SAAArJ,GAAK,MAAI,IAAAlE,OAAIkE,GAAQiK,OAAO,IAGvCwD,EAAQR,GAASK,GACfI,EAAOP,GAAWG,GAClBK,EAAOP,GAAWE,GAUxB,OANIG,EADAF,GAAgBE,EAAQ,EACnB,GAAA3R,OAAM2R,EAAN,KAEG,GAIZ,GAAA3R,OAAU0R,GAAYF,EAAO,EAAI,IAAM,IAAvCxR,OAA4C2R,GAA5C3R,OAAoDuN,EAAOqE,GAA3D,KAAA5R,OAAoEuN,EAAOsE,ICb/E,IAAMxF,GAAW,CAEbyF,WAFa,WAGT,IACMC,EADM,IAAIjS,IAAIgB,KAAK0G,OAAOwK,QAASzS,OAAO0S,UAC/BC,OAAS3S,OAAO0S,SAASC,MAAS7J,EAAQC,OAAS/I,OAAO4S,cAE3E,MAAO,CACHtS,IAAKiB,KAAK0G,OAAOwK,QACjBD,KAAAA,IAKRK,aAba,WAcT,IAyCI,OAxCAtR,KAAKiC,SAASsJ,SAAWlF,EAAWxF,KAAKb,KAAMA,KAAK0G,OAAO6K,UAAUhG,SAASrJ,SAG9ElC,KAAKiC,SAASuP,QAAU,CACpBrG,KAAMhF,EAAYtF,KAAKb,KAAMA,KAAK0G,OAAO6K,UAAUC,QAAQrG,MAC3DF,MAAO5E,EAAWxF,KAAKb,KAAMA,KAAK0G,OAAO6K,UAAUC,QAAQvG,OAC3DwG,QAASpL,EAAWxF,KAAKb,KAAMA,KAAK0G,OAAO6K,UAAUC,QAAQC,SAC7DC,OAAQrL,EAAWxF,KAAKb,KAAMA,KAAK0G,OAAO6K,UAAUC,QAAQE,QAC5DC,YAAatL,EAAWxF,KAAKb,KAAMA,KAAK0G,OAAO6K,UAAUC,QAAQG,aACjEC,KAAMvL,EAAWxF,KAAKb,KAAMA,KAAK0G,OAAO6K,UAAUC,QAAQI,MAC1D1I,IAAK7C,EAAWxF,KAAKb,KAAMA,KAAK0G,OAAO6K,UAAUC,QAAQtI,KACzDI,QAASjD,EAAWxF,KAAKb,KAAMA,KAAK0G,OAAO6K,UAAUC,QAAQlI,SAC7DuI,SAAUxL,EAAWxF,KAAKb,KAAMA,KAAK0G,OAAO6K,UAAUC,QAAQK,UAC9DC,SAAUzL,EAAWxF,KAAKb,KAAMA,KAAK0G,OAAO6K,UAAUC,QAAQM,UAC9DC,WAAY1L,EAAWxF,KAAKb,KAAMA,KAAK0G,OAAO6K,UAAUC,QAAQO,aAIpE/R,KAAKiC,SAAS+P,SAAW3L,EAAWxF,KAAKb,KAAMA,KAAK0G,OAAO6K,UAAUS,UAGrEhS,KAAKiC,SAASgQ,OAAS,CACnBC,KAAM7L,EAAWxF,KAAKb,KAAMA,KAAK0G,OAAO6K,UAAUU,OAAOC,MACzDC,OAAQ9L,EAAWxF,KAAKb,KAAMA,KAAK0G,OAAO6K,UAAUU,OAAOE,SAI/DnS,KAAKiC,SAASmQ,QAAU,CACpBC,OAAQhM,EAAWxF,KAAKb,KAAMA,KAAK0G,OAAO6K,UAAUa,QAAQC,QAC5DxH,YAAaxE,EAAWxF,KAAKb,KAAMA,KAAK0G,OAAO6K,UAAUa,QAAQvH,aACjEyH,SAAUjM,EAAWxF,KAAKb,KAAMA,KAAK0G,OAAO6K,UAAUa,QAAQE,WAI9DpV,EAAGc,QAAQgC,KAAKiC,SAAS+P,YACzBhS,KAAKiC,SAASmQ,QAAQG,YAAcvS,KAAKiC,SAAS+P,SAAS1L,cAAvB,IAAApH,OAC5Bc,KAAK0G,OAAOC,WAAW6L,YAI5B,EACT,MAAOC,GAOL,OALAzS,KAAK6L,MAAM6G,KAAK,kEAAmED,GAGnFzS,KAAK2S,sBAAqB,IAEnB,IAKfC,WApEa,SAoEFnS,EAAMuC,GACb,IACMkO,EAAU3F,GAASyF,WAAWnQ,KAAKb,MACnC6S,EAAQ,GAAA3T,OAAOgS,EAAQD,KAAqB,GAAdC,EAAQnS,IAA9B,KAAAG,OAA0Cc,KAAK0G,OAAOoM,YAG9DC,EAAOnP,SAASoP,gBALJ,6BAK+B,OACjDjQ,EACIgQ,EACAvI,EAAOxH,EAAY,CACfiQ,KAAM,eACNC,UAAW,WAKnB,IAAMC,EAAMvP,SAASoP,gBAfH,6BAe8B,OAC1C7G,EAAI,GAAAjN,OAAM2T,EAAN,KAAA3T,OAAkBuB,GAe5B,MAVI,SAAU0S,GACVA,EAAIC,eAAe,+BAAgC,OAAQjH,GAI/DgH,EAAIC,eAAe,+BAAgC,aAAcjH,GAGjE4G,EAAKlQ,YAAYsQ,GAEVJ,GAIXM,YAxGa,SAwGD7P,GAAgB,IAAX8P,EAAWpT,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GACdyD,EAAOgK,GAASnK,EAAKxD,KAAK0G,QAMhC,OAAOhD,EAAc,OAJFlH,OAAOiF,OAAO,GAAI6R,EAAM,CACvCnO,MAAO,CAACmO,EAAKnO,MAAOnF,KAAK0G,OAAOC,WAAWrB,QAAQpC,OAAO7G,SAASkX,KAAK,OAGnC5P,IAI7C6P,YAnHa,SAmHD7P,GACR,GAAIzG,EAAGmC,MAAMsE,GACT,OAAO,KAGX,IAAM8P,EAAQ/P,EAAc,OAAQ,CAChCyB,MAAOnF,KAAK0G,OAAOC,WAAW+M,KAAKtQ,QAavC,OAVAqQ,EAAM5Q,YACFa,EACI,OACA,CACIyB,MAAOnF,KAAK0G,OAAOC,WAAW+M,KAAKD,OAEvC9P,IAID8P,GAIXE,aA1Ia,SA0IAC,EAAYN,GACrB,IAAMtQ,EAAaxG,OAAOiF,OAAO,GAAI6R,GACjC7S,EAAO0M,EAAYyG,GAEjBC,EAAQ,CACV7V,QAAS,SACTiC,QAAQ,EACR6T,MAAO,KACPf,KAAM,KACNgB,aAAc,KACdC,YAAa,MAyBjB,OAtBA,CAAC,UAAW,OAAQ,SAASxT,QAAQ,SAAAgD,GAC7BhH,OAAOS,KAAK+F,GAAYkD,SAAS1C,KACjCqQ,EAAMrQ,GAAOR,EAAWQ,UACjBR,EAAWQ,MAKJ,WAAlBqQ,EAAM7V,SAAyBxB,OAAOS,KAAK+F,GAAYkD,SAAS,UAChElD,EAAWvC,KAAO,UAIlBjE,OAAOS,KAAK+F,GAAYkD,SAAS,SAC5BlD,EAAWmC,MAAMe,SAASlG,KAAK0G,OAAOC,WAAWsN,WAClDjR,EAAWmC,OAAX,IAAAjG,OAAwBc,KAAK0G,OAAOC,WAAWsN,UAGnDjR,EAAWmC,MAAQnF,KAAK0G,OAAOC,WAAWsN,QAItCL,GACJ,IAAK,OACDC,EAAM5T,QAAS,EACf4T,EAAMC,MAAQ,OACdD,EAAME,aAAe,QACrBF,EAAMd,KAAO,OACbc,EAAMG,YAAc,QACpB,MAEJ,IAAK,OACDH,EAAM5T,QAAS,EACf4T,EAAMC,MAAQ,OACdD,EAAME,aAAe,SACrBF,EAAMd,KAAO,SACbc,EAAMG,YAAc,QACpB,MAEJ,IAAK,WACDH,EAAM5T,QAAS,EACf4T,EAAMC,MAAQ,iBACdD,EAAME,aAAe,kBACrBF,EAAMd,KAAO,eACbc,EAAMG,YAAc,cACpB,MAEJ,IAAK,OACDH,EAAM5T,QAAS,EACf4T,EAAMC,MAAQ,YACdD,EAAME,aAAe,WACrBF,EAAMd,KAAO,aACbc,EAAMG,YAAc,YACpB,MAEJ,IAAK,aACDH,EAAM5T,QAAS,EACf4T,EAAMC,MAAQ,kBACdD,EAAME,aAAe,iBACrBF,EAAMd,KAAO,mBACbc,EAAMG,YAAc,kBACpB,MAEJ,IAAK,aACDhR,EAAWmC,OAAX,IAAAjG,OAAwBc,KAAK0G,OAAOC,WAAWsN,QAA/C,cACAxT,EAAO,OACPoT,EAAMC,MAAQ,OACdD,EAAMd,KAAO,OACb,MAEJ,IAAK,mBACDtS,EAAO,mBACPoT,EAAMC,MAAQ,OACdD,EAAMd,KAAO,mBAEjB,QACQ7V,EAAGmC,MAAMwU,EAAMC,SACfD,EAAMC,MAAQrT,GAEdvD,EAAGmC,MAAMwU,EAAMd,QACfc,EAAMd,KAAOa,GAIzB,IAAMM,EAASxQ,EAAcmQ,EAAM7V,SA+CnC,OA5CI6V,EAAM5T,QAENiU,EAAOrR,YACH0I,GAASqH,WAAW/R,KAAKb,KAAM6T,EAAMG,YAAa,CAC9C7O,MAAO,mBAGf+O,EAAOrR,YACH0I,GAASqH,WAAW/R,KAAKb,KAAM6T,EAAMd,KAAM,CACvC5N,MAAO,uBAKf+O,EAAOrR,YACH0I,GAAS8H,YAAYxS,KAAKb,KAAM6T,EAAME,aAAc,CAChD5O,MAAO,oBAGf+O,EAAOrR,YACH0I,GAAS8H,YAAYxS,KAAKb,KAAM6T,EAAMC,MAAO,CACzC3O,MAAO,0BAIf+O,EAAOrR,YAAY0I,GAASqH,WAAW/R,KAAKb,KAAM6T,EAAMd,OACxDmB,EAAOrR,YAAY0I,GAAS8H,YAAYxS,KAAKb,KAAM6T,EAAMC,SAI7DtJ,EAAOxH,EAAYwB,EAA0BxE,KAAK0G,OAAO6K,UAAUC,QAAQ/Q,GAAOuC,IAClFD,EAAcmR,EAAQlR,GAGT,SAATvC,GACKvD,EAAGU,MAAMoC,KAAKiC,SAASuP,QAAQ/Q,MAChCT,KAAKiC,SAASuP,QAAQ/Q,GAAQ,IAGlCT,KAAKiC,SAASuP,QAAQ/Q,GAAME,KAAKuT,IAEjClU,KAAKiC,SAASuP,QAAQ/Q,GAAQyT,EAG3BA,GAIXC,YA9Ra,SA8RD1T,EAAMuC,GAEd,IAAM9G,EAAQwH,EACV,QACA8G,EACIhG,EAA0BxE,KAAK0G,OAAO6K,UAAUU,OAAOxR,IACvD,CACIA,KAAM,QACN2T,IAAK,EACLC,IAAK,IACLC,KAAM,IACNlR,MAAO,EACPmR,aAAc,MAEdtB,KAAM,SACNuB,aAAc7G,GAASlN,EAAMT,KAAK0G,QAClC+N,gBAAiB,EACjBC,gBAAiB,IACjBC,gBAAiB,GAErB3R,IASR,OALAhD,KAAKiC,SAASgQ,OAAOxR,GAAQvE,EAG7BqP,GAASqJ,gBAAgB/T,KAAKb,KAAM9D,GAE7BA,GAIX2Y,eA/Ta,SA+TEpU,EAAMuC,GACjB,IAAMgP,EAAWtO,EACb,WACA8G,EACIhG,EAA0BxE,KAAK0G,OAAO6K,UAAUa,QAAQ3R,IACxD,CACI2T,IAAK,EACLC,IAAK,IACLjR,MAAO,EACP6P,KAAM,eACN6B,eAAe,GAEnB9R,IAKR,GAAa,WAATvC,EAAmB,CACnBuR,EAASnP,YAAYa,EAAc,OAAQ,KAAM,MAEjD,IAAMqR,EAAY,CACdC,OAAQ,SACR3C,OAAQ,YACV5R,GACIwU,EAASF,EAAYpH,GAASoH,EAAW/U,KAAK0G,QAAU,GAE9DsL,EAASnO,UAAT,KAAA3E,OAA0B+V,EAAO/H,eAKrC,OAFAlN,KAAKiC,SAASmQ,QAAQ3R,GAAQuR,EAEvBA,GAIXkD,WAlWa,SAkWFzU,GACP,IAAMuC,EAAawB,EAA0BxE,KAAK0G,OAAO6K,UAAUa,QAAQ3R,IAErE2F,EAAY1C,EACd,MACA8G,EAAOxH,EAAY,CACfmC,MAAO,GAAAjG,OAAGc,KAAK0G,OAAOC,WAAWyL,QAAQ1B,KAAlC,KAAAxR,OAA0C8D,EAAWmC,MAAQnC,EAAWmC,MAAQ,IAAKL,OAC5F0P,aAAc7G,GAASlN,EAAMT,KAAK0G,UAEtC,SAMJ,OAFA1G,KAAKiC,SAASmQ,QAAQ3R,GAAQ2F,EAEvBA,GAMX+O,sBAvXa,SAuXSC,EAAU3U,GAAM,IAAAV,EAAAC,KAElCY,EACIwU,EACA,gBACA,SAAAhX,GAEI,GAAK,CAAC,GAAI,GAAI,GAAI,IAAI8H,SAAS9H,EAAMiX,SAKrCjX,EAAMkX,iBACNlX,EAAMmX,kBAGa,YAAfnX,EAAMqC,MAAV,CAIA,IAMQ6L,EANFkJ,EAAgBxP,EAAQoP,EAAU,0BAGxC,IAAKI,GAAiB,CAAC,GAAI,IAAItP,SAAS9H,EAAMiX,OAC1C9J,GAASkK,cAAc5U,KAAKd,EAAMU,GAAM,QAIpB,KAAhBrC,EAAMiX,QACc,KAAhBjX,EAAMiX,OAAiBG,GAAiC,KAAhBpX,EAAMiX,OAC9C/I,EAAS8I,EAASM,mBAEbxY,EAAGc,QAAQsO,KACZA,EAAS8I,EAAS1S,WAAWiT,qBAGjCrJ,EAAS8I,EAASQ,uBAEb1Y,EAAGc,QAAQsO,KACZA,EAAS8I,EAAS1S,WAAWmT,mBAIrCtP,EAAS1F,KAAKd,EAAMuM,GAAQ,OAIxC,GAKJ1L,EAAGwU,EAAU,QAAS,SAAAhX,GACE,KAAhBA,EAAMiX,OAIV9J,GAASuK,mBAAmBjV,KAAKd,EAAM,MAAM,MAKrDgW,eArba,SAAA5S,GAqb+D,IAAA6S,EAAAhW,KAA3DoD,EAA2DD,EAA3DC,MAAO6S,EAAoD9S,EAApD8S,KAAMxV,EAA8C0C,EAA9C1C,KAAMsN,EAAwC5K,EAAxC4K,MAAwCmI,EAAA/S,EAAjCsQ,MAAAA,OAAiC,IAAAyC,EAAzB,KAAyBA,EAAAC,EAAAhT,EAAnBiT,QAAAA,OAAmB,IAAAD,GAAAA,EAClEnT,EAAawB,EAA0BxE,KAAK0G,OAAO6K,UAAUU,OAAOxR,IAEpE2U,EAAW1R,EACb,SACA8G,EAAOxH,EAAY,CACfvC,KAAM,SACNwS,KAAM,gBACN9N,MAAO,GAAAjG,OAAGc,KAAK0G,OAAOC,WAAWsN,QAA1B,KAAA/U,OAAqC8D,EAAWmC,MAAQnC,EAAWmC,MAAQ,IAAKL,OACvFuR,eAAgBD,EAChBhT,MAAAA,KAIFkT,EAAO5S,EAAc,QAG3B4S,EAAK/I,UAAYQ,EAEb7Q,EAAGc,QAAQyV,IACX6C,EAAKzT,YAAY4Q,GAGrB2B,EAASvS,YAAYyT,GAGrB9Z,OAAOiD,eAAe2V,EAAU,UAAW,CACvCmB,YAAY,EACZ7W,IAFuC,WAGnC,MAAiD,SAA1C0V,EAAS9K,aAAa,iBAEjCK,IALuC,SAKnCyL,GAEIA,GACAxZ,MAAMwF,KAAKgT,EAAS1S,WAAW8T,UAC1BtT,OAAO,SAAAuT,GAAI,OAAIzQ,EAAQyQ,EAAM,4BAC7BjW,QAAQ,SAAAiW,GAAI,OAAIA,EAAKhT,aAAa,eAAgB,WAG3D2R,EAAS3R,aAAa,eAAgB2S,EAAU,OAAS,YAIjEpW,KAAK0W,UAAUC,KACXvB,EACA,cACA,SAAAhX,GACI,IAAIlB,EAAGoB,cAAcF,IAA0B,KAAhBA,EAAMiX,MAArC,CASA,OALAjX,EAAMkX,iBACNlX,EAAMmX,kBAENH,EAASgB,SAAU,EAEX3V,GACJ,IAAK,WACDuV,EAAKY,aAAetZ,OAAO8F,GAC3B,MAEJ,IAAK,UACD4S,EAAKvK,QAAUrI,EACf,MAEJ,IAAK,QACD4S,EAAK3K,MAAQwL,WAAWzT,GAOhCmI,GAASkK,cAAc5U,KAAKmV,EAAM,OAAQ9Y,EAAGoB,cAAcF,MAE/DqC,GACA,GAGJ8K,GAAS4J,sBAAsBtU,KAAKb,KAAMoV,EAAU3U,GAEpDwV,EAAKpT,YAAYuS,IAIrB3E,WA1gBa,WA0gB0B,IAA5BC,EAA4BxQ,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAArB,EAAG0Q,EAAkB1Q,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,IAAAA,UAAA,GAEnC,OAAKhD,EAAGG,OAAOqT,GAORD,GAAWC,EAFCL,GAASrQ,KAAKsS,UAAY,EAET1B,GANzBF,GAUfoG,kBAvhBa,WAuhBgD,IAA3CxK,EAA2CpM,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAAlC,KAAMwQ,EAA4BxQ,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAArB,EAAG0Q,EAAkB1Q,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,IAAAA,UAAA,GAEpDhD,EAAGc,QAAQsO,IAAYpP,EAAGG,OAAOqT,KAKtCpE,EAAOzI,UAAY0H,GAASkF,WAAWC,EAAME,KAIjDmG,aAliBa,WAmiBJ/W,KAAKT,UAAUyJ,KAKhB9L,EAAGc,QAAQgC,KAAKiC,SAASgQ,OAAOE,SAChC5G,GAASyL,SAASnW,KAAKb,KAAMA,KAAKiC,SAASgQ,OAAOE,OAAQnS,KAAKiX,MAAQ,EAAIjX,KAAKmS,QAIhFjV,EAAGc,QAAQgC,KAAKiC,SAASuP,QAAQI,QACjC5R,KAAKiC,SAASuP,QAAQI,KAAKsF,QAAUlX,KAAKiX,OAAyB,IAAhBjX,KAAKmS,UAKhE6E,SAnjBa,SAmjBJ1K,GAAmB,IAAXlJ,EAAWlD,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAAH,EAChBhD,EAAGc,QAAQsO,KAKhBA,EAAOlJ,MAAQA,EAGfmI,GAASqJ,gBAAgB/T,KAAKb,KAAMsM,KAIxC6K,eAhkBa,SAgkBE/Y,GAAO,IAAAgZ,EAAApX,KAClB,GAAKA,KAAKT,UAAUyJ,IAAO9L,EAAGkB,MAAMA,GAApC,CAIA,INrkBsBiZ,EAAShD,EMqkB3BjR,EAAQ,EAkBZ,GAAIhF,EACA,OAAQA,EAAMqC,MAEV,IAAK,aACL,IAAK,UACL,IAAK,SN5lBS4W,EM6lBYrX,KAAK6K,YN7lBRwJ,EM6lBqBrU,KAAKsS,SAA7ClP,EN5lBA,IAAZiU,GAAyB,IAARhD,GAAa/W,OAAOC,MAAM8Z,IAAY/Z,OAAOC,MAAM8W,GAC7D,GAGFgD,EAAUhD,EAAO,KAAKiD,QAAQ,GM2lBJ,eAAflZ,EAAMqC,MACN8K,GAASyL,SAASnW,KAAKb,KAAMA,KAAKiC,SAASgQ,OAAOC,KAAM9O,GAG5D,MAGJ,IAAK,UACL,IAAK,YAjCO,SAACkJ,EAAQpQ,GACzB,IAAMkH,EAAQlG,EAAGG,OAAOnB,GAASA,EAAQ,EACnC8V,EAAW9U,EAAGc,QAAQsO,GAAUA,EAAS8K,EAAKnV,SAASmQ,QAAQC,OAGrE,GAAInV,EAAGc,QAAQgU,GAAW,CACtBA,EAAS5O,MAAQA,EAGjB,IAAM0Q,EAAQ9B,EAASuF,qBAAqB,QAAQ,GAChDra,EAAGc,QAAQ8V,KACXA,EAAM5P,WAAW,GAAGsT,UAAYpU,IAuBhCqU,CAAYzX,KAAKiC,SAASmQ,QAAQC,OAAwB,IAAhBrS,KAAK0X,aAW/D9C,gBApnBa,SAonBGtI,GAEZ,IAAMhF,EAAQpK,EAAGkB,MAAMkO,GAAUA,EAAOA,OAASA,EAGjD,GAAKpP,EAAGc,QAAQsJ,IAAyC,UAA/BA,EAAMgD,aAAa,QAA7C,CAKA,GAAItE,EAAQsB,EAAOtH,KAAK0G,OAAO6K,UAAUU,OAAOC,MAAO,CACnD5K,EAAM7D,aAAa,gBAAiBzD,KAAK6K,aACzC,IAAMA,EAAcU,GAASkF,WAAWzQ,KAAK6K,aACvCyH,EAAW/G,GAASkF,WAAWzQ,KAAKsS,UACpC7F,EAASkB,GAAS,YAAa3N,KAAK0G,QAC1CY,EAAM7D,aACF,iBACAgJ,EAAOzH,QAAQ,gBAAiB6F,GAAa7F,QAAQ,aAAcsN,SAEpE,GAAItM,EAAQsB,EAAOtH,KAAK0G,OAAO6K,UAAUU,OAAOE,QAAS,CAC5D,IAAMwF,EAAwB,IAAdrQ,EAAMlE,MACtBkE,EAAM7D,aAAa,gBAAiBkU,GACpCrQ,EAAM7D,aAAa,iBAAnB,GAAAvE,OAAwCyY,EAAQL,QAAQ,GAAxD,WAEAhQ,EAAM7D,aAAa,gBAAiB6D,EAAMlE,OAIzCmE,EAAQG,UAKbJ,EAAMJ,MAAM0Q,YAAY,UAAxB,GAAA1Y,OAAsCoI,EAAMlE,MAAQkE,EAAM+M,IAAM,IAAhE,QAIJwD,kBAzpBa,SAypBKzZ,GAAO,IAAA0Z,EAAA9X,KAErB,GACKA,KAAK0G,OAAOqR,SAAS7F,MACrBhV,EAAGc,QAAQgC,KAAKiC,SAASgQ,OAAOC,OAChChV,EAAGc,QAAQgC,KAAKiC,SAASmQ,QAAQG,cAChB,IAAlBvS,KAAKsS,SAJT,CAUA,IAAIqF,EAAU,EACRK,EAAahY,KAAKiC,SAAS+P,SAASiG,wBACpCC,EAAO,GAAAhZ,OAAMc,KAAK0G,OAAOC,WAAW6L,QAA7B,aAEPvS,EAAS,SAAAA,GACXwF,EAAYqS,EAAK7V,SAASmQ,QAAQG,YAAa2F,EAASjY,IAI5D,GAAID,KAAK+J,MACL9J,GAAO,OADX,CAMA,GAAI/C,EAAGkB,MAAMA,GACTuZ,EAAU,IAAMK,EAAWG,OAAS/Z,EAAMga,MAAQJ,EAAWK,UAC1D,CAAA,IAAItS,EAAS/F,KAAKiC,SAASmQ,QAAQG,YAAa2F,GAGnD,OAFAP,EAAUd,WAAW7W,KAAKiC,SAASmQ,QAAQG,YAAYrL,MAAMmR,KAAM,IAMnEV,EAAU,EACVA,EAAU,EACHA,EAAU,MACjBA,EAAU,KAIdpM,GAASuL,kBAAkBjW,KAAKb,KAAMA,KAAKiC,SAASmQ,QAAQG,YAAavS,KAAKsS,SAAW,IAAMqF,GAG/F3X,KAAKiC,SAASmQ,QAAQG,YAAYrL,MAAMmR,KAAxC,GAAAnZ,OAAkDyY,EAAlD,KAIIza,EAAGkB,MAAMA,IAAU,CAAC,aAAc,cAAc8H,SAAS9H,EAAMqC,OAC/DR,EAAsB,eAAf7B,EAAMqC,SAKrB6X,WAjtBa,SAitBFla,GAEP,IAAMma,GAAUrb,EAAGc,QAAQgC,KAAKiC,SAASmQ,QAAQE,WAAatS,KAAK0G,OAAO8R,WAG1EjN,GAASuL,kBAAkBjW,KACvBb,KACAA,KAAKiC,SAASmQ,QAAQvH,YACtB0N,EAASvY,KAAKsS,SAAWtS,KAAK6K,YAAc7K,KAAK6K,YACjD0N,GAIAna,GAAwB,eAAfA,EAAMqC,MAAyBT,KAAK4J,MAAM6O,SAKvDlN,GAAS4L,eAAetW,KAAKb,KAAM5B,IAIvCsa,eAvuBa,WAyuBT,GAAK1Y,KAAKT,UAAUyJ,KAAQhJ,KAAK0G,OAAO8R,aAAcxY,KAAK6K,aAA3D,CAQA,GAAI7K,KAAKsS,UAALqG,KAAAC,IAAiB,EAAK,IAGtB,OAFAvT,EAAarF,KAAKiC,SAASmQ,QAAQvH,aAAa,QAChDxF,EAAarF,KAAKiC,SAAS+P,UAAU,GAKrC9U,EAAGc,QAAQgC,KAAKiC,SAASgQ,OAAOC,OAChClS,KAAKiC,SAASgQ,OAAOC,KAAKzO,aAAa,gBAAiBzD,KAAKsS,UAIjE,IAAMuG,EAAc3b,EAAGc,QAAQgC,KAAKiC,SAASmQ,QAAQE,WAGhDuG,GAAe7Y,KAAK0G,OAAOoS,iBAAmB9Y,KAAK8K,QACpDS,GAASuL,kBAAkBjW,KAAKb,KAAMA,KAAKiC,SAASmQ,QAAQvH,YAAa7K,KAAKsS,UAI9EuG,GACAtN,GAASuL,kBAAkBjW,KAAKb,KAAMA,KAAKiC,SAASmQ,QAAQE,SAAUtS,KAAKsS,UAI/E/G,GAASsM,kBAAkBhX,KAAKb,QAIpC+Y,iBA9wBa,SA8wBIC,EAAS/Y,GACtBoF,EAAarF,KAAKiC,SAAS4P,SAASL,QAAQwH,IAAW/Y,IAI3DuL,cAnxBa,SAmxBCwN,EAAS5S,EAAWlK,GAC9B,IAAM+c,EAAOjZ,KAAKiC,SAAS4P,SAASqH,OAAOF,GACvC5V,EAAQ,KACR6S,EAAO7P,EAEX,GAAgB,aAAZ4S,EACA5V,EAAQpD,KAAK4W,kBACV,GAAgB,qBAAZoC,EACP5V,EAAQpD,KAAKmZ,4BACV,CASH,GARA/V,EAASlG,EAAGmC,MAAMnD,GAAiB8D,KAAKgZ,GAAb9c,EAGvBgB,EAAGmC,MAAM+D,KACTA,EAAQpD,KAAK0G,OAAOsS,GAASI,UAI5Blc,EAAGmC,MAAMW,KAAKR,QAAQwZ,MAAchZ,KAAKR,QAAQwZ,GAAS9S,SAAS9C,GAEpE,YADApD,KAAK6L,MAAM6G,KAAX,yBAAAxT,OAAyCkE,EAAzC,UAAAlE,OAAuD8Z,IAO3D,GAAgB,YAAZA,IAA0BhZ,KAAK0G,OAAOsS,GAASxZ,QAAQ0G,SAAS9C,GAEhE,YADApD,KAAK6L,MAAM6G,KAAX,sBAAAxT,OAAsCkE,EAAtC,UAAAlE,OAAoD8Z,IAW5D,GALK9b,EAAGc,QAAQiY,KACZA,EAAOgD,GAAQA,EAAK3S,cAAc,kBAIjCpJ,EAAGc,QAAQiY,GAAhB,CAKcjW,KAAKiC,SAAS4P,SAASL,QAAQwH,GAAS1S,cAAxC,IAAApH,OAA0Dc,KAAK0G,OAAOC,WAAW+M,KAAKtQ,QAC9FmK,UAAYhC,GAAS8N,SAASxY,KAAKb,KAAMgZ,EAAS5V,GAGxD,IAAMkJ,EAAS2J,GAAQA,EAAK3P,cAAL,WAAApH,OAA8BkE,EAA9B,OAEnBlG,EAAGc,QAAQsO,KACXA,EAAO8J,SAAU,KAKzBiD,SA10Ba,SA00BJL,EAAS5V,GACd,OAAQ4V,GACJ,IAAK,QACD,OAAiB,IAAV5V,EAAcuK,GAAS,SAAU3N,KAAK0G,QAAtC,GAAAxH,OAAmDkE,EAAnD,WAEX,IAAK,UACD,GAAIlG,EAAGG,OAAO+F,GAAQ,CAClB,IAAM0Q,EAAQnG,GAAA,gBAAAzO,OAAyBkE,GAASpD,KAAK0G,QAErD,OAAKoN,EAAM9W,OAIJ8W,EAHH,GAAA5U,OAAUkE,EAAV,KAMR,OAAO2J,EAAY3J,GAEvB,IAAK,WACD,OAAO0O,GAASuH,SAASxY,KAAKb,MAElC,IAAK,mBACD,OAAO2N,GAAA,wBAAAzO,OAAiCkE,GAASpD,KAAK0G,QAE1D,QACI,OAAO,OAKnB4S,eAx2Ba,SAw2BE9Z,GAAS,IAAA+Z,EAAAvZ,KAEpB,GAAK9C,EAAGc,QAAQgC,KAAKiC,SAAS4P,SAASqH,OAAOzN,SAA9C,CAIA,IACMwK,EAAOjW,KAAKiC,SAAS4P,SAASqH,OAAOzN,QAAQnF,cAAc,iBAG7DpJ,EAAGU,MAAM4B,KACTQ,KAAKR,QAAQiM,QAAUM,EAAOvM,GAAS0D,OAAO,SAAAuI,GAAO,OAAI8N,EAAK7S,OAAO+E,QAAQjM,QAAQ0G,SAASuF,MAIlG,IAAMxL,GAAU/C,EAAGmC,MAAMW,KAAKR,QAAQiM,UAAYzL,KAAKR,QAAQiM,QAAQzO,OAAS,EAUhF,GATAuO,GAASwN,iBAAiBlY,KAAKb,KAVlB,UAU8BC,GAG3CgE,EAAagS,GAGb1K,GAASiO,UAAU3Y,KAAKb,MAGnBC,EAAL,CAgBAD,KAAKR,QAAQiM,QACRgO,KAAK,SAACC,EAAGC,GACN,IAAMC,EAAUL,EAAK7S,OAAO+E,QAAQjM,QACpC,OAAOoa,EAAQ3N,QAAQyN,GAAKE,EAAQ3N,QAAQ0N,GAAK,GAAK,IAEzDnZ,QAAQ,SAAAiL,GACLF,GAASwK,eAAelV,KAAK0Y,EAAM,CAC/BnW,MAAOqI,EACPwK,KAAAA,EACAxV,KA5CC,UA6CDsN,MAAOxC,GAAS8N,SAASxY,KAAK0Y,EAAM,UAAW9N,GAC/CgI,MAtBK,SAAAhI,GACb,IAAMqI,EAAQnG,GAAA,gBAAAzO,OAAyBuM,GAAW8N,EAAK7S,QAEvD,OAAKoN,EAAM9W,OAIJuO,GAASiI,YAAY3S,KAAK0Y,EAAMzF,GAH5B,KAkBI+F,CAASpO,OAI5BF,GAASC,cAAc3K,KAAKb,KAlDf,UAkD2BiW,MAmD5C6D,gBAn9Ba,WAm9BK,IAAAC,EAAA/Z,KAEd,GAAK9C,EAAGc,QAAQgC,KAAKiC,SAAS4P,SAASqH,OAAOpH,UAA9C,CAKA,IACMmE,EAAOjW,KAAKiC,SAAS4P,SAASqH,OAAOpH,SAASxL,cAAc,iBAC5D0T,EAASlI,GAASmI,UAAUpZ,KAAKb,MACjCC,EAAS5D,QAAQ2d,EAAOhd,QAY9B,GATAuO,GAASwN,iBAAiBlY,KAAKb,KANlB,WAM8BC,GAG3CgE,EAAagS,GAGb1K,GAASiO,UAAU3Y,KAAKb,MAGnBC,EAAL,CAKA,IAAMT,EAAUwa,EAAOrU,IAAI,SAAC/G,EAAOwE,GAAR,MAAmB,CAC1CA,MAAAA,EACAgT,QAAS2D,EAAKjI,SAASoI,SAAWH,EAAKnD,eAAiBxT,EACxD2K,MAAO+D,GAASuH,SAASxY,KAAKkZ,EAAMnb,GACpC6U,MAAO7U,EAAMub,UAAY5O,GAASiI,YAAY3S,KAAKkZ,EAAMnb,EAAMub,SAASnN,eACxEiJ,KAAAA,EACAxV,KAAM,cAIVjB,EAAQ4a,QAAQ,CACZhX,OAAQ,EACRgT,SAAUpW,KAAK8R,SAASoI,QACxBnM,MAAOJ,GAAS,WAAY3N,KAAK0G,QACjCuP,KAAAA,EACAxV,KAAM,aAIVjB,EAAQgB,QAAQ+K,GAASwK,eAAeY,KAAK3W,OAE7CuL,GAASC,cAAc3K,KAAKb,KAzCf,WAyC2BiW,MAG5CkD,wBAtgCa,WAsgCa,IAAAkB,EAAAra,KACtB,GAAKA,KAAK0G,OAAO6E,SAASrF,SAAS,qBAI9BhJ,EAAGc,QAAQgC,KAAKiC,SAAS4P,SAASyI,MAAM,qBAA7C,CAIA,IAAM7Z,EAAO,mBAEb8K,GAASgP,UAAU1Z,KAAKb,KAAMS,GAAM,GAGpC,IAAMwV,EAAOjW,KAAKiC,SAAS4P,SAASyI,MAAM,oBAAoBhU,cAAc,MAG5ErC,EAAagS,GAEK,CAAC,MAAO,UAGhBzV,QAAQ,SAAAga,GACdjP,GAASwK,eAAelV,KAAKwZ,EAAM,CAC/BjX,MAAOoX,EACPvE,KAAAA,EACAxV,KAAAA,EACAsN,MAAOxC,GAAS8N,SAASxY,KAAKwZ,EAAM,mBAAoBG,OAGhEjP,GAASC,cAAc3K,KAAKb,KAAMS,EAAMwV,KAG5CwE,aAviCa,SAuiCAjb,GAAS,IAAAkb,EAAA1a,KAElB,GAAK9C,EAAGc,QAAQgC,KAAKiC,SAAS4P,SAASqH,OAAO7N,OAA9C,CAIA,IACM4K,EAAOjW,KAAKiC,SAAS4P,SAASqH,OAAO7N,MAAM/E,cAAc,iBAG3DpJ,EAAGU,MAAM4B,GACTQ,KAAKR,QAAQ6L,MAAQ7L,GACdQ,KAAK2J,SAAW3J,KAAK2a,WAC5B3a,KAAKR,QAAQ6L,MAAQ,CAAC,GAAK,IAAM,EAAG,KAAM,IAAK,KAAM,IAIzDrL,KAAKR,QAAQ6L,MAAQrL,KAAKR,QAAQ6L,MAAMnI,OAAO,SAAAmI,GAAK,OAAIqP,EAAKhU,OAAO2E,MAAM7L,QAAQ0G,SAASmF,KAG3F,IAAMpL,GAAU/C,EAAGmC,MAAMW,KAAKR,QAAQ6L,QAAUrL,KAAKR,QAAQ6L,MAAMrO,OAAS,EAC5EuO,GAASwN,iBAAiBlY,KAAKb,KAflB,QAe8BC,GAG3CgE,EAAagS,GAGb1K,GAASiO,UAAU3Y,KAAKb,MAGnBC,IAKLD,KAAKR,QAAQ6L,MAAM7K,QAAQ,SAAA6K,GACvBE,GAASwK,eAAelV,KAAK6Z,EAAM,CAC/BtX,MAAOiI,EACP4K,KAAAA,EACAxV,KAjCK,QAkCLsN,MAAOxC,GAAS8N,SAASxY,KAAK6Z,EAAM,QAASrP,OAIrDE,GAASC,cAAc3K,KAAKb,KAtCf,QAsC2BiW,MAI5CuD,UAvlCa,WAulCD,IACAhI,EAAYxR,KAAKiC,SAAS4P,SAA1BL,QACF0G,GAAWhb,EAAGmC,MAAMmS,IAAYhV,OAAOoe,OAAOpJ,GAASqJ,KAAK,SAAA3G,GAAM,OAAKA,EAAO5O,SAEpFD,EAAarF,KAAKiC,SAAS4P,SAAS6B,MAAOwE,IAI/CpC,mBA/lCa,SA+lCMmD,GAAwB,IAAlBzS,EAAkBtG,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,IAAAA,UAAA,GACvC,IAAIF,KAAKiC,SAAS4P,SAASiJ,MAAMxV,OAAjC,CAIA,IAAIgH,EAAS2M,EAER/b,EAAGc,QAAQsO,KACZA,EAAS9P,OAAOoe,OAAO5a,KAAKiC,SAAS4P,SAASqH,QAAQjS,KAAK,SAAAgS,GAAI,OAAKA,EAAK3T,UAG7E,IAAMyV,EAAYzO,EAAOhG,cAAc,sBAEvCC,EAAS1F,KAAKb,KAAM+a,EAAWvU,KAInCwU,WAhnCa,SAgnCF9e,GAAO,IACN4e,EAAU9a,KAAKiC,SAAS4P,SAAxBiJ,MACF5G,EAASlU,KAAKiC,SAASuP,QAAQK,SAGrC,GAAK3U,EAAGc,QAAQ8c,IAAW5d,EAAGc,QAAQkW,GAAtC,CALc,IAUN5O,EAAWwV,EAAXxV,OACJ2V,EAAO3V,EAEX,GAAIpI,EAAGO,QAAQvB,GACX+e,EAAO/e,OACJ,GAAIgB,EAAGoB,cAAcpC,IAA0B,KAAhBA,EAAMmZ,MACxC4F,GAAO,OACJ,GAAI/d,EAAGkB,MAAMlC,GAAQ,CACxB,IAAMgf,EAAaJ,EAAMhV,SAAS5J,EAAMoQ,QAKxC,GAAI4O,IAAgBA,GAAchf,EAAMoQ,SAAW4H,GAAU+G,EACzD,OAKR/G,EAAOzQ,aAAa,gBAAiBwX,GAGrC5V,EAAayV,GAAQG,GAGrBxV,EAAYzF,KAAKiC,SAASmE,UAAWpG,KAAK0G,OAAOC,WAAW+M,KAAKrE,KAAM4L,GAGnEA,GAAQ/d,EAAGoB,cAAcpC,GACzBqP,GAASuK,mBAAmBjV,KAAKb,KAAM,MAAM,GACrCib,GAAS3V,GAEjBiB,EAAS1F,KAAKb,KAAMkU,EAAQhX,EAAGoB,cAAcpC,MAKrDif,YA/pCa,SA+pCDC,GACR,IAAMC,EAAQD,EAAI5Y,WAAU,GAC5B6Y,EAAMnU,MAAMsT,SAAW,WACvBa,EAAMnU,MAAMoU,QAAU,EACtBD,EAAM7V,gBAAgB,UAGtB4V,EAAI1Y,WAAWG,YAAYwY,GAG3B,IAAMlD,EAAQkD,EAAME,YACdC,EAASH,EAAMI,aAKrB,OAFA1X,EAAcsX,GAEP,CACHlD,MAAAA,EACAqD,OAAAA,IAKR/F,cAtrCa,WAsrC8B,IAAAiG,EAAA1b,KAA7BS,EAA6BP,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAAtB,GAAIsG,EAAkBtG,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,IAAAA,UAAA,GACjCoM,EAAS1I,SAAS8L,eAAT,iBAAAxQ,OAAyCc,KAAKoF,GAA9C,KAAAlG,OAAoDuB,IAGnE,GAAKvD,EAAGc,QAAQsO,GAAhB,CAKA,IAAMlG,EAAYkG,EAAO5J,WACnB2U,EAAUza,MAAMwF,KAAKgE,EAAUoQ,UAAUvP,KAAK,SAAAwP,GAAI,OAAKA,EAAKnR,SAGlE,GAAIkD,EAAQwB,cAAgBxB,EAAQyB,cAAe,CAE/C7D,EAAUc,MAAMiR,MAAhB,GAAAjZ,OAA2BmY,EAAQkE,YAAnC,MACAnV,EAAUc,MAAMsU,OAAhB,GAAAtc,OAA4BmY,EAAQoE,aAApC,MAGA,IAAME,EAAOpQ,GAAS4P,YAAYta,KAAKb,KAAMsM,GAkB7C1L,EAAGC,KAAKb,KAAMoG,EAAWQ,EAfT,SAAVgV,EAAUxd,GAERA,EAAMkO,SAAWlG,GAAc,CAAC,QAAS,UAAUF,SAAS9H,EAAMyd,gBAKtEzV,EAAUc,MAAMiR,MAAQ,GACxB/R,EAAUc,MAAMsU,OAAS,GAGzB1a,EAAID,KAAK6a,EAAMtV,EAAWQ,EAAoBgV,MAOlDxV,EAAUc,MAAMiR,MAAhB,GAAAjZ,OAA2Byc,EAAKxD,MAAhC,MACA/R,EAAUc,MAAMsU,OAAhB,GAAAtc,OAA4Byc,EAAKH,OAAjC,MAIJnW,EAAagS,GAAS,GAGtBhS,EAAaiH,GAAQ,GAGrBf,GAASuK,mBAAmBjV,KAAKb,KAAMsM,EAAQ9F,KAInDsV,gBA7uCa,WA8uCT,IAAM5H,EAASlU,KAAKiC,SAASuP,QAAQuK,SAGhC7e,EAAGc,QAAQkW,IAKhBA,EAAOzQ,aAAa,OAAQzD,KAAK+b,WAKrCC,OA3vCa,SA2vCNpM,GAAM,IAAAqM,EAAAjc,KAEHoG,EAAY1C,EAAc,MAAOc,EAA0BxE,KAAK0G,OAAO6K,UAAUhG,SAASrJ,UAuBhG,GApBIlC,KAAK0G,OAAO6E,SAASrF,SAAS,YAC9BE,EAAUvD,YAAY0I,GAASoI,aAAa9S,KAAKb,KAAM,YAIvDA,KAAK0G,OAAO6E,SAASrF,SAAS,WAC9BE,EAAUvD,YAAY0I,GAASoI,aAAa9S,KAAKb,KAAM,WAIvDA,KAAK0G,OAAO6E,SAASrF,SAAS,SAC9BE,EAAUvD,YAAY0I,GAASoI,aAAa9S,KAAKb,KAAM,SAIvDA,KAAK0G,OAAO6E,SAASrF,SAAS,iBAC9BE,EAAUvD,YAAY0I,GAASoI,aAAa9S,KAAKb,KAAM,iBAIvDA,KAAK0G,OAAO6E,SAASrF,SAAS,YAAa,CAC3C,IAAM8L,EAAWtO,EAAc,MAAOc,EAA0BxE,KAAK0G,OAAO6K,UAAUS,WAetF,GAZAA,EAASnP,YACL0I,GAAS4I,YAAYtT,KAAKb,KAAM,OAAQ,CACpCoF,GAAE,aAAAlG,OAAe0Q,EAAKxK,OAK9B4M,EAASnP,YAAY0I,GAASsJ,eAAehU,KAAKb,KAAM,WAKpDA,KAAK0G,OAAOqR,SAAS7F,KAAM,CAC3B,IAAMM,EAAU9O,EACZ,OACA,CACIyB,MAAOnF,KAAK0G,OAAOC,WAAW6L,SAElC,SAGJR,EAASnP,YAAY2P,GACrBxS,KAAKiC,SAASmQ,QAAQG,YAAcC,EAGxCxS,KAAKiC,SAAS+P,SAAWA,EACzB5L,EAAUvD,YAAY7C,KAAKiC,SAAS+P,UAcxC,GAVIhS,KAAK0G,OAAO6E,SAASrF,SAAS,iBAC9BE,EAAUvD,YAAY0I,GAAS2J,WAAWrU,KAAKb,KAAM,gBAIrDA,KAAK0G,OAAO6E,SAASrF,SAAS,aAC9BE,EAAUvD,YAAY0I,GAAS2J,WAAWrU,KAAKb,KAAM,aAIrDA,KAAK0G,OAAO6E,SAASrF,SAAS,SAAWlG,KAAK0G,OAAO6E,SAASrF,SAAS,UAAW,CAClF,IAAMiM,EAASzO,EAAc,MAAO,CAChCyB,MAAO,iBASX,GALInF,KAAK0G,OAAO6E,SAASrF,SAAS,SAC9BiM,EAAOtP,YAAY0I,GAASoI,aAAa9S,KAAKb,KAAM,SAIpDA,KAAK0G,OAAO6E,SAASrF,SAAS,UAAW,CAEzC,IAAMlD,EAAa,CACfqR,IAAK,EACLC,KAAM,IACNlR,MAAOpD,KAAK0G,OAAOyL,QAIvBA,EAAOtP,YACH0I,GAAS4I,YAAYtT,KACjBb,KACA,SACAwK,EAAOxH,EAAY,CACfoC,GAAE,eAAAlG,OAAiB0Q,EAAKxK,QAKpCpF,KAAKiC,SAASkQ,OAASA,EAG3B/L,EAAUvD,YAAYsP,GAS1B,GALInS,KAAK0G,OAAO6E,SAASrF,SAAS,aAC9BE,EAAUvD,YAAY0I,GAASoI,aAAa9S,KAAKb,KAAM,aAIvDA,KAAK0G,OAAO6E,SAASrF,SAAS,cAAgBhJ,EAAGmC,MAAMW,KAAK0G,OAAOmL,UAAW,CAC9E,IAAMoC,EAAUvQ,EAAc,MAAO,CACjCyB,MAAO,aACPG,OAAQ,KAGZ2O,EAAQpR,YACJ0I,GAASoI,aAAa9S,KAAKb,KAAM,WAAY,CACzCkc,iBAAiB,EACjBC,gBAAA,iBAAAjd,OAAkC0Q,EAAKxK,IACvCgX,iBAAiB,KAIzB,IAAMtB,EAAQpX,EAAc,MAAO,CAC/ByB,MAAO,wBACPC,GAAE,iBAAAlG,OAAmB0Q,EAAKxK,IAC1BE,OAAQ,KAGN+W,EAAQ3Y,EAAc,OAEtB4Y,EAAO5Y,EAAc,MAAO,CAC9B0B,GAAE,iBAAAlG,OAAmB0Q,EAAKxK,GAAxB,WAIAsO,EAAOhQ,EAAc,MAAO,CAC9BuP,KAAM,SAGVqJ,EAAKzZ,YAAY6Q,GACjB2I,EAAMxZ,YAAYyZ,GAClBtc,KAAKiC,SAAS4P,SAASqH,OAAOoD,KAAOA,EAGrCtc,KAAK0G,OAAOmL,SAASrR,QAAQ,SAAAC,GAEzB,IAAM2U,EAAW1R,EACb,SACA8G,EAAOhG,EAA0ByX,EAAKvV,OAAO6K,UAAUC,QAAQK,UAAW,CACtEpR,KAAM,SACN0E,MAAK,GAAAjG,OAAK+c,EAAKvV,OAAOC,WAAWsN,QAA5B,KAAA/U,OAAuC+c,EAAKvV,OAAOC,WAAWsN,QAA9D,aACLhB,KAAM,WACNiJ,iBAAiB,EACjB5W,OAAQ,MAKhBiG,GAAS4J,sBAAsBtU,KAAKob,EAAM7G,EAAU3U,GAGpDG,EAAGwU,EAAU,QAAS,WAClB7J,GAASkK,cAAc5U,KAAKob,EAAMxb,GAAM,KAG5C,IAAM6V,EAAO5S,EAAc,OAAQ,KAAMiK,GAASlN,EAAMwb,EAAKvV,SAEvDtD,EAAQM,EAAc,OAAQ,CAChCyB,MAAO8W,EAAKvV,OAAOC,WAAW+M,KAAKtQ,QAIvCA,EAAMmK,UAAYqC,EAAKnP,GAEvB6V,EAAKzT,YAAYO,GACjBgS,EAASvS,YAAYyT,GACrB5C,EAAK7Q,YAAYuS,GAGjB,IAAM6D,EAAOvV,EAAc,MAAO,CAC9B0B,GAAE,iBAAAlG,OAAmB0Q,EAAKxK,GAAxB,KAAAlG,OAA8BuB,GAChC6E,OAAQ,KAINiX,EAAa7Y,EAAc,SAAU,CACvCjD,KAAM,SACN0E,MAAK,GAAAjG,OAAK+c,EAAKvV,OAAOC,WAAWsN,QAA5B,KAAA/U,OAAuC+c,EAAKvV,OAAOC,WAAWsN,QAA9D,YAITsI,EAAW1Z,YACPa,EACI,OACA,CACIoR,eAAe,GAEnBnH,GAASlN,EAAMwb,EAAKvV,UAK5B6V,EAAW1Z,YACPa,EACI,OACA,CACIyB,MAAO8W,EAAKvV,OAAOC,WAAWrB,QAElCqI,GAAS,WAAYsO,EAAKvV,UAKlC9F,EACIqY,EACA,UACA,SAAA7a,GAEwB,KAAhBA,EAAMiX,QAKVjX,EAAMkX,iBACNlX,EAAMmX,kBAGNhK,GAASkK,cAAc5U,KAAKob,EAAM,QAAQ,MAE9C,GAIJrb,EAAG2b,EAAY,QAAS,WACpBhR,GAASkK,cAAc5U,KAAKob,EAAM,QAAQ,KAI9ChD,EAAKpW,YAAY0Z,GAGjBtD,EAAKpW,YACDa,EAAc,MAAO,CACjBuP,KAAM,UAIdoJ,EAAMxZ,YAAYoW,GAElBgD,EAAKha,SAAS4P,SAASL,QAAQ/Q,GAAQ2U,EACvC6G,EAAKha,SAAS4P,SAASqH,OAAOzY,GAAQwY,IAG1C6B,EAAMjY,YAAYwZ,GAClBpI,EAAQpR,YAAYiY,GACpB1U,EAAUvD,YAAYoR,GAEtBjU,KAAKiC,SAAS4P,SAASiJ,MAAQA,EAC/B9a,KAAKiC,SAAS4P,SAAS6B,KAAOO,EAclC,GAVIjU,KAAK0G,OAAO6E,SAASrF,SAAS,QAAUsC,EAAQU,KAChD9C,EAAUvD,YAAY0I,GAASoI,aAAa9S,KAAKb,KAAM,QAIvDA,KAAK0G,OAAO6E,SAASrF,SAAS,YAAcsC,EAAQc,SACpDlD,EAAUvD,YAAY0I,GAASoI,aAAa9S,KAAKb,KAAM,YAIvDA,KAAK0G,OAAO6E,SAASrF,SAAS,YAAa,CAC3C,IAAMlD,EAAa,CACfhF,QAAS,IACTwe,KAAMxc,KAAK+b,SACXzP,OAAQ,UAGJyP,EAAa/b,KAAK0G,OAAO+V,KAAzBV,UAEH7e,EAAG6B,IAAIgd,IAAa/b,KAAK0c,SAC1BlS,EAAOxH,EAAY,CACf+P,KAAI,QAAA7T,OAAUc,KAAK4I,UACnBkL,MAAO9T,KAAK4I,WAIpBxC,EAAUvD,YAAY0I,GAASoI,aAAa9S,KAAKb,KAAM,WAAYgD,IA2BvE,OAvBIhD,KAAK0G,OAAO6E,SAASrF,SAAS,SAC9BE,EAAUvD,YAAY0I,GAASoI,aAAa9S,KAAKb,KAAM,SAIvDA,KAAK0G,OAAO6E,SAASrF,SAAS,eAC9BE,EAAUvD,YAAY0I,GAASoI,aAAa9S,KAAKb,KAAM,eAIvDA,KAAK0G,OAAO6E,SAASrF,SAAS,eAC9BlG,KAAKiC,SAASmE,UAAUvD,YAAY0I,GAASoI,aAAa9S,KAAKb,KAAM,eAGzEA,KAAKiC,SAASsJ,SAAWnF,EAGrBpG,KAAK2J,SACL4B,GAAS+N,eAAezY,KAAKb,KAAMmK,EAAMI,kBAAkB1J,KAAKb,OAGpEuL,GAASkP,aAAa5Z,KAAKb,MAEpBoG,GAIXuW,OA7jDa,WA6jDJ,IAAAC,EAAA5c,KAEL,GAAIA,KAAK0G,OAAO6I,WAAY,CACxB,IAAMwD,EAAOxH,GAASyF,WAAWnQ,KAAKb,MAGlC+S,EAAK9B,MACL1B,GAAWwD,EAAKhU,IAAK,eAK7BiB,KAAKoF,GAAKuT,KAAKkE,MAAsB,IAAhBlE,KAAKmE,UAG1B,IAAI1W,EAAY,KAChBpG,KAAKiC,SAASsJ,SAAW,KAGzB,IAAMsI,EAAQ,CACVzO,GAAIpF,KAAKoF,GACT2X,SAAU/c,KAAK0G,OAAOmH,SACtBE,MAAO/N,KAAK0G,OAAOqH,OAEnB4B,GAAS,EAGTzS,EAAGQ,SAASsC,KAAK0G,OAAO6E,YACxBvL,KAAK0G,OAAO6E,SAAWvL,KAAK0G,OAAO6E,SAAS1K,KAAKb,KAAK6T,QAIrD7T,KAAK0G,OAAO6E,WACbvL,KAAK0G,OAAO6E,SAAW,IAGvBrO,EAAGc,QAAQgC,KAAK0G,OAAO6E,WAAarO,EAAGM,OAAOwC,KAAK0G,OAAO6E,UAE1DnF,EAAYpG,KAAK0G,OAAO6E,UAGxBnF,EAAYmF,GAASyQ,OAAOnb,KAAKb,KAAM,CACnCoF,GAAIpF,KAAKoF,GACT2X,SAAU/c,KAAK0G,OAAOmH,SACtBxC,MAAOrL,KAAKqL,MACZI,QAASzL,KAAKyL,QACdqG,SAAUA,GAASuH,SAASxY,KAAKb,QAIrC2P,GAAS,GAIb,IAoBIrD,EApBEtH,EAAU,SAAA9I,GACZ,IAAIiU,EAASjU,EAMb,OAJAM,OAAOyG,QAAQ4Q,GAAOrT,QAAQ,SAAAwN,GAAkB,IAAA1K,EAAAD,EAAA2K,EAAA,GAAhBxK,EAAgBF,EAAA,GAAXF,EAAWE,EAAA,GAC5C6M,EAAStD,EAAWsD,EAAD,IAAAjR,OAAasE,EAAb,KAAqBJ,KAGrC+M,GAmCX,GA/BIR,IACIzS,EAAGM,OAAOwC,KAAK0G,OAAO6E,UACtBnF,EAAYpB,EAAQoB,GACblJ,EAAGc,QAAQoI,KAClBA,EAAUmH,UAAYvI,EAAQoB,EAAUmH,aAQ5CrQ,EAAGM,OAAOwC,KAAK0G,OAAO6K,UAAUhG,SAASnF,aACzCkG,EAAS1I,SAAS0C,cAActG,KAAK0G,OAAO6K,UAAUhG,SAASnF,YAI9DlJ,EAAGc,QAAQsO,KACZA,EAAStM,KAAKiC,SAASmE,WAK3BkG,EADqBpP,EAAGc,QAAQoI,GAAa,wBAA0B,sBAClD,aAAcA,GAG9BlJ,EAAGc,QAAQgC,KAAKiC,SAASsJ,WAC1BA,GAAS+F,aAAazQ,KAAKb,OAI1B9C,EAAGmC,MAAMW,KAAKiC,SAASuP,SAAU,CAClC,IAAMwL,EAAc,SAAA9I,GAChB,IAAMnP,EAAY6X,EAAKlW,OAAOC,WAAWsW,eACzCzgB,OAAOiD,eAAeyU,EAAQ,UAAW,CACrCqC,YAAY,EACZ7W,IAFqC,WAGjC,OAAOqG,EAASmO,EAAQnP,IAE5B4F,IALqC,WAKhB,IAAjBuM,EAAiBhX,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,IAAAA,UAAA,GACjBuF,EAAYyO,EAAQnP,EAAWmS,OAM3C1a,OAAOoe,OAAO5a,KAAKiC,SAASuP,SACvBtO,OAAO7G,SACPmE,QAAQ,SAAA0T,GACDhX,EAAGU,MAAMsW,IAAWhX,EAAGa,SAASmW,GAChCtX,MAAMwF,KAAK8R,GAAQhR,OAAO7G,SAASmE,QAAQwc,GAE3CA,EAAY9I,KAW5B,GALIzV,OAAOoJ,UAAUC,UAAU5B,SAAS,SACpCiB,EAAQmF,GAIRtM,KAAK0G,OAAOqR,SAASxM,SAAU,CAAA,IAAA2R,EACGld,KAAK0G,OAA/BC,EADuBuW,EACvBvW,WAAY4K,EADW2L,EACX3L,UACd1M,EAAQ,GAAA3F,OAAMqS,EAAUhG,SAASrJ,QAAzB,KAAAhD,OAAoCqS,EAAU4L,OAA9C,MAAAje,OAAyDyH,EAAWrB,QAC5E6X,EAAShX,EAAYtF,KAAKb,KAAM6E,GAEtCjI,MAAMwF,KAAK+a,GAAQ3c,QAAQ,SAAAsT,GACvBrO,EAAYqO,EAAO8I,EAAKlW,OAAOC,WAAWrB,QAAQ,GAClDG,EAAYqO,EAAO8I,EAAKlW,OAAOC,WAAW6L,SAAS,QC9sD5D,SAAS4K,GAASlhB,GAAoB,IACrC6C,EAAM7C,EAEV,KAHyCgE,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,KAAAA,UAAA,GAG/B,CACN,IAAMmd,EAASzZ,SAASF,cAAc,KACtC2Z,EAAOb,KAAOzd,EACdA,EAAMse,EAAOb,KAGjB,IACI,OAAO,IAAIxd,IAAID,GACjB,MAAOK,GACL,OAAO,MAKR,SAASke,GAAephB,GAC3B,IAAMqhB,EAAS,IAAIC,gBAQnB,OANItgB,EAAGE,OAAOlB,IACVM,OAAOyG,QAAQ/G,GAAOsE,QAAQ,SAAA2C,GAAkB,IAAA6K,EAAA3K,EAAAF,EAAA,GAAhBK,EAAgBwK,EAAA,GAAX5K,EAAW4K,EAAA,GAC5CuP,EAAO5S,IAAInH,EAAKJ,KAIjBma,ECZX,IAAMzL,GAAW,CAEb2L,MAFa,WAIT,GAAKzd,KAAKT,UAAUyJ,GAKpB,IAAKhJ,KAAK0d,SAAW1d,KAAK2d,WAAc3d,KAAK2J,UAAYnB,EAAQsB,WAGzD5M,EAAGU,MAAMoC,KAAK0G,OAAO6E,WACrBvL,KAAK0G,OAAO6E,SAASrF,SAAS,aAC9BlG,KAAK0G,OAAOmL,SAAS3L,SAAS,cAE9BqF,GAASuO,gBAAgBjZ,KAAKb,MAC9BuL,GAAS4N,wBAAwBtY,KAAKb,WAR9C,CfqCD,IAAqBhC,EAASsO,Eed7B,GARKpP,EAAGc,QAAQgC,KAAKiC,SAAS6P,YAC1B9R,KAAKiC,SAAS6P,SAAWpO,EAAc,MAAOc,EAA0BxE,KAAK0G,OAAO6K,UAAUO,WfqB9E9T,EenBJgC,KAAKiC,SAAS6P,SfmBDxF,EenBWtM,KAAKiC,SAASC,QfoBrDhF,EAAGc,QAAQA,IAAad,EAAGc,QAAQsO,IAIxCA,EAAO5J,WAAWI,aAAa9E,EAASsO,EAAO1J,cenBvC2E,EAAQC,MAAQ/I,OAAOO,IAAK,CAC5B,IAAMiD,EAAWjC,KAAK4J,MAAM3D,iBAAiB,SAE7CrJ,MAAMwF,KAAKH,GAAUzB,QAAQ,SAAA5B,GACzB,IAAMsM,EAAMtM,EAAM0L,aAAa,OACzBvL,EAAMqe,GAASlS,GAGT,OAARnM,GACAA,EAAII,WAAaV,OAAO0S,SAASqL,KAAKrd,UACtC,CAAC,QAAS,UAAU+G,SAASnH,EAAI6e,WAEjCjP,GAAMzD,EAAK,QACNgF,KAAK,SAAA2N,GACFjf,EAAM6E,aAAa,MAAOhF,OAAOO,IAAI8e,gBAAgBD,MAExDzN,MAAM,WACHrM,EAAcnF,OAalC,IACMmf,EAAYhS,GADOlE,UAAUkW,WAAa,CAAClW,UAAUsS,UAAYtS,UAAUmW,cAAgB,OACvDrY,IAAI,SAAAwU,GAAQ,OAAIA,EAAS5Z,MAAM,KAAK,MAE1E4Z,GAAYna,KAAKsL,QAAQ5L,IAAI,aAAeM,KAAK0G,OAAOoL,SAASqI,UAAY,QAAQjN,cAGzF,GAAiB,SAAbiN,EACCA,EADoB9W,EACR0a,EADQ,GAAA,GAIzB,IAAIE,EAASje,KAAKsL,QAAQ5L,IAAI,YAe9B,GAdKxC,EAAGO,QAAQwgB,KACTA,EAAWje,KAAK0G,OAAOoL,SAAvBmM,QAGPzhB,OAAOiF,OAAOzB,KAAK8R,SAAU,CACzBoI,SAAS,EACT+D,OAAAA,EACA9D,SAAAA,EACA4D,UAAAA,IAGJjM,GAASoM,YAAYrd,KAAKb,KAAMA,KAAKme,iBAGjCne,KAAK2J,QAAS,CACd,IAAMyU,EAAcpe,KAAK0G,OAAOoL,SAASnC,OAAS,uBAAyB,cAC3E/O,EAAGC,KAAKb,KAAMA,KAAK4J,MAAME,WAAYsU,EAAatM,GAASnC,OAAOgH,KAAK3W,OAI3EoH,WAAW0K,GAASnC,OAAOgH,KAAK3W,MAAO,KAI3C2P,OAjGa,WAiGJ,IAAA5P,EAAAC,KACCga,EAASlI,GAASmI,UAAUpZ,KAAKb,MAAM,GADxCqe,EAGgDre,KAAK8R,SAAlDmM,EAHHI,EAGGJ,OAAQ9D,EAHXkE,EAGWlE,SAAUmE,EAHrBD,EAGqBC,KAAMC,EAH3BF,EAG2BE,iBAC1BC,EAAiBniB,QAAQ2d,EAAO/S,KAAK,SAAArI,GAAK,OAAIA,EAAMub,WAAaA,KAGnEna,KAAK2J,SAAW3J,KAAK0d,SACrB1D,EAAO9W,OAAO,SAAAtE,GAAK,OAAK0f,EAAK5e,IAAId,KAAQ4B,QAAQ,SAAA5B,GAC7CmB,EAAK8L,MAAMC,IAAI,cAAelN,GAE9B0f,EAAK3T,IAAI/L,EAAO,CACZwa,QAAwB,YAAfxa,EAAM6f,OAInB7f,EAAM6f,KAAO,SAGb7d,EAAGC,KAAKd,EAAMnB,EAAO,YAAa,WAAA,OAAMkT,GAAS4M,WAAW7d,KAAKd,QAKpEye,GAAkBxe,KAAKma,WAAaA,IAAcH,EAAO9T,SAASqY,MACnEzM,GAAS6M,YAAY9d,KAAKb,KAAMma,GAChCrI,GAAS7R,OAAOY,KAAKb,KAAMie,GAAUO,IAIzC/Y,EAAYzF,KAAKiC,SAASmE,UAAWpG,KAAK0G,OAAOC,WAAWmL,SAAS3D,SAAUjR,EAAGmC,MAAM2a,IAGpF9c,EAAGM,OAAOwC,KAAK0G,OAAO6E,WAAarO,EAAGQ,SAASsC,KAAK0G,OAAO6E,UACvDvL,KAAK0G,OAAOkY,YAAc1hB,EAAGQ,SAASsC,KAAK0G,OAAOkY,WAAWC,UAC7D7e,KAAK0G,OAAOkY,WAAWC,QAAQhe,KAAKb,OAEhCA,KAAK0G,OAAO6E,UAAY,IAAIrF,SAAS,aAAelG,KAAK0G,OAAOmL,SAAS3L,SAAS,aAE1FqF,GAASuO,gBAAgBjZ,KAAKb,OAMtCC,OA9Ia,SA8IN/D,GAAuB,IAAhBkE,IAAgBF,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,KAAAA,UAAA,GAE1B,GAAKF,KAAKT,UAAUyJ,GAApB,CAF0B,IAMlBkR,EAAYla,KAAK8R,SAAjBoI,QACF4E,EAAc9e,KAAK0G,OAAOC,WAAWmL,SAASmM,OAI9CA,EAAS/gB,EAAGC,gBAAgBjB,IAAUge,EAAUhe,EAGtD,GAAI+hB,IAAW/D,EAAS,CAQpB,GANK9Z,IACDJ,KAAK8R,SAASmM,OAASA,EACvBje,KAAKsL,QAAQX,IAAI,CAAEmH,SAAUmM,MAI5Bje,KAAKma,UAAY8D,IAAW7d,EAAS,CACtC,IAAM4Z,EAASlI,GAASmI,UAAUpZ,KAAKb,MACjCpB,EAAQkT,GAASiN,UAAUle,KAAKb,KAAxB,CAA+BA,KAAK8R,SAASqI,UAA7Cjb,OAAA8f,EAA0Dhf,KAAK8R,SAASiM,aAAY,GAOlG,OAJA/d,KAAK8R,SAASqI,SAAWvb,EAAMub,cAG/BrI,GAASnH,IAAI9J,KAAKb,KAAMga,EAAO/N,QAAQrN,IAKvCoB,KAAKiC,SAASuP,QAAQM,WACtB9R,KAAKiC,SAASuP,QAAQM,SAASoF,QAAU+G,GAI7CxY,EAAYzF,KAAKiC,SAASmE,UAAW0Y,EAAab,GAElDje,KAAK8R,SAASoI,QAAU+D,EAGxB1S,GAASC,cAAc3K,KAAKb,KAAM,YAGlCqB,EAAaR,KAAKb,KAAMA,KAAK4J,MAAOqU,EAAS,kBAAoB,uBAMzEtT,IApMa,SAoMTrI,GAAuB,IAAhBlC,IAAgBF,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,KAAAA,UAAA,GACjB8Z,EAASlI,GAASmI,UAAUpZ,KAAKb,MAGvC,IAAe,IAAXsC,EAKJ,GAAKpF,EAAGG,OAAOiF,GAKf,GAAMA,KAAS0X,EAAf,CAKA,GAAIha,KAAK8R,SAAS8E,eAAiBtU,EAAO,CACtCtC,KAAK8R,SAAS8E,aAAetU,EAC7B,IAAM1D,EAAQob,EAAO1X,GACrB1D,EAAM6f,KAAO,UAHyB,IAI9BtE,GAAavb,GAAS,IAAtBub,SAGRna,KAAK8R,SAASyM,iBAAmB3f,EAGjC2M,GAASC,cAAc3K,KAAKb,KAAM,YAG7BI,IACDJ,KAAK8R,SAASqI,SAAWA,EACzBna,KAAKsL,QAAQX,IAAI,CAAEwP,SAAAA,KAInBna,KAAK2a,SACL3a,KAAKif,MAAMC,gBAAgB/E,GAI/B9Y,EAAaR,KAAKb,KAAMA,KAAK4J,MAAO,kBAIxCkI,GAAS7R,OAAOY,KAAKb,MAAM,EAAMI,GAE7BJ,KAAK2J,SAAW3J,KAAK0d,SAErB5L,GAAS4M,WAAW7d,KAAKb,WApCzBA,KAAK6L,MAAM6G,KAAK,kBAAmBpQ,QALnCtC,KAAK6L,MAAM6G,KAAK,2BAA4BpQ,QAL5CwP,GAAS7R,OAAOY,KAAKb,MAAM,EAAOI,IAoD1Cue,YA7Pa,SA6PDziB,GAAuB,IAAhBkE,IAAgBF,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,KAAAA,UAAA,GAC/B,GAAKhD,EAAGM,OAAOtB,GAAf,CAKA,IAAMie,EAAWje,EAAMgR,cACvBlN,KAAK8R,SAASqI,SAAWA,EAGzB,IAAMH,EAASlI,GAASmI,UAAUpZ,KAAKb,MACjCpB,EAAQkT,GAASiN,UAAUle,KAAKb,KAAM,CAACma,IAC7CrI,GAASnH,IAAI9J,KAAKb,KAAMga,EAAO/N,QAAQrN,GAAQwB,QAV3CJ,KAAK6L,MAAM6G,KAAK,4BAA6BxW,IAgBrD+d,UA/Qa,WA+Qa,IAAAjE,EAAAhW,KAAhB2P,EAAgBzP,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,IAAAA,UAAA,GAKtB,OAHetD,MAAMwF,MAAMpC,KAAK4J,OAAS,IAAIE,YAAc,IAItD5G,OAAO,SAAAtE,GAAK,OAAKoX,EAAKrM,SAAWgG,GAAUqG,EAAKlE,SAASwM,KAAKa,IAAIvgB,KAClEsE,OAAO,SAAAtE,GAAK,MAAI,CAAC,WAAY,aAAasH,SAAStH,EAAME,SAIlEigB,UA1Ra,SA0RHhB,GAA0B,IAI5Bnf,EAJ4BwY,EAAApX,KAAf0F,EAAexF,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,IAAAA,UAAA,GAC1B8Z,EAASlI,GAASmI,UAAUpZ,KAAKb,MACjCof,EAAgB,SAAAxgB,GAAK,OAAItB,QAAQ8Z,EAAKtF,SAASwM,KAAK5e,IAAId,IAAU,IAAIwa,UACtEiG,EAASziB,MAAMwF,KAAK4X,GAAQP,KAAK,SAACC,EAAGC,GAAJ,OAAUyF,EAAczF,GAAKyF,EAAc1F,KAOlF,OALAqE,EAAUuB,MAAM,SAAAnF,GAEZ,QADAvb,EAAQygB,EAAOpY,KAAK,SAAArI,GAAK,OAAIA,EAAMub,WAAaA,OAI7Cvb,IAAU8G,EAAQ2Z,EAAO,QAAKlf,IAIzCof,gBAxSa,WAyST,OAAOzN,GAASmI,UAAUpZ,KAAKb,MAAMA,KAAK4W,eAI9CyC,SA7Sa,SA6SJza,GACL,IAAIgY,EAAehY,EAMnB,OAJK1B,EAAG0B,MAAMgY,IAAiBpO,EAAQsB,YAAc9J,KAAK8R,SAASoI,UAC/DtD,EAAe9E,GAASyN,gBAAgB1e,KAAKb,OAG7C9C,EAAG0B,MAAMgY,GACJ1Z,EAAGmC,MAAMuX,EAAa9C,OAItB5W,EAAGmC,MAAMuX,EAAauD,UAIpBxM,GAAS,UAAW3N,KAAK0G,QAHrB9H,EAAMub,SAASnN,cAJf4J,EAAa9C,MAUrBnG,GAAS,WAAY3N,KAAK0G,SAKrCgY,WArUa,SAqUFxiB,GAEP,GAAK8D,KAAKT,UAAUyJ,GAIpB,GAAK9L,EAAGc,QAAQgC,KAAKiC,SAAS6P,UAM9B,GAAK5U,EAAGC,gBAAgBjB,IAAWU,MAAMD,QAAQT,GAAjD,CAKA,IAAIsjB,EAAOtjB,EAGX,IAAKsjB,EAAM,CACP,IAAM5gB,EAAQkT,GAASyN,gBAAgB1e,KAAKb,MAC5Cwf,EAAO5iB,MAAMwF,MAAMxD,GAAS,IAAI6gB,YAAc,IACzC9Z,IAAI,SAAAnH,GAAG,OAAIA,EAAIkhB,iBACf/Z,IAAI2H,GAIb,IAAM2C,EAAUuP,EAAK7Z,IAAI,SAAAga,GAAO,OAAIA,EAAQ7a,SAAQyO,KAAK,MAGzD,GAFgBtD,IAAYjQ,KAAKiC,SAAS6P,SAASvE,UAEtC,CAETtJ,EAAajE,KAAKiC,SAAS6P,UAC3B,IAAM+M,EAAUnb,EAAc,OAAQc,EAA0BxE,KAAK0G,OAAO6K,UAAUsN,UACtFA,EAAQtR,UAAY0C,EACpBjQ,KAAKiC,SAAS6P,SAASjP,YAAYgc,GAGnCxd,EAAaR,KAAKb,KAAMA,KAAK4J,MAAO,mBA1BpC5J,KAAK6L,MAAM6G,KAAK,4BAA6BxW,QAN7C8D,KAAK6L,MAAM6G,KAAK,qCAoCxBwL,YAhXa,SAgXD1D,GAER,GAAIzU,EAAS/F,KAAKiC,SAAS6P,SAAU9R,KAAK0G,OAAOC,WAAWwX,gBAAgBnZ,QAAQ,MAAO,SACvF,GAAiB,QAAbwV,EAAoB,YACrB,GAAiB,WAAbA,EACP,OAEJ/U,EAAYzF,KAAKiC,SAAS6P,SAAU9R,KAAK0G,OAAOC,WAAWwX,gBAAgBnZ,QAAQ,MAAO,QAG1FuG,GAASC,cAAc3K,KAAKb,KAAM,qBAGtC4f,WA7Xa,WA6XsB,IAAxBC,EAAwB3f,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAAN,KACnB4f,EAAiB9f,KAAKsL,QAAQ5L,IAAI,YAClCqgB,EAAmB/f,KAAKsL,QAAQ5L,IAAI,aAAemgB,EAEzD,GACK3iB,EAAGO,QAAQqiB,IAAmBA,GAAkB5iB,EAAGM,OAAOuiB,KACzD7iB,EAAGO,QAAQqiB,IAAmB5iB,EAAGM,OAAOuiB,GAC5C,CACE,IAAM/F,EAASlI,GAASmI,UAAUpZ,KAAKb,MAAM,GACvCggB,EAAmB,CAACD,GACtBF,GACAG,EAAiBrf,KAAKkf,GAE1BjjB,MAAMqjB,UAAUtf,KAAKS,MAAM4e,EAAkBhgB,KAAK8R,SAASiM,WAC3D,IAAMnf,EAAQkT,GAASiN,UAAUle,KAAKb,KAAMggB,GAAkB,GAC9DlO,GAASnH,IAAI9J,KAAKb,KAAMga,EAAO/N,QAAQrN,OCja7CshB,GAAW,CAEb/R,SAAS,EAGTJ,MAAO,GAGPlC,OAAO,EAGPsU,UAAU,EAGVC,WAAW,EAIXvX,aAAa,EAGbgF,SAAU,GAGVsE,OAAQ,EACR8E,OAAO,EAGP3E,SAAU,KAIVwG,iBAAiB,EAGjBN,YAAY,EAGZ6H,cAAc,EAGdC,MAAO,OAGPC,aAAa,EAGbC,cAAc,EAGdC,YAAY,EAGZC,oBAAoB,EAGpBnR,YAAY,EACZuD,WAAY,OACZ5B,QAAS,qCAGTtF,WAAY,uCAEZ+U,KAAM,CACF5hB,SAAKoB,EACLygB,UAAMzgB,GAIV0gB,yBAAqB1gB,EAGrBsL,QAAS,CACL2N,QAAS,IACT5Z,QAAS,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,IAAK,MAIhEshB,KAAM,CACF7C,QAAQ,GAMZ5S,MAAO,CACH0V,SAAU,EACVvhB,QAAS,CAAC,GAAK,IAAM,EAAG,KAAM,IAAK,KAAM,IAI7CwhB,SAAU,CACNC,SAAS,EACTC,QAAQ,GAIZnJ,SAAU,CACNxM,UAAU,EACV2G,MAAM,GAIVJ,SAAU,CACNmM,QAAQ,EACR9D,SAAU,OACVK,SAAU,SAGV7K,QAAQ,GAIZoC,WAAY,CACR5D,SAAS,EACTgT,UAAU,EACVC,WAAW,GAIf9V,QAAS,CACL6C,SAAS,EACT3K,IAAK,QAIT+H,SAAU,CACN,aAGA,OAEA,WACA,eACA,OACA,SACA,WACA,mBACA,WACA,MACA,UACA,OACA,cAEJsG,SAAU,CAAC,WAAY,mBAAoB,UAAW,SAGtDlE,KAAM,CACF8D,QAAS,UACTC,OAAQ,qBACRvG,KAAM,OACNF,MAAO,QACP0G,YAAa,sBACbO,KAAM,OACNmP,UAAW,8BACXrM,OAAQ,SACR0C,SAAU,WACV7M,YAAa,eACbyH,SAAU,WACVH,OAAQ,SACRP,KAAM,OACN0P,OAAQ,SACRC,eAAgB,kBAChBC,gBAAiB,mBACjBzF,SAAU,WACV0F,gBAAiB,mBACjBC,eAAgB,kBAChBC,UAAW,OACXC,SAAU,oBACVC,WAAY,qBACZ/P,SAAU,WACVgQ,WAAY,cACZC,mBAAoB,mBACpBC,qBAAsB,CAClBC,IAAK,MACLC,OAAQ,UAEZrQ,SAAU,WACVsQ,SAAU,2BACV9W,MAAO,QACP+W,OAAQ,SACR3W,QAAS,UACTqV,KAAM,OACNuB,MAAO,QACPC,IAAK,MACLC,IAAK,MACLC,MAAO,QACPC,SAAU,WACVtU,QAAS,UACTuU,cAAe,KACfC,aAAc,CACVC,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,IAAK,KACLC,IAAK,KACLC,IAAK,OAKbxG,KAAM,CACFV,SAAU,KACVtO,MAAO,CACHyV,IAAK,yCACLC,OAAQ,yCACRpa,IAAK,2CAET2E,QAAS,CACLwV,IAAK,qCACLna,IACI,yGAERqa,UAAW,CACPF,IAAK,uDAKbtE,WAAY,CACRC,QAAS,MAIbnI,UAAW,CACPxE,KAAM,KACN/G,KAAM,KACNF,MAAO,KACPwG,QAAS,KACTC,OAAQ,KACRC,YAAa,KACbC,KAAM,KACNO,OAAQ,KACRL,SAAU,KACViK,SAAU,KACVhK,WAAY,KACZ7I,IAAK,KACLI,QAAS,KACT+B,MAAO,KACPI,QAAS,KACTqV,KAAM,KACN3G,SAAU,MAId7Z,OAAQ,CAGJ,QACA,WACA,UACA,UACA,UACA,UACA,iBACA,YACA,aACA,iBACA,aACA,eACA,OACA,QACA,QACA,UACA,SACA,UACA,aACA,YAGA,WACA,kBACA,iBACA,sBACA,qBACA,kBACA,mBACA,iBACA,iBACA,gBACA,QAGA,cAGA,gBAGA,YACA,kBACA,mBACA,YACA,cACA,cACA,iBACA,gBACA,YAKJiR,UAAW,CACP8R,SAAU,6CACVjd,UAAW,QACXmF,SAAU,CACNnF,UAAW,KACXlE,QAAS,kBACTohB,MAAO,CACHC,SAAU,sBACVC,YAAa,0BAEjBtB,OAAQ,CACJ7J,KAAM,8BACNoL,MAAO,iCAGftG,OAAQ,cACR3L,QAAS,CACLrG,KAAM,qBACNF,MAAO,sBACPwG,QAAS,wBACTC,OAAQ,uBACRC,YAAa,6BACbC,KAAM,qBACNE,SAAU,yBACViK,SAAU,yBACV2H,KAAM,qBACN3R,WAAY,2BACZ7I,IAAK,oBACLI,QAAS,wBACTuI,SAAU,yBACViP,KAAM,sBAEV7O,OAAQ,CACJC,KAAM,qBACNC,OAAQ,uBACR9G,MAAO,sBACP8O,SAAU,yBACV4H,mBAAoB,iCACpBtW,QAAS,yBAEb2G,QAAS,CACLvH,YAAa,uBACbyH,SAAU,wBACVD,OAAQ,0BACRyO,KAAM,wBACN3O,OAAQ,0BAEZH,SAAU,kBACVF,SAAU,kBACV+M,QAAS,iBACTnL,KAAM,CACFjI,QAAS,kCAKjB9E,WAAY,CACRlG,KAAM,YACNmI,SAAU,YACVF,MAAO,sBACPuW,MAAO,oBACP0E,eAAgB,+BAChBC,OAAQ,eACRC,cAAe,uBACfC,IAAK,YACL7P,QAAS,gBACTgJ,eAAgB,yBAChB8G,QAAS,gBACTjZ,OAAQ,eACRkZ,QAAS,gBACTC,QAAS,gBACTC,MAAO,cACP1R,QAAS,gBACTgN,KAAM,aACNla,OAAQ,gBACRkb,aAAc,sBACdvY,MAAO,eACPkc,QAAS,iBACTC,YAAa,gBACbC,aAAc,sBACdjS,QAAS,CACL1B,KAAM,cAEViQ,KAAM,aACNjN,KAAM,CACFtQ,MAAO,oBACPqQ,MAAO,cACPpE,KAAM,mBAEVyC,SAAU,CACN3D,QAAS,yBACT8P,OAAQ,yBAEZE,gBAAiB,8BACjBpM,WAAY,CACR5D,QAAS,2BACTgT,SAAU,6BAEdjY,IAAK,CACD3J,UAAW,sBACX0e,OAAQ,oBAEZ3U,QAAS,CACL/J,UAAW,0BACX0e,OAAQ,wBAEZzX,SAAU,kBACV8d,eAAgB,yBAIpBthB,WAAY,CACRic,MAAO,CACHrW,SAAU,qBACVxD,GAAI,uBAKZnI,KAAM,CACFsnB,OAAQ,MAKZT,IAAK,CACD3V,SAAS,EACTqW,YAAa,KC7aRtb,GACD,qBADCA,GAEC,SCFDub,GAAY,CACrBta,MAAO,QACPuD,QAAS,UACTD,MAAO,SAGEiX,GAAQ,CACjBjc,MAAO,QACPC,MAAO,SCRX,IAAMic,GAAO,aAEQC,cACjB,SAAAA,IAA6B,IAAjBzW,EAAiBjO,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,IAAAA,UAAA,GAAAgO,EAAAlO,KAAA4kB,GACzB5kB,KAAKmO,QAAU1P,OAAOomB,SAAW1W,EAE7BnO,KAAKmO,SACLnO,KAAK8L,IAAI,2DAMb,OAAO9L,KAAKmO,QAAUxQ,SAASsiB,UAAUtJ,KAAK9V,KAAKgkB,QAAQ/Y,IAAK+Y,SAAWF,gCAK3E,OAAO3kB,KAAKmO,QAAUxQ,SAASsiB,UAAUtJ,KAAK9V,KAAKgkB,QAAQnS,KAAMmS,SAAWF,iCAK5E,OAAO3kB,KAAKmO,QAAUxQ,SAASsiB,UAAUtJ,KAAK9V,KAAKgkB,QAAQpS,MAAOoS,SAAWF,YCfrF,SAASG,KAAyB,IAAhBC,EAAgB7kB,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,IAAAA,UAAA,GAC9B,GAAKF,KAAKmO,QAAV,CAIA,GAAK4W,EAME,CACH,IAAM7Q,EAASlU,KAAKyK,OAAOxI,SAASuP,QAAQkS,KACxCxmB,EAAGc,QAAQkW,KACXA,EAAOgD,QAAUlX,KAAKglB,gBATjB,CAET,IAAM9Q,EAASlU,KAAKyK,OAAOxI,SAASuP,QAAQO,WACxC7U,EAAGc,QAAQkW,KACXA,EAAOgD,QAAUlX,KAAKie,QAU1Bje,KAAKilB,cAAgBjlB,KAAKklB,qBACrBH,EAGD1jB,EAAaR,KAAKb,KAAKyK,OAAQzK,KAAKsM,OAAQtM,KAAKglB,WAAa,sBAAwB,sBAAsB,GAF5G3jB,EAAaR,KAAKb,KAAKyK,OAAQzK,KAAKsM,OAAQtM,KAAKie,OAAS,kBAAoB,kBAAkB,GAK/F8G,EAQD1jB,EAAaR,KACTb,KAAKyK,OACLzK,KAAKyK,OAAOxI,SAASmE,UACrBpG,KAAKglB,WAAa,sBAAwB,sBAC1C,GAXJ3jB,EAAaR,KACTb,KAAKyK,OACLzK,KAAKyK,OAAOxI,SAASmE,UACrBpG,KAAKie,OAAS,kBAAoB,kBAClC,GAaP1W,EAAQU,OpBwMV,WAAmD,IAAhCjK,EAAgCkC,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAAtB,KAAMD,EAAgBC,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,IAAAA,UAAA,GACtD,GAAKhD,EAAGc,QAAQA,GAAhB,CAIA,IAAMkV,EAAY/M,EAAYtF,KAAKb,KAAM,2DACnCmlB,EAAQjS,EAAU,GAClBkS,EAAOlS,EAAUA,EAAUlW,OAAS,GAsB1C6C,EAAegB,KAAKb,KAAMA,KAAKiC,SAASmE,UAAW,UApBtC,SAAAhI,GAET,GAAkB,QAAdA,EAAMoF,KAAmC,IAAlBpF,EAAMinB,QAAjC,CAKA,IAAMpE,EAAUrd,SAAS0hB,cAErBrE,IAAYmE,GAAShnB,EAAMmnB,SAIpBtE,IAAYkE,GAAS/mB,EAAMmnB,WAElCH,EAAK3e,QACLrI,EAAMkX,mBALN6P,EAAM1e,QACNrI,EAAMkX,oBAQsDrV,GAAQ,KoBpO9DY,KAAKb,KAAKyK,OAAQzK,KAAKsM,OAAQtM,KAAKie,SAItD,SAASuH,KAA+B,IAAAzlB,EAAAC,KAAhBC,EAAgBC,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,IAAAA,UAAA,GAwBpC,GAtBID,EACAD,KAAKylB,eAAiB,CAClBC,EAAGjnB,OAAOknB,SAAW,EACrBC,EAAGnnB,OAAOonB,SAAW,GAGzBpnB,OAAOqnB,SAAS9lB,KAAKylB,eAAeC,EAAG1lB,KAAKylB,eAAeG,GAI/DhiB,SAASiM,KAAK3I,MAAM6e,SAAW9lB,EAAS,SAAW,GAG/CD,KAAKsM,SAAWtM,KAAKyK,OAAOxI,SAASmE,UACrCX,EAAYzF,KAAKsM,OAAQtM,KAAKyK,OAAO/D,OAAOC,WAAWoL,WAAWoP,SAAUlhB,IAE5EwF,EAAYzF,KAAKsM,OAAQtM,KAAKyK,OAAO/D,OAAOC,WAAWoL,WAAWoP,SAAUlhB,GAC5EwF,EAAYzF,KAAKyK,OAAOxI,SAASmE,UAAWpG,KAAKyK,OAAO/D,OAAOC,WAAWoL,WAAWoP,SAAUlhB,IAK/FsH,EAAQU,MAAO,CACf,IAAI+d,EAAWpiB,SAASqiB,KAAK3f,cAAc,yBACrC4f,EAAW,qBAGZF,IACDA,EAAWpiB,SAASF,cAAc,SACzBD,aAAa,OAAQ,YAIlC,IAAM0iB,EAAcjpB,EAAGM,OAAOwoB,EAAS/V,UAAY+V,EAAS/V,QAAQ/J,SAASggB,GAEzEjmB,GACAD,KAAKomB,iBAAmBD,EAEnBA,IACDH,EAAS/V,SAAT,IAAA/Q,OAAwBgnB,KAErBlmB,KAAKomB,kBACZJ,EAAS/V,QAAU+V,EAAS/V,QACvB1P,MAAM,KACN2C,OAAO,SAAAmjB,GAAI,OAAIA,EAAKvhB,SAAWohB,IAC/B3S,KAAK,MAIdnM,WAAW,WAAA,OAAMD,EAAQpH,EAAKuM,SAAS,KAI3CwY,GAASjkB,KAAKb,MAAM,OAGlBsmB,cACF,SAAAA,EAAY7b,GAAQ,IAAAuL,EAAAhW,KAAAkO,EAAAlO,KAAAsmB,GAEhBtmB,KAAKyK,OAASA,EAGdzK,KAAKumB,OAASD,EAAWC,OACzBvmB,KAAKkmB,SAAWI,EAAWJ,SAG3BlmB,KAAKylB,eAAiB,CAAEC,EAAG,EAAGE,EAAG,GAIjChlB,EAAGC,KACCb,KAAKyK,OACL7G,SACgB,OAAhB5D,KAAKumB,OAAkB,qBAAvB,GAAArnB,OAAiDc,KAAKumB,OAAtD,oBACA,WAEIzB,GAASjkB,KAAKmV,KAKtBpV,EAAGC,KAAKb,KAAKyK,OAAQzK,KAAKyK,OAAOxI,SAASmE,UAAW,WAAY,SAAAhI,GAEzDlB,EAAGc,QAAQgY,EAAKvL,OAAOxI,SAASsJ,WAAayK,EAAKvL,OAAOxI,SAASsJ,SAASzF,SAAS1H,EAAMkO,SAI9F0J,EAAK/V,WAITD,KAAK2P,oDA0FD3P,KAAKmO,QACLnO,KAAKyK,OAAOoB,MAAMC,IAAlB,GAAA5M,OAAyBonB,EAAWE,OAAS,SAAW,WAAxD,wBAEAxmB,KAAKyK,OAAOoB,MAAMC,IAAI,kDAI1BrG,EAAYzF,KAAKyK,OAAOxI,SAASmE,UAAWpG,KAAKyK,OAAO/D,OAAOC,WAAWoL,WAAW5D,QAASnO,KAAKmO,yCAK9FnO,KAAKmO,UAINnO,KAAKglB,YACLhlB,KAAKymB,aAILlf,EAAQU,OAASjI,KAAKyK,OAAO/D,OAAOqL,WAAWqP,UAC/CphB,KAAKsM,OAAOoa,wBACJJ,EAAWE,OAEXxmB,KAAKumB,OAELrpB,EAAGmC,MAAMW,KAAKumB,SACtBvmB,KAAKsM,OAAL,GAAApN,OAAec,KAAKumB,OAApB,WAAArnB,OAAoCc,KAAKkmB,aAFzClmB,KAAKsM,OAAOqa,oBAFZnB,GAAe3kB,KAAKb,MAAM,mCAU9B,GAAKA,KAAKmO,QAKV,GAAI5G,EAAQU,OAASjI,KAAKyK,OAAO/D,OAAOqL,WAAWqP,UAC/CphB,KAAKsM,OAAOsa,uBACZ5mB,KAAKyK,OAAOU,YACT,GAAKmb,EAAWE,OAEhB,GAAKxmB,KAAKumB,QAEV,IAAKrpB,EAAGmC,MAAMW,KAAKumB,QAAS,CAC/B,IAAMM,EAAyB,QAAhB7mB,KAAKumB,OAAmB,SAAW,OAClD3iB,SAAQ,GAAA1E,OAAIc,KAAKumB,QAATrnB,OAAkB2nB,GAAlB3nB,OAA2Bc,KAAKkmB,mBAHvCtiB,SAASkjB,kBAAoBljB,SAAS8d,gBAAgB7gB,KAAK+C,eAF5D4hB,GAAe3kB,KAAKb,MAAM,wCAUzBA,KAAKglB,WAGNQ,GAAe3kB,KAAKb,MAAM,GAF1BwlB,GAAe3kB,KAAKb,MAAM,oCAQzBA,KAAKie,OAGNje,KAAK+mB,OAFL/mB,KAAKgnB,wCA/GT,OACKV,EAAWE,QAAUxmB,KAAKyK,OAAO/D,OAAOqL,WAAWoP,WACpDnhB,KAAKyK,OAAO/D,OAAOqL,WAAW5D,SAC9BnO,KAAKyK,OAAOlL,UAAUyJ,IACtBhJ,KAAKyK,OAAOiT,uCAMhB,QAAK1d,KAAKmO,UAKLmY,EAAWE,QAICxmB,KAAKumB,OAAsC3iB,SAAQ,GAAA1E,OAAIc,KAAKumB,QAATrnB,OAAkBc,KAAKkmB,SAAvB,YAArCtiB,SAASqjB,qBAErBjnB,KAAKsM,OALbvG,EAAS/F,KAAKsM,OAAQtM,KAAKyK,OAAO/D,OAAOC,WAAWoL,WAAWoP,8CAS1E,OAAOpb,EAAS/F,KAAKsM,OAAQtM,KAAKyK,OAAO/D,OAAOC,WAAWoL,WAAWoP,8CAItE,OAAO5Z,EAAQU,OAASjI,KAAKyK,OAAO/D,OAAOqL,WAAWqP,uDAItD,QAASphB,KAAKyK,OAAO/D,OAAOma,mDAK5B,OAAI7gB,KAAKilB,YACEjlB,KAAKyK,OAAOb,MACZ5J,KAAKklB,qBACLllB,KAAKyK,OAAO/D,OAAOma,oBAEvB7gB,KAAKyK,OAAOxI,SAASmE,2CAhF5B,SACIxC,SAASsjB,mBACTtjB,SAASujB,yBACTvjB,SAASwjB,sBACTxjB,SAASyjB,oDAOb,GAAInqB,EAAGQ,SAASkG,SAAS8d,gBACrB,MAAO,GAIX,IAAIte,EAAQ,GAYZ,MAXiB,CAAC,SAAU,MAAO,MAE1ByX,KAAK,SAAAyM,GACV,SAAIpqB,EAAGQ,SAASkG,SAAQ,GAAA1E,OAAIooB,EAAJ,sBAA6BpqB,EAAGQ,SAASkG,SAAQ,GAAA1E,OAAIooB,EAAJ,yBACrElkB,EAAQkkB,GACD,KAMRlkB,mCAIP,MAAuB,QAAhBpD,KAAKumB,OAAmB,aAAe,sBCtLhDgB,GAAQ,CACVC,eADU,SACK5X,GAAM,IAAA7P,EAAAC,KAEXoG,EAAY1C,EAAc,MAAOc,EAA0BxE,KAAK0G,OAAO6K,UAAUhG,SAASrJ,UAE1FqhB,EAAW7f,EAAc,MAAOc,EAA0BxE,KAAK0G,OAAO6K,UAAUhG,SAAS+X,MAAMC,WAC/FC,EAAc9f,EAChB,MACAc,EAA0BxE,KAAK0G,OAAO6K,UAAUhG,SAAS+X,MAAME,cAE7DiE,EAAa/jB,EAAc,MAAOc,EAA0BxE,KAAK0G,OAAO6K,UAAUhG,SAAS2W,OAAO7J,OAClGqP,EAAchkB,EAChB,MACAc,EAA0BxE,KAAK0G,OAAO6K,UAAUhG,SAAS2W,OAAOuB,QAGpED,EAAY3gB,YAAY4kB,GACxBjE,EAAY3gB,YAAY6kB,GACxBthB,EAAUvD,YAAY0gB,GACtBnd,EAAUvD,YAAY2gB,GAGtBiE,EAAW5kB,YAAY0I,GAASoI,aAAa9S,KAAKb,KAAM,WAGxDynB,EAAW5kB,YAAY0I,GAASoI,aAAa9S,KAAKb,KAAM,SAGxDynB,EAAW5kB,YAAY0I,GAASoI,aAAa9S,KAAKb,KAAM,iBAGxD,IAAMgS,EAAWtO,EAAc,MAAOc,EAA0BxE,KAAK0G,OAAO6K,UAAUS,WAetF,GAZAA,EAASnP,YACL0I,GAAS4I,YAAYtT,KAAKb,KAAM,OAAQ,CACpCoF,GAAE,aAAAlG,OAAe0Q,EAAKxK,OAK9B4M,EAASnP,YAAY0I,GAASsJ,eAAehU,KAAKb,KAAM,WAKpDA,KAAK0G,OAAOqR,SAAS7F,KAAM,CAC3B,IAAMM,EAAU9O,EACZ,OACA,CACIyB,MAAOnF,KAAK0G,OAAOC,WAAW6L,SAElC,SAGJR,EAASnP,YAAY2P,GACrBxS,KAAKiC,SAASmQ,QAAQG,YAAcC,EAGxCxS,KAAKiC,SAAS+P,SAAWA,EACzBuR,EAAS1gB,YAAY7C,KAAKiC,SAAS+P,UAGnCyV,EAAW5kB,YAAY0I,GAAS2J,WAAWrU,KAAKb,KAAM,gBAGtDynB,EAAW5kB,YAAY0I,GAAS2J,WAAWrU,KAAKb,KAAM,aAGtD,IAAM2nB,EAAqBpc,GAASoI,aAAa9S,KAAKb,KAAM,mBAAoB,CAC5EmF,MAAO,kCAEXwiB,EAAmB9kB,YAAYa,EAAc,OAAQ,GAAI,SACzDgkB,EAAY7kB,YAAY8kB,GAExBA,EAAmBhoB,iBAAiB,QAAS,SAACP,GAC1CW,EAAK6nB,YAAYC,iBACjBzoB,EAAEmW,oBAINmS,EAAY7kB,YAAY0I,GAASoI,aAAa9S,KAAKb,KAAM,SAGzD,IAAMmS,EAASzO,EAAc,MAAO,CAChCyB,MAAO,iBAILnC,EAAa,CACfqR,IAAK,EACLC,KAAM,IACNlR,MAAOpD,KAAK0G,OAAOyL,QAIvBA,EAAOtP,YACH0I,GAAS4I,YAAYtT,KACjBb,KACA,SACAwK,EAAOxH,EAAY,CACfoC,GAAE,eAAAlG,OAAiB0Q,EAAKxK,QAKpCpF,KAAKiC,SAASkQ,OAASA,EAEvBuV,EAAY7kB,YAAYsP,GAGxB,IAAMuB,EAAOhQ,EAAc,MAAO,CAC9ByB,MAAO,aACPG,OAAQ,KAGZoO,EAAK7Q,YACD0I,GAASoI,aAAa9S,KAAKb,KAAM,WAAY,CACzCoF,GAAE,wBAAAlG,OAA0B0Q,EAAKxK,IACjC8W,iBAAiB,EACjBC,gBAAA,iBAAAjd,OAAkC0Q,EAAKxK,IACvCgX,iBAAiB,KAIzB,IAAM0L,EAAOpkB,EAAc,OAAQ,CAC/ByB,MAAO,wBACPC,GAAE,iBAAAlG,OAAmB0Q,EAAKxK,IAC1BE,OAAQ,GACRyiB,mBAAA,wBAAA7oB,OAA4C0Q,EAAKxK,IACjD6N,KAAM,UACN+U,UAAW,IAGT3L,EAAQ3Y,EAAc,OAEtB4Y,EAAO5Y,EAAc,MAAO,CAC9B0B,GAAE,iBAAAlG,OAAmB0Q,EAAKxK,GAAxB,SACF2iB,mBAAA,wBAAA7oB,OAA4C0Q,EAAKxK,IACjD6N,KAAM,aAIJgV,EAAOvkB,EAAc,KAAM,CAC7BuP,KAAM,YA+FV,OA3FAjT,KAAK0G,OAAOmL,SAASrR,QAAQ,SAAAC,GACzB,IAAM2a,EAAM1X,EAAc,KAAM,CAC5BuP,KAAM,MACN3N,OAAQ,KAGN4O,EAASxQ,EACX,SACA8G,EAAOhG,EAA0BzE,EAAK2G,OAAO6K,UAAUC,QAAQK,UAAW,CACtEpR,KAAM,SACN0E,MAAK,GAAAjG,OAAKa,EAAK2G,OAAOC,WAAWsN,QAA5B,KAAA/U,OAAuCa,EAAK2G,OAAOC,WAAWsN,QAA9D,aACL7O,GAAE,iBAAAlG,OAAmB0Q,EAAKxK,GAAxB,KAAAlG,OAA8BuB,EAA9B,QACFyb,iBAAiB,EACjBC,gBAAA,iBAAAjd,OAAkC0Q,EAAKxK,GAAvC,KAAAlG,OAA6CuB,GAC7C2b,iBAAiB,IAErBzO,GAASlN,EAAMV,EAAK2G,SAGlBtD,EAAQM,EAAc,OAAQ,CAChCyB,MAAOpF,EAAK2G,OAAOC,WAAW+M,KAAKtQ,QAIvCA,EAAMmK,UAAYqC,EAAKnP,GAEvByT,EAAOrR,YAAYO,GACnBgY,EAAIvY,YAAYqR,GAChB+T,EAAKplB,YAAYuY,GAEjBrb,EAAKkC,SAAS4P,SAASoW,KAAKxnB,GAAQ2a,IAGxCkB,EAAKzZ,YAAYolB,GACjB5L,EAAMxZ,YAAYyZ,GAGlBtc,KAAK0G,OAAOmL,SAASrR,QAAQ,SAAAC,GACzB,IAAMwY,EAAOvV,EAAc,MAAO,CAC9B0B,GAAE,iBAAAlG,OAAmB0Q,EAAKxK,GAAxB,KAAAlG,OAA8BuB,GAChC0E,MAAO,WACPG,OAAQ,GACRyiB,mBAAA,iBAAA7oB,OAAqC0Q,EAAKxK,GAA1C,KAAAlG,OAAgDuB,EAAhD,QACAwS,KAAM,WACN+U,UAAW,IAGTE,EAAOxkB,EACT,SACA,CACIjD,KAAM,SACN0E,MAAK,GAAAjG,OAAKa,EAAK2G,OAAOC,WAAWsN,QAA5B,KAAA/U,OAAuCa,EAAK2G,OAAOC,WAAWsN,QAA9D,UACLiI,iBAAiB,EACjBC,gBAAA,iBAAAjd,OAAkC0Q,EAAKxK,GAAvC,SACAgX,iBAAiB,GAErBzO,GAASlN,EAAMV,EAAK2G,SAGxBuS,EAAKpW,YAAYqlB,GAEjB,IAAM1oB,EAAUkE,EAAc,MAE9BuV,EAAKpW,YAAYrD,GACjB6c,EAAMxZ,YAAYoW,GAElBlZ,EAAKkC,SAAS4P,SAASyI,MAAM7Z,GAAQwY,IAGzC6O,EAAKjlB,YAAYwZ,GACjB3I,EAAK7Q,YAAYilB,GACjBJ,EAAY7kB,YAAY6Q,GAExB1T,KAAKiC,SAAS4P,SAASiW,KAAOA,EAC9B9nB,KAAKiC,SAAS4P,SAAS6B,KAAOA,EAE9BgU,EAAY7kB,YAAY0I,GAASoI,aAAa9S,KAAKb,KAAM,SAGzD0nB,EAAY7kB,YAAY0I,GAASoI,aAAa9S,KAAKb,KAAM,eAEzDA,KAAKiC,SAASsJ,SAAWnF,EAErBpG,KAAK2J,SACL4d,GAAMjO,eAAezY,KAAKb,KAAMmK,EAAMI,kBAAkB1J,KAAKb,OAGjEunB,GAAM9M,aAAa5Z,KAAKb,MACxBunB,GAAMzN,gBAAgBjZ,KAAKb,MAC3BunB,GAAMpO,wBAAwBtY,KAAKb,MAE5BoG,GAIXkT,eAnPU,SAmPK9Z,GAAS,IAAAwW,EAAAhW,KAEdiW,EAAOjW,KAAKiC,SAAS4P,SAASyI,MAAM7O,QAAQnF,cAAc,MAG5DpJ,EAAGU,MAAM4B,KACTQ,KAAKR,QAAQiM,QAAUM,EAAOvM,IAIlC,IAAMS,GAAU/C,EAAGmC,MAAMW,KAAKR,QAAQiM,UAAYzL,KAAKR,QAAQiM,QAAQzO,OAAS,EAChFuO,GAASgP,UAAU1Z,KAAKb,KAVX,UAUuBC,GAGpCsL,GAASiO,UAAU3Y,KAAKb,MAGnBC,IAKLgE,EAAagS,GAGbjW,KAAKR,QAAQiM,QACRgO,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IACnBnZ,QAAQ,SAAAiL,GACLF,GAASwK,eAAelV,KAAKmV,EAAM,CAC/B5S,MAAOqI,EACPwK,KAAAA,EACAxV,KA9BC,UA+BDsN,MAAOxC,GAAS8N,SAASxY,KAAKmV,EAAM,UAAWvK,OAI3DF,GAASC,cAAc3K,KAAKb,KAnCf,UAmC2BiW,KAI5C6D,gBA3RU,WA2RQ,IAAA1C,EAAApX,KAEd,GAAK9C,EAAGc,QAAQgC,KAAKiC,SAAS4P,SAASyI,MAAMxI,UAA7C,CAKA,IAAMrR,EAAO,WACPwV,EAAOjW,KAAKiC,SAAS4P,SAASyI,MAAMxI,SAASxL,cAAc,MAC3D0T,EAASlI,GAASmI,UAAUpZ,KAAKb,MAYvC,GATAuL,GAASgP,UAAU1Z,KAAKb,KAAMS,GAAM,GAGpCwD,EAAagS,GAGb1K,GAASiO,UAAU3Y,KAAKb,OAGnBga,EAAOhd,OASR,OARAuO,GAASwK,eAAeY,KAAK3W,KAA7BuL,CAAmC,CAC/BnI,OAAQ,EACRgT,SAAUpW,KAAK8R,SAASoI,QACxBnM,MAAOJ,GAAS,aAAc3N,KAAK0G,QACnCuP,KAAAA,EACAxV,KAAM,kBAEV8K,GAASC,cAAc3K,KAAKb,KAAMS,EAAMwV,GAK5C,IAAMzW,EAAUwa,EAAOrU,IAAI,SAAC/G,EAAOwE,GAAR,MAAmB,CAC1CA,MAAAA,EACAgT,QAASgB,EAAKtF,SAASoI,SAAW9C,EAAKR,eAAiBxT,EACxD2K,MAAO+D,GAASuH,SAASxY,KAAKuW,EAAMxY,GACpC6U,MAAO7U,EAAMub,UAAY5O,GAASiI,YAAY3S,KAAKuW,EAAMxY,EAAMub,SAASnN,eACxEiJ,KAAAA,EACAxV,KAAM,cAIVjB,EAAQ4a,QAAQ,CACZhX,OAAQ,EACRgT,SAAUpW,KAAK8R,SAASoI,QACxBnM,MAAOJ,GAAS,WAAY3N,KAAK0G,QACjCuP,KAAAA,EACAxV,KAAM,aAIVjB,EAAQgB,QAAQ+K,GAASwK,eAAeY,KAAK3W,OAE7CuL,GAASC,cAAc3K,KAAKb,KAAMS,EAAMwV,KAG5CkD,wBArVU,WAqVgB,IAAArB,EAAA9X,KACtB,GAAK9C,EAAGc,QAAQgC,KAAKiC,SAAS4P,SAASyI,MAAM,qBAA7C,CAIA,IAAM7Z,EAAO,mBAEb8K,GAASgP,UAAU1Z,KAAKb,KAAMS,GAAM,GAGpC,IAAMwV,EAAOjW,KAAKiC,SAAS4P,SAASyI,MAAM,oBAAoBhU,cAAc,MAG5ErC,EAAagS,GAEK,CAAC,MAAO,UAGhBzV,QAAQ,SAAAga,GACdjP,GAASwK,eAAelV,KAAKiX,EAAM,CAC/B1U,MAAOoX,EACPvE,KAAAA,EACAxV,KAAAA,EACAsN,MAAOxC,GAAS8N,SAASxY,KAAKiX,EAAM,mBAAoB0C,OAGhEjP,GAASC,cAAc3K,KAAKb,KAAMS,EAAMwV,KAI5CwE,aAnXU,SAmXGjb,GAAS,IAAA+Z,EAAAvZ,KAElB,GAAK9C,EAAGc,QAAQgC,KAAKiC,SAAS4P,SAASyI,MAAMjP,OAA7C,CAOInO,EAAGU,MAAM4B,GACTQ,KAAKR,QAAQ6L,MAAQ7L,GACdQ,KAAK2J,SAAW3J,KAAK2a,WAC5B3a,KAAKR,QAAQ6L,MAAQ,CAAC,GAAK,IAAM,EAAG,KAAM,IAAK,KAAM,IAIzDrL,KAAKR,QAAQ6L,MAAQrL,KAAKR,QAAQ6L,MAAMnI,OAAO,SAAAmI,GAAK,OAAIkO,EAAK7S,OAAO2E,MAAM7L,QAAQ0G,SAASmF,KAG3F,IAAMpL,GAAU/C,EAAGmC,MAAMW,KAAKR,QAAQ6L,QAAUrL,KAAKR,QAAQ6L,MAAMrO,OAAS,EAO5E,GANAuO,GAASgP,UAAU1Z,KAAKb,KAdX,QAcuBC,GAGpCsL,GAASiO,UAAU3Y,KAAKb,MAGnBC,EAAL,CAKA,IAAMgW,EAAOjW,KAAKiC,SAAS4P,SAASyI,MAAMjP,MAAM/E,cAAc,MAG9DrC,EAAagS,GAGbjW,KAAKR,QAAQ6L,MAAM7K,QAAQ,SAAA6K,GACvBE,GAASwK,eAAelV,KAAK0Y,EAAM,CAC/BnW,MAAOiI,EACP4K,KAAAA,EACAxV,KAnCK,QAoCLsN,MAAOxC,GAAS8N,SAASxY,KAAK0Y,EAAM,QAASlO,OAIrDE,GAASC,cAAc3K,KAAKb,KAxCf,QAwC2BiW,OCpajC,SAASkS,GAAUjd,GAAmB,IAAdkd,EAAcloB,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAAH,EAC9C,OAAO,IAAI2O,QAAQ,SAACC,EAASC,GACzB,IAAMsZ,EAAQ,IAAIC,MAEZC,EAAU,kBACLF,EAAMG,cACNH,EAAMI,SACZJ,EAAMK,cAAgBN,EAAWtZ,EAAUC,GAAQsZ,IAGxD7rB,OAAOiF,OAAO4mB,EAAO,CAAEG,OAAQD,EAASE,QAASF,EAASrd,IAAAA,MCFlE,IAAMlC,GAAK,CACP2f,aADO,WAEHljB,EAAYzF,KAAKiC,SAASmE,UAAWpG,KAAK0G,OAAO6K,UAAUnL,UAAUpB,QAAQ,IAAK,KAAK,GACvFS,EAAYzF,KAAKiC,SAASmE,UAAWpG,KAAK0G,OAAOC,WAAWyd,YAAapkB,KAAKT,UAAUyJ,KAG5F4f,kCANO,WAQC5oB,KAAK0G,OAAOma,qBACZpb,EAAYzF,KAAK0G,OAAOma,oBAAqB7gB,KAAK0G,OAAOC,WAAW2d,gBAAgB,IAK5F3R,qBAdO,WAc8BzS,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,IAAAA,UAAA,IACnBF,KAAK2J,QACf3J,KAAK4J,MAAMnG,aAAa,WAAY,IAEpCzD,KAAK4J,MAAMpE,gBAAgB,aAKnCqjB,MAvBO,WAuBC,IAAA9oB,EAAAC,KAMJ,GAHAA,KAAK0W,UAAU9M,SAGV5J,KAAKT,UAAUyJ,GAShB,OARAhJ,KAAK6L,MAAM6G,KAAX,0BAAAxT,OAA0Cc,KAAK4I,SAA/C,KAAA1J,OAA2Dc,KAAKS,OAGhEuI,GAAG2J,qBAAqB9R,KAAKb,MAAM,QAEnCA,KAAK8oB,OAAQ,GAOZ5rB,EAAGc,QAAQgC,KAAKiC,SAASsJ,YAE1BA,GAASoR,OAAO9b,KAAKb,MAGrBA,KAAK0W,UAAUnL,YAInBvC,GAAG2J,qBAAqB9R,KAAKb,MAGzBA,KAAK2J,SACLmI,GAAS2L,MAAM5c,KAAKb,MAIxBA,KAAKmS,OAAS,KAGdnS,KAAKiX,MAAQ,KAGbjX,KAAKqL,MAAQ,KAGbrL,KAAK8gB,KAAO,KAGZ9gB,KAAKyL,QAAU,KAGfF,GAASwL,aAAalW,KAAKb,MAG3BuL,GAAS+M,WAAWzX,KAAKb,MAGzBgJ,GAAG+f,aAAaloB,KAAKb,MAGrByF,EACIzF,KAAKiC,SAASmE,UACdpG,KAAK0G,OAAOC,WAAWuC,IAAI3J,UAC3BiJ,EAAQU,KAAOlJ,KAAK2J,SAAW3J,KAAK0d,SAIxCjY,EAAYzF,KAAKiC,SAASmE,UAAWpG,KAAK0G,OAAOC,WAAW2C,QAAQ/J,UAAWiJ,EAAQc,SAAWtJ,KAAK2J,SAGvGlE,EAAYzF,KAAKiC,SAASmE,UAAWpG,KAAK0G,OAAOC,WAAWsB,MAAOV,EAAQU,OAG3ExC,EAAYzF,KAAKiC,SAASmE,UAAWpG,KAAK0G,OAAOC,WAAWwd,QAASnkB,KAAK+J,OAG1E/J,KAAK8oB,OAAQ,EAGb1hB,WAAW,WACP/F,EAAaR,KAAKd,EAAMA,EAAK6J,MAAO,UACrC,GAGHZ,GAAGggB,SAASnoB,KAAKb,MAGbA,KAAK4jB,QACL5a,GAAGigB,UAAUpoB,KAAKb,KAAMA,KAAK4jB,QAAQ,GAAOxT,MAAM,cAKlDpQ,KAAK0G,OAAO4L,UACZ/G,GAASmN,eAAe7X,KAAKb,OAKrCgpB,SA1HO,WA4HH,IAAIlV,EAAQnG,GAAS,OAAQ3N,KAAK0G,QAclC,GAXIxJ,EAAGM,OAAOwC,KAAK0G,OAAOqH,SAAW7Q,EAAGmC,MAAMW,KAAK0G,OAAOqH,SACtD+F,GAAK,KAAA5U,OAASc,KAAK0G,OAAOqH,QAI9BnR,MAAMwF,KAAKpC,KAAKiC,SAASuP,QAAQrG,MAAQ,IAAI3K,QAAQ,SAAA0T,GACjDA,EAAOzQ,aAAa,aAAcqQ,KAKlC9T,KAAK0c,QAAS,CACd,IAAMyG,EAAS9c,EAAWxF,KAAKb,KAAM,UAErC,IAAK9C,EAAGc,QAAQmlB,GACZ,OAIJ,IAAMpV,EAAS7Q,EAAGmC,MAAMW,KAAK0G,OAAOqH,OAA6B,QAApB/N,KAAK0G,OAAOqH,MACnDtB,EAASkB,GAAS,aAAc3N,KAAK0G,QAE3Cyc,EAAO1f,aAAa,QAASgJ,EAAOzH,QAAQ,UAAW+I,MAK/Dmb,aA1JO,SA0JMC,GACT1jB,EAAYzF,KAAKiC,SAASmE,UAAWpG,KAAK0G,OAAOC,WAAWkd,cAAesF,IAK/EF,UAhKO,SAgKGrF,GAAwB,IAAA5N,EAAAhW,KAE9B,OAF8BE,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,KAAAA,UAAA,KAEfF,KAAK4jB,QAKpB5jB,KAAK4J,MAAMnG,aAAa,SAAUmgB,GxB9DnC,WAAiB,IAAA5N,EAAAhW,KACpB,OAAO,IAAI6O,QACP,SAAAC,GAAO,OAAKkH,EAAK8S,MAAQ1hB,WAAW0H,EAAS,GAAKlO,EAAGC,KAAKmV,EAAMA,EAAK/T,SAASmE,UAAW,QAAS0I,KACpGoB,KAAK,ewBgEMrP,KAAKb,MAELkQ,KAAK,WAAA,OAAMiY,GAAUvE,KACrBxT,MAAM,SAAAxO,GAMH,MAJIgiB,IAAW5N,EAAK4N,QAChB5a,GAAGkgB,aAAaroB,KAAKmV,GAAM,GAGzBpU,IAETsO,KAAK,WAEF,GAAI0T,IAAW5N,EAAK4N,OAChB,MAAM,IAAI/hB,MAAM,oDAGvBqO,KAAK,WAOF,OANA1T,OAAOiF,OAAOuU,EAAK/T,SAAS2hB,OAAO1c,MAAO,CACtCkiB,gBAAe,QAAAlqB,OAAU0kB,EAAV,MAEfyF,eAAgB,KAEpBrgB,GAAGkgB,aAAaroB,KAAKmV,GAAM,GACpB4N,KAjCR/U,QAAQE,OAAO,IAAIlN,MAAM,wBAuCxCknB,aA1MO,SA0MM3qB,GAAO,IAAAgZ,EAAApX,KAEhByF,EAAYzF,KAAKiC,SAASmE,UAAWpG,KAAK0G,OAAOC,WAAWod,QAAS/jB,KAAK+jB,SAC1Ete,EAAYzF,KAAKiC,SAASmE,UAAWpG,KAAK0G,OAAOC,WAAWmE,OAAQ9K,KAAK8K,QACzErF,EAAYzF,KAAKiC,SAASmE,UAAWpG,KAAK0G,OAAOC,WAAWqd,QAAShkB,KAAKgkB,SAG1EpnB,MAAMwF,KAAKpC,KAAKiC,SAASuP,QAAQrG,MAAQ,IAAI3K,QAAQ,SAAA8L,GACjDA,EAAO4K,QAAUE,EAAK2M,UAItB7mB,EAAGkB,MAAMA,IAAyB,eAAfA,EAAMqC,MAK7BuI,GAAGsgB,eAAezoB,KAAKb,OAI3BupB,aA/NO,SA+NMnrB,GAAO,IAAA0Z,EAAA9X,KAChBA,KAAKikB,QAAU,CAAC,UAAW,WAAW/d,SAAS9H,EAAMqC,MAGrD+oB,aAAaxpB,KAAKypB,OAAOxF,SAGzBjkB,KAAKypB,OAAOxF,QAAU7c,WAAW,WAE7B3B,EAAYqS,EAAK7V,SAASmE,UAAW0R,EAAKpR,OAAOC,WAAWsd,QAASnM,EAAKmM,SAG1Ejb,GAAGsgB,eAAezoB,KAAKiX,IACxB9X,KAAKikB,QAAU,IAAM,IAI5BqF,eAhPO,SAgPQ5jB,GAAO,IACV6F,EAAavL,KAAKiC,SAAlBsJ,SAER,GAAIA,GAAYvL,KAAK0G,OAAO8Z,aAAc,CAEtC,IAAMkJ,EAAmB1pB,KAAK+J,OAAS/J,KAAK2pB,aAAe,IAAOC,KAAKC,MAGvE7pB,KAAKspB,eAAejtB,QAAQqJ,GAAS1F,KAAKikB,SAAWjkB,KAAK8K,QAAUS,EAAS2L,SAAW3L,EAAS2Y,OAASwF,OC1PhHI,cACF,SAAAA,EAAYrf,GAAQyD,EAAAlO,KAAA8pB,GAChB9pB,KAAKyK,OAASA,EACdzK,KAAK+pB,QAAU,KACf/pB,KAAKgqB,WAAa,KAClBhqB,KAAKiqB,YAAc,KAEnBjqB,KAAKkqB,UAAYlqB,KAAKkqB,UAAUvT,KAAK3W,MACrCA,KAAKgb,WAAahb,KAAKgb,WAAWrE,KAAK3W,MACvCA,KAAKmqB,YAAcnqB,KAAKmqB,YAAYxT,KAAK3W,MACzCA,KAAKoqB,WAAapqB,KAAKoqB,WAAWzT,KAAK3W,kDAIjC5B,GAAO,IACLqM,EAAWzK,KAAXyK,OACAxI,EAAawI,EAAbxI,SACFooB,EAAOjsB,EAAMinB,QAAUjnB,EAAMinB,QAAUjnB,EAAMiX,MAC7C6B,EAAyB,YAAf9Y,EAAMqC,KAChB6pB,EAASpT,GAAWmT,IAASrqB,KAAK+pB,QAGxC,KAAI3rB,EAAMmsB,QAAUnsB,EAAMosB,SAAWpsB,EAAMqsB,SAAWrsB,EAAMmnB,WAMvDroB,EAAGG,OAAOgtB,GAAf,CAYA,GAAInT,EAAS,CAIT,IAAM+J,EAAUrd,SAAS0hB,cACzB,GAAIpoB,EAAGc,QAAQijB,GAAU,CAAA,IACboC,EAAa5Y,EAAO/D,OAAO6K,UAA3B8R,SAGR,GAAIpC,IAFahf,EAASgQ,OAAlBC,MAEgBlM,EAAQib,EAASoC,GACrC,OAGJ,GAAoB,KAAhBjlB,EAAMiX,OAAgBrP,EAAQib,EAAS,8BACvC,OAaR,OARuB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGzF/a,SAASmkB,KACxBjsB,EAAMkX,iBACNlX,EAAMmX,mBAGF8U,GACJ,KAAK,GAEGrqB,KAAKyK,OAAOsH,WAAW5D,SACvBnO,KAAKyK,OAAOsH,WAAWgV,OAE3B,MACJ,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GAEIuD,IAlDb7f,EAAOI,YAAeJ,EAAO6H,SAAW,IAAO+X,EAAO,KAqD9C,MAEJ,KAAK,GACL,KAAK,GAEIC,GACD7f,EAAOigB,aAEX,MAEJ,KAAK,GAEDjgB,EAAOkgB,eAAe,IACtB,MAEJ,KAAK,GAEDlgB,EAAOmgB,eAAe,IACtB,MAEJ,KAAK,GAEIN,IACD7f,EAAOwM,OAASxM,EAAOwM,OAE3B,MAEJ,KAAK,GAEDxM,EAAOogB,UACP,MAEJ,KAAK,GAEDpgB,EAAOiH,SACP,MAEJ,KAAK,GAEDjH,EAAOsH,WAAW9R,SAClB,MAEJ,KAAK,GAEIqqB,GACD7f,EAAOqgB,iBAEX,MAEJ,KAAK,GAEDrgB,EAAOqW,MAAQrW,EAAOqW,KACtB,MAEJ,KAAK,GAEG9gB,KAAKyK,OAAOmd,aAAe5nB,KAAKyK,OAAOmd,YAAYmD,qBAA8E,WAAvD/qB,KAAKyK,OAAOmd,YAAYoD,4BAClGhrB,KAAKyK,OAAOmd,YAAYC,kBAsB/Bpd,EAAOsH,WAAW5D,SAAW1D,EAAOsH,WAAWkM,QAAmB,KAAToM,GAC1D5f,EAAOsH,WAAW9R,SAItBD,KAAK+pB,QAAUM,OAEfrqB,KAAK+pB,QAAU,yCAKZ3rB,GACPmN,GAASyP,WAAWna,KAAKb,KAAKyK,OAAQrM,wCAI7B,IACDqM,EAAWzK,KAAXyK,OACAxI,EAAawI,EAAbxI,SAERwI,EAAOV,OAAQ,EAGftE,EAAYxD,EAASmE,UAAWqE,EAAO/D,OAAOC,WAAWwd,SAAS,uCAG1D/lB,GAAO,IACPqM,EAAWzK,KAAXyK,OACAxI,EAAawI,EAAbxI,SAKR,GAHAunB,aAAaxpB,KAAKgqB,YAGC,YAAf5rB,EAAMqC,MAAsC,IAAhBrC,EAAMiX,MAAtC,CAKmB,YAAfjX,EAAMqC,OACNT,KAAKiqB,YAAc7rB,EAAM6sB,WAI7B,IACUlmB,EAMJmmB,EAAa9sB,EAAM6sB,UAAYjrB,KAAKiqB,aAAe,GAGzD,GAAmB,UAAf7rB,EAAMqC,MAAqByqB,EATrBnmB,EAAY0F,EAAO/D,OAAOC,WAAWH,SAE3Cf,EADgBU,EAAYtF,KAAK4J,EAAjB,IAAAvL,OAA6B6F,IACxBA,GAAW,GAgBpC/E,KAAKgqB,WAAa5iB,WAAW,WACzB,IAAM6Z,EAAUrd,SAAS0hB,cAGpBrjB,EAASmE,UAAUN,SAASmb,IAIjCxb,EAAY7B,SAAS0hB,cAAe7a,EAAO/D,OAAOC,WAAWH,UAAU,IACxE,sCAIe,IAAfvG,IAAeC,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,KAAAA,UAAA,GACVuK,EAAWzK,KAAXyK,OAGJA,EAAO/D,OAAOsa,SAASE,QACvBrhB,EAAegB,KAAK4J,EAAQhM,OAAQ,gBAAiBuB,KAAKkqB,UAAWjqB,GAAQ,GAIjFJ,EAAegB,KAAK4J,EAAQ7G,SAASiM,KAAM,QAAS7P,KAAKgb,WAAY/a,GAGrEc,EAAKF,KAAK4J,EAAQ7G,SAASiM,KAAM,aAAc7P,KAAKoqB,YAGpDvqB,EAAegB,KAAK4J,EAAQ7G,SAASiM,KAAM,qBAAsB7P,KAAKmqB,YAAalqB,GAAQ,GAAO,uCAI1F,IACAwK,EAAWzK,KAAXyK,OACAxI,EAAawI,EAAbxI,UAGHwI,EAAO/D,OAAOsa,SAASE,QAAUzW,EAAO/D,OAAOsa,SAASC,SACzDrgB,EAAGC,KAAK4J,EAAQxI,EAASmE,UAAW,gBAAiBpG,KAAKkqB,WAAW,GAIzEtpB,EAAGC,KACC4J,EACAxI,EAASmE,UACT,2EACA,SAAAhI,GAAS,IACGmN,EAAatJ,EAAbsJ,SAGJA,GAA2B,oBAAfnN,EAAMqC,OAClB8K,EAAS2L,SAAU,EACnB3L,EAAS2Y,OAAQ,GAIrB,IAEIiH,EAAQ,EAFC,CAAC,aAAc,YAAa,aAAajlB,SAAS9H,EAAMqC,QAKjEuI,GAAGsgB,eAAezoB,KAAK4J,GAAQ,GAE/B0gB,EAAQ1gB,EAAOV,MAAQ,IAAO,KAIlCyf,aAAa/e,EAAOgf,OAAOle,UAG3Bd,EAAOgf,OAAOle,SAAWnE,WAAW,WAAA,OAAM4B,GAAGsgB,eAAezoB,KAAK4J,GAAQ,IAAQ0gB,qCAMrF,IAAAprB,EAAAC,KACIyK,EAAWzK,KAAXyK,OACAxI,EAAawI,EAAbxI,SAyDR,GAtDArB,EAAGC,KAAK4J,EAAQA,EAAOb,MAAO,4BAA6B,SAAAxL,GAAK,OAAImN,GAAS+M,WAAWzX,KAAK4J,EAAQrM,KAGrGwC,EAAGC,KAAK4J,EAAQA,EAAOb,MAAO,2CAA4C,SAAAxL,GAAK,OAC3EmN,GAASmN,eAAe7X,KAAK4J,EAAQrM,KAKzCwC,EAAGC,KAAK4J,EAAQA,EAAOb,MAAO,UAAW,WACrCvE,EAAapD,EAASkQ,QAAS1H,EAAO2gB,UACtC/lB,EAAapD,EAASuP,QAAQI,MAAOnH,EAAO2gB,YAIhDxqB,EAAGC,KAAK4J,EAAQA,EAAOb,MAAO,QAAS,WAE/Ba,EAAOd,SAAWc,EAAOiT,SAAWjT,EAAO/D,OAAO+Z,YAElDhW,EAAOgH,YAKf7Q,EAAGC,KAAK4J,EAAQA,EAAOb,MAAO,kCAAmC,SAAAxL,GAAK,OAClEmN,GAAS4L,eAAetW,KAAK4J,EAAQrM,KAIzCwC,EAAGC,KAAK4J,EAAQA,EAAOb,MAAO,eAAgB,SAAAxL,GAAK,OAAImN,GAASwL,aAAalW,KAAK4J,EAAQrM,KAG1FwC,EAAGC,KAAK4J,EAAQA,EAAOb,MAAO,8CAA+C,SAAAxL,GAAK,OAC9E4K,GAAG+f,aAAaloB,KAAK4J,EAAQrM,KAIjCwC,EAAGC,KAAK4J,EAAQA,EAAOb,MAAO,iCAAkC,SAAAxL,GAAK,OAAI4K,GAAGugB,aAAa1oB,KAAK4J,EAAQrM,KAItGwC,EAAGC,KAAK4J,EAAQA,EAAOb,MAAO,UAAW,WAChCa,EAAOqZ,KAKRrZ,EAAOqZ,IAAI3V,UAAY1D,EAAOqZ,IAAIuH,aAElC5gB,EAAOqZ,IAAIwH,eAAepb,KAAK,WAAA,OAAMzF,EAAOqZ,IAAI3Y,SAAQiF,MAAM,WAAA,OAAM3F,EAAOU,WAK/EV,EAAOlL,UAAUyJ,IAAMyB,EAAO/D,OAAO6Z,cAAgB9V,EAAO8gB,QAAS,CAErE,IAAMrpB,EAAUmE,EAAWxF,KAAK4J,EAAhB,IAAAvL,OAA4BuL,EAAO/D,OAAOC,WAAW+B,QAGrE9H,EAAGC,KAAKb,KAAKyK,OAAQzK,KAAKyK,OAAOb,MAAO,iCAAkC,SAAAxL,GAAK,OAC3E4K,GAAGugB,aAAa1oB,KAAKd,EAAK0K,OAAQrM,KAItCwC,EAAGC,KAAK4J,EAAQxI,EAASmE,UAAW,QAAS,SAAAhI,IACzB,CAAC6D,EAASmE,UAAWlE,GAGxBgE,SAAS9H,EAAMkO,SAAYpK,EAAQ4D,SAAS1H,EAAMkO,WAK3D7B,EAAOV,OAASU,EAAO/D,OAAO8Z,eAI9B/V,EAAO+gB,OACP/gB,EAAOgH,UACPhH,EAAOU,QAEPV,EAAOigB,iBAMfjgB,EAAOlL,UAAUyJ,IAAMyB,EAAO/D,OAAOga,oBACrC9f,EAAGC,KACC4J,EACAxI,EAASC,QACT,cACA,SAAA9D,GACIA,EAAMkX,mBAEV,GAKR1U,EAAGC,KAAK4J,EAAQA,EAAOb,MAAO,eAAgB,WAE1Ca,EAAOa,QAAQX,IAAI,CACfwH,OAAQ1H,EAAO0H,OACf8E,MAAOxM,EAAOwM,UAKtBrW,EAAGC,KAAK4J,EAAQA,EAAOb,MAAO,aAAc,WAExC2B,GAASC,cAAc3K,KAAK4J,EAAQ,SAGpCA,EAAOa,QAAQX,IAAI,CAAEU,MAAOZ,EAAOY,UAIvCzK,EAAGC,KAAK4J,EAAQA,EAAOb,MAAO,gBAAiB,SAAAxL,GAE3CmN,GAASC,cAAc3K,KAAK4J,EAAQ,UAAW,KAAMrM,EAAMmD,OAAOkK,WAItE7K,EAAGC,KAAK4J,EAAQA,EAAOb,MAAO,sBAAuB,WACjD2B,GAASuQ,gBAAgBjb,KAAK4J,KAKlC,IAAMghB,EAAchhB,EAAO/D,OAAOpG,OAAOpB,OAAO,CAAC,QAAS,YAAYqU,KAAK,KAE3E3S,EAAGC,KAAK4J,EAAQA,EAAOb,MAAO6hB,EAAa,SAAArtB,GAAS,IAAAstB,EAC1BttB,EAAhBmD,OAAAA,OAD0C,IAAAmqB,EACjC,GADiCA,EAI7B,UAAfttB,EAAMqC,OACNc,EAASkJ,EAAOb,MAAM6I,OAG1BpR,EAAaR,KAAK4J,EAAQxI,EAASmE,UAAWhI,EAAMqC,MAAM,EAAMc,mCAKlEnD,EAAOutB,EAAgBC,GAAkB,IACnCnhB,EAAWzK,KAAXyK,OACFohB,EAAgBphB,EAAO/D,OAAOgQ,UAAUkV,GAE1CE,GAAW,EADU5uB,EAAGQ,SAASmuB,KAKjCC,EAAWD,EAAchrB,KAAK4J,EAAQrM,IAItC0tB,GAAY5uB,EAAGQ,SAASiuB,IACxBA,EAAe9qB,KAAK4J,EAAQrM,gCAK/BJ,EAASyC,EAAMkrB,EAAgBC,GAAkC,IAAA5V,EAAAhW,KAAhBI,IAAgBF,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,KAAAA,UAAA,GAC1DuK,EAAWzK,KAAXyK,OACFohB,EAAgBphB,EAAO/D,OAAOgQ,UAAUkV,GACxCG,EAAmB7uB,EAAGQ,SAASmuB,GAErCjrB,EAAGC,KACC4J,EACAzM,EACAyC,EACA,SAAArC,GAAK,OAAI4X,EAAKgW,MAAM5tB,EAAOutB,EAAgBC,IAC3CxrB,IAAY2rB,sCAKT,IAAA3U,EAAApX,KACCyK,EAAWzK,KAAXyK,OACAxI,EAAawI,EAAbxI,SAGFgqB,EAAa1kB,EAAQC,KAAO,SAAW,QAiK7C,GA9JIvF,EAASuP,QAAQrG,MACjBvO,MAAMwF,KAAKH,EAASuP,QAAQrG,MAAM3K,QAAQ,SAAA0T,GACtCkD,EAAKT,KAAKzC,EAAQ,QAASzJ,EAAOigB,WAAY,UAKtD1qB,KAAK2W,KAAK1U,EAASuP,QAAQC,QAAS,QAAShH,EAAOgH,QAAS,WAG7DzR,KAAK2W,KAAK1U,EAASuP,QAAQE,OAAQ,QAASjH,EAAOiH,OAAQ,UAG3D1R,KAAK2W,KAAK1U,EAASuP,QAAQG,YAAa,QAASlH,EAAOogB,QAAS,eAGjE7qB,KAAK2W,KACD1U,EAASuP,QAAQI,KACjB,QACA,WACInH,EAAOwM,OAASxM,EAAOwM,OAE3B,QAIJjX,KAAK2W,KAAK1U,EAASuP,QAAQM,SAAU,QAAS,WAAA,OAAMrH,EAAOqgB,mBAG3D9qB,KAAK2W,KACD1U,EAASuP,QAAQuK,SACjB,QACA,WACI1a,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,aAE5C,YAIJ5J,KAAK2W,KACD1U,EAASuP,QAAQkS,KACjB,QACA,WACIjZ,EAAOsH,WAAW0U,cAEtB,QAIJzmB,KAAK2W,KACD1U,EAASuP,QAAQO,WACjB,QACA,WACItH,EAAOsH,WAAW9R,UAEtB,cAIJD,KAAK2W,KACD1U,EAASuP,QAAQtI,IACjB,QACA,WACIuB,EAAOvB,IAAM,UAEjB,OAIJlJ,KAAK2W,KAAK1U,EAASuP,QAAQlI,QAAS,QAASmB,EAAOnB,QAAS,WAG7DtJ,KAAK2W,KAAK1U,EAASuP,QAAQK,SAAU,QAAS,SAAAzT,GAE1CA,EAAMmX,kBAENhK,GAASyP,WAAWna,KAAK4J,EAAQrM,KAMrC4B,KAAK2W,KACD1U,EAASuP,QAAQK,SACjB,QACA,SAAAzT,GACI,IAAMisB,EAAOjsB,EAAMiX,MAGd,CAAC,GAAI,IAAInP,SAASmkB,KAKV,KAATA,GAMJjsB,EAAMkX,iBAGNlX,EAAMmX,kBAGNhK,GAASyP,WAAWna,KAAK4J,EAAQrM,IAX7BmN,GAASuK,mBAAmBjV,KAAK4J,EAAQ,MAAM,KAavD,MACA,GAIJzK,KAAK2W,KAAK1U,EAAS4P,SAAS6B,KAAM,UAAW,SAAAtV,GACrB,KAAhBA,EAAMiX,OACN9J,GAASyP,WAAWna,KAAK4J,EAAQrM,KAKzC4B,KAAK2W,KAAK1U,EAASgQ,OAAOC,KAAM,sBAAuB,SAAA9T,GACnD,IAAM8tB,EAAOjqB,EAAS+P,SAASiG,wBACzBN,EAAW,IAAMuU,EAAK/T,OAAU/Z,EAAMga,MAAQ8T,EAAK7T,MACzDja,EAAM+tB,cAAc1oB,aAAa,aAAckU,KAInD3X,KAAK2W,KAAK1U,EAASgQ,OAAOC,KAAM,sDAAuD,SAAA9T,GACnF,IAAM8T,EAAO9T,EAAM+tB,cACb9B,EAAOjsB,EAAMinB,QAAUjnB,EAAMinB,QAAUjnB,EAAMiX,MAGnD,IAAInY,EAAGoB,cAAcF,IAAoB,KAATisB,GAAwB,KAATA,EAA/C,CAKA5f,EAAOkf,aAAeC,KAAKC,MAG3B,IAAM1e,EAAO+G,EAAKka,aAVA,kBAaZC,EAAO,CAAC,UAAW,WAAY,SAASnmB,SAAS9H,EAAMqC,MAGzD0K,GAAQkhB,GACRna,EAAK1M,gBAjBS,kBAkBdiF,EAAOU,SACCkhB,GAAQ5hB,EAAOsZ,UACvB7R,EAAKzO,aApBS,iBAoBe,IAC7BgH,EAAOQ,YAOX1D,EAAQU,MAAO,CACf,IAAMgK,EAAS9L,EAAYtF,KAAK4J,EAAQ,uBACxC7N,MAAMwF,KAAK6P,GAAQzR,QAAQ,SAAAtE,GAAK,OAAIkb,EAAKT,KAAKza,EAAO+vB,EAAY,SAAA7tB,GAAK,OAAI+I,EAAQ/I,EAAMkO,YAI5FtM,KAAK2W,KACD1U,EAASgQ,OAAOC,KAChB+Z,EACA,SAAA7tB,GACI,IAAM8T,EAAO9T,EAAM+tB,cAGfG,EAASpa,EAAK5H,aAAa,cAE3BpN,EAAGmC,MAAMitB,KACTA,EAASpa,EAAK9O,OAGlB8O,EAAK1M,gBAAgB,cAErBiF,EAAOI,YAAeyhB,EAASpa,EAAKmC,IAAO5J,EAAO6H,UAEtD,QAIJtS,KAAK2W,KAAK1U,EAAS+P,SAAU,kCAAmC,SAAA5T,GAAK,OACjEmN,GAASsM,kBAAkBhX,KAAK4J,EAAQrM,KAIxCmJ,EAAQG,UACR9K,MAAMwF,KAAK+D,EAAYtF,KAAK4J,EAAQ,wBAAwBjK,QAAQ,SAAAxC,GAChEoZ,EAAKT,KAAK3Y,EAAS,QAAS,SAAAI,GAAK,OAAImN,GAASqJ,gBAAgB/T,KAAK4J,EAAQrM,EAAMkO,YAMrF7B,EAAO/D,OAAO2Z,eAAiBnjB,EAAGc,QAAQiE,EAASmQ,QAAQE,WAC3DtS,KAAK2W,KAAK1U,EAASmQ,QAAQvH,YAAa,QAAS,WAElB,IAAvBJ,EAAOI,cAIXJ,EAAO/D,OAAO8R,YAAc/N,EAAO/D,OAAO8R,WAE1CjN,GAAS+M,WAAWzX,KAAK4J,MAKjCzK,KAAK2W,KACD1U,EAASgQ,OAAOE,OAChB8Z,EACA,SAAA7tB,GACIqM,EAAO0H,OAAS/T,EAAMkO,OAAOlJ,OAEjC,UAIJpD,KAAK2W,KAAK1U,EAASsJ,SAAU,wBAAyB,SAAAnN,GAClD6D,EAASsJ,SAAS2Y,OAASzZ,EAAOV,OAAwB,eAAf3L,EAAMqC,OAIrDT,KAAK2W,KAAK1U,EAASsJ,SAAU,oDAAqD,SAAAnN,GAC9E6D,EAASsJ,SAAS2L,QAAU,CAAC,YAAa,cAAchR,SAAS9H,EAAMqC,QAI3ET,KAAK2W,KAAK1U,EAASsJ,SAAU,UAAW,WAAM,IAClC7E,EAA6B+D,EAA7B/D,OAAQzE,EAAqBwI,EAArBxI,SAAUwnB,EAAWhf,EAAXgf,OAG1BhkB,EAAYxD,EAASsJ,SAAU7E,EAAOC,WAAW0d,cAAc,GAG/Drb,GAAGsgB,eAAezoB,KAAK4J,GAAQ,GAG/BrD,WAAW,WACP3B,EAAYxD,EAASsJ,SAAU7E,EAAOC,WAAW0d,cAAc,IAChE,GAGH,IAAM8G,EAAQ/T,EAAKrN,MAAQ,IAAO,IAGlCyf,aAAaC,EAAOle,UAGpBke,EAAOle,SAAWnE,WAAW,WAAA,OAAM4B,GAAGsgB,eAAezoB,KAAK4J,GAAQ,IAAQ0gB,KAI9EnrB,KAAK2W,KACD1U,EAASgQ,OAAOE,OAChB,QACA,SAAA/T,GAGI,IAAMwS,EAAWxS,EAAMmuB,kCAHlBC,EAAAnpB,EAMU,CAACjF,EAAMquB,QAASruB,EAAMsuB,QAAQ/mB,IAAI,SAAAvC,GAAK,OAAKwN,GAAYxN,EAAQA,IAN1E,GAMEsiB,EANF8G,EAAA,GAMK5G,EANL4G,EAAA,GASCG,EAAYhU,KAAKiU,KAAKjU,KAAKkU,IAAInH,GAAK/M,KAAKkU,IAAIjH,GAAKF,EAAIE,GAG5Dnb,EAAOkgB,eAAegC,EAAY,IAZ7B,IAeGxa,EAAW1H,EAAOb,MAAlBuI,QACW,IAAdwa,GAAmBxa,EAAS,IAAsB,IAAfwa,GAAoBxa,EAAS,IACjE/T,EAAMkX,kBAGd,UACA,YCpxBNqL,GAAO,CACTlD,MADS,WAGL,GAAIzd,KAAK0G,OAAOia,MAAQ3gB,KAAK0G,OAAOia,KAAK5hB,IAAK,CAE1C,IAAM+tB,EAAgBlpB,SAASF,cAAc,OAC7C+B,EAAYqnB,EAAe9sB,KAAK0G,OAAOC,WAAWga,MAAM,GAGxD,IAAIoM,EAAiBD,EAErB,GAAI9sB,KAAK0G,OAAOia,KAAKC,KAAM,CAEvB,IAAMoM,EAAcppB,SAASF,cAAc,KAC3CX,EAAciqB,EAAa,CACvBxQ,KAAMxc,KAAK0G,OAAOia,KAAKC,OAE3BkM,EAAcjqB,YAAYmqB,GAC1BD,EAAiBC,EAIrB,IAAMC,EAAcrpB,SAASF,cAAc,OAC3CX,EAAckqB,EAAa,CACvB/hB,IAAKlL,KAAK0G,OAAOia,KAAK5hB,MAE1BguB,EAAelqB,YAAYoqB,GAC3BjtB,KAAKiC,SAASmE,UAAUvD,YAAYiqB,kICzB5CI,EAAAC,QAII,WAMR,IAAIC,EAAU,aACVC,EAAgB,GAChBC,EAAoB,GACpBC,EAAsB,GAmD1B,SAASC,EAAQC,EAAUC,GAEzB,GAAKD,EAAL,CAEA,IAAIE,EAAIJ,EAAoBE,GAM5B,GAHAH,EAAkBG,GAAYC,EAGzBC,EAGL,KAAOA,EAAE3wB,QACP2wB,EAAE,GAAGF,EAAUC,GACfC,EAAEC,OAAO,EAAG,IAUhB,SAASC,EAAiB3sB,EAAM4sB,GAE1B5sB,EAAKL,OAAMK,EAAO,CAAC6sB,QAAS7sB,IAG5B4sB,EAAa9wB,QAASkE,EAAKuR,OAAS2a,GAASU,IAC3C5sB,EAAK6sB,SAAWX,GAASlsB,GASjC,SAAS8sB,EAAS7hB,EAAM8hB,EAAY/sB,EAAMgtB,GACxC,IAKIC,EACA/uB,EANAgvB,EAAMxqB,SACNyqB,EAAQntB,EAAKmtB,MACbC,GAAYptB,EAAKqtB,YAAc,GAAK,EACpCC,EAAmBttB,EAAKutB,QAAUrB,EAClCsB,EAAeviB,EAAKnH,QAAQ,cAAe,IAI/CkpB,EAAWA,GAAY,EAEnB,iBAAiBtmB,KAAKuE,IACxBgiB,GAAQ,GAGR/uB,EAAIgvB,EAAI1qB,cAAc,SACpBirB,IAAM,aACRvvB,EAAEod,KAAOkS,GACA,+BAA+B9mB,KAAKuE,IAE7C/M,EAAIgvB,EAAI1qB,cAAc,QACpBwH,IAAMwjB,IAGRtvB,EAAIgvB,EAAI1qB,cAAc,WACpBwH,IAAMiB,EACR/M,EAAEivB,WAAkBluB,IAAVkuB,GAA6BA,GAGzCjvB,EAAEopB,OAASppB,EAAEqpB,QAAUrpB,EAAEwvB,aAAe,SAAUC,GAChD,IAAI1e,EAAS0e,EAAGpuB,KAAK,GAIrB,GAAI0tB,GAAS,cAAe/uB,EAC1B,IACOA,EAAE0vB,MAAMC,QAAQ/xB,SAAQmT,EAAS,KACtC,MAAOuV,GAGPvV,EAAS,IAKb,GAAc,KAAVA,IAEF+d,GAAY,GAGGI,EACb,OAAON,EAAS7hB,EAAM8hB,EAAY/sB,EAAMgtB,GAK5CD,EAAW9hB,EAAMgE,EAAQ0e,EAAGG,oBAII,IAA9BR,EAAiBriB,EAAM/M,IAAcgvB,EAAInI,KAAKpjB,YAAYzD,GA+ChE,SAAS6vB,EAAOC,EAAOC,EAAMC,GAC3B,IAAI3B,EACAvsB,EASJ,GANIiuB,GAAQA,EAAKrqB,OAAM2oB,EAAW0B,GAGlCjuB,GAAQusB,EAAW2B,EAAOD,IAAS,GAG/B1B,EAAU,CACZ,GAAIA,KAAYJ,EACd,KAAM,SAENA,EAAcI,IAAY,GArDhC,SAAmByB,EAAOjB,EAAY/sB,GAIpC,IAGImuB,EACAziB,EAJA0iB,GAFJJ,EAAQA,EAAMvuB,KAAOuuB,EAAQ,CAACA,IAEPlyB,OACnB0oB,EAAI4J,EACJ5B,EAAgB,GAqBpB,IAhBA2B,EAAK,SAASljB,EAAMgE,EAAQ6e,GAM1B,GAJc,KAAV7e,GAAeud,EAAc/sB,KAAKwL,GAIxB,KAAVgE,EAAe,CACjB,IAAI6e,EACC,OADiBtB,EAAc/sB,KAAKwL,KAI3CmjB,GACiBrB,EAAWP,IAIzB9gB,EAAE,EAAGA,EAAI8Y,EAAG9Y,IAAKohB,EAASkB,EAAMtiB,GAAIyiB,EAAInuB,GA+B7CquB,CAAUL,EAAO,SAAUxB,GAEzBG,EAAiB3sB,EAAMwsB,GAGvBF,EAAQC,EAAUC,IACjBxsB,GAiDL,OAxCA+tB,EAAOnG,MAAQ,SAAe0G,EAAMtuB,GAOlC,OAxOF,SAAmBuuB,EAAWxB,GAE5BwB,EAAYA,EAAU9uB,KAAO8uB,EAAY,CAACA,GAE1C,IAGIJ,EACA5B,EACAiC,EALA5B,EAAe,GACflhB,EAAI6iB,EAAUzyB,OACdsyB,EAAa1iB,EAejB,IARAyiB,EAAK,SAAU5B,EAAUC,GACnBA,EAAc1wB,QAAQ8wB,EAAantB,KAAK8sB,KAE5C6B,GACiBrB,EAAWH,IAIvBlhB,KACL6gB,EAAWgC,EAAU7iB,IAGrB8iB,EAAIpC,EAAkBG,IAEpB4B,EAAG5B,EAAUiC,IAKXnC,EAAoBE,GAAYF,EAAoBE,IAAa,IACnE9sB,KAAK0uB,GAkMTM,CAAUH,EAAM,SAAU1B,GAExBD,EAAiB3sB,EAAM4sB,KAGlBmB,GAQTA,EAAO5C,KAAO,SAAcoB,GAC1BD,EAAQC,EAAU,KAOpBwB,EAAOzM,MAAQ,WACb6K,EAAgB,GAChBC,EAAoB,GACpBC,EAAsB,IAQxB0B,EAAOW,UAAY,SAAmBnC,GACpC,OAAOA,KAAYJ,GAKd4B,EA9RcY,4CCEN,SAASC,GAAW/wB,GAC/B,OAAO,IAAI8P,QAAQ,SAACC,EAASC,GACzBkgB,GAAOlwB,EAAK,CACRgvB,QAASjf,EACT2D,MAAO1D,MC2BnB,SAASghB,GAAoB5kB,GACrBA,IAASnL,KAAKif,MAAM+Q,YACpBhwB,KAAKif,MAAM+Q,WAAY,GAEvBhwB,KAAK4J,MAAMkB,SAAWK,IACtBnL,KAAK4J,MAAMkB,QAAUK,EACrB9J,EAAaR,KAAKb,KAAMA,KAAK4J,MAAOuB,EAAO,OAAS,UAI5D,IAAMsC,GAAQ,CACVgQ,MADU,WACF,IAAA1d,EAAAC,KAEJyF,EAAYzF,KAAKiC,SAASC,QAASlC,KAAK0G,OAAOC,WAAWsY,OAAO,GAGjExR,GAAMwiB,eAAepvB,KAAKb,MAGrB9C,EAAGE,OAAOqB,OAAOyxB,OASlBziB,GAAMqb,MAAMjoB,KAAKb,MARjB8vB,GAAW9vB,KAAK0G,OAAO+V,KAAKhP,MAAMyV,KAC7BhT,KAAK,WACFzC,GAAMqb,MAAMjoB,KAAKd,KAEpBqQ,MAAM,SAAAqC,GACH1S,EAAK8L,MAAM6G,KAAK,2BAA4BD,MAS5Dwd,eAxBU,SAwBK/zB,GAAO,IAAAi0B,EAAA9sB,GACFnG,EAAGM,OAAOtB,GAASA,EAAQ8D,KAAK0G,OAAO4Z,OAAO/f,MAAM,KADlD,GAEZ6vB,EAAW,IAFCD,EAAA,GAAAA,EAAA,GAKlB,GAFAnwB,KAAKiC,SAASC,QAAQgF,MAAMmpB,cAA5B,GAAAnxB,OAA+CkxB,EAA/C,KAEIpwB,KAAKT,UAAUyJ,GAAI,CACnB,IACMsnB,GADS,IACUF,GAAV,IAEfpwB,KAAK4J,MAAM1C,MAAMqpB,UAAjB,eAAArxB,OAA4CoxB,EAA5C,QAKRxH,MAtCU,WAsCF,IAAA9S,EAAAhW,KACEyK,EAASzK,KAeTud,EAASD,GAZC,CACZwD,KAAMrW,EAAO/D,OAAOoa,KAAK7C,OACzBkC,SAAU1V,EAAO0V,SAEjBqQ,QAAQ,EACRC,UAAU,EACV1iB,OAAO,EACP1C,OAAO,EACPqlB,YAAa,EACbC,QAAS,QACT9nB,aAAc7I,KAAK0G,OAAOqL,WAAWqP,YAKrC/W,EAASI,EAAOb,MAAMU,aAAa,OAGnCpN,EAAGmC,MAAMgL,KACTA,EAASI,EAAOb,MAAMU,aAAaG,EAAO/D,OAAO1D,WAAWic,MAAM7Z,KAGtE,IA/FSrG,EA+FHqG,GA/FGrG,EA+FUsL,EA9FnBnN,EAAGmC,MAAMN,GACF,KAGP7B,EAAGG,OAAOC,OAAOyB,IACVA,EAIJA,EAAI4N,MADG,mCACYG,OAAO8jB,GAAK7xB,GAwF5BokB,EAASzf,EAAc,UACvBwH,EAAMuB,EAAOhC,EAAO/D,OAAO+V,KAAKhP,MAAM0V,OAAQ/d,EAAImY,GACxD4F,EAAO1f,aAAa,MAAOyH,GAC3BiY,EAAO1f,aAAa,kBAAmB,IACvC0f,EAAO1f,aAAa,oBAAqB,IACzC0f,EAAO1f,aAAa,QAAS,YAlCzB,IAwCEvB,EAAUwB,EAAc,MAAO,CAAEkgB,OAHpBnZ,EAAXmZ,OAGuCze,MAAOsF,EAAO/D,OAAOC,WAAWgd,iBAC/EzhB,EAAQW,YAAYsgB,GACpB1Y,EAAOb,MAAQxF,EAAelC,EAASuI,EAAOb,OAG9C+E,GAAMlC,EAAOhC,EAAO/D,OAAO+V,KAAKhP,MAAM1E,IAAK3D,GAAK,QAAQ8K,KAAK,SAAAf,GACzD,IAAIjS,EAAGmC,MAAM8P,GAAb,CAKA,IAAMpQ,EAAM,IAAIC,IAAImQ,EAAS,GAAG0hB,iBAGhC9xB,EAAI+xB,SAAJ,GAAA5xB,OAAkBH,EAAI+xB,SAASvwB,MAAM,KAAK,GAA1C,QAGAyI,GAAGigB,UAAUpoB,KAAK4J,EAAQ1L,EAAIyd,MAAMpM,MAAM,iBAK9C3F,EAAOwU,MAAQ,IAAIxgB,OAAOyxB,MAAMa,OAAO5N,EAAQ,CAC3C/C,UAAW3V,EAAO/D,OAAO0Z,UACzBnJ,MAAOxM,EAAOwM,QAGlBxM,EAAOb,MAAMkB,QAAS,EACtBL,EAAOb,MAAMiB,YAAc,EAGvBJ,EAAOlL,UAAUyJ,IACjByB,EAAOwU,MAAM+R,mBAIjBvmB,EAAOb,MAAMuB,KAAO,WAEhB,OADA4kB,GAAoBlvB,KAAK4J,GAAQ,GAC1BA,EAAOwU,MAAM9T,QAGxBV,EAAOb,MAAMqB,MAAQ,WAEjB,OADA8kB,GAAoBlvB,KAAK4J,GAAQ,GAC1BA,EAAOwU,MAAMhU,SAGxBR,EAAOb,MAAMqnB,KAAO,WAChBxmB,EAAOQ,QACPR,EAAOI,YAAc,GAxFrB,IA4FEA,EAAgBJ,EAAOb,MAAvBiB,YACNrO,OAAOiD,eAAegL,EAAOb,MAAO,cAAe,CAC/ClK,IAD+C,WAE3C,OAAOmL,GAEXF,IAJ+C,SAI3C+F,GAAM,IAIEuO,EAAiCxU,EAAjCwU,MAAOrV,EAA0Ba,EAA1Bb,MAAOkB,EAAmBL,EAAnBK,OAAQqH,EAAW1H,EAAX0H,OACxB+e,EAAepmB,IAAWmU,EAAM+Q,UAGtCpmB,EAAM6O,SAAU,EAChBpX,EAAaR,KAAK4J,EAAQb,EAAO,WAGjCiF,QAAQC,QAAQoiB,GAAgBjS,EAAMkS,UAAU,IAE3CjhB,KAAK,WAAA,OAAM+O,EAAMmS,eAAe1gB,KAEhCR,KAAK,WAAA,OAAMghB,GAAgBjS,EAAMhU,UAEjCiF,KAAK,WAAA,OAAMghB,GAAgBjS,EAAMkS,UAAUhf,KAC3C/B,MAAM,iBAOnB,IAAI/E,EAAQZ,EAAO/D,OAAO2E,MAAM0V,SAChCvkB,OAAOiD,eAAegL,EAAOb,MAAO,eAAgB,CAChDlK,IADgD,WAE5C,OAAO2L,GAEXV,IAJgD,SAI5CzO,GACAuO,EAAOwU,MACFoS,gBAAgBn1B,GAChBgU,KAAK,WACF7E,EAAQnP,EACRmF,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,gBAE3CwG,MAAM,SAAAqC,GAEgB,UAAfA,EAAM6e,MACN/lB,GAASkP,aAAa5Z,KAAK4J,EAAQ,SA1InD,IAiJE0H,EAAW1H,EAAO/D,OAAlByL,OACN3V,OAAOiD,eAAegL,EAAOb,MAAO,SAAU,CAC1ClK,IAD0C,WAEtC,OAAOyS,GAEXxH,IAJ0C,SAItCzO,GACAuO,EAAOwU,MAAMkS,UAAUj1B,GAAOgU,KAAK,WAC/BiC,EAASjW,EACTmF,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,qBAzJhD,IA+JEqN,EAAUxM,EAAO/D,OAAjBuQ,MACNza,OAAOiD,eAAegL,EAAOb,MAAO,QAAS,CACzClK,IADyC,WAErC,OAAOuX,GAEXtM,IAJyC,SAIrCzO,GACA,IAAM+D,IAAS/C,EAAGO,QAAQvB,IAASA,EAEnCuO,EAAOwU,MAAMkS,UAAUlxB,EAAS,EAAIwK,EAAO/D,OAAOyL,QAAQjC,KAAK,WAC3D+G,EAAQhX,EACRoB,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,qBAzKhD,IA8LA2nB,EAfEzQ,EAASrW,EAAO/D,OAAhBoa,KACNtkB,OAAOiD,eAAegL,EAAOb,MAAO,OAAQ,CACxClK,IADwC,WAEpC,OAAOohB,GAEXnW,IAJwC,SAIpCzO,GACA,IAAM+D,EAAS/C,EAAGO,QAAQvB,GAASA,EAAQuO,EAAO/D,OAAOoa,KAAK7C,OAE9DxT,EAAOwU,MAAMuS,QAAQvxB,GAAQiQ,KAAK,WAC9B4Q,EAAO7gB,OAOnBwK,EAAOwU,MACFwS,cACAvhB,KAAK,SAAA9M,GACFmuB,EAAanuB,EACbmI,GAASuQ,gBAAgBjb,KAAK4J,KAEjC2F,MAAM,SAAAqC,GACHuD,EAAKnK,MAAM6G,KAAKD,KAGxBjW,OAAOiD,eAAegL,EAAOb,MAAO,aAAc,CAC9ClK,IAD8C,WAE1C,OAAO6xB,KAKf/0B,OAAOiD,eAAegL,EAAOb,MAAO,QAAS,CACzClK,IADyC,WAErC,OAAO+K,EAAOI,cAAgBJ,EAAO6H,YAK7CzD,QAAQ0T,IAAI,CAAC9X,EAAOwU,MAAMyS,gBAAiBjnB,EAAOwU,MAAM0S,mBAAmBzhB,KAAK,SAAA0hB,GAC5E,IAAMtR,EA/QlB,SAAwBnI,EAAOqD,GAC3B,IACM8E,EADW,SAAXuR,EAAYC,EAAGC,GAAJ,OAAiB,IAANA,EAAUD,EAAID,EAASE,EAAGD,EAAIC,GAC5CF,CAAS1Z,EAAOqD,GAC9B,MAAA,GAAAtc,OAAUiZ,EAAQmI,EAAlB,KAAAphB,OAA2Bsc,EAAS8E,GA4Qd0R,CAAeJ,EAAW,GAAIA,EAAW,IACvDnkB,GAAMwiB,eAAepvB,KAAKmV,EAAMsK,KAIpC7V,EAAOwU,MAAMgT,aAAaxnB,EAAO/D,OAAO0Z,WAAWlQ,KAAK,SAAAgiB,GACpDznB,EAAO/D,OAAO0Z,UAAY8R,IAI9BznB,EAAOwU,MAAMkT,gBAAgBjiB,KAAK,SAAAnC,GAC9BtD,EAAO/D,OAAOqH,MAAQA,EACtB/E,GAAGggB,SAASnoB,KAAKmV,KAIrBvL,EAAOwU,MAAMmT,iBAAiBliB,KAAK,SAAA9M,GAC/ByH,EAAczH,EACd/B,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,gBAI5Ca,EAAOwU,MAAMoT,cAAcniB,KAAK,SAAA9M,GAC5BqH,EAAOb,MAAM0I,SAAWlP,EACxB/B,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,oBAI5Ca,EAAOwU,MAAMqT,gBAAgBpiB,KAAK,SAAA8J,GAC9BvP,EAAOb,MAAME,WAAakQ,EAC1BlI,GAAS2L,MAAM5c,KAAK4J,KAGxBA,EAAOwU,MAAMre,GAAG,YAAa,SAAAuC,GAAmB,IAAAovB,EAAApvB,EAAhBqc,KACtBgT,QADsC,IAAAD,EAAT,GAASA,GAClB5sB,IAAI,SAAAnH,GAAG,OrBxQnB6L,EqBwQiC7L,EAAImF,KrBvQrD8uB,EAAW7uB,SAAS8uB,yBACpB10B,EAAU4F,SAASF,cAAc,OACvC+uB,EAAS5vB,YAAY7E,GACrBA,EAAQuP,UAAYlD,EACbooB,EAASE,WAAW9uB,UALxB,IAAmBwG,EAChBooB,EACAz0B,IqBuQE8T,GAAS4M,WAAW7d,KAAK4J,EAAQ+nB,KAGrC/nB,EAAOwU,MAAMre,GAAG,SAAU,YAEtB6J,EAAOwU,MAAM2T,YAAY1iB,KAAK,SAAApF,GAC1BilB,GAAoBlvB,KAAK4J,GAASK,GAC7BA,GACDzJ,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,aAI5C1M,EAAGc,QAAQyM,EAAOwU,MAAMjhB,UAAYyM,EAAOlL,UAAUyJ,KACvCyB,EAAOwU,MAAMjhB,QAIrByF,aAAa,YAAa,KAIxCgH,EAAOwU,MAAMre,GAAG,OAAQ,WACpBmvB,GAAoBlvB,KAAK4J,GAAQ,GACjCpJ,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,aAG5Ca,EAAOwU,MAAMre,GAAG,QAAS,WACrBmvB,GAAoBlvB,KAAK4J,GAAQ,KAGrCA,EAAOwU,MAAMre,GAAG,aAAc,SAAAgP,GAC1BnF,EAAOb,MAAM6O,SAAU,EACvB5N,EAAc+E,EAAKijB,QACnBxxB,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,gBAG5Ca,EAAOwU,MAAMre,GAAG,WAAY,SAAAgP,GACxBnF,EAAOb,MAAM8N,SAAW9H,EAAK+H,QAC7BtW,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,YAGL,IAA/B0G,SAASV,EAAK+H,QAAS,KACvBtW,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,kBAK5Ca,EAAOwU,MAAMoT,cAAcniB,KAAK,SAAA9M,GACxBA,IAAUqH,EAAOb,MAAM0I,WACvB7H,EAAOb,MAAM0I,SAAWlP,EACxB/B,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,uBAKpDa,EAAOwU,MAAMre,GAAG,SAAU,WACtB6J,EAAOb,MAAM6O,SAAU,EACvBpX,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,YAG5Ca,EAAOwU,MAAMre,GAAG,QAAS,WACrB6J,EAAOb,MAAMkB,QAAS,EACtBzJ,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,WAG5Ca,EAAOwU,MAAMre,GAAG,QAAS,SAAAW,GACrBkJ,EAAOb,MAAM6I,MAAQlR,EACrBF,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,WAI5CxC,WAAW,WAAA,OAAM4B,GAAG6f,MAAMhoB,KAAK4J,IAAS,KC/XhD,SAASslB,GAAoB5kB,GACrBA,IAASnL,KAAKif,MAAM+Q,YACpBhwB,KAAKif,MAAM+Q,WAAY,GAEvBhwB,KAAK4J,MAAMkB,SAAWK,IACtBnL,KAAK4J,MAAMkB,QAAUK,EACrB9J,EAAaR,KAAKb,KAAMA,KAAK4J,MAAOuB,EAAO,OAAS,UAI5D,IAAMuC,GAAU,CACZ+P,MADY,WACJ,IAAA1d,EAAAC,KAEJyF,EAAYzF,KAAKiC,SAASC,QAASlC,KAAK0G,OAAOC,WAAWsY,OAAO,GAGjEvR,GAAQuiB,eAAepvB,KAAKb,MAGxB9C,EAAGE,OAAOqB,OAAOq0B,KAAO51B,EAAGQ,SAASe,OAAOq0B,GAAG/B,QAC9CrjB,GAAQob,MAAMjoB,KAAKb,OAGnB8vB,GAAW9vB,KAAK0G,OAAO+V,KAAK/O,QAAQwV,KAAK9S,MAAM,SAAAqC,GAC3C1S,EAAK8L,MAAM6G,KAAK,6BAA8BD,KAKlDhU,OAAOs0B,wBAA0Bt0B,OAAOs0B,yBAA2B,GAGnEt0B,OAAOs0B,wBAAwBpyB,KAAK,WAChC+M,GAAQob,MAAMjoB,KAAKd,KAIvBtB,OAAOu0B,wBAA0B,WAC7Bv0B,OAAOs0B,wBAAwBvyB,QAAQ,SAAAV,GACnCA,SAOhBmzB,SApCY,SAoCHC,GAAS,IAAAld,EAAAhW,KAId,GAAI9C,EAAGQ,SAASsC,KAAKif,MAAMkU,cAAe,CAAA,IAC9BplB,EAAU/N,KAAKif,MAAMkU,eAArBplB,MAER,GAAI7Q,EAAGmC,MAAM0O,GAGT,OAFA/N,KAAK0G,OAAOqH,MAAQA,OACpB/E,GAAGggB,SAASnoB,KAAKb,MAMzB,IAAMwD,EAAMxD,KAAK0G,OAAOzJ,KAAKsnB,OACzBrnB,EAAGM,OAAOgG,KAAStG,EAAGmC,MAAMmE,IAG5BmL,GAFYlC,EAAOzM,KAAK0G,OAAO+V,KAAK/O,QAAQ3E,IAAKmqB,EAAS1vB,IAGrD0M,KAAK,SAAAC,GACEjT,EAAGE,OAAO+S,KACV6F,EAAKtP,OAAOqH,MAAQoC,EAAOijB,MAAM,GAAGC,QAAQtlB,MAC5C/E,GAAGggB,SAASnoB,KAAKmV,MAGxB5F,MAAM,eAKnB6f,eAnEY,WAoER,IAAM3P,EAAQtgB,KAAK0G,OAAO4Z,MAAM/f,MAAM,KACtCP,KAAKiC,SAASC,QAAQgF,MAAMmpB,cAA5B,GAAAnxB,OAA+C,IAAMohB,EAAM,GAAKA,EAAM,GAAtE,MAIJwI,MAzEY,WA0ER,IAAMre,EAASzK,KAGTszB,EAAY7oB,EAAOb,MAAMU,aAAa,MAC5C,GAAKpN,EAAGmC,MAAMi0B,KAAcA,EAAUr0B,WAAW,YAAjD,CAKA,IAAIoL,EAASI,EAAOb,MAAMU,aAAa,OAGnCpN,EAAGmC,MAAMgL,KACTA,EAASI,EAAOb,MAAMU,aAAatK,KAAK0G,OAAO1D,WAAWic,MAAM7Z,KAIpE,IA/GSrG,EtBPUwnB,EsBsHb2M,GA/GGn0B,EA+GesL,EA9GxBnN,EAAGmC,MAAMN,GACF,KAIJA,EAAI4N,MADG,gEACYG,OAAO8jB,GAAK7xB,GA0G5BqG,GtBvHamhB,EsBuHG9b,EAAO7B,StBtHjC,GAAA1J,OAAUqnB,EAAV,KAAArnB,OAAoByZ,KAAKkE,MAAsB,IAAhBlE,KAAKmE,YsB4H1B1W,EAAY1C,EAAc,MAAO,CAAE0B,GAAAA,EAAIwe,OAH1BnZ,EAAXmZ,SAIRnZ,EAAOb,MAAQxF,EAAegC,EAAWqE,EAAOb,OAGhD,IAAM2pB,EAAY,SAAA9mB,GAAM,MAAA,8BAAAvN,OAAkCg0B,EAAlC,KAAAh0B,OAA6CuN,EAA7C,gBAGxB0b,GAAUoL,EAAU,UAAW,KAC1BnjB,MAAM,WAAA,OAAM+X,GAAUoL,EAAU,MAAO,OACvCnjB,MAAM,WAAA,OAAM+X,GAAUoL,EAAU,SAChCrjB,KAAK,SAAAmY,GAAK,OAAIrf,GAAGigB,UAAUpoB,KAAK4J,EAAQ4d,EAAMnd,OAC9CgF,KAAK,SAAAqjB,GAEGA,EAAUrtB,SAAS,YACpBuE,EAAOxI,SAAS2hB,OAAO1c,MAAMmiB,eAAiB,WAGrDjZ,MAAM,cAIX3F,EAAOwU,MAAQ,IAAIxgB,OAAOq0B,GAAG/B,OAAO3rB,EAAI,CACpC8tB,QAAAA,EACAM,WAAY,CACRrT,SAAU1V,EAAO/D,OAAOyZ,SAAW,EAAI,EACvCsT,GAAIhpB,EAAO/D,OAAO+sB,GAClBloB,SAAUd,EAAOlL,UAAUyJ,GAAK,EAAI,EACpC2lB,IAAK,EACL+E,SAAU,EACVC,eAAgB,EAChBC,eAAgB,EAChBC,UAAW,EACXhrB,YAAa,EAIbirB,gBAAiBr1B,OAASA,OAAO0S,SAASqL,KAAO,KAGjDuX,eAAgBtpB,EAAOqH,SAASmM,OAAS,EAAI,EAC7C+V,aAAcvpB,EAAO/D,OAAOoL,SAASqI,UAEzC7Z,OAAQ,CACJ2zB,QADI,SACI71B,GAEJ,IAAKqM,EAAOb,MAAM6I,MAAO,CACrB,IAAM4X,EAAOjsB,EAAMwR,KAEbskB,EACF,CACIC,EAAG,uOACHC,EAAG,uHACHC,IAAK,qIACLC,IAAK,uFACLC,IAAK,wFACPlK,IAAS,2BAEf5f,EAAOb,MAAM6I,MAAQ,CAAE4X,KAAAA,EAAM6J,QAAAA,GAE7B7yB,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,WAGhD4qB,qBApBI,SAoBiBp2B,GAEjB,IAAMq2B,EAAWr2B,EAAMkO,OAGvB7B,EAAOb,MAAM8qB,aAAeD,EAASE,kBAErCtzB,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,eAE5CgrB,QA7BI,SA6BIx2B,GAEJ,IAAIlB,EAAGQ,SAAS+M,EAAOb,MAAMuB,MAA7B,CAIA,IAAMspB,EAAWr2B,EAAMkO,OAGvBoB,GAAQulB,SAASpyB,KAAK4J,EAAQyoB,GAG9BzoB,EAAOb,MAAMuB,KAAO,WAChB4kB,GAAoBlvB,KAAK4J,GAAQ,GACjCgqB,EAASI,aAGbpqB,EAAOb,MAAMqB,MAAQ,WACjB8kB,GAAoBlvB,KAAK4J,GAAQ,GACjCgqB,EAASK,cAGbrqB,EAAOb,MAAMqnB,KAAO,WAChBwD,EAASM,aAGbtqB,EAAOb,MAAM0I,SAAWmiB,EAASpC,cACjC5nB,EAAOb,MAAMkB,QAAS,EAGtBL,EAAOb,MAAMiB,YAAc,EAC3BrO,OAAOiD,eAAegL,EAAOb,MAAO,cAAe,CAC/ClK,IAD+C,WAE3C,OAAOpC,OAAOm3B,EAASrC,mBAE3BznB,IAJ+C,SAI3C+F,GAEIjG,EAAOK,SAAWL,EAAOwU,MAAM+Q,WAC/BvlB,EAAOwU,MAAMrN,OAIjBnH,EAAOb,MAAM6O,SAAU,EACvBpX,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,WAGxC6qB,EAASnI,OAAO5b,MAKxBlU,OAAOiD,eAAegL,EAAOb,MAAO,eAAgB,CAChDlK,IADgD,WAE5C,OAAO+0B,EAASE,mBAEpBhqB,IAJgD,SAI5CzO,GACAu4B,EAASpD,gBAAgBn1B,MAxDtB,IA6DLiW,EAAW1H,EAAO/D,OAAlByL,OACN3V,OAAOiD,eAAegL,EAAOb,MAAO,SAAU,CAC1ClK,IAD0C,WAEtC,OAAOyS,GAEXxH,IAJ0C,SAItCzO,GACAiW,EAASjW,EACTu4B,EAAStD,UAAmB,IAAThf,GACnB9Q,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,mBArErC,IA0ELqN,EAAUxM,EAAO/D,OAAjBuQ,MACNza,OAAOiD,eAAegL,EAAOb,MAAO,QAAS,CACzClK,IADyC,WAErC,OAAOuX,GAEXtM,IAJyC,SAIrCzO,GACA,IAAM+D,EAAS/C,EAAGO,QAAQvB,GAASA,EAAQ+a,EAC3CA,EAAQhX,EACRw0B,EAASx0B,EAAS,OAAS,YAC3BoB,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,mBAKhDpN,OAAOiD,eAAegL,EAAOb,MAAO,aAAc,CAC9ClK,IAD8C,WAE1C,OAAO+0B,EAAShD,iBAKxBj1B,OAAOiD,eAAegL,EAAOb,MAAO,QAAS,CACzClK,IADyC,WAErC,OAAO+K,EAAOI,cAAgBJ,EAAO6H,YAK7C7H,EAAOjL,QAAQ6L,MAAQopB,EAASO,4BAG5BvqB,EAAOlL,UAAUyJ,IACjByB,EAAOb,MAAMnG,aAAa,YAAa,GAG3CpC,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,cACxCvI,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,kBAGxCqrB,cAAcxqB,EAAOgf,OAAOyL,WAG5BzqB,EAAOgf,OAAOyL,UAAYC,YAAY,WAElC1qB,EAAOb,MAAM8N,SAAW+c,EAASW,0BAGC,OAA9B3qB,EAAOb,MAAMyrB,cAAyB5qB,EAAOb,MAAMyrB,aAAe5qB,EAAOb,MAAM8N,WAC/ErW,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,YAI5Ca,EAAOb,MAAMyrB,aAAe5qB,EAAOb,MAAM8N,SAGX,IAA1BjN,EAAOb,MAAM8N,WACbud,cAAcxqB,EAAOgf,OAAOyL,WAG5B7zB,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,oBAE7C,KAGHxC,WAAW,WAAA,OAAM4B,GAAG6f,MAAMhoB,KAAK4J,IAAS,MAE5C6qB,cAzKI,SAyKUl3B,GAEV,IAAMq2B,EAAWr2B,EAAMkO,OAoBvB,OAjBA2oB,cAAcxqB,EAAOgf,OAAO1F,SAEbtZ,EAAOb,MAAM6O,SAAW,CAAC,EAAG,GAAGvS,SAAS9H,EAAMwR,QAIzDnF,EAAOb,MAAM6O,SAAU,EACvBpX,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,WAUpCxL,EAAMwR,MACV,KAAM,EAEFvO,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,cAGxCa,EAAOb,MAAM8N,SAAW+c,EAASW,yBACjC/zB,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,YAExC,MAEJ,KAAK,EACDmmB,GAAoBlvB,KAAK4J,GAAQ,GAG7BA,EAAOb,MAAMkX,MAEb2T,EAASM,YACTN,EAASI,aAETxzB,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,SAG5C,MAEJ,KAAK,EAEGa,EAAOb,MAAMkB,SAAWL,EAAOwU,MAAM+Q,UACrCvlB,EAAOb,MAAMqB,SAEb8kB,GAAoBlvB,KAAK4J,GAAQ,GAEjCpJ,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,WAGxCa,EAAOgf,OAAO1F,QAAUoR,YAAY,WAChC9zB,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,eACzC,IAKCa,EAAOb,MAAM0I,WAAamiB,EAASpC,gBACnC5nB,EAAOb,MAAM0I,SAAWmiB,EAASpC,cACjChxB,EAAaR,KAAK4J,EAAQA,EAAOb,MAAO,oBAIhD,MAEJ,KAAK,EAEIa,EAAOwM,OACRxM,EAAOwU,MAAMsW,SAEjBxF,GAAoBlvB,KAAK4J,GAAQ,GAQzCpJ,EAAaR,KAAK4J,EAAQA,EAAOxI,SAASmE,UAAW,eAAe,EAAO,CACvEikB,KAAMjsB,EAAMwR,cCpa9BhG,GAAQ,CAEV6T,MAFU,WAIDzd,KAAK4J,OAMVnE,EAAYzF,KAAKiC,SAASmE,UAAWpG,KAAK0G,OAAOC,WAAWlG,KAAKuE,QAAQ,MAAOhF,KAAKS,OAAO,GAG5FgF,EAAYzF,KAAKiC,SAASmE,UAAWpG,KAAK0G,OAAOC,WAAWiC,SAAS5D,QAAQ,MAAOhF,KAAK4I,WAAW,GAIhG5I,KAAK0c,SACLjX,EAAYzF,KAAKiC,SAASmE,UAAWpG,KAAK0G,OAAOC,WAAWlG,KAAKuE,QAAQ,MAAO,UAAU,GAI1FhF,KAAK0d,UAEL1d,KAAKiC,SAASC,QAAUwB,EAAc,MAAO,CACzCyB,MAAOnF,KAAK0G,OAAOC,WAAW+B,QAIlC1G,EAAKhC,KAAK4J,MAAO5J,KAAKiC,SAASC,SAG/BlC,KAAKiC,SAAS2hB,OAASlgB,EAAc,MAAO,CACxCyB,MAAOnF,KAAK0G,OAAOC,WAAWid,SAGlC5jB,KAAKiC,SAASC,QAAQW,YAAY7C,KAAKiC,SAAS2hB,SAGhD5jB,KAAK2J,QACLQ,EAAMK,OAAO3J,KAAKb,MACXA,KAAK2d,UACZjQ,GAAQ+P,MAAM5c,KAAKb,MACZA,KAAK2a,SACZlN,GAAMgQ,MAAM5c,KAAKb,OAvCjBA,KAAK6L,MAAM6G,KAAK,6BCEtB8iB,cAMF,SAAAA,EAAY/qB,GAAQ,IAAA1K,EAAAC,KAAAkO,EAAAlO,KAAAw1B,GAChBx1B,KAAKyK,OAASA,EACdzK,KAAKwkB,YAAc/Z,EAAO/D,OAAOod,IAAIU,YACrCxkB,KAAK+jB,SAAU,EACf/jB,KAAKqrB,aAAc,EACnBrrB,KAAKiC,SAAW,CACZmE,UAAW,KACXqvB,iBAAkB,MAEtBz1B,KAAK01B,QAAU,KACf11B,KAAK21B,OAAS,KACd31B,KAAK41B,UAAY,KACjB51B,KAAKM,OAAS,GACdN,KAAK61B,YAAc,KACnB71B,KAAK81B,eAAiB,KAGtB91B,KAAKsrB,eAAiB,IAAIzc,QAAQ,SAACC,EAASC,GAExChP,EAAKa,GAAG,SAAUkO,GAGlB/O,EAAKa,GAAG,QAASmO,KAGrB/O,KAAKoL,gDAYF,IAAA4K,EAAAhW,KACCA,KAAKmO,UAEAjR,EAAGE,OAAOqB,OAAO8lB,SAAYrnB,EAAGE,OAAOqB,OAAO8lB,OAAOwR,KAUtD/1B,KAAK8oB,QATLgH,GAAW9vB,KAAKyK,OAAO/D,OAAO+V,KAAK2G,UAAUF,KACxChT,KAAK,WACF8F,EAAK8S,UAER1Y,MAAM,WAEH4F,EAAKggB,QAAQ,QAAS,IAAIn0B,MAAM,qEAW5C,IAAAuV,EAAApX,KAGJA,KAAKi2B,iBAAiB,KAAO,WAG7Bj2B,KAAKsrB,eAAepb,KAAK,WACrBkH,EAAK8e,iBAAiB,0BAI1Bl2B,KAAK0W,YAGL1W,KAAKm2B,8CA8BLn2B,KAAKiC,SAASmE,UAAY1C,EAAc,MAAO,CAC3CyB,MAAOnF,KAAKyK,OAAO/D,OAAOC,WAAWmd,MAEzC9jB,KAAKyK,OAAOxI,SAASmE,UAAUvD,YAAY7C,KAAKiC,SAASmE,WAGzDme,OAAOwR,IAAIlkB,SAASukB,aAAa7R,OAAOwR,IAAIM,eAAeC,UAAUC,SAGrEhS,OAAOwR,IAAIlkB,SAAS2kB,UAAUx2B,KAAKyK,OAAO/D,OAAOod,IAAI3J,UAIrDna,KAAKiC,SAASwzB,iBAAmB,IAAIlR,OAAOwR,IAAIU,mBAAmBz2B,KAAKiC,SAASmE,WAGjFpG,KAAK02B,kDAMI,IAAA5e,EAAA9X,KACDoG,EAAcpG,KAAKyK,OAAOxI,SAA1BmE,UAER,IAEIpG,KAAK21B,OAAS,IAAIpR,OAAOwR,IAAIY,UAAU32B,KAAKiC,SAASwzB,kBAGrDz1B,KAAK21B,OAAOh2B,iBACR4kB,OAAOwR,IAAIa,sBAAsBC,KAAKC,mBACtC,SAAA14B,GAAK,OAAI0Z,EAAKif,mBAAmB34B,KACjC,GAEJ4B,KAAK21B,OAAOh2B,iBAAiB4kB,OAAOwR,IAAIiB,aAAaH,KAAKI,SAAU,SAAAxkB,GAAK,OAAIqF,EAAKof,UAAUzkB,KAAQ,GAGpG,IAAMzD,EAAU,IAAIuV,OAAOwR,IAAIoB,WAC/BnoB,EAAQooB,SAAWp3B,KAAKq3B,OAIxBroB,EAAQsoB,kBAAoBlxB,EAAUmxB,YACtCvoB,EAAQwoB,mBAAqBpxB,EAAUiB,aACvC2H,EAAQyoB,qBAAuBrxB,EAAUmxB,YACzCvoB,EAAQ0oB,sBAAwBtxB,EAAUiB,aAG1C2H,EAAQ2oB,wBAAyB,EAGjC3oB,EAAQ4oB,oBAAoB53B,KAAKyK,OAAOwM,OAExCjX,KAAK21B,OAAOe,WAAW1nB,GACzB,MAAO5P,GACLY,KAAKk3B,UAAU93B,4CAQM,IAAAma,EAAAvZ,KACzB,KADyBE,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,IAAAA,UAAA,IAIrB,OAFA+0B,cAAcj1B,KAAK81B,qBACnB91B,KAAKiC,SAASmE,UAAUZ,gBAAgB,mBAU5CxF,KAAK81B,eAAiBX,YANP,WACX,IAAMzkB,EAAOD,GAAWkI,KAAKtE,IAAIkF,EAAKmc,QAAQmC,mBAAoB,IAC5D/jB,EAAK,GAAA5U,OAAMyO,GAAS,gBAAiB4L,EAAK9O,OAAO/D,QAA5C,OAAAxH,OAAyDwR,GACpE6I,EAAKtX,SAASmE,UAAU3C,aAAa,kBAAmBqQ,IAGlB,gDAO3B1V,GAAO,IAAA2b,EAAA/Z,KAEtB,GAAKA,KAAKmO,QAAV,CAKA,IAAM0D,EAAW,IAAI0S,OAAOwR,IAAI+B,qBAGhCjmB,EAASkmB,6CAA8C,EACvDlmB,EAASmmB,kBAAmB,EAI5Bh4B,KAAK01B,QAAUt3B,EAAM65B,cAAcj4B,KAAKyK,OAAQoH,GAGhD7R,KAAK41B,UAAY51B,KAAK01B,QAAQwC,eAGzBh7B,EAAGmC,MAAMW,KAAK41B,YACf51B,KAAK41B,UAAUp1B,QAAQ,SAAA23B,GACnB,GAAiB,IAAbA,IAAgC,IAAdA,GAAmBA,EAAWpe,EAAKtP,OAAO6H,SAAU,CACtE,IAAM8lB,EAAcre,EAAKtP,OAAOxI,SAAS+P,SAEzC,GAAI9U,EAAGc,QAAQo6B,GAAc,CACzB,IAAMC,EAAgB,IAAMte,EAAKtP,OAAO6H,SAAW6lB,EAC7C35B,EAAMkF,EAAc,OAAQ,CAC9ByB,MAAO4U,EAAKtP,OAAO/D,OAAOC,WAAW6Y,OAGzChhB,EAAI0I,MAAMmR,KAAV,GAAAnZ,OAAoBm5B,EAAc3rB,WAAlC,KACA0rB,EAAYv1B,YAAYrE,OAOxCwB,KAAK01B,QAAQvE,UAAUnxB,KAAKyK,OAAO0H,QAInCnS,KAAK01B,QAAQ/1B,iBAAiB4kB,OAAOwR,IAAIiB,aAAaH,KAAKI,SAAU,SAAAxkB,GAAK,OAAIsH,EAAKmd,UAAUzkB,KAG7FjW,OAAOS,KAAKsnB,OAAOwR,IAAIuC,QAAQzB,MAAMr2B,QAAQ,SAAAC,GACzCsZ,EAAK2b,QAAQ/1B,iBAAiB4kB,OAAOwR,IAAIuC,QAAQzB,KAAKp2B,GAAO,SAAArC,GAAK,OAAI2b,EAAKwe,UAAUn6B,OAIzF4B,KAAKg2B,QAAQ,6CASP53B,GAAO,IAAAic,EAAAra,KACLoG,EAAcpG,KAAKyK,OAAOxI,SAA1BmE,UAIFoyB,EAAKp6B,EAAMq6B,QAGX92B,EAAgB,SAAAlB,GAClB,IAAMrC,EAAK,MAAAc,OAASuB,EAAKuE,QAAQ,KAAM,IAAIkI,eAC3C7L,EAAaR,KAAKwZ,EAAK5P,OAAQ4P,EAAK5P,OAAOb,MAAOxL,IAGtD,OAAQA,EAAMqC,MACV,KAAK8jB,OAAOwR,IAAIuC,QAAQzB,KAAK6B,OAGzB14B,KAAKg2B,QAAQ,UAGbr0B,EAAcvD,EAAMqC,MAGpBT,KAAK24B,eAAc,GAEdH,EAAGI,aAEJJ,EAAGrgB,MAAQ/R,EAAUmxB,YACrBiB,EAAGhd,OAASpV,EAAUiB,cAK1B,MAEJ,KAAKkd,OAAOwR,IAAIuC,QAAQzB,KAAKgC,kBAKzBl3B,EAAcvD,EAAMqC,MAyBpBT,KAAK84B,UACL,MAEJ,KAAKvU,OAAOwR,IAAIuC,QAAQzB,KAAKkC,wBAKzBp3B,EAAcvD,EAAMqC,MAEpBT,KAAKg5B,eAEL,MAEJ,KAAKzU,OAAOwR,IAAIuC,QAAQzB,KAAKoC,yBAMzBt3B,EAAcvD,EAAMqC,MAEpBT,KAAK24B,gBAEL34B,KAAKk5B,gBAEL,MAEJ,KAAK3U,OAAOwR,IAAIuC,QAAQzB,KAAKsC,QAC7B,KAAK5U,OAAOwR,IAAIuC,QAAQzB,KAAKuC,SAC7B,KAAK7U,OAAOwR,IAAIuC,QAAQzB,KAAKwC,SAC7B,KAAK9U,OAAOwR,IAAIuC,QAAQzB,KAAKyC,WAC7B,KAAK/U,OAAOwR,IAAIuC,QAAQzB,KAAK0C,MACzB53B,EAAcvD,EAAMqC,yCAYtBrC,GACN4B,KAAKw5B,SACLx5B,KAAKyK,OAAOoB,MAAM6G,KAAK,YAAatU,uCAQ5B,IAEJsS,EAFIgK,EAAA1a,KACAoG,EAAcpG,KAAKyK,OAAOxI,SAA1BmE,UAIRpG,KAAKyK,OAAO7J,GAAG,QAAS,WACpB8Z,EAAKib,OAAO8D,oBAGhBz5B,KAAKyK,OAAO7J,GAAG,UAAW,WAEtB,OADA8P,EAAOgK,EAAKjQ,OAAOI,cAIvB7K,KAAKyK,OAAO7J,GAAG,SAAU,WACrB,IAAM84B,EAAahf,EAAKjQ,OAAOI,YAE3B3N,EAAGmC,MAAMqb,EAAKkb,YAIlBlb,EAAKkb,UAAUp1B,QAAQ,SAAC23B,EAAU71B,GAC1BoO,EAAOynB,GAAYA,EAAWuB,IAC9Bhf,EAAKgb,QAAQiE,iBACbjf,EAAKkb,UAAUhI,OAAOtrB,EAAO,QAOzC7D,OAAOkB,iBAAiB,SAAU,WAC1B+a,EAAKgb,SACLhb,EAAKgb,QAAQkE,OAAOxzB,EAAUmxB,YAAanxB,EAAUiB,aAAckd,OAAOwR,IAAI8D,SAASC,yCAQ5F,IAAApe,EAAA1b,KACKoG,EAAcpG,KAAKyK,OAAOxI,SAA1BmE,UAEHpG,KAAKsrB,gBACNtrB,KAAKk5B,gBAITl5B,KAAKsrB,eACApb,KAAK,WAEFwL,EAAKzZ,SAASwzB,iBAAiBsE,aAE/B,IACSre,EAAK2P,cAEN3P,EAAKga,QAAQsE,KAAK5zB,EAAUmxB,YAAanxB,EAAUiB,aAAckd,OAAOwR,IAAI8D,SAASC,QAIrFpe,EAAKga,QAAQrT,SAGjB3G,EAAK2P,aAAc,EACrB,MAAO4O,GAGLve,EAAKwb,UAAU+C,MAGtB7pB,MAAM,sDAQXpQ,KAAKiC,SAASmE,UAAUc,MAAMgzB,OAAS,GAGvCl6B,KAAK+jB,SAAU,EAGX/jB,KAAKyK,OAAOI,YAAc7K,KAAKyK,OAAO6H,UACtCtS,KAAKyK,OAAOU,8CAShBnL,KAAKiC,SAASmE,UAAUc,MAAMgzB,OAAS,EAGvCl6B,KAAK+jB,SAAU,EAGf/jB,KAAKyK,OAAOQ,yCAWRjL,KAAKqrB,aACLrrB,KAAKk5B,gBAITl5B,KAAKg2B,QAAQ,SAGbh2B,KAAK84B,4CAMC,IAAA7c,EAAAjc,KAENA,KAAKsrB,eACApb,KAAK,WAEE+L,EAAKyZ,SACLzZ,EAAKyZ,QAAQyE,UAIjBle,EAAKqP,eAAiB,IAAIzc,QAAQ,SAAAC,GAC9BmN,EAAKrb,GAAG,SAAUkO,GAClBmN,EAAKxR,OAAOoB,MAAMC,IAAImQ,EAAKyZ,WAI/BzZ,EAAKya,eAERtmB,MAAM,8CAOPhS,GAAgB,IAAA,IAAAwe,EAAA5c,KAAAiB,EAAAf,UAAAlD,OAANkE,EAAM,IAAAtE,MAAAqE,EAAA,EAAAA,EAAA,EAAA,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAND,EAAMC,EAAA,GAAAjB,UAAAiB,GACpB,IAAMi5B,EAAWp6B,KAAKM,OAAOlC,GAEzBlB,EAAGU,MAAMw8B,IACTA,EAAS55B,QAAQ,SAAA+nB,GACTrrB,EAAGQ,SAAS6qB,IACZA,EAAQnnB,MAAMwb,EAAM1b,gCAYjC9C,EAAO0B,GAON,OANK5C,EAAGU,MAAMoC,KAAKM,OAAOlC,MACtB4B,KAAKM,OAAOlC,GAAS,IAGzB4B,KAAKM,OAAOlC,GAAOuC,KAAKb,GAEjBE,8CAWM0Q,EAAMtO,GAAM,IAAAi4B,EAAAr6B,KACzBA,KAAKyK,OAAOoB,MAAMC,IAAlB,8BAAA5M,OAAoDkD,IAEpDpC,KAAK61B,YAAczuB,WAAW,WAC1BizB,EAAKb,SACLa,EAAKnE,iBAAiB,uBACvBxlB,4CAOUtO,GACRlF,EAAGC,gBAAgB6C,KAAK61B,eACzB71B,KAAKyK,OAAOoB,MAAMC,IAAlB,8BAAA5M,OAAoDkD,IAEpDonB,aAAaxpB,KAAK61B,aAClB71B,KAAK61B,YAAc,sCA/hBvB,OACI71B,KAAKyK,OAAOd,SAAW3J,KAAKyK,OAAOiT,SAAW1d,KAAKyK,OAAO/D,OAAOod,IAAI3V,UAAYjR,EAAGmC,MAAMW,KAAKwkB,4CA+CnG,IAAMjH,EAAS,CACX+c,eAAgB,2BAChBC,aAAc,2BACdC,OAAQ/7B,OAAO0S,SAAShS,SACxBs7B,GAAI7Q,KAAKC,MACT6Q,SAAU,IACVC,UAAW,IACXC,SAAU56B,KAAKwkB,aAKnB,MAAA,GAAAtlB,OAFa,6CAEb,KAAAA,OAAkBoe,GAAeC,aC1G5Bsd,GACT,SAAAA,IAAe3sB,EAAAlO,KAAA66B,GACX76B,KAAK86B,WAAaD,EAAiBE,WAAWC,KAC9Ch7B,KAAKi7B,WAAaJ,EAAiBK,WAAWC,OAC9Cn7B,KAAK0Q,KAAO,EACZ1Q,KAAKo7B,KAAO,IAIpBP,GAAiBE,WAAa,CAC1BC,KAAM,OACNK,KAAM,QAEVR,GAAiBK,WAAa,CAC1BC,OAAQ,SACRG,OAAQ,UAGZ,I1BhB0Bl+B,G0BgBpBm+B,GAA6B,CAC/BC,OAAQ,SACRC,QAAS,UACTC,OAAQ,UAGSC,cAEjB,SAAAA,EAAalxB,GAAQyD,EAAAlO,KAAA27B,GACjB37B,KAAKyK,OAASA,EACdzK,KAAK47B,gBAAkB,GACvB57B,KAAK67B,qBAAuB,KAC5B77B,KAAKgrB,2BAA6BuQ,GAA2BG,OAC7D17B,KAAK+qB,qBAAsB,EAE3B/qB,KAAK87B,gCAAkC,KACvC97B,KAAK+7B,iCAAmC,gFAOxC/7B,KAAK47B,gBAAkB,GACvB57B,KAAK67B,qBAAuB,KAC5B77B,KAAK+qB,qBAAsB,EAC3B/qB,KAAKg8B,gEAILh8B,KAAKgrB,2BAA6BuQ,GAA2BC,OAC7Dx7B,KAAKi8B,4EAILj8B,KAAKgrB,2BAA6BuQ,GAA2BE,QAC7Dz7B,KAAKi8B,2EAILj8B,KAAKgrB,2BAA6BuQ,GAA2BG,OAC7D17B,KAAKi8B,sFAIL,IAAMC,EAAuB71B,EAAWxF,KAAKb,KAAKyK,OAAQ,2BAC1D,OAAQzK,KAAKgrB,4BACT,KAAKuQ,GAA2BC,OAC5B/1B,EAAY5E,KAAKb,KAAKyK,OAAQyxB,EAAsB,WAAW,GAC/Dz2B,EAAY5E,KAAKb,KAAKyK,OAAQyxB,EAAsB,UAAU,GAC9Dz2B,EAAY5E,KAAKb,KAAKyK,OAAQ,gCAAiC,UAAU,GACzE,MACJ,KAAK8wB,GAA2BE,QAC5Bh2B,EAAY5E,KAAKb,KAAKyK,OAAQyxB,EAAsB,WAAW,GAC/Dz2B,EAAY5E,KAAKb,KAAKyK,OAAQyxB,EAAsB,UAAU,GAC9Dz2B,EAAY5E,KAAKb,KAAKyK,OAAQ,gCAAiC,UAAU,GACzE,MACJ,KAAK8wB,GAA2BG,OAC5Bj2B,EAAY5E,KAAKb,KAAKyK,OAAQyxB,EAAsB,WAAW,GAC/Dz2B,EAAY5E,KAAKb,KAAKyK,OAAQyxB,EAAsB,UAAU,GAC9Dz2B,EAAY5E,KAAKb,KAAKyK,OAAQ,gCAAiC,UAAU,sCAQjF,GAAIzK,KAAKyK,OAAOlL,UAAUyJ,GAEtB,IADA,IAAM6yB,EAAuB77B,KAAKm8B,eACzBvvB,EAAI,EAAGA,EAAI5M,KAAK47B,gBAAgB5+B,OAAQ4P,GAAK,EAAG,CACrD,IAAMwuB,EAAOp7B,KAAK47B,gBAAgBhvB,GAClC,IAAK5M,KAAKo8B,oBAAoBhB,EAAKiB,KAAM,CACrC,IAAMC,EAAiBt8B,KAAKu8B,uBAAuBnB,GACnDS,EAAqBh5B,YAAYy5B,6CAMhCE,GACTx8B,KAAKyK,OAAOlL,UAAUyJ,KACtBhJ,KAAK47B,gBAAkBY,EACvBx8B,KAAK+qB,qBAAsB,EAC3B/qB,KAAKy8B,UACLz8B,KAAK08B,8DAKL18B,KAAKyK,OAAOsZ,QACZ/jB,KAAK87B,gCAAkC,UAEvC97B,KAAK87B,gCAAkC,QAG3C97B,KAAKyK,OAAOQ,QAEZ,IAAMyF,EAAOiI,KAAKgkB,MAAM38B,KAAKyK,OAAOI,aAC9BuwB,EAAOp7B,KAAK48B,uBAAuBlsB,GACzC,GAAI0qB,EAAM,CACN,IAAMS,EAAuBx1B,EAAWxF,KAAKb,KAAKyK,OAArB,0BAAAvL,OAAyDk8B,EAAKiB,IAA9D,OAC7B,GAAIR,EAAsB,CACtB,IAAMgB,EAAmBhB,EAAqBv1B,cAAc,oCAC5D,GAAIu2B,EAAkB,CAClB,IAAMC,EAAa,IAAIz+B,MAAM,SAC7Bw+B,EAAiBl7B,cAAcm7B,UAKvC98B,KAAK+8B,qBACL17B,EAAaR,KAAKb,KAAKyK,OAAQzK,KAAKyK,OAAOb,MAAO,qBAAqB,EAAO,CAC1Ege,YAAa,CACTlX,KAAAA,oDAMQkX,GACpB5nB,KAAK08B,oBACL,IAAMM,EAAiBxgC,OAAOiF,OAAO,GAAImmB,EAAa,CAClDkT,WAAYD,GAAiBE,WAAWC,OAE5Ch7B,KAAK47B,gBAAgBj7B,KAAKq8B,GAC1B,IAAMV,EAAiBt8B,KAAKu8B,uBAAuBS,GACtBh9B,KAAKm8B,eACbt5B,YAAYy5B,6CAGlB1U,GACf,IAAMiU,EAAuBx1B,EAAWxF,KAAKb,KAAKyK,OAArB,gBAAAvL,OAA6C0oB,EAAYyU,IAAzD,OAC7B,GAAIR,EAAsB,CACtBA,EAAqBoB,cAAcj5B,YAAY63B,GAC/C,IAAK,IAAIjvB,EAAI,EAAGA,EAAI5M,KAAK47B,gBAAgB5+B,OAAQ4P,GAAK,EAClD,GAAI5M,KAAK47B,gBAAgBhvB,GAAGyvB,MAAQzU,EAAYyU,IAE5C,YADAr8B,KAAK47B,gBAAgBhO,OAAOhhB,EAAG,mDAOvB8D,GACpB,IAAK,IAAI9D,EAAI,EAAGA,EAAI5M,KAAK47B,gBAAgB5+B,OAAQ4P,GAAK,EAClD,GAAI5M,KAAK47B,gBAAgBhvB,GAAG8D,OAASA,EACjC,OAAO,EAGf,OAAO,iDAGaA,GACpB,IAAK,IAAI9D,EAAI,EAAGA,EAAI5M,KAAK47B,gBAAgB5+B,OAAQ4P,GAAK,EAClD,GAAI5M,KAAK47B,gBAAgBhvB,GAAG8D,OAASA,EACjC,OAAO1Q,KAAK47B,gBAAgBhvB,GAGpC,OAAO,4CAWP,GAHI5M,KAAK67B,uBAAyB77B,KAAK67B,qBAAqBoB,gBACxDj9B,KAAK67B,qBAAuB,MAEE,OAA9B77B,KAAK67B,qBAA+B,CACpC77B,KAAK67B,qBAAuBn4B,EAAc,MAAO,CAC7CyB,MAAS,iCAEb,IAAM+3B,EAAa72B,EAAWxF,KAAKb,KAAKyK,OAAQzK,KAAKyK,OAAO/D,OAAO6K,UAAUS,UACzEkrB,GACAA,EAAWr6B,YAAY7C,KAAK67B,sBAGpC,OAAO77B,KAAK67B,iEAQKsB,GACjB,OAAqF,OAA9E92B,EAAWxF,KAAKb,KAAKyK,OAArB,0BAAAvL,OAAuDi+B,EAAvD,sDAOavV,GAAa,IAAA7nB,EAAAC,KACzBsS,EAAatS,KAAKyK,OAAlB6H,SACFqF,EAAWiQ,EAAYlX,KAAO4B,EAAY,KAAO,EAEnD8qB,EAAgB,KAEdvB,EAAuBn4B,EAAc,MAAO,CAC9C25B,UAAWzV,EAAYyU,IACvBl3B,MAAO,iBAKLm4B,EAAO55B,EAAc,OAAQ,CAC/ByB,MAFc,uBAIlB02B,EAAqBh5B,YAAYy6B,GAGjCA,EAAK39B,iBAAiB,QAAS,SAACP,GAC5BW,EAAK0K,OAAOI,YAAc+c,EAAYlX,KACtCtR,EAAEkW,iBACFlW,EAAEmW,oBAKN,IAAMnG,EAASwY,EAAYkT,WACrByC,EAAmB75B,EAAc,MAAO,CAC1CyB,MAAK,mCAAAjG,OAAqCkQ,IAAWyrB,GAAiBE,WAAWC,KAAO,yCAA2C,MAEvIa,EAAqBh5B,YAAY06B,GAIjC,IAAMC,EAAkB95B,EAAc,WAAY,CAC9CyB,MAAO,iCACPs4B,YAAa,gBACbC,UAAW,GACXC,KAAM,IAEVH,EAAgBp6B,MAAQwkB,EAAYwT,MAAQ,GAC5CmC,EAAiB16B,YAAY26B,GAI7B,IAAMI,EAAkBl6B,EAAc,OAAQ,CAC1CyB,MAAO,oCAEXy4B,EAAgBrwB,UAAYqa,EAAYwT,KACxCmC,EAAiB16B,YAAY+6B,GAI7B,IAAMC,EAAmBn6B,EAAc,OAAQ,CAC3CyB,MAAO,qCAEL24B,EAAYvyB,GAASqH,WAAW/R,KAAKb,KAAKyK,OAAQ,SACxDozB,EAAiBh7B,YAAYi7B,GAC7BP,EAAiB16B,YAAYg7B,GAE7BA,EAAiBl+B,iBAAiB,QAAS,SAACP,GACxCiC,EAAaR,KAAKd,EAAK0K,OAAQ1K,EAAK0K,OAAOb,MAAO,qBAAqB,EAAM,CACzEge,YAAAA,IAEJ7nB,EAAKg+B,kBAAkBnW,KAK3B2V,EAAiB59B,iBAAiB,QAAS,SAACP,GACpCwoB,EAAYkT,aAAeD,GAAiBE,WAAWC,OACnDj7B,EAAK0K,OAAOsZ,QACZhkB,EAAKg8B,iCAAmC,UAExCh8B,EAAKg8B,iCAAmC,QAE5Ch8B,EAAK0K,OAAOQ,QACZxF,EAAY83B,EAAkB,yCAAyC,GACvE3V,EAAYkT,WAAaD,GAAiBE,WAAWC,KACrDwC,EAAgBt2B,MAAMsU,OAAS,OAC/BgiB,EAAgBt2B,MAAMsU,OAAtB,GAAAtc,OAAkCs+B,EAAgB/hB,aAAlD,MACA+hB,EAAgB/2B,WAKxBW,WAAW,WACPo2B,EAAgB/2B,SACjB,IAEH+2B,EAAgB79B,iBAAiB,QAAS,WACtC69B,EAAgBt2B,MAAMsU,OAAS,OAC/BgiB,EAAgBt2B,MAAMsU,OAAtB,GAAAtc,OAAkCs+B,EAAgB/hB,aAAlD,QAGJ,IAAIuiB,GAAkB,EAoHtB,OAnHAR,EAAgB79B,iBAAiB,mBAAoB,SAACP,GAClD4+B,GAAkB,IAGtBR,EAAgB79B,iBAAiB,iBAAkB,SAACP,GAChDgI,WAAW,WACP42B,GAAkB,GACnB,MAGPR,EAAgB79B,iBAAiB,UAAW,SAACP,GACzC,IAAK4+B,GAA6B,UAAV5+B,EAAEoE,IAAiB,CACvCokB,EAAYwT,KAAOoC,EAAgBp6B,MACnCw6B,EAAgBrwB,UAAYqa,EAAYwT,KACxC31B,EAAY83B,EAAkB,yCAAyC,GACvE3V,EAAYkT,WAAaD,GAAiBE,WAAWM,KACrD51B,EAAYo2B,EAAsB,SAAS,GAC3CuB,EAAgBh2B,WAAW,WACvB3B,EAAYo2B,EAAsB,SAAS,IAC5C,KACHx6B,EAAaR,KAAKd,EAAK0K,OAAQ1K,EAAK0K,OAAOb,MAAO,qBAAqB,EAAM,CACzEge,YAAAA,IAEJ/C,QAAQoZ,MAAM,iBACdpZ,QAAQ/Y,IAAI/L,EAAK+7B,gCAAiC/7B,EAAKg8B,kCACvDlX,QAAQqZ,WACR,IACQn+B,EAAK+7B,kCACwC,YAAzC/7B,EAAK+7B,iCACL/7B,EAAK0K,OAAOU,OAEhBpL,EAAK+7B,gCAAkC,MAEvC/7B,EAAKg8B,mCACyC,YAA1Ch8B,EAAKg8B,kCACLh8B,EAAK0K,OAAOU,OAEhBpL,EAAKg8B,iCAAmC,MAE9C,MAAO38B,IAGTA,EAAEkW,iBAEQ,WAAVlW,EAAEoE,MACFg6B,EAAgBp6B,MAAQwkB,EAAYwT,KACpC31B,EAAY83B,EAAkB,yCAAyC,GACvE3V,EAAYkT,WAAaD,GAAiBE,WAAWM,QAI7DmC,EAAgB79B,iBAAiB,OAAQ,SAACP,GACtCwoB,EAAYwT,KAAOoC,EAAgBp6B,MACnCw6B,EAAgBrwB,UAAYqa,EAAYwT,KACxC31B,EAAY83B,EAAkB,yCAAyC,GACvE3V,EAAYkT,WAAaD,GAAiBE,WAAWM,KACrD51B,EAAYo2B,EAAsB,SAAS,GAC3CuB,EAAgBh2B,WAAW,WACvB3B,EAAYo2B,EAAsB,SAAS,IAC5C,KACHx6B,EAAaR,KAAKd,EAAK0K,OAAQ1K,EAAK0K,OAAOb,MAAO,qBAAqB,EAAM,CACzEge,YAAAA,IAEJxoB,EAAEkW,mBAGNgoB,EAAK39B,iBAAiB,aAAc,SAACP,GAC7Bg+B,IACA5T,aAAa4T,GACbA,EAAgB,MAEpB33B,EAAY83B,EAAkB,yCAAyC,GACvE,IAAMn3B,EAAYrG,EAAKo8B,eACjBgC,GAAc/3B,EAAUmxB,YAAc,KAAOnxB,EAAUmxB,YAAe,KAAO,EAE/E9xB,EAAY83B,EAAkB,4CAD9B5lB,EAAUwmB,GAKd/+B,EAAEkW,mBAGNgoB,EAAK39B,iBAAiB,aAAc,SAACP,GACjCg+B,EAAgBh2B,WAAW,WACvB3B,EAAY83B,EAAkB,yCAAyC,IACxE,KAEHn+B,EAAEkW,mBAGNioB,EAAiB59B,iBAAiB,aAAc,SAACP,GACzCg+B,IACA5T,aAAa4T,GACbA,EAAgB,MAEpB33B,EAAY83B,EAAkB,yCAAyC,GACvE,IAAMn3B,EAAYrG,EAAKo8B,eACjBgC,GAAc/3B,EAAUmxB,YAAc,KAAOnxB,EAAUmxB,YAAe,KAAO,EAE/E9xB,EAAY83B,EAAkB,4CAD9B5lB,EAAUwmB,GAKd/+B,EAAEkW,mBAGNioB,EAAiB59B,iBAAiB,aAAc,SAACP,GAC7Cg+B,EAAgBh2B,WAAW,WACvB3B,EAAY83B,EAAkB,yCAAyC,IACxE,KAEHn+B,EAAEkW,mBAGNumB,EAAqB30B,MAAMmR,KAA3B,QAAAnZ,OAA0CyY,EAA1C,MACOkkB,WC/ZTxxB,GAAS,CAEX+zB,eAFW,SAEI39B,EAAMuC,GAAY,IAAAjD,EAAAC,KACzB9C,EAAGM,OAAOwF,GACVc,EAAcrD,EAAMT,KAAK4J,MAAO,CAC5BsB,IAAKlI,IAEF9F,EAAGU,MAAMoF,IAChBA,EAAWxC,QAAQ,SAAA69B,GACfv6B,EAAcrD,EAAMV,EAAK6J,MAAOy0B,MAO5CC,OAhBW,SAgBJpiC,GAAO,IAAA8Z,EAAAhW,KACLkM,EAAQhQ,EAAO,mBAMpBiO,EAAMuB,eAAe7K,KAAKb,MAG1B+D,EADenH,MAAMwF,KAAKpC,KAAK4J,MAAM3D,iBAAiB,WAEtDjG,KAAK8R,SAAS8E,cAAgB,EAG9B5W,KAAKm6B,QAAQt5B,KACTb,KACA,WACIgW,EAAK4R,YAAY2W,QAEjBvoB,EAAKxW,QAAQiM,QAAU,GAGvB1H,EAAciS,EAAKpM,OAGf1M,EAAGc,QAAQgY,EAAK/T,SAASmE,YACzB4P,EAAK/T,SAASmE,UAAUZ,gBAAgB,SAI5C,IAAMg5B,EAAWxoB,EAAKvV,KAChBg+B,EAAezoB,EAAKpN,SAGlB+C,EAAkBzP,EAAlByP,QAASlL,EAASvE,EAATuE,KAlBfi+B,EAAAr7B,EAmB4CsI,EAnB5C,GAAA,GAAAgzB,EAAAD,EAmBO91B,SAAAA,OAnBP,IAAA+1B,EAmBkBla,GAAUta,MAnB5Bw0B,EAmBmCzzB,EAnBnCwzB,EAmBmCxzB,IAC/B0zB,EAAuB,UAAbh2B,EAAuBnI,EAAO,MACxCuC,EAA0B,UAAb4F,EAAuB,GAAK,CAAEsC,IAAAA,GAEjD1O,OAAOiF,OAAOuU,EAAM,CAChBpN,SAAAA,EACAnI,KAAAA,EAEAlB,UAAWiJ,EAAQG,MAAMlI,EAAMmI,EAAUoN,EAAKtP,OAAOmC,eAGrD21B,IAAa/9B,GAAQg+B,IAAiB71B,GAAYA,IAAa6b,GAAUta,MAMzEpH,EAAciT,EAAKpM,MAAO5G,IAE1BgT,EAAKpM,MAAQ,KACboM,EAAKpM,MAAQlG,EAAck7B,EAAS57B,IAIxCgT,EAAK/T,SAASmE,UAAUvD,YAAYmT,EAAKpM,OAGrC1M,EAAGO,QAAQvB,EAAMikB,YACjBnK,EAAKtP,OAAOyZ,SAAWjkB,EAAMikB,UAI7BnK,EAAKrM,UACDqM,EAAKtP,OAAOm4B,aACZ7oB,EAAKpM,MAAMnG,aAAa,cAAe,IAEvCuS,EAAKtP,OAAOyZ,UACZnK,EAAKpM,MAAMnG,aAAa,WAAY,IAEnCvG,EAAGmC,MAAMnD,EAAM0nB,UAChB5N,EAAK4N,OAAS1nB,EAAM0nB,QAEpB5N,EAAKtP,OAAOoa,KAAK7C,QACjBjI,EAAKpM,MAAMnG,aAAa,OAAQ,IAEhCuS,EAAKtP,OAAOuQ,OACZjB,EAAKpM,MAAMnG,aAAa,QAAS,IAEjCuS,EAAKtP,OAAOmC,aACZmN,EAAKpM,MAAMnG,aAAa,cAAe,KAK/CuF,GAAG2f,aAAa9nB,KAAKmV,GACrBhN,GAAG4f,kCAAkC/nB,KAAKmV,GAGtCA,EAAKrM,UACLU,GAAO+zB,eAAev9B,KAAKmV,EAAM,SAAUrK,GAC3CqK,EAAKpM,MAAMnG,aAAa,MAAOkI,EAAQ,GAAGT,MAI9C8K,EAAKtP,OAAOqH,MAAQ7R,EAAM6R,MAG1BnE,GAAM6T,MAAM5c,KAAKmV,GAGjB,IAAMvK,EAAUuK,EAAK1K,QAAQ5L,IAAI,WAC7BxC,EAAGG,OAAOoO,KACVuK,EAAKpM,MAAM6B,QAAUA,GAGzB,IAAIqzB,EAAiB,KAErB,GAAI9oB,EAAKrM,QAAS,CAEd,GAAI,WAAYzN,EAAO,CACnBmO,GAAO+zB,eAAev9B,KAAKmV,EAAM,QAAS9Z,EAAM8d,QAChD,IAAM+kB,EAAgB7iC,EAAM8d,OAAO9W,OAAO,SAAAtE,GAAK,OAAIA,EAAMwa,UACrD2lB,EAAc/hC,OAAS,IACvB8hC,EAAiBC,EAAc,GAAGC,SAEtCltB,GAASnC,OAAO9O,KAAKmV,GAIzBA,EAAKpM,MAAMwB,QAIX4K,EAAKrM,SAAYqM,EAAK0G,UAAY1G,EAAKzW,UAAUyJ,KAEjDA,GAAG6f,MAAMhoB,KAAKmV,GAIlBA,EAAKjE,WAAWpC,SAChBmC,GAAS8N,WAAW/e,KAAKmV,EAAM8oB,GAC/B,IAAMzzB,EAAQ2K,EAAK1K,QAAQ5L,IAAI,SAC3BxC,EAAGG,OAAOgO,KACV2K,EAAK3K,MAAQA,EACbE,GAASC,cAAc3K,KAAKmV,EAAM,QAAS3K,IAE/C2K,EAAK4R,YAAY6U,YAErB,IA7IAz8B,KAAK6L,MAAM6G,KAAK,2BCItBusB,cACF,SAAAA,EAAY3yB,EAAQ9M,GAAS,IAAAO,EAAAC,KAmFzB,GAnFyBkO,EAAAlO,KAAAi/B,GACzBj/B,KAAKypB,OAAS,GAGdzpB,KAAK8oB,OAAQ,EACb9oB,KAAKikB,SAAU,EACfjkB,KAAKk/B,QAAS,EAGdl/B,KAAK+J,MAAQvB,EAAQuB,MAGrB/J,KAAK4J,MAAQ0C,EAGTpP,EAAGM,OAAOwC,KAAK4J,SACf5J,KAAK4J,MAAQhG,SAASqC,iBAAiBjG,KAAK4J,SAI3CnL,OAAO0gC,QAAUn/B,KAAK4J,iBAAiBu1B,QAAWjiC,EAAGa,SAASiC,KAAK4J,QAAU1M,EAAGU,MAAMoC,KAAK4J,UAE5F5J,KAAK4J,MAAQ5J,KAAK4J,MAAM,IAI5B5J,KAAK0G,OAAS8D,EACV,GACA0V,GACA+e,EAAK/e,SACL1gB,GAAW,GACV,WACG,IACI,OAAOsC,KAAK0M,MAAMzO,EAAK6J,MAAMU,aAAa,qBAC5C,MAAOlL,GACL,MAAO,IAJd,IAULY,KAAKiC,SAAW,CACZmE,UAAW,KACX0L,SAAU,KACVN,QAAS,GACTY,QAAS,GACTJ,SAAU,GACVC,OAAQ,GACRJ,SAAU,CACNiJ,MAAO,KACPpH,KAAM,KACNwF,OAAQ,GACR1H,QAAS,KAKjBxR,KAAK8R,SAAW,CACZmM,OAAQ,KACRrH,cAAe,EACf0H,KAAM,IAAIxgB,SAIdkC,KAAK+R,WAAa,CACdkM,QAAQ,GAIZje,KAAKR,QAAU,CACX6L,MAAO,GACPI,QAAS,IAKbzL,KAAK6L,MAAQ,IAAI+Y,GAAQ5kB,KAAK0G,OAAOmF,OAGrC7L,KAAK6L,MAAMC,IAAI,SAAU9L,KAAK0G,QAC9B1G,KAAK6L,MAAMC,IAAI,UAAWtD,IAGtBtL,EAAGC,gBAAgB6C,KAAK4J,QAAW1M,EAAGc,QAAQgC,KAAK4J,OAMvD,GAAI5J,KAAK4J,MAAMlI,KACX1B,KAAK6L,MAAM6G,KAAK,6BAKpB,GAAK1S,KAAK0G,OAAOyH,QAOjB,GAAK3F,EAAQG,QAAQI,IAArB,CAMA,IAAMsS,EAAQrb,KAAK4J,MAAMpH,WAAU,GACnC6Y,EAAM8E,UAAW,EACjBngB,KAAKiC,SAASm9B,SAAW/jB,EAIzB,IAAM5a,EAAOT,KAAK4J,MAAMg1B,QAAQ1xB,cAG5BiW,EAAS,KACTpkB,EAAM,KAGV,OAAQ0B,GACJ,IAAK,MAKD,GAHA0iB,EAASnjB,KAAK4J,MAAMtD,cAAc,UAG9BpJ,EAAGc,QAAQmlB,IAaX,GAXApkB,EAAMqe,GAAS+F,EAAO7Y,aAAa,QACnCtK,KAAK4I,ShBrJlB,SAA0B7J,GAE7B,MAAI,wDAAwD6I,KAAK7I,GACtD0lB,GAAU/W,QAIjB,wDAAwD9F,KAAK7I,GACtD0lB,GAAUhX,MAGd,KgB0IyB4xB,CAAiBtgC,EAAI2N,YAGrC1M,KAAKiC,SAASmE,UAAYpG,KAAK4J,MAC/B5J,KAAK4J,MAAQuZ,EAGbnjB,KAAKiC,SAASmE,UAAUrB,UAAY,GAGhChG,EAAIugC,OAAOtiC,OAAQ,CACnB,IAAMuiC,EAAS,CAAC,IAAK,QAEjBA,EAAOr5B,SAASnH,EAAIygC,aAAa9/B,IAAI,eACrCM,KAAK0G,OAAOyZ,UAAW,GAEvBof,EAAOr5B,SAASnH,EAAIygC,aAAa9/B,IAAI,WACrCM,KAAK0G,OAAOoa,KAAK7C,QAAS,GAK1Bje,KAAK2d,WACL3d,KAAK0G,OAAOmC,YAAc02B,EAAOr5B,SAASnH,EAAIygC,aAAa9/B,IAAI,gBAC/DM,KAAK0G,OAAO+sB,GAAK10B,EAAIygC,aAAa9/B,IAAI,OAEtCM,KAAK0G,OAAOmC,aAAc,QAKlC7I,KAAK4I,SAAW5I,KAAK4J,MAAMU,aAAatK,KAAK0G,OAAO1D,WAAWic,MAAMrW,UAGrE5I,KAAK4J,MAAMpE,gBAAgBxF,KAAK0G,OAAO1D,WAAWic,MAAMrW,UAI5D,GAAI1L,EAAGmC,MAAMW,KAAK4I,YAAcpM,OAAOS,KAAKwnB,IAAWve,SAASlG,KAAK4I,UAEjE,YADA5I,KAAK6L,MAAM4G,MAAM,kCAKrBzS,KAAKS,KAAOikB,GAAMhc,MAElB,MAEJ,IAAK,QACL,IAAK,QACD1I,KAAKS,KAAOA,EACZT,KAAK4I,SAAW6b,GAAUta,MAGtBnK,KAAK4J,MAAMwiB,aAAa,iBACxBpsB,KAAK0G,OAAOm4B,aAAc,GAE1B7+B,KAAK4J,MAAMwiB,aAAa,cACxBpsB,KAAK0G,OAAOyZ,UAAW,IAEvBngB,KAAK4J,MAAMwiB,aAAa,gBAAkBpsB,KAAK4J,MAAMwiB,aAAa,yBAClEpsB,KAAK0G,OAAOmC,aAAc,GAE1B7I,KAAK4J,MAAMwiB,aAAa,WACxBpsB,KAAK0G,OAAOuQ,OAAQ,GAEpBjX,KAAK4J,MAAMwiB,aAAa,UACxBpsB,KAAK0G,OAAOoa,KAAK7C,QAAS,GAG9B,MAEJ,QAEI,YADAje,KAAK6L,MAAM4G,MAAM,kCAKzBzS,KAAKT,UAAYiJ,EAAQG,MAAM3I,KAAKS,KAAMT,KAAK4I,SAAU5I,KAAK0G,OAAOmC,aAGhE7I,KAAKT,UAAUwJ,KAKpB/I,KAAKU,eAAiB,GAGtBV,KAAK0W,UAAY,IAAIoT,GAAU9pB,MAG/BA,KAAKsL,QAAU,IAAI2C,GAAQjO,MAG3BA,KAAK4J,MAAMlI,KAAO1B,KAGb9C,EAAGc,QAAQgC,KAAKiC,SAASmE,aAC1BpG,KAAKiC,SAASmE,UAAY1C,EAAc,OACxC1B,EAAKhC,KAAK4J,MAAO5J,KAAKiC,SAASmE,YAInC4C,GAAG2f,aAAa9nB,KAAKb,MACrBgJ,GAAG4f,kCAAkC/nB,KAAKb,MAG1C4J,GAAM6T,MAAM5c,KAAKb,MAGbA,KAAK0G,OAAOmF,OACZjL,EAAGC,KAAKb,KAAMA,KAAKiC,SAASmE,UAAWpG,KAAK0G,OAAOpG,OAAOiT,KAAK,KAAM,SAAAnV,GACjE2B,EAAK8L,MAAMC,IAAX,UAAA5M,OAAyBd,EAAMqC,UAMnCT,KAAK2J,SAAY3J,KAAK0c,UAAY1c,KAAKT,UAAUyJ,KACjDA,GAAG6f,MAAMhoB,KAAKb,MAGlB2gB,GAAKlD,MAAM5c,KAAKb,MAGhBA,KAAK0W,UAAUtQ,YAGfpG,KAAK0W,UAAUwK,SAGflhB,KAAK+R,WAAa,IAAIuU,GAAWtmB,MAG7BA,KAAK0G,OAAOod,IAAI3V,UAChBnO,KAAK8jB,IAAM,IAAI0R,GAAIx1B,OAGvBA,KAAK4nB,YAAc,IAAI+T,GAAY37B,MAG/BA,KAAK0G,OAAOyZ,UACZngB,KAAKmL,OAITnL,KAAK2pB,aAAe,GAjEhB3pB,KAAK6L,MAAM4G,MAAM,iCA7GjBzS,KAAK6L,MAAM4G,MAAM,iCAPjBzS,KAAK6L,MAAM4G,MAAM,yCAZjBzS,KAAK6L,MAAM4G,MAAM,qFAuOrB,OAAKvV,EAAGQ,SAASsC,KAAK4J,MAAMuB,MAKrBnL,KAAK4J,MAAMuB,OAJP,qCAWNnL,KAAK+jB,SAAY7mB,EAAGQ,SAASsC,KAAK4J,MAAMqB,QAI7CjL,KAAK4J,MAAMqB,2CAmCJ/O,IAEQgB,EAAGO,QAAQvB,GAASA,GAAS8D,KAAK+jB,SAG7C/jB,KAAKmL,OAELnL,KAAKiL,uCAQLjL,KAAK2J,SACL3J,KAAKiL,QACLjL,KAAKyR,WACEvU,EAAGQ,SAASsC,KAAK4J,MAAMqnB,OAC9BjxB,KAAK4J,MAAMqnB,yCAQfjxB,KAAK6K,YAAc,iCAOhBgD,GACH7N,KAAK6K,YAAc7K,KAAK6K,aAAe3N,EAAGG,OAAOwQ,GAAYA,EAAW7N,KAAK0G,OAAOmH,0CAOhFA,GACJ7N,KAAK6K,YAAc7K,KAAK6K,aAAe3N,EAAGG,OAAOwQ,GAAYA,EAAW7N,KAAK0G,OAAOmH,iDAgIzEyG,GACX,IAAMnC,EAASnS,KAAK4J,MAAMqN,MAAQ,EAAIjX,KAAKmS,OAC3CnS,KAAKmS,OAASA,GAAUjV,EAAGG,OAAOiX,GAAQA,EAAO,0CAOtCA,GACXtU,KAAK2qB,gBAAgBrW,0CAwRVpY,GACX4V,GAAS7R,OAAOY,KAAKb,KAAM9D,GAAO,qCAoG9BsM,EAAQc,SACRtJ,KAAK4J,MAAM61B,wEAQJx/B,GAEX,GAAID,KAAKT,UAAUyJ,KAAOhJ,KAAKurB,QAAS,CAEpC,IAAMmU,EAAW35B,EAAS/F,KAAKiC,SAASmE,UAAWpG,KAAK0G,OAAOC,WAAW6Z,cAGpE9a,OAA0B,IAAXzF,OAAyBE,GAAaF,EAGrD0/B,EAASl6B,EAAYzF,KAAKiC,SAASmE,UAAWpG,KAAK0G,OAAOC,WAAW6Z,aAAc9a,GAQzF,GALIi6B,GAAU3/B,KAAK0G,OAAO6E,SAASrF,SAAS,cAAgBhJ,EAAGmC,MAAMW,KAAK0G,OAAOmL,WAC7EtG,GAASyP,WAAWna,KAAKb,MAAM,GAI/B2/B,IAAWD,EAAU,CACrB,IAAME,EAAYD,EAAS,iBAAmB,gBAC9Ct+B,EAAaR,KAAKb,KAAMA,KAAK4J,MAAOg2B,GAGxC,OAAQD,EAGZ,OAAO,6BAQRvhC,EAAO0B,GACNc,EAAGC,KAAKb,KAAMA,KAAKiC,SAASmE,UAAWhI,EAAO0B,gCAQ7C1B,EAAO0B,GACRiB,EAAKF,KAAKb,KAAMA,KAAKiC,SAASmE,UAAWhI,EAAO0B,+BAQhD1B,EAAO0B,GACPgB,EAAId,KAAKiC,SAASmE,UAAWhI,EAAO0B,mCAUhCA,GAAwB,IAAAkW,EAAAhW,KAAd6/B,EAAc3/B,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,IAAAA,UAAA,GAC5B,GAAKF,KAAK8oB,MAAV,CAIA,IAAMuD,EAAO,WAETzoB,SAASiM,KAAK3I,MAAM6e,SAAW,GAG/B/P,EAAKiJ,MAAQ,KAGT4gB,GACIrjC,OAAOS,KAAK+Y,EAAK/T,UAAUjF,SAE3B+G,EAAciS,EAAK/T,SAASuP,QAAQrG,MACpCpH,EAAciS,EAAK/T,SAAS6P,UAC5B/N,EAAciS,EAAK/T,SAASsJ,UAC5BxH,EAAciS,EAAK/T,SAASC,SAG5B8T,EAAK/T,SAASuP,QAAQrG,KAAO,KAC7B6K,EAAK/T,SAAS6P,SAAW,KACzBkE,EAAK/T,SAASsJ,SAAW,KACzByK,EAAK/T,SAASC,QAAU,MAIxBhF,EAAGQ,SAASoC,IACZA,MnCj8Bb,WACCE,MAAQA,KAAKU,iBACbV,KAAKU,eAAeF,QAAQ,SAAAwL,GAAQ,IACxBhO,EAAqCgO,EAArChO,QAASyC,EAA4BuL,EAA5BvL,KAAMX,EAAsBkM,EAAtBlM,SAAUN,EAAYwM,EAAZxM,QACjCxB,EAAQ4B,oBAAoBa,EAAMX,EAAUN,KAGhDQ,KAAKU,eAAiB,KmC87BEG,KAAKmV,GAGrB5R,EAAe4R,EAAK/T,SAASm9B,SAAUppB,EAAK/T,SAASmE,WAGrD/E,EAAaR,KAAKmV,EAAMA,EAAK/T,SAASm9B,SAAU,aAAa,GAGzDliC,EAAGQ,SAASoC,IACZA,EAASe,KAAKmV,EAAK/T,SAASm9B,UAIhCppB,EAAK8S,OAAQ,EAGb1hB,WAAW,WACP4O,EAAK/T,SAAW,KAChB+T,EAAKpM,MAAQ,MACd,OAKX5J,KAAKixB,OAGDjxB,KAAK2J,SAEL6f,aAAaxpB,KAAKypB,OAAOxF,SAGzBjb,GAAG2J,qBAAqB9R,KAAKb,MAAM,GAGnCqsB,KACOrsB,KAAK2d,WAEZsX,cAAcj1B,KAAKypB,OAAOyL,WAC1BD,cAAcj1B,KAAKypB,OAAO1F,SAGP,OAAf/jB,KAAKif,OAAkB/hB,EAAGQ,SAASsC,KAAKif,MAAMkb,UAC9Cn6B,KAAKif,MAAMkb,UAIf9N,KACOrsB,KAAK2a,UAGO,OAAf3a,KAAKif,OACLjf,KAAKif,MAAM6gB,SAAS5vB,KAAKmc,GAI7BjlB,WAAWilB,EAAM,wCAQhB5rB,GACL,OAAO+H,EAAQgB,KAAK3I,KAAKb,KAAMS,mCA5yB/B,OAAOpE,QAAQ2D,KAAK4I,WAAa6b,GAAUta,uCAI3C,OAAO9N,QAAQ2D,KAAK2d,WAAa3d,KAAK2a,2CAItC,OAAOte,QAAQ2D,KAAK4I,WAAa6b,GAAU/W,yCAI3C,OAAOrR,QAAQ2D,KAAK4I,WAAa6b,GAAUhX,uCAI3C,OAAOpR,QAAQ2D,KAAKS,OAASikB,GAAMhc,uCAInC,OAAOrM,QAAQ2D,KAAKS,OAASikB,GAAMjc,uCA8BnC,OAAOpM,QAAQ2D,KAAK8oB,QAAU9oB,KAAK8K,SAAW9K,KAAKwrB,sCAOnD,OAAOnvB,QAAQ2D,KAAK4J,MAAMkB,wCAO1B,OAAOzO,QAAQ2D,KAAK8K,QAA+B,IAArB9K,KAAK6K,2CAOnC,OAAOxO,QAAQ2D,KAAK4J,MAAM4hB,yCAyDdtvB,GAEZ,GAAK8D,KAAKsS,SAAV,CAKA,IAAMytB,EAAe7iC,EAAGG,OAAOnB,IAAUA,EAAQ,EAGjD8D,KAAK4J,MAAMiB,YAAck1B,EAAepnB,KAAKvE,IAAIlY,EAAO8D,KAAKsS,UAAY,EAGzEtS,KAAK6L,MAAMC,IAAX,cAAA5M,OAA6Bc,KAAK6K,YAAlC,8BAOA,OAAOvN,OAAO0C,KAAK4J,MAAMiB,8CAMd,IACH6M,EAAa1X,KAAK4J,MAAlB8N,SAGR,OAAIxa,EAAGG,OAAOqa,GACHA,EAMPA,GAAYA,EAAS1a,QAAUgD,KAAKsS,SAAW,EACxCoF,EAAS4K,IAAI,GAAKtiB,KAAKsS,SAG3B,kCAOP,OAAOjW,QAAQ2D,KAAK4J,MAAM6O,0CAQ1B,IAAMunB,EAAenpB,WAAW7W,KAAK0G,OAAO4L,UAGtC2tB,GAAgBjgC,KAAK4J,OAAS,IAAI0I,SAClCA,EAAYpV,EAAGG,OAAO4iC,IAAiBA,IAAiBC,EAAAA,EAAeD,EAAJ,EAGzE,OAAOD,GAAgB1tB,+BAOhBlP,GACP,IAAI+O,EAAS/O,EAITlG,EAAGM,OAAO2U,KACVA,EAAS7U,OAAO6U,IAIfjV,EAAGG,OAAO8U,KACXA,EAASnS,KAAKsL,QAAQ5L,IAAI,WAIzBxC,EAAGG,OAAO8U,KACRA,EAAWnS,KAAK0G,OAAhByL,QAIHA,EAlBQ,IAmBRA,EAnBQ,GAsBRA,EArBQ,IAsBRA,EAtBQ,GA0BZnS,KAAK0G,OAAOyL,OAASA,EAGrBnS,KAAK4J,MAAMuI,OAASA,GAGfjV,EAAGmC,MAAM+D,IAAUpD,KAAKiX,OAAS9E,EAAS,IAC3CnS,KAAKiX,OAAQ,mBAQjB,OAAO3Z,OAAO0C,KAAK4J,MAAMuI,kDAoBJ/L,GACjBlJ,EAAGc,QAAQoI,KACXpG,KAAK0G,OAAOma,oBAAsBza,EAClC4C,GAAG4f,kCAAkC/nB,KAAKb,mCAQxC4R,GACN,IAAI3R,EAAS2R,EAGR1U,EAAGO,QAAQwC,KACZA,EAASD,KAAKsL,QAAQ5L,IAAI,UAIzBxC,EAAGO,QAAQwC,KACZA,EAASD,KAAK0G,OAAOuQ,OAIzBjX,KAAK0G,OAAOuQ,MAAQhX,EAGpBD,KAAK4J,MAAMqN,MAAQhX,kBAOnB,OAAO5D,QAAQ2D,KAAK4J,MAAMqN,wCAQ1B,OAAKjX,KAAK2J,YAIN3J,KAAKurB,UAMLlvB,QAAQ2D,KAAK4J,MAAMu2B,cACnB9jC,QAAQ2D,KAAK4J,MAAMw2B,8BACnB/jC,QAAQ2D,KAAK4J,MAAMy2B,aAAergC,KAAK4J,MAAMy2B,YAAYrjC,sCAQvDd,GACN,IAAImP,EAAQ,KAERnO,EAAGG,OAAOnB,KACVmP,EAAQnP,GAGPgB,EAAGG,OAAOgO,KACXA,EAAQrL,KAAKsL,QAAQ5L,IAAI,UAGxBxC,EAAGG,OAAOgO,KACXA,EAAQrL,KAAK0G,OAAO2E,MAAM0V,UAI1B1V,EAAQ,KACRA,EAAQ,IAERA,EAAQ,IACRA,EAAQ,GAGPrL,KAAK0G,OAAO2E,MAAM7L,QAAQ0G,SAASmF,IAMxCrL,KAAK0G,OAAO2E,MAAM0V,SAAW1V,EAG7BrL,KAAK4J,MAAM8qB,aAAerpB,GARtBrL,KAAK6L,MAAM6G,KAAX,sBAAAxT,OAAsCmM,EAAtC,sBAeJ,OAAO/N,OAAO0C,KAAK4J,MAAM8qB,4CAQjBx4B,GACR,IAAMwK,EAAS1G,KAAK0G,OAAO+E,QACrBjM,EAAUQ,KAAKR,QAAQiM,QAE7B,GAAKjM,EAAQxC,OAAb,CAIA,IAAIyO,EAAU,EACTvO,EAAGmC,MAAMnD,IAAUoB,OAAOpB,GAC3B8D,KAAKsL,QAAQ5L,IAAI,WACjBgH,EAAOqa,SACPra,EAAO0S,SACTnS,KAAK/J,EAAGG,QAEV,IAAKmC,EAAQ0G,SAASuF,GAAU,CAC5B,IAAMrI,E7B1rBX,SAAiBxF,EAAOwF,GAC3B,OAAKlG,EAAGU,MAAMA,IAAWA,EAAMZ,OAIxBY,EAAMwO,OAAO,SAACk0B,EAAMC,GAAP,OAAiB5nB,KAAKkU,IAAI0T,EAAOn9B,GAASuV,KAAKkU,IAAIyT,EAAOl9B,GAASm9B,EAAOD,IAHnF,K6BwrBWE,CAAQhhC,EAASiM,GAC/BzL,KAAK6L,MAAM6G,KAAX,+BAAAxT,OAA+CuM,EAA/C,YAAAvM,OAAiEkE,EAAjE,aACAqI,EAAUrI,EAIdsD,EAAOqa,SAAWtV,EAGlBzL,KAAK4J,MAAM6B,QAAUA,EAGrBzL,KAAKsL,QAAQX,IAAI,CAAEc,QAAAA,qBAOnB,OAAOzL,KAAK4J,MAAM6B,mCAQbvP,GACL,IAAM+D,EAAS/C,EAAGO,QAAQvB,GAASA,EAAQ8D,KAAK0G,OAAOoa,KAAK7C,OAC5Dje,KAAK0G,OAAOoa,KAAK7C,OAAShe,EAC1BD,KAAK4J,MAAMkX,KAAO7gB,kBAkDlB,OAAO5D,QAAQ2D,KAAK4J,MAAMkX,mCAOnB5kB,GACPmO,GAAOi0B,OAAOz9B,KAAKb,KAAM9D,mBAOzB,OAAO8D,KAAK4J,MAAM2nB,4CAMP,IACHxV,EAAa/b,KAAK0G,OAAO+V,KAAzBV,SAER,OAAO7e,EAAG6B,IAAIgd,GAAYA,EAAW/b,KAAKqK,oCAOnCnO,GACF8D,KAAK0d,QAKV1U,GAAGigB,UAAUpoB,KAAKb,KAAM9D,GAAO,GAAOkU,MAAM,cAJxCpQ,KAAK6L,MAAM6G,KAAK,oDAWpB,OAAK1S,KAAK0d,QAIH1d,KAAK4J,MAAMU,aAAa,UAHpB,oCAUFpO,GACT,IAAM+D,EAAS/C,EAAGO,QAAQvB,GAASA,EAAQ8D,KAAK0G,OAAOyZ,SACvDngB,KAAK0G,OAAOyZ,SAAWlgB,kBAOvB,OAAO5D,QAAQ2D,KAAK0G,OAAOyZ,6CAedjkB,GACb4V,GAASnH,IAAI9J,KAAKb,KAAM9D,GAAO,mBAMhB,IAAAmiB,EACmBre,KAAK8R,SAA/BoI,EADOmE,EACPnE,QAAStD,EADFyH,EACEzH,aACjB,OAAOsD,EAAUtD,GAAgB,wCAGjB1a,GAChB8D,KAAK8R,SAAS0I,SAAWte,EACzB8D,KAAKsL,QAAQX,IAAI,CACbwT,gBAAiBjiB,IAErB4V,GAASoM,YAAYrd,KAAKb,KAAMA,KAAK8R,SAAS0I,0BAI9C,OAAOxa,KAAKsL,QAAQ5L,IAAI,oBAAsBM,KAAK0G,OAAOoL,SAAS0I,wCAQ1Dte,GACT4V,GAAS6M,YAAY9d,KAAKb,KAAM9D,GAAO,mBAOvC,OAAQ4V,GAASyN,gBAAgB1e,KAAKb,OAAS,IAAIma,mCAQ/Cje,GAEJ,GAAKsM,EAAQU,IAAb,CAKA,IAAMjJ,EAAS/C,EAAGO,QAAQvB,GAASA,GAAS8D,KAAKkJ,IAI7ChM,EAAGQ,SAASsC,KAAK4J,MAAMT,4BACvBnJ,KAAK4J,MAAMT,0BAA0BlJ,EAASiJ,GAAaA,IAI3DhM,EAAGQ,SAASsC,KAAK4J,MAAM62B,4BAClBzgC,KAAKkJ,KAAOjJ,EACbD,KAAK4J,MAAM62B,0BACJzgC,KAAKkJ,MAAQjJ,GACpB2D,SAAS88B,yCASjB,OAAKl4B,EAAQU,IAKRhM,EAAGmC,MAAMW,KAAK4J,MAAM+2B,wBAKlB3gC,KAAK4J,QAAUhG,SAASg9B,wBAJpB5gC,KAAK4J,MAAM+2B,yBAA2Bz3B,GALtC,yCAuMEzI,EAAMmI,EAAUi4B,GAC7B,OAAOr4B,EAAQG,MAAMlI,EAAMmI,EAAUi4B,sCAQvB9hC,EAAKqG,GACnB,OAAOmK,GAAWxQ,EAAKqG,iCAQdP,GAAwB,IAAdrF,EAAcU,UAAAlD,OAAA,QAAAmD,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GACzBiC,EAAU,KAUd,OARIjF,EAAGM,OAAOqH,GACV1C,EAAUvF,MAAMwF,KAAKwB,SAASqC,iBAAiBpB,IACxC3H,EAAGa,SAAS8G,GACnB1C,EAAUvF,MAAMwF,KAAKyC,GACd3H,EAAGU,MAAMiH,KAChB1C,EAAU0C,EAAS3B,OAAOhG,EAAGc,UAG7Bd,EAAGmC,MAAM8C,GACF,KAGJA,EAAQwD,IAAI,SAAAm7B,GAAC,OAAI,IAAI7B,EAAK6B,EAAGthC,qBAI5Cy/B,GAAK/e,U5BzpCqB9iB,G4BypCA8iB,G5BxpCfpe,KAAK0M,MAAM1M,KAAKC,UAAU3E,M4BypCrC6hC,GAAK1X,MAAQA","file":"plyr.min.js","sourcesContent":["// ==========================================================================\n// Type checking utils\n// ==========================================================================\n\nconst getConstructor = input => (input !== null && typeof input !== 'undefined' ? input.constructor : null);\nconst instanceOf = (input, constructor) => Boolean(input && constructor && input instanceof constructor);\nconst isNullOrUndefined = input => input === null || typeof input === 'undefined';\nconst isObject = input => getConstructor(input) === Object;\nconst isNumber = input => getConstructor(input) === Number && !Number.isNaN(input);\nconst isString = input => getConstructor(input) === String;\nconst isBoolean = input => getConstructor(input) === Boolean;\nconst isFunction = input => getConstructor(input) === Function;\nconst isArray = input => Array.isArray(input);\nconst isWeakMap = input => instanceOf(input, WeakMap);\nconst isNodeList = input => instanceOf(input, NodeList);\nconst isElement = input => instanceOf(input, Element);\nconst isTextNode = input => getConstructor(input) === Text;\nconst isEvent = input => instanceOf(input, Event);\nconst isKeyboardEvent = input => instanceOf(input, KeyboardEvent);\nconst isCue = input => instanceOf(input, window.TextTrackCue) || instanceOf(input, window.VTTCue);\nconst isTrack = input => instanceOf(input, TextTrack) || (!isNullOrUndefined(input) && isString(input.kind));\n\nconst isEmpty = input =>\n    isNullOrUndefined(input) ||\n    ((isString(input) || isArray(input) || isNodeList(input)) && !input.length) ||\n    (isObject(input) && !Object.keys(input).length);\n\nconst isUrl = input => {\n    // Accept a URL object\n    if (instanceOf(input, window.URL)) {\n        return true;\n    }\n\n    // Must be string from here\n    if (!isString(input)) {\n        return false;\n    }\n\n    // Add the protocol if required\n    let string = input;\n    if (!input.startsWith('http://') || !input.startsWith('https://')) {\n        string = `http://${input}`;\n    }\n\n    try {\n        return !isEmpty(new URL(string).hostname);\n    } catch (e) {\n        return false;\n    }\n};\n\nexport default {\n    nullOrUndefined: isNullOrUndefined,\n    object: isObject,\n    number: isNumber,\n    string: isString,\n    boolean: isBoolean,\n    function: isFunction,\n    array: isArray,\n    weakMap: isWeakMap,\n    nodeList: isNodeList,\n    element: isElement,\n    textNode: isTextNode,\n    event: isEvent,\n    keyboardEvent: isKeyboardEvent,\n    cue: isCue,\n    track: isTrack,\n    url: isUrl,\n    empty: isEmpty,\n};\n","// ==========================================================================\n// Event utils\n// ==========================================================================\n\nimport is from './is';\n\n// Check for passive event listener support\n// https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n// https://www.youtube.com/watch?v=NPM6172J22g\nconst supportsPassiveListeners = (() => {\n    // Test via a getter in the options object to see if the passive property is accessed\n    let supported = false;\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get() {\n                supported = true;\n                return null;\n            },\n        });\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n        // Do nothing\n    }\n\n    return supported;\n})();\n\n// Toggle event listener\nexport function toggleListener(element, event, callback, toggle = false, passive = true, capture = false) {\n    // Bail if no element, event, or callback\n    if (!element || !('addEventListener' in element) || is.empty(event) || !is.function(callback)) {\n        return;\n    }\n\n    // Allow multiple events\n    const events = event.split(' ');\n\n    // Build options\n    // Default to just the capture boolean for browsers with no passive listener support\n    let options = capture;\n\n    // If passive events listeners are supported\n    if (supportsPassiveListeners) {\n        options = {\n            // Whether the listener can be passive (i.e. default never prevented)\n            passive,\n            // Whether the listener is a capturing listener or not\n            capture,\n        };\n    }\n\n    // If a single node is passed, bind the event listener\n    events.forEach(type => {\n        if (this && this.eventListeners && toggle) {\n            // Cache event listener\n            this.eventListeners.push({ element, type, callback, options });\n        }\n\n        element[toggle ? 'addEventListener' : 'removeEventListener'](type, callback, options);\n    });\n}\n\n// Bind event handler\nexport function on(element, events = '', callback, passive = true, capture = false) {\n    toggleListener.call(this, element, events, callback, true, passive, capture);\n}\n\n// Unbind event handler\nexport function off(element, events = '', callback, passive = true, capture = false) {\n    toggleListener.call(this, element, events, callback, false, passive, capture);\n}\n\n// Bind once-only event handler\nexport function once(element, events = '', callback, passive = true, capture = false) {\n    function onceCallback(...args) {\n        off(element, events, onceCallback, passive, capture);\n        callback.apply(this, args);\n    }\n\n    toggleListener.call(this, element, events, onceCallback, true, passive, capture);\n}\n\n// Trigger event\nexport function triggerEvent(element, type = '', bubbles = false, detail = {}) {\n    // Bail if no element\n    if (!is.element(element) || is.empty(type)) {\n        return;\n    }\n\n    // Create and dispatch the event\n    const event = new CustomEvent(type, {\n        bubbles,\n        detail: Object.assign({}, detail, {\n            plyr: this,\n        }),\n    });\n\n    // Dispatch the event\n    try {\n        element.dispatchEvent(event);\n    } catch (err) {\n        throw new Error(`CustomEvent ${event.type}: ${JSON.stringify(event.detail)}`);\n    }\n}\n\n// Unbind all cached event listeners\nexport function unbindListeners() {\n    if (this && this.eventListeners) {\n        this.eventListeners.forEach(item => {\n            const { element, type, callback, options } = item;\n            element.removeEventListener(type, callback, options);\n        });\n\n        this.eventListeners = [];\n    }\n}\n\n// Run method when / if player is ready\nexport function ready() {\n    return new Promise(\n        resolve => (this.ready ? setTimeout(resolve, 0) : on.call(this, this.elements.container, 'ready', resolve)),\n    ).then(() => {});\n}\n","// ==========================================================================\n// Element utils\n// ==========================================================================\n\nimport { toggleListener } from './events';\nimport is from './is';\n\n// Wrap an element\nexport function wrap(elements, wrapper) {\n    // Convert `elements` to an array, if necessary.\n    const targets = elements.length ? elements : [elements];\n\n    // Loops backwards to prevent having to clone the wrapper on the\n    // first element (see `child` below).\n    Array.from(targets)\n        .reverse()\n        .forEach((element, index) => {\n            const child = index > 0 ? wrapper.cloneNode(true) : wrapper;\n\n            // Cache the current parent and sibling.\n            const parent = element.parentNode;\n            const sibling = element.nextSibling;\n\n            // Wrap the element (is automatically removed from its current\n            // parent).\n            child.appendChild(element);\n\n            // If the element had a sibling, insert the wrapper before\n            // the sibling to maintain the HTML structure; otherwise, just\n            // append it to the parent.\n            if (sibling) {\n                parent.insertBefore(child, sibling);\n            } else {\n                parent.appendChild(child);\n            }\n        });\n}\n\n// Set attributes\nexport function setAttributes(element, attributes) {\n    if (!is.element(element) || is.empty(attributes)) {\n        return;\n    }\n\n    // Assume null and undefined attributes should be left out,\n    // Setting them would otherwise convert them to \"null\" and \"undefined\"\n    Object.entries(attributes)\n        .filter(([, value]) => !is.nullOrUndefined(value))\n        .forEach(([key, value]) => element.setAttribute(key, value));\n}\n\n// Create a DocumentFragment\nexport function createElement(type, attributes, text) {\n    // Create a new <element>\n    const element = document.createElement(type);\n\n    // Set all passed attributes\n    if (is.object(attributes)) {\n        setAttributes(element, attributes);\n    }\n\n    // Add text node\n    if (is.string(text)) {\n        element.innerText = text;\n    }\n\n    // Return built element\n    return element;\n}\n\n// Inaert an element after another\nexport function insertAfter(element, target) {\n    if (!is.element(element) || !is.element(target)) {\n        return;\n    }\n\n    target.parentNode.insertBefore(element, target.nextSibling);\n}\n\n// Insert a DocumentFragment\nexport function insertElement(type, parent, attributes, text) {\n    if (!is.element(parent)) {\n        return;\n    }\n\n    parent.appendChild(createElement(type, attributes, text));\n}\n\n// Remove element(s)\nexport function removeElement(element) {\n    if (is.nodeList(element) || is.array(element)) {\n        Array.from(element).forEach(removeElement);\n        return;\n    }\n\n    if (!is.element(element) || !is.element(element.parentNode)) {\n        return;\n    }\n\n    element.parentNode.removeChild(element);\n}\n\n// Remove all child elements\nexport function emptyElement(element) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    let { length } = element.childNodes;\n\n    while (length > 0) {\n        element.removeChild(element.lastChild);\n        length -= 1;\n    }\n}\n\n// Replace element\nexport function replaceElement(newChild, oldChild) {\n    if (!is.element(oldChild) || !is.element(oldChild.parentNode) || !is.element(newChild)) {\n        return null;\n    }\n\n    oldChild.parentNode.replaceChild(newChild, oldChild);\n\n    return newChild;\n}\n\n// Get an attribute object from a string selector\nexport function getAttributesFromSelector(sel, existingAttributes) {\n    // For example:\n    // '.test' to { class: 'test' }\n    // '#test' to { id: 'test' }\n    // '[data-test=\"test\"]' to { 'data-test': 'test' }\n\n    if (!is.string(sel) || is.empty(sel)) {\n        return {};\n    }\n\n    const attributes = {};\n    const existing = existingAttributes;\n\n    sel.split(',').forEach(s => {\n        // Remove whitespace\n        const selector = s.trim();\n        const className = selector.replace('.', '');\n        const stripped = selector.replace(/[[\\]]/g, '');\n\n        // Get the parts and value\n        const parts = stripped.split('=');\n        const key = parts[0];\n        const value = parts.length > 1 ? parts[1].replace(/[\"']/g, '') : '';\n\n        // Get the first character\n        const start = selector.charAt(0);\n\n        switch (start) {\n            case '.':\n                // Add to existing classname\n                if (is.object(existing) && is.string(existing.class)) {\n                    existing.class += ` ${className}`;\n                }\n\n                attributes.class = className;\n                break;\n\n            case '#':\n                // ID selector\n                attributes.id = selector.replace('#', '');\n                break;\n\n            case '[':\n                // Attribute selector\n                attributes[key] = value;\n\n                break;\n\n            default:\n                break;\n        }\n    });\n\n    return attributes;\n}\n\n// Toggle hidden\nexport function toggleHidden(element, hidden) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    let hide = hidden;\n\n    if (!is.boolean(hide)) {\n        hide = !element.hidden;\n    }\n\n    if (hide) {\n        element.setAttribute('hidden', '');\n    } else {\n        element.removeAttribute('hidden');\n    }\n}\n\n// Mirror Element.classList.toggle, with IE compatibility for \"force\" argument\nexport function toggleClass(element, className, force) {\n    if (is.nodeList(element)) {\n        return Array.from(element).map(e => toggleClass(e, className, force));\n    }\n\n    if (is.element(element)) {\n        let method = 'toggle';\n        if (typeof force !== 'undefined') {\n            method = force ? 'add' : 'remove';\n        }\n\n        element.classList[method](className);\n        return element.classList.contains(className);\n    }\n\n    return false;\n}\n\n// Has class name\nexport function hasClass(element, className) {\n    return is.element(element) && element.classList.contains(className);\n}\n\n// Element matches selector\nexport function matches(element, selector) {\n    const prototype = { Element };\n\n    function match() {\n        return Array.from(document.querySelectorAll(selector)).includes(this);\n    }\n\n    const matches =\n        prototype.matches ||\n        prototype.webkitMatchesSelector ||\n        prototype.mozMatchesSelector ||\n        prototype.msMatchesSelector ||\n        match;\n\n    return matches.call(element, selector);\n}\n\n// Find all elements\nexport function getElements(selector) {\n    return this.elements.container.querySelectorAll(selector);\n}\n\n// Find a single element\nexport function getElement(selector) {\n    return this.elements.container.querySelector(selector);\n}\n\n// Trap focus inside container\nexport function trapFocus(element = null, toggle = false) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    const focusable = getElements.call(this, 'button:not(:disabled), input:not(:disabled), [tabindex]');\n    const first = focusable[0];\n    const last = focusable[focusable.length - 1];\n\n    const trap = event => {\n        // Bail if not tab key or not fullscreen\n        if (event.key !== 'Tab' || event.keyCode !== 9) {\n            return;\n        }\n\n        // Get the current focused element\n        const focused = document.activeElement;\n\n        if (focused === last && !event.shiftKey) {\n            // Move focus to first element that can be tabbed if Shift isn't used\n            first.focus();\n            event.preventDefault();\n        } else if (focused === first && event.shiftKey) {\n            // Move focus to last element that can be tabbed if Shift is used\n            last.focus();\n            event.preventDefault();\n        }\n    };\n\n    toggleListener.call(this, this.elements.container, 'keydown', trap, toggle, false);\n}\n\n// Set focus and tab focus class\nexport function setFocus(element = null, tabFocus = false) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    // Set regular focus\n    element.focus();\n\n    // If we want to mimic keyboard focus via tab\n    if (tabFocus) {\n        toggleClass(element, this.config.classNames.tabFocus);\n    }\n}\n","// ==========================================================================\n// Animation utils\n// ==========================================================================\n\nimport { toggleHidden } from './elements';\nimport is from './is';\n\nexport const transitionEndEvent = (() => {\n    const element = document.createElement('span');\n\n    const events = {\n        WebkitTransition: 'webkitTransitionEnd',\n        MozTransition: 'transitionend',\n        OTransition: 'oTransitionEnd otransitionend',\n        transition: 'transitionend',\n    };\n\n    const type = Object.keys(events).find(event => element.style[event] !== undefined);\n\n    return is.string(type) ? events[type] : false;\n})();\n\n// Force repaint of element\nexport function repaint(element) {\n    setTimeout(() => {\n        try {\n            toggleHidden(element, true);\n            element.offsetHeight; // eslint-disable-line\n            toggleHidden(element, false);\n        } catch (e) {\n            // Do nothing\n        }\n    }, 0);\n}\n","// ==========================================================================\n// Browser sniffing\n// Unfortunately, due to mixed support, UA sniffing is required\n// ==========================================================================\n\nconst browser = {\n    isIE: /* @cc_on!@ */ false || !!document.documentMode,\n    isWebkit: 'WebkitAppearance' in document.documentElement.style && !/Edge/.test(navigator.userAgent),\n    isIPhone: /(iPhone|iPod)/gi.test(navigator.platform),\n    isIos: /(iPad|iPhone|iPod)/gi.test(navigator.platform),\n};\n\nexport default browser;\n","// ==========================================================================\n// Plyr support checks\n// ==========================================================================\n\nimport { transitionEndEvent } from './utils/animation';\nimport browser from './utils/browser';\nimport { createElement } from './utils/elements';\nimport is from './utils/is';\n\n// Default codecs for checking mimetype support\nconst defaultCodecs = {\n    'audio/ogg': 'vorbis',\n    'audio/wav': '1',\n    'video/webm': 'vp8, vorbis',\n    'video/mp4': 'avc1.42E01E, mp4a.40.2',\n    'video/ogg': 'theora',\n};\n\n// Check for feature support\nconst support = {\n    // Basic support\n    audio: 'canPlayType' in document.createElement('audio'),\n    video: 'canPlayType' in document.createElement('video'),\n\n    // Check for support\n    // Basic functionality vs full UI\n    check(type, provider, playsinline) {\n        const canPlayInline = browser.isIPhone && playsinline && support.playsinline;\n        const api = support[type] || provider !== 'html5';\n        const ui = api && support.rangeInput && (type !== 'video' || !browser.isIPhone || canPlayInline);\n\n        return {\n            api,\n            ui,\n        };\n    },\n\n    // Picture-in-picture support\n    // Safari & Chrome only currently\n    pip: (() => {\n        if (browser.isIPhone) {\n            return false;\n        }\n\n        // Safari\n        // https://developer.apple.com/documentation/webkitjs/adding_picture_in_picture_to_your_safari_media_controls\n        if (is.function(createElement('video').webkitSetPresentationMode)) {\n            return true;\n        }\n\n        // Chrome\n        // https://developers.google.com/web/updates/2018/10/watch-video-using-picture-in-picture\n        if (document.pictureInPictureEnabled && !createElement('video').disablePictureInPicture) {\n            return true;\n        }\n\n        return false;\n    })(),\n\n    // Airplay support\n    // Safari only currently\n    airplay: is.function(window.WebKitPlaybackTargetAvailabilityEvent),\n\n    // Inline playback support\n    // https://webkit.org/blog/6784/new-video-policies-for-ios/\n    playsinline: 'playsInline' in document.createElement('video'),\n\n    // Check for mime type support against a player instance\n    // Credits: http://diveintohtml5.info/everything.html\n    // Related: http://www.leanbackplayer.com/test/h5mt.html\n    mime(inputType) {\n        const [mediaType] = inputType.split('/');\n        if (!this.isHTML5 || mediaType !== this.type) {\n            return false;\n        }\n\n        let type;\n        if (inputType && inputType.includes('codecs=')) {\n            // Use input directly\n            type = inputType;\n        } else if (inputType === 'audio/mpeg') {\n            // Skip codec\n            type = 'audio/mpeg;';\n        } else if (inputType in defaultCodecs) {\n            // Use codec\n            type = `${inputType}; codecs=\"${defaultCodecs[inputType]}\"`;\n        }\n\n        try {\n            return Boolean(type && this.media.canPlayType(type).replace(/no/, ''));\n        } catch (err) {\n            return false;\n        }\n    },\n\n    // Check for textTracks support\n    textTracks: 'textTracks' in document.createElement('video'),\n\n    // <input type=\"range\"> Sliders\n    rangeInput: (() => {\n        const range = document.createElement('input');\n        range.type = 'range';\n        return range.type === 'range';\n    })(),\n\n    // Touch\n    // NOTE: Remember a device can be mouse + touch enabled so we check on first touch event\n    touch: 'ontouchstart' in document.documentElement,\n\n    // Detect transitions support\n    transitions: transitionEndEvent !== false,\n\n    // Reduced motion iOS & MacOS setting\n    // https://webkit.org/blog/7551/responsive-design-for-motion/\n    reducedMotion: 'matchMedia' in window && window.matchMedia('(prefers-reduced-motion)').matches,\n};\n\nexport default support;\n","// ==========================================================================\n// Plyr HTML5 helpers\n// ==========================================================================\n\nimport controls from './controls';\nimport is from './utils/is';\nimport support from './support';\nimport { removeElement } from './utils/elements';\nimport { triggerEvent } from './utils/events';\n\nconst html5 = {\n    getSources() {\n        if (!this.isHTML5) {\n            return [];\n        }\n\n        const sources = Array.from(this.media.querySelectorAll('source'));\n\n        // Filter out unsupported sources\n        return sources.filter(source => support.mime.call(this, source.getAttribute('type')));\n    },\n\n    // Get quality levels\n    getQualityOptions() {\n        // Get sizes from <source> elements\n        return html5.getSources\n            .call(this)\n            .map(source => Number(source.getAttribute('size')))\n            .filter(Boolean);\n    },\n\n    extend() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        const player = this;\n\n        // Quality\n        Object.defineProperty(player.media, 'quality', {\n            configurable: true,\n            get() {\n                // Get sources\n                const sources = html5.getSources.call(player);\n                const source = sources.find(source => source.getAttribute('src') === player.source);\n\n                // Return size, if match is found\n                return source && Number(source.getAttribute('size'));\n            },\n            set(input) {\n                // Get sources\n                const sources = html5.getSources.call(player);\n\n                // Get first match for requested size\n                const source = sources.find(source => Number(source.getAttribute('size')) === input);\n\n                // No matching source found\n                if (!source) {\n                    return;\n                }\n\n                // Get current state\n                const { currentTime, paused, preload, readyState } = player.media;\n\n                player.pause();\n\n                setTimeout(() => {\n                    // Set new source\n                    player.media.src = source.getAttribute('src');\n\n                    // Prevent loading if preload=\"none\" and the current source isn't loaded (#1044)\n                    if (preload !== 'none' || readyState) {\n                        // Restore time\n                        player.once('loadedmetadata', () => {\n                            if (player.currentTime === 0) {\n                                player.currentTime = currentTime;\n                            }\n\n                            // Resume playing\n                            if (!paused) {\n                                player.play();\n                            }\n                        });\n\n                        // Load new source\n                        player.media.load();\n                    }\n\n                    // restore speed\n                    const speed = player.storage.get('speed');\n                    if (is.number(speed)) {\n                        player.speed = speed;\n                        controls.updateSetting.call(player, 'speed', speed);\n                    }\n\n                    // Trigger change event\n                    triggerEvent.call(player, player.media, 'qualitychange', false, {\n                        quality: input,\n                    });\n                }, 0);\n            },\n        });\n    },\n\n    // Cancel current network requests\n    // See https://github.com/sampotts/plyr/issues/174\n    cancelRequests() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        const sources = html5.getSources.call(this);\n        if (sources && sources.length > 0) {\n            // set source to blank string to avoid memory leak\n            sources.forEach((source) => {\n                source.setAttribute('src', '');\n            });\n            this.media.load();\n        }\n        // Remove child sources\n        removeElement(sources);\n\n        // Set blank video src attribute\n        // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\n        // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\n        this.media.setAttribute('src', this.config.blankVideo);\n\n        // Load the new empty source\n        // This will cancel existing requests\n        // See https://github.com/sampotts/plyr/issues/174\n        this.media.load();\n\n        // Debugging\n        this.debug.log('Cancelled network requests');\n    },\n};\n\nexport default html5;\n","// ==========================================================================\n// Array utils\n// ==========================================================================\n\nimport is from './is';\n\n// Remove duplicates in an array\nexport function dedupe(array) {\n    if (!is.array(array)) {\n        return array;\n    }\n\n    return array.filter((item, index) => array.indexOf(item) === index);\n}\n\n// Get the closest value in an array\nexport function closest(array, value) {\n    if (!is.array(array) || !array.length) {\n        return null;\n    }\n\n    return array.reduce((prev, curr) => (Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev));\n}\n","// ==========================================================================\n// Object utils\n// ==========================================================================\n\nimport is from './is';\n\n// Clone nested objects\nexport function cloneDeep(object) {\n    return JSON.parse(JSON.stringify(object));\n}\n\n// Get a nested value in an object\nexport function getDeep(object, path) {\n    return path.split('.').reduce((obj, key) => obj && obj[key], object);\n}\n\n// Deep extend destination object with N more objects\nexport function extend(target = {}, ...sources) {\n    if (!sources.length) {\n        return target;\n    }\n\n    const source = sources.shift();\n\n    if (!is.object(source)) {\n        return target;\n    }\n\n    Object.keys(source).forEach(key => {\n        if (is.object(source[key])) {\n            if (!Object.keys(target).includes(key)) {\n                Object.assign(target, { [key]: {} });\n            }\n\n            extend(target[key], source[key]);\n        } else {\n            Object.assign(target, { [key]: source[key] });\n        }\n    });\n\n    return extend(target, ...sources);\n}\n","// ==========================================================================\n// String utils\n// ==========================================================================\n\nimport is from './is';\n\n// Generate a random ID\nexport function generateId(prefix) {\n    return `${prefix}-${Math.floor(Math.random() * 10000)}`;\n}\n\n// Format string\nexport function format(input, ...args) {\n    if (is.empty(input)) {\n        return input;\n    }\n\n    return input.toString().replace(/{(\\d+)}/g, (match, i) => args[i].toString());\n}\n\n// Get percentage\nexport function getPercentage(current, max) {\n    if (current === 0 || max === 0 || Number.isNaN(current) || Number.isNaN(max)) {\n        return 0;\n    }\n\n    return ((current / max) * 100).toFixed(2);\n}\n\n// Replace all occurances of a string in a string\nexport function replaceAll(input = '', find = '', replace = '') {\n    return input.replace(\n        new RegExp(find.toString().replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1'), 'g'),\n        replace.toString(),\n    );\n}\n\n// Convert to title case\nexport function toTitleCase(input = '') {\n    return input.toString().replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase());\n}\n\n// Convert string to pascalCase\nexport function toPascalCase(input = '') {\n    let string = input.toString();\n\n    // Convert kebab case\n    string = replaceAll(string, '-', ' ');\n\n    // Convert snake case\n    string = replaceAll(string, '_', ' ');\n\n    // Convert to title case\n    string = toTitleCase(string);\n\n    // Convert to pascal case\n    return replaceAll(string, ' ', '');\n}\n\n// Convert string to pascalCase\nexport function toCamelCase(input = '') {\n    let string = input.toString();\n\n    // Convert to pascal case\n    string = toPascalCase(string);\n\n    // Convert first character to lowercase\n    return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\n// Remove HTML from a string\nexport function stripHTML(source) {\n    const fragment = document.createDocumentFragment();\n    const element = document.createElement('div');\n    fragment.appendChild(element);\n    element.innerHTML = source;\n    return fragment.firstChild.innerText;\n}\n\n// Like outerHTML, but also works for DocumentFragment\nexport function getHTML(element) {\n    const wrapper = document.createElement('div');\n    wrapper.appendChild(element);\n    return wrapper.innerHTML;\n}\n","// ==========================================================================\n// Plyr internationalization\n// ==========================================================================\n\nimport is from './is';\nimport { getDeep } from './objects';\nimport { replaceAll } from './strings';\n\n// Skip i18n for abbreviations and brand names\nconst resources = {\n    pip: 'PIP',\n    airplay: 'AirPlay',\n    html5: 'HTML5',\n    vimeo: 'Vimeo',\n    youtube: 'YouTube',\n};\n\nconst i18n = {\n    get(key = '', config = {}) {\n        if (is.empty(key) || is.empty(config)) {\n            return '';\n        }\n\n        let string = getDeep(config.i18n, key);\n\n        if (is.empty(string)) {\n            if (Object.keys(resources).includes(key)) {\n                return resources[key];\n            }\n\n            return '';\n        }\n\n        const replace = {\n            '{seektime}': config.seekTime,\n            '{title}': config.title,\n        };\n\n        Object.entries(replace).forEach(([key, value]) => {\n            string = replaceAll(string, key, value);\n        });\n\n        return string;\n    },\n};\n\nexport default i18n;\n","// ==========================================================================\n// Plyr storage\n// ==========================================================================\n\nimport is from './utils/is';\nimport { extend } from './utils/objects';\n\nclass Storage {\n    constructor(player) {\n        this.enabled = player.config.storage.enabled;\n        this.key = player.config.storage.key;\n    }\n\n    // Check for actual support (see if we can use it)\n    static get supported() {\n        try {\n            if (!('localStorage' in window)) {\n                return false;\n            }\n\n            const test = '___test';\n\n            // Try to use it (it might be disabled, e.g. user is in private mode)\n            // see: https://github.com/sampotts/plyr/issues/131\n            window.localStorage.setItem(test, test);\n            window.localStorage.removeItem(test);\n\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    get(key) {\n        if (!Storage.supported || !this.enabled) {\n            return null;\n        }\n\n        const store = window.localStorage.getItem(this.key);\n\n        if (is.empty(store)) {\n            return null;\n        }\n\n        const json = JSON.parse(store);\n\n        return is.string(key) && key.length ? json[key] : json;\n    }\n\n    set(object) {\n        // Bail if we don't have localStorage support or it's disabled\n        if (!Storage.supported || !this.enabled) {\n            return;\n        }\n\n        // Can only store objectst\n        if (!is.object(object)) {\n            return;\n        }\n\n        // Get current storage\n        let storage = this.get();\n\n        // Default to empty object\n        if (is.empty(storage)) {\n            storage = {};\n        }\n\n        // Update the working copy of the values\n        extend(storage, object);\n\n        // Update storage\n        window.localStorage.setItem(this.key, JSON.stringify(storage));\n    }\n}\n\nexport default Storage;\n","// ==========================================================================\n// Fetch wrapper\n// Using XHR to avoid issues with older browsers\n// ==========================================================================\n\nexport default function fetch(url, responseType = 'text') {\n    return new Promise((resolve, reject) => {\n        try {\n            const request = new XMLHttpRequest();\n\n            // Check for CORS support\n            if (!('withCredentials' in request)) {\n                return;\n            }\n\n            request.addEventListener('load', () => {\n                if (responseType === 'text') {\n                    try {\n                        resolve(JSON.parse(request.responseText));\n                    } catch (e) {\n                        resolve(request.responseText);\n                    }\n                } else {\n                    resolve(request.response);\n                }\n            });\n\n            request.addEventListener('error', () => {\n                throw new Error(request.status);\n            });\n\n            request.open('GET', url, true);\n\n            // Set the required response type\n            request.responseType = responseType;\n\n            request.send();\n        } catch (e) {\n            reject(e);\n        }\n    });\n}\n","// ==========================================================================\n// Sprite loader\n// ==========================================================================\n\nimport Storage from '../storage';\nimport fetch from './fetch';\nimport is from './is';\n\n// Load an external SVG sprite\nexport default function loadSprite(url, id) {\n    if (!is.string(url)) {\n        return;\n    }\n\n    const prefix = 'cache';\n    const hasId = is.string(id);\n    let isCached = false;\n\n    const exists = () => document.getElementById(id) !== null;\n\n    const update = (container, data) => {\n        container.innerHTML = data;\n\n        // Check again incase of race condition\n        if (hasId && exists()) {\n            return;\n        }\n\n        // Inject the SVG to the body\n        document.body.insertAdjacentElement('afterbegin', container);\n    };\n\n    // Only load once if ID set\n    if (!hasId || !exists()) {\n        const useStorage = Storage.supported;\n\n        // Create container\n        const container = document.createElement('div');\n        container.setAttribute('hidden', '');\n\n        if (hasId) {\n            container.setAttribute('id', id);\n        }\n\n        // Check in cache\n        if (useStorage) {\n            const cached = window.localStorage.getItem(`${prefix}-${id}`);\n            isCached = cached !== null;\n\n            if (isCached) {\n                const data = JSON.parse(cached);\n                update(container, data.content);\n            }\n        }\n\n        // Get the sprite\n        fetch(url)\n            .then(result => {\n                if (is.empty(result)) {\n                    return;\n                }\n\n                if (useStorage) {\n                    window.localStorage.setItem(\n                        `${prefix}-${id}`,\n                        JSON.stringify({\n                            content: result,\n                        }),\n                    );\n                }\n\n                update(container, result);\n            })\n            .catch(() => {});\n    }\n}\n","// ==========================================================================\n// Time utils\n// ==========================================================================\n\nimport is from './is';\n\n// Time helpers\nexport const getHours = value => parseInt((value / 60 / 60) % 60, 10);\nexport const getMinutes = value => parseInt((value / 60) % 60, 10);\nexport const getSeconds = value => parseInt(value % 60, 10);\n\n// Format time to UI friendly string\nexport function formatTime(time = 0, displayHours = false, inverted = false) {\n    // Bail if the value isn't a number\n    if (!is.number(time)) {\n        return formatTime(null, displayHours, inverted);\n    }\n\n    // Format time component to add leading zero\n    const format = value => `0${value}`.slice(-2);\n\n    // Breakdown to hours, mins, secs\n    let hours = getHours(time);\n    const mins = getMinutes(time);\n    const secs = getSeconds(time);\n\n    // Do we need to display hours?\n    if (displayHours || hours > 0) {\n        hours = `${hours}:`;\n    } else {\n        hours = '';\n    }\n\n    // Render\n    return `${inverted && time > 0 ? '-' : ''}${hours}${format(mins)}:${format(secs)}`;\n}\n","// ==========================================================================\n// Plyr controls\n// TODO: This needs to be split into smaller files and cleaned up\n// ==========================================================================\n\nimport captions from './captions';\nimport html5 from './html5';\nimport support from './support';\nimport { repaint, transitionEndEvent } from './utils/animation';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport { createElement, emptyElement, getAttributesFromSelector, getElement, getElements, hasClass, matches, removeElement, setAttributes, setFocus, toggleClass, toggleHidden } from './utils/elements';\nimport { off, on } from './utils/events';\nimport i18n from './utils/i18n';\nimport is from './utils/is';\nimport loadSprite from './utils/loadSprite';\nimport { extend } from './utils/objects';\nimport { getPercentage, replaceAll, toCamelCase, toTitleCase } from './utils/strings';\nimport { formatTime, getHours } from './utils/time';\n\n// TODO: Don't export a massive object - break down and create class\nconst controls = {\n    // Get icon URL\n    getIconUrl() {\n        const url = new URL(this.config.iconUrl, window.location);\n        const cors = url.host !== window.location.host || (browser.isIE && !window.svg4everybody);\n\n        return {\n            url: this.config.iconUrl,\n            cors,\n        };\n    },\n\n    // Find the UI controls\n    findElements() {\n        try {\n            this.elements.controls = getElement.call(this, this.config.selectors.controls.wrapper);\n\n            // Buttons\n            this.elements.buttons = {\n                play: getElements.call(this, this.config.selectors.buttons.play),\n                pause: getElement.call(this, this.config.selectors.buttons.pause),\n                restart: getElement.call(this, this.config.selectors.buttons.restart),\n                rewind: getElement.call(this, this.config.selectors.buttons.rewind),\n                fastForward: getElement.call(this, this.config.selectors.buttons.fastForward),\n                mute: getElement.call(this, this.config.selectors.buttons.mute),\n                pip: getElement.call(this, this.config.selectors.buttons.pip),\n                airplay: getElement.call(this, this.config.selectors.buttons.airplay),\n                settings: getElement.call(this, this.config.selectors.buttons.settings),\n                captions: getElement.call(this, this.config.selectors.buttons.captions),\n                fullscreen: getElement.call(this, this.config.selectors.buttons.fullscreen),\n            };\n\n            // Progress\n            this.elements.progress = getElement.call(this, this.config.selectors.progress);\n\n            // Inputs\n            this.elements.inputs = {\n                seek: getElement.call(this, this.config.selectors.inputs.seek),\n                volume: getElement.call(this, this.config.selectors.inputs.volume),\n            };\n\n            // Display\n            this.elements.display = {\n                buffer: getElement.call(this, this.config.selectors.display.buffer),\n                currentTime: getElement.call(this, this.config.selectors.display.currentTime),\n                duration: getElement.call(this, this.config.selectors.display.duration),\n            };\n\n            // Seek tooltip\n            if (is.element(this.elements.progress)) {\n                this.elements.display.seekTooltip = this.elements.progress.querySelector(\n                    `.${this.config.classNames.tooltip}`,\n                );\n            }\n\n            return true;\n        } catch (error) {\n            // Log it\n            this.debug.warn('It looks like there is a problem with your custom controls HTML', error);\n\n            // Restore native video controls\n            this.toggleNativeControls(true);\n\n            return false;\n        }\n    },\n\n    // Create <svg> icon\n    createIcon(type, attributes) {\n        const namespace = 'http://www.w3.org/2000/svg';\n        const iconUrl = controls.getIconUrl.call(this);\n        const iconPath = `${!iconUrl.cors ? iconUrl.url : ''}#${this.config.iconPrefix}`;\n\n        // Create <svg>\n        const icon = document.createElementNS(namespace, 'svg');\n        setAttributes(\n            icon,\n            extend(attributes, {\n                role: 'presentation',\n                focusable: 'false',\n            }),\n        );\n\n        // Create the <use> to reference sprite\n        const use = document.createElementNS(namespace, 'use');\n        const path = `${iconPath}-${type}`;\n\n        // Set `href` attributes\n        // https://github.com/sampotts/plyr/issues/460\n        // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:href\n        if ('href' in use) {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\n        }\n\n        // Always set the older attribute even though it's \"deprecated\" (it'll be around for ages)\n        use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', path);\n\n        // Add <use> to <svg>\n        icon.appendChild(use);\n\n        return icon;\n    },\n\n    // Create hidden text label\n    createLabel(key, attr = {}) {\n        const text = i18n.get(key, this.config);\n\n        const attributes = Object.assign({}, attr, {\n            class: [attr.class, this.config.classNames.hidden].filter(Boolean).join(' '),\n        });\n\n        return createElement('span', attributes, text);\n    },\n\n    // Create a badge\n    createBadge(text) {\n        if (is.empty(text)) {\n            return null;\n        }\n\n        const badge = createElement('span', {\n            class: this.config.classNames.menu.value,\n        });\n\n        badge.appendChild(\n            createElement(\n                'span',\n                {\n                    class: this.config.classNames.menu.badge,\n                },\n                text,\n            ),\n        );\n\n        return badge;\n    },\n\n    // Create a <button>\n    createButton(buttonType, attr) {\n        const attributes = Object.assign({}, attr);\n        let type = toCamelCase(buttonType);\n\n        const props = {\n            element: 'button',\n            toggle: false,\n            label: null,\n            icon: null,\n            labelPressed: null,\n            iconPressed: null,\n        };\n\n        ['element', 'icon', 'label'].forEach(key => {\n            if (Object.keys(attributes).includes(key)) {\n                props[key] = attributes[key];\n                delete attributes[key];\n            }\n        });\n\n        // Default to 'button' type to prevent form submission\n        if (props.element === 'button' && !Object.keys(attributes).includes('type')) {\n            attributes.type = 'button';\n        }\n\n        // Set class name\n        if (Object.keys(attributes).includes('class')) {\n            if (!attributes.class.includes(this.config.classNames.control)) {\n                attributes.class += ` ${this.config.classNames.control}`;\n            }\n        } else {\n            attributes.class = this.config.classNames.control;\n        }\n\n        // Large play button\n        switch (buttonType) {\n            case 'play':\n                props.toggle = true;\n                props.label = 'play';\n                props.labelPressed = 'pause';\n                props.icon = 'play';\n                props.iconPressed = 'pause';\n                break;\n\n            case 'mute':\n                props.toggle = true;\n                props.label = 'mute';\n                props.labelPressed = 'unmute';\n                props.icon = 'volume';\n                props.iconPressed = 'muted';\n                break;\n\n            case 'captions':\n                props.toggle = true;\n                props.label = 'enableCaptions';\n                props.labelPressed = 'disableCaptions';\n                props.icon = 'captions-off';\n                props.iconPressed = 'captions-on';\n                break;\n\n            case 'zoom':\n                props.toggle = true;\n                props.label = 'enterZoom';\n                props.labelPressed = 'exitZoom';\n                props.icon = 'enter-zoom';\n                props.iconPressed = 'exit-zoom';\n                break;\n\n            case 'fullscreen':\n                props.toggle = true;\n                props.label = 'enterFullscreen';\n                props.labelPressed = 'exitFullscreen';\n                props.icon = 'enter-fullscreen';\n                props.iconPressed = 'exit-fullscreen';\n                break;\n\n            case 'play-large':\n                attributes.class += ` ${this.config.classNames.control}--overlaid`;\n                type = 'play';\n                props.label = 'play';\n                props.icon = 'play';\n                break;\n\n            case 'add-lecture-note':\n                type = 'add-lecture-note';\n                props.label = '筆記標註';\n                props.icon = 'add-lecture-note';\n\n            default:\n                if (is.empty(props.label)) {\n                    props.label = type;\n                }\n                if (is.empty(props.icon)) {\n                    props.icon = buttonType;\n                }\n        }\n\n        const button = createElement(props.element);\n\n        // Setup toggle icon and labels\n        if (props.toggle) {\n            // Icon\n            button.appendChild(\n                controls.createIcon.call(this, props.iconPressed, {\n                    class: 'icon--pressed',\n                }),\n            );\n            button.appendChild(\n                controls.createIcon.call(this, props.icon, {\n                    class: 'icon--not-pressed',\n                }),\n            );\n\n            // Label/Tooltip\n            button.appendChild(\n                controls.createLabel.call(this, props.labelPressed, {\n                    class: 'label--pressed',\n                }),\n            );\n            button.appendChild(\n                controls.createLabel.call(this, props.label, {\n                    class: 'label--not-pressed',\n                }),\n            );\n        } else {\n            button.appendChild(controls.createIcon.call(this, props.icon));\n            button.appendChild(controls.createLabel.call(this, props.label));\n        }\n\n        // Merge and set attributes\n        extend(attributes, getAttributesFromSelector(this.config.selectors.buttons[type], attributes));\n        setAttributes(button, attributes);\n\n        // We have multiple play buttons\n        if (type === 'play') {\n            if (!is.array(this.elements.buttons[type])) {\n                this.elements.buttons[type] = [];\n            }\n\n            this.elements.buttons[type].push(button);\n        } else {\n            this.elements.buttons[type] = button;\n        }\n\n        return button;\n    },\n\n    // Create an <input type='range'>\n    createRange(type, attributes) {\n        // Seek input\n        const input = createElement(\n            'input',\n            extend(\n                getAttributesFromSelector(this.config.selectors.inputs[type]),\n                {\n                    type: 'range',\n                    min: 0,\n                    max: 100,\n                    step: 0.01,\n                    value: 0,\n                    autocomplete: 'off',\n                    // A11y fixes for https://github.com/sampotts/plyr/issues/905\n                    role: 'slider',\n                    'aria-label': i18n.get(type, this.config),\n                    'aria-valuemin': 0,\n                    'aria-valuemax': 100,\n                    'aria-valuenow': 0,\n                },\n                attributes,\n            ),\n        );\n\n        this.elements.inputs[type] = input;\n\n        // Set the fill for webkit now\n        controls.updateRangeFill.call(this, input);\n\n        return input;\n    },\n\n    // Create a <progress>\n    createProgress(type, attributes) {\n        const progress = createElement(\n            'progress',\n            extend(\n                getAttributesFromSelector(this.config.selectors.display[type]),\n                {\n                    min: 0,\n                    max: 100,\n                    value: 0,\n                    role: 'presentation',\n                    'aria-hidden': true,\n                },\n                attributes,\n            ),\n        );\n\n        // Create the label inside\n        if (type !== 'volume') {\n            progress.appendChild(createElement('span', null, '0'));\n\n            const suffixKey = {\n                played: 'played',\n                buffer: 'buffered',\n            }[type];\n            const suffix = suffixKey ? i18n.get(suffixKey, this.config) : '';\n\n            progress.innerText = `% ${suffix.toLowerCase()}`;\n        }\n\n        this.elements.display[type] = progress;\n\n        return progress;\n    },\n\n    // Create time display\n    createTime(type) {\n        const attributes = getAttributesFromSelector(this.config.selectors.display[type]);\n\n        const container = createElement(\n            'div',\n            extend(attributes, {\n                class: `${this.config.classNames.display.time} ${attributes.class ? attributes.class : ''}`.trim(),\n                'aria-label': i18n.get(type, this.config),\n            }),\n            '00:00',\n        );\n\n        // Reference for updates\n        this.elements.display[type] = container;\n\n        return container;\n    },\n\n    // Bind keyboard shortcuts for a menu item\n    // We have to bind to keyup otherwise Firefox triggers a click when a keydown event handler shifts focus\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n    bindMenuItemShortcuts(menuItem, type) {\n        // Navigate through menus via arrow keys and space\n        on(\n            menuItem,\n            'keydown keyup',\n            event => {\n                // We only care about space and ⬆️ ⬇️️ ➡️\n                if (![32, 38, 39, 40].includes(event.which)) {\n                    return;\n                }\n\n                // Prevent play / seek\n                event.preventDefault();\n                event.stopPropagation();\n\n                // We're just here to prevent the keydown bubbling\n                if (event.type === 'keydown') {\n                    return;\n                }\n\n                const isRadioButton = matches(menuItem, '[role=\"menuitemradio\"]');\n\n                // Show the respective menu\n                if (!isRadioButton && [32, 39].includes(event.which)) {\n                    controls.showMenuPanel.call(this, type, true);\n                } else {\n                    let target;\n\n                    if (event.which !== 32) {\n                        if (event.which === 40 || (isRadioButton && event.which === 39)) {\n                            target = menuItem.nextElementSibling;\n\n                            if (!is.element(target)) {\n                                target = menuItem.parentNode.firstElementChild;\n                            }\n                        } else {\n                            target = menuItem.previousElementSibling;\n\n                            if (!is.element(target)) {\n                                target = menuItem.parentNode.lastElementChild;\n                            }\n                        }\n\n                        setFocus.call(this, target, true);\n                    }\n                }\n            },\n            false,\n        );\n\n        // Enter will fire a `click` event but we still need to manage focus\n        // So we bind to keyup which fires after and set focus here\n        on(menuItem, 'keyup', event => {\n            if (event.which !== 13) {\n                return;\n            }\n\n            controls.focusFirstMenuItem.call(this, null, true);\n        });\n    },\n\n    // Create a settings menu item\n    createMenuItem({ value, list, type, title, badge = null, checked = false }) {\n        const attributes = getAttributesFromSelector(this.config.selectors.inputs[type]);\n\n        const menuItem = createElement(\n            'button',\n            extend(attributes, {\n                type: 'button',\n                role: 'menuitemradio',\n                class: `${this.config.classNames.control} ${attributes.class ? attributes.class : ''}`.trim(),\n                'aria-checked': checked,\n                value,\n            }),\n        );\n\n        const flex = createElement('span');\n\n        // We have to set as HTML incase of special characters\n        flex.innerHTML = title;\n\n        if (is.element(badge)) {\n            flex.appendChild(badge);\n        }\n\n        menuItem.appendChild(flex);\n\n        // Replicate radio button behaviour\n        Object.defineProperty(menuItem, 'checked', {\n            enumerable: true,\n            get() {\n                return menuItem.getAttribute('aria-checked') === 'true';\n            },\n            set(checked) {\n                // Ensure exclusivity\n                if (checked) {\n                    Array.from(menuItem.parentNode.children)\n                        .filter(node => matches(node, '[role=\"menuitemradio\"]'))\n                        .forEach(node => node.setAttribute('aria-checked', 'false'));\n                }\n\n                menuItem.setAttribute('aria-checked', checked ? 'true' : 'false');\n            },\n        });\n\n        this.listeners.bind(\n            menuItem,\n            'click keyup',\n            event => {\n                if (is.keyboardEvent(event) && event.which !== 32) {\n                    return;\n                }\n\n                event.preventDefault();\n                event.stopPropagation();\n\n                menuItem.checked = true;\n\n                switch (type) {\n                    case 'language':\n                        this.currentTrack = Number(value);\n                        break;\n\n                    case 'quality':\n                        this.quality = value;\n                        break;\n\n                    case 'speed':\n                        this.speed = parseFloat(value);\n                        break;\n\n                    default:\n                        break;\n                }\n\n                controls.showMenuPanel.call(this, 'home', is.keyboardEvent(event));\n            },\n            type,\n            false,\n        );\n\n        controls.bindMenuItemShortcuts.call(this, menuItem, type);\n\n        list.appendChild(menuItem);\n    },\n\n    // Format a time for display\n    formatTime(time = 0, inverted = false) {\n        // Bail if the value isn't a number\n        if (!is.number(time)) {\n            return time;\n        }\n\n        // Always display hours if duration is over an hour\n        const forceHours = getHours(this.duration) > 0;\n\n        return formatTime(time, forceHours, inverted);\n    },\n\n    // Update the displayed time\n    updateTimeDisplay(target = null, time = 0, inverted = false) {\n        // Bail if there's no element to display or the value isn't a number\n        if (!is.element(target) || !is.number(time)) {\n            return;\n        }\n\n        // eslint-disable-next-line no-param-reassign\n        target.innerText = controls.formatTime(time, inverted);\n    },\n\n    // Update volume UI and storage\n    updateVolume() {\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Update range\n        if (is.element(this.elements.inputs.volume)) {\n            controls.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume);\n        }\n\n        // Update mute state\n        if (is.element(this.elements.buttons.mute)) {\n            this.elements.buttons.mute.pressed = this.muted || this.volume === 0;\n        }\n    },\n\n    // Update seek value and lower fill\n    setRange(target, value = 0) {\n        if (!is.element(target)) {\n            return;\n        }\n\n        // eslint-disable-next-line\n        target.value = value;\n\n        // Webkit range fill\n        controls.updateRangeFill.call(this, target);\n    },\n\n    // Update <progress> elements\n    updateProgress(event) {\n        if (!this.supported.ui || !is.event(event)) {\n            return;\n        }\n\n        let value = 0;\n\n        const setProgress = (target, input) => {\n            const value = is.number(input) ? input : 0;\n            const progress = is.element(target) ? target : this.elements.display.buffer;\n\n            // Update value and label\n            if (is.element(progress)) {\n                progress.value = value;\n\n                // Update text label inside\n                const label = progress.getElementsByTagName('span')[0];\n                if (is.element(label)) {\n                    label.childNodes[0].nodeValue = value;\n                }\n            }\n        };\n\n        if (event) {\n            switch (event.type) {\n                // Video playing\n                case 'timeupdate':\n                case 'seeking':\n                case 'seeked':\n                    value = getPercentage(this.currentTime, this.duration);\n\n                    // Set seek range value only if it's a 'natural' time event\n                    if (event.type === 'timeupdate') {\n                        controls.setRange.call(this, this.elements.inputs.seek, value);\n                    }\n\n                    break;\n\n                // Check buffer status\n                case 'playing':\n                case 'progress':\n                    setProgress(this.elements.display.buffer, this.buffered * 100);\n\n                    break;\n\n                default:\n                    break;\n            }\n        }\n    },\n\n    // Webkit polyfill for lower fill range\n    updateRangeFill(target) {\n        // Get range from event if event passed\n        const range = is.event(target) ? target.target : target;\n\n        // Needs to be a valid <input type='range'>\n        if (!is.element(range) || range.getAttribute('type') !== 'range') {\n            return;\n        }\n\n        // Set aria values for https://github.com/sampotts/plyr/issues/905\n        if (matches(range, this.config.selectors.inputs.seek)) {\n            range.setAttribute('aria-valuenow', this.currentTime);\n            const currentTime = controls.formatTime(this.currentTime);\n            const duration = controls.formatTime(this.duration);\n            const format = i18n.get('seekLabel', this.config);\n            range.setAttribute(\n                'aria-valuetext',\n                format.replace('{currentTime}', currentTime).replace('{duration}', duration),\n            );\n        } else if (matches(range, this.config.selectors.inputs.volume)) {\n            const percent = range.value * 100;\n            range.setAttribute('aria-valuenow', percent);\n            range.setAttribute('aria-valuetext', `${percent.toFixed(1)}%`);\n        } else {\n            range.setAttribute('aria-valuenow', range.value);\n        }\n\n        // WebKit only\n        if (!browser.isWebkit) {\n            return;\n        }\n\n        // Set CSS custom property\n        range.style.setProperty('--value', `${range.value / range.max * 100}%`);\n    },\n\n    // Update hover tooltip for seeking\n    updateSeekTooltip(event) {\n        // Bail if setting not true\n        if (\n            !this.config.tooltips.seek ||\n            !is.element(this.elements.inputs.seek) ||\n            !is.element(this.elements.display.seekTooltip) ||\n            this.duration === 0\n        ) {\n            return;\n        }\n\n        // Calculate percentage\n        let percent = 0;\n        const clientRect = this.elements.progress.getBoundingClientRect();\n        const visible = `${this.config.classNames.tooltip}--visible`;\n\n        const toggle = toggle => {\n            toggleClass(this.elements.display.seekTooltip, visible, toggle);\n        };\n\n        // Hide on touch\n        if (this.touch) {\n            toggle(false);\n            return;\n        }\n\n        // Determine percentage, if already visible\n        if (is.event(event)) {\n            percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n        } else if (hasClass(this.elements.display.seekTooltip, visible)) {\n            percent = parseFloat(this.elements.display.seekTooltip.style.left, 10);\n        } else {\n            return;\n        }\n\n        // Set bounds\n        if (percent < 0) {\n            percent = 0;\n        } else if (percent > 100) {\n            percent = 100;\n        }\n\n        // Display the time a click would seek to\n        controls.updateTimeDisplay.call(this, this.elements.display.seekTooltip, this.duration / 100 * percent);\n\n        // Set position\n        this.elements.display.seekTooltip.style.left = `${percent}%`;\n\n        // Show/hide the tooltip\n        // If the event is a moues in/out and percentage is inside bounds\n        if (is.event(event) && ['mouseenter', 'mouseleave'].includes(event.type)) {\n            toggle(event.type === 'mouseenter');\n        }\n    },\n\n    // Handle time change event\n    timeUpdate(event) {\n        // Only invert if only one time element is displayed and used for both duration and currentTime\n        const invert = !is.element(this.elements.display.duration) && this.config.invertTime;\n\n        // Duration\n        controls.updateTimeDisplay.call(\n            this,\n            this.elements.display.currentTime,\n            invert ? this.duration - this.currentTime : this.currentTime,\n            invert,\n        );\n\n        // Ignore updates while seeking\n        if (event && event.type === 'timeupdate' && this.media.seeking) {\n            return;\n        }\n\n        // Playing progress\n        controls.updateProgress.call(this, event);\n    },\n\n    // Show the duration on metadataloaded or durationchange events\n    durationUpdate() {\n        // Bail if no UI or durationchange event triggered after playing/seek when invertTime is false\n        if (!this.supported.ui || (!this.config.invertTime && this.currentTime)) {\n            return;\n        }\n\n        // If duration is the 2**32 (shaka), Infinity (HLS), DASH-IF (Number.MAX_SAFE_INTEGER || Number.MAX_VALUE) indicating live we hide the currentTime and progressbar.\n        // https://github.com/video-dev/hls.js/blob/5820d29d3c4c8a46e8b75f1e3afa3e68c1a9a2db/src/controller/buffer-controller.js#L415\n        // https://github.com/google/shaka-player/blob/4d889054631f4e1cf0fbd80ddd2b71887c02e232/lib/media/streaming_engine.js#L1062\n        // https://github.com/Dash-Industry-Forum/dash.js/blob/69859f51b969645b234666800d4cb596d89c602d/src/dash/models/DashManifestModel.js#L338\n        if (this.duration >= 2 ** 32) {\n            toggleHidden(this.elements.display.currentTime, true);\n            toggleHidden(this.elements.progress, true);\n            return;\n        }\n\n        // Update ARIA values\n        if (is.element(this.elements.inputs.seek)) {\n            this.elements.inputs.seek.setAttribute('aria-valuemax', this.duration);\n        }\n\n        // If there's a spot to display duration\n        const hasDuration = is.element(this.elements.display.duration);\n\n        // If there's only one time display, display duration there\n        if (!hasDuration && this.config.displayDuration && this.paused) {\n            controls.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration);\n        }\n\n        // If there's a duration element, update content\n        if (hasDuration) {\n            controls.updateTimeDisplay.call(this, this.elements.display.duration, this.duration);\n        }\n\n        // Update the tooltip (if visible)\n        controls.updateSeekTooltip.call(this);\n    },\n\n    // Hide/show a tab\n    toggleMenuButton(setting, toggle) {\n        toggleHidden(this.elements.settings.buttons[setting], !toggle);\n    },\n\n    // Update the selected setting\n    updateSetting(setting, container, input) {\n        const pane = this.elements.settings.panels[setting];\n        let value = null;\n        let list = container;\n\n        if (setting === 'captions') {\n            value = this.currentTrack;\n        } else if (setting === 'caption-position') {\n            value = this.setCaptionsPositionMenu;\n        } else {\n            value = !is.empty(input) ? input : this[setting];\n\n            // Get default\n            if (is.empty(value)) {\n                value = this.config[setting].default;\n            }\n\n            // Unsupported value\n            if (!is.empty(this.options[setting]) && !this.options[setting].includes(value)) {\n                this.debug.warn(`Unsupported value of '${value}' for ${setting}`);\n                return;\n            }\n\n            // Disabled value\n            // We generate resolution option from real contents.\n            // Therefore, bypasss checking on ‘quality’ config.\n            if (setting !== 'quality' && !this.config[setting].options.includes(value)) {\n                this.debug.warn(`Disabled value of '${value}' for ${setting}`);\n                return;\n            }\n        }\n\n        // Get the list if we need to\n        if (!is.element(list)) {\n            list = pane && pane.querySelector('[role=\"menu\"]');\n        }\n\n        // If there's no list it means it's not been rendered...\n        if (!is.element(list)) {\n            return;\n        }\n\n        // Update the label\n        const label = this.elements.settings.buttons[setting].querySelector(`.${this.config.classNames.menu.value}`);\n        label.innerHTML = controls.getLabel.call(this, setting, value);\n\n        // Find the radio option and check it\n        const target = list && list.querySelector(`[value=\"${value}\"]`);\n\n        if (is.element(target)) {\n            target.checked = true;\n        }\n    },\n\n    // Translate a value into a nice label\n    getLabel(setting, value) {\n        switch (setting) {\n            case 'speed':\n                return value === 1 ? i18n.get('normal', this.config) : `${value}&times;`;\n\n            case 'quality':\n                if (is.number(value)) {\n                    const label = i18n.get(`qualityLabel.${value}`, this.config);\n\n                    if (!label.length) {\n                        return `${value}p`;\n                    }\n\n                    return label;\n                }\n\n                return toTitleCase(value);\n\n            case 'captions':\n                return captions.getLabel.call(this);\n\n            case 'caption-position':\n                return i18n.get(`captionPositionLabel.${value}`, this.config)\n\n            default:\n                return null;\n        }\n    },\n\n    // Set the quality menu\n    setQualityMenu(options) {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.quality)) {\n            return;\n        }\n\n        const type = 'quality';\n        const list = this.elements.settings.panels.quality.querySelector('[role=\"menu\"]');\n\n        // Set options if passed and filter based on uniqueness and config\n        if (is.array(options)) {\n            this.options.quality = dedupe(options).filter(quality => this.config.quality.options.includes(quality));\n        }\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.quality) && this.options.quality.length > 1;\n        controls.toggleMenuButton.call(this, type, toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Get the badge HTML for HD, 4K etc\n        const getBadge = quality => {\n            const label = i18n.get(`qualityBadge.${quality}`, this.config);\n\n            if (!label.length) {\n                return null;\n            }\n\n            return controls.createBadge.call(this, label);\n        };\n\n        // Sort options by the config and then render options\n        this.options.quality\n            .sort((a, b) => {\n                const sorting = this.config.quality.options;\n                return sorting.indexOf(a) > sorting.indexOf(b) ? 1 : -1;\n            })\n            .forEach(quality => {\n                controls.createMenuItem.call(this, {\n                    value: quality,\n                    list,\n                    type,\n                    title: controls.getLabel.call(this, 'quality', quality),\n                    badge: getBadge(quality),\n                });\n            });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set the looping options\n    /* setLoopMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.loop)) {\n            return;\n        }\n\n        const options = ['start', 'end', 'all', 'reset'];\n        const list = this.elements.settings.panels.loop.querySelector('[role=\"menu\"]');\n\n        // Show the pane and tab\n        toggleHidden(this.elements.settings.buttons.loop, false);\n        toggleHidden(this.elements.settings.panels.loop, false);\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.loop.options);\n        controls.toggleMenuButton.call(this, 'loop', toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        options.forEach(option => {\n            const item = createElement('li');\n\n            const button = createElement(\n                'button',\n                extend(getAttributesFromSelector(this.config.selectors.buttons.loop), {\n                    type: 'button',\n                    class: this.config.classNames.control,\n                    'data-plyr-loop-action': option,\n                }),\n                i18n.get(option, this.config)\n            );\n\n            if (['start', 'end'].includes(option)) {\n                const badge = controls.createBadge.call(this, '00:00');\n                button.appendChild(badge);\n            }\n\n            item.appendChild(button);\n            list.appendChild(item);\n        });\n    }, */\n\n    // Get current selected caption language\n    // TODO: rework this to user the getter in the API?\n\n    // Set a list of available captions languages\n    setCaptionsMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.captions)) {\n            return;\n        }\n\n        // TODO: Captions or language? Currently it's mixed\n        const type = 'captions';\n        const list = this.elements.settings.panels.captions.querySelector('[role=\"menu\"]');\n        const tracks = captions.getTracks.call(this);\n        const toggle = Boolean(tracks.length);\n\n        // Toggle the pane and tab\n        controls.toggleMenuButton.call(this, type, toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If there's no captions, bail\n        if (!toggle) {\n            return;\n        }\n\n        // Generate options data\n        const options = tracks.map((track, value) => ({\n            value,\n            checked: this.captions.toggled && this.currentTrack === value,\n            title: captions.getLabel.call(this, track),\n            badge: track.language && controls.createBadge.call(this, track.language.toUpperCase()),\n            list,\n            type: 'language',\n        }));\n\n        // Add the \"Disabled\" option to turn off captions\n        options.unshift({\n            value: -1,\n            checked: !this.captions.toggled,\n            title: i18n.get('disabled', this.config),\n            list,\n            type: 'language',\n        });\n\n        // Generate options\n        options.forEach(controls.createMenuItem.bind(this));\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    setCaptionsPositionMenu() {\n        if (!this.config.controls.includes('caption-position')) {\n            return;\n        }\n\n        if (!is.element(this.elements.settings.panes['caption-position'])) {\n            return;\n        }\n\n        const type = 'caption-position';\n\n        controls.toggleTab.call(this, type, true);\n\n        // Get the list to populate\n        const list = this.elements.settings.panes['caption-position'].querySelector('ul');\n\n        // Empty the menu\n        emptyElement(list);\n\n        const positions = ['top', 'bottom'];\n\n        // Create items\n        positions.forEach(position => {\n            controls.createMenuItem.call(this, {\n                value: position,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'caption-position', position),\n            });\n        });\n        controls.updateSetting.call(this, type, list);\n    },\n\n    setSpeedMenu(options) {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.speed)) {\n            return;\n        }\n\n        const type = 'speed';\n        const list = this.elements.settings.panels.speed.querySelector('[role=\"menu\"]');\n\n        // Set the speed options\n        if (is.array(options)) {\n            this.options.speed = options;\n        } else if (this.isHTML5 || this.isVimeo) {\n            this.options.speed = [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\n        }\n\n        // Set options if passed and filter based on config\n        this.options.speed = this.options.speed.filter(speed => this.config.speed.options.includes(speed));\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.speed) && this.options.speed.length > 1;\n        controls.toggleMenuButton.call(this, type, toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Create items\n        this.options.speed.forEach(speed => {\n            controls.createMenuItem.call(this, {\n                value: speed,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'speed', speed),\n            });\n        });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Check if we need to hide/show the settings menu\n    checkMenu() {\n        const { buttons } = this.elements.settings;\n        const visible = !is.empty(buttons) && Object.values(buttons).some(button => !button.hidden);\n\n        toggleHidden(this.elements.settings.menu, !visible);\n    },\n\n    // Focus the first menu item in a given (or visible) menu\n    focusFirstMenuItem(pane, tabFocus = false) {\n        if (this.elements.settings.popup.hidden) {\n            return;\n        }\n\n        let target = pane;\n\n        if (!is.element(target)) {\n            target = Object.values(this.elements.settings.panels).find(pane => !pane.hidden);\n        }\n\n        const firstItem = target.querySelector('[role^=\"menuitem\"]');\n\n        setFocus.call(this, firstItem, tabFocus);\n    },\n\n    // Show/hide menu\n    toggleMenu(input) {\n        const { popup } = this.elements.settings;\n        const button = this.elements.buttons.settings;\n\n        // Menu and button are required\n        if (!is.element(popup) || !is.element(button)) {\n            return;\n        }\n\n        // True toggle by default\n        const { hidden } = popup;\n        let show = hidden;\n\n        if (is.boolean(input)) {\n            show = input;\n        } else if (is.keyboardEvent(input) && input.which === 27) {\n            show = false;\n        } else if (is.event(input)) {\n            const isMenuItem = popup.contains(input.target);\n\n            // If the click was inside the menu or if the click\n            // wasn't the button or menu item and we're trying to\n            // show the menu (a doc click shouldn't show the menu)\n            if (isMenuItem || (!isMenuItem && input.target !== button && show)) {\n                return;\n            }\n        }\n\n        // Set button attributes\n        button.setAttribute('aria-expanded', show);\n\n        // Show the actual popup\n        toggleHidden(popup, !show);\n\n        // Add class hook\n        toggleClass(this.elements.container, this.config.classNames.menu.open, show);\n\n        // Focus the first item if key interaction\n        if (show && is.keyboardEvent(input)) {\n            controls.focusFirstMenuItem.call(this, null, true);\n        } else if (!show && !hidden) {\n            // If closing, re-focus the button\n            setFocus.call(this, button, is.keyboardEvent(input));\n        }\n    },\n\n    // Get the natural size of a menu panel\n    getMenuSize(tab) {\n        const clone = tab.cloneNode(true);\n        clone.style.position = 'absolute';\n        clone.style.opacity = 0;\n        clone.removeAttribute('hidden');\n\n        // Append to parent so we get the \"real\" size\n        tab.parentNode.appendChild(clone);\n\n        // Get the sizes before we remove\n        const width = clone.scrollWidth;\n        const height = clone.scrollHeight;\n\n        // Remove from the DOM\n        removeElement(clone);\n\n        return {\n            width,\n            height,\n        };\n    },\n\n    // Show a panel in the menu\n    showMenuPanel(type = '', tabFocus = false) {\n        const target = document.getElementById(`plyr-settings-${this.id}-${type}`);\n\n        // Nothing to show, bail\n        if (!is.element(target)) {\n            return;\n        }\n\n        // Hide all other panels\n        const container = target.parentNode;\n        const current = Array.from(container.children).find(node => !node.hidden);\n\n        // If we can do fancy animations, we'll animate the height/width\n        if (support.transitions && !support.reducedMotion) {\n            // Set the current width as a base\n            container.style.width = `${current.scrollWidth}px`;\n            container.style.height = `${current.scrollHeight}px`;\n\n            // Get potential sizes\n            const size = controls.getMenuSize.call(this, target);\n\n            // Restore auto height/width\n            const restore = event => {\n                // We're only bothered about height and width on the container\n                if (event.target !== container || !['width', 'height'].includes(event.propertyName)) {\n                    return;\n                }\n\n                // Revert back to auto\n                container.style.width = '';\n                container.style.height = '';\n\n                // Only listen once\n                off.call(this, container, transitionEndEvent, restore);\n            };\n\n            // Listen for the transition finishing and restore auto height/width\n            on.call(this, container, transitionEndEvent, restore);\n\n            // Set dimensions to target\n            container.style.width = `${size.width}px`;\n            container.style.height = `${size.height}px`;\n        }\n\n        // Set attributes on current tab\n        toggleHidden(current, true);\n\n        // Set attributes on target\n        toggleHidden(target, false);\n\n        // Focus the first item\n        controls.focusFirstMenuItem.call(this, target, tabFocus);\n    },\n\n    // Set the download link\n    setDownloadLink() {\n        const button = this.elements.buttons.download;\n\n        // Bail if no button\n        if (!is.element(button)) {\n            return;\n        }\n\n        // Set download link\n        button.setAttribute('href', this.download);\n    },\n\n    // Build the default HTML\n    // TODO: Set order based on order in the config.controls array?\n    create(data) {\n        // Create the container\n        const container = createElement('div', getAttributesFromSelector(this.config.selectors.controls.wrapper));\n\n        // Restart button\n        if (this.config.controls.includes('restart')) {\n            container.appendChild(controls.createButton.call(this, 'restart'));\n        }\n\n        // Rewind button\n        if (this.config.controls.includes('rewind')) {\n            container.appendChild(controls.createButton.call(this, 'rewind'));\n        }\n\n        // Play/Pause button\n        if (this.config.controls.includes('play')) {\n            container.appendChild(controls.createButton.call(this, 'play'));\n        }\n\n        // Fast forward button\n        if (this.config.controls.includes('fast-forward')) {\n            container.appendChild(controls.createButton.call(this, 'fast-forward'));\n        }\n\n        // Progress\n        if (this.config.controls.includes('progress')) {\n            const progress = createElement('div', getAttributesFromSelector(this.config.selectors.progress));\n\n            // Seek range slider\n            progress.appendChild(\n                controls.createRange.call(this, 'seek', {\n                    id: `plyr-seek-${data.id}`,\n                }),\n            );\n\n            // Buffer progress\n            progress.appendChild(controls.createProgress.call(this, 'buffer'));\n\n            // TODO: Add loop display indicator\n\n            // Seek tooltip\n            if (this.config.tooltips.seek) {\n                const tooltip = createElement(\n                    'span',\n                    {\n                        class: this.config.classNames.tooltip,\n                    },\n                    '00:00',\n                );\n\n                progress.appendChild(tooltip);\n                this.elements.display.seekTooltip = tooltip;\n            }\n\n            this.elements.progress = progress;\n            container.appendChild(this.elements.progress);\n        }\n\n        // Media current time display\n        if (this.config.controls.includes('current-time')) {\n            container.appendChild(controls.createTime.call(this, 'currentTime'));\n        }\n\n        // Media duration display\n        if (this.config.controls.includes('duration')) {\n            container.appendChild(controls.createTime.call(this, 'duration'));\n        }\n\n        // Volume controls\n        if (this.config.controls.includes('mute') || this.config.controls.includes('volume')) {\n            const volume = createElement('div', {\n                class: 'plyr__volume',\n            });\n\n            // Toggle mute button\n            if (this.config.controls.includes('mute')) {\n                volume.appendChild(controls.createButton.call(this, 'mute'));\n            }\n\n            // Volume range control\n            if (this.config.controls.includes('volume')) {\n                // Set the attributes\n                const attributes = {\n                    max: 1,\n                    step: 0.05,\n                    value: this.config.volume,\n                };\n\n                // Create the volume range slider\n                volume.appendChild(\n                    controls.createRange.call(\n                        this,\n                        'volume',\n                        extend(attributes, {\n                            id: `plyr-volume-${data.id}`,\n                        }),\n                    ),\n                );\n\n                this.elements.volume = volume;\n            }\n\n            container.appendChild(volume);\n        }\n\n        // Toggle captions button\n        if (this.config.controls.includes('captions')) {\n            container.appendChild(controls.createButton.call(this, 'captions'));\n        }\n\n        // Settings button / menu\n        if (this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\n            const control = createElement('div', {\n                class: 'plyr__menu',\n                hidden: '',\n            });\n\n            control.appendChild(\n                controls.createButton.call(this, 'settings', {\n                    'aria-haspopup': true,\n                    'aria-controls': `plyr-settings-${data.id}`,\n                    'aria-expanded': false,\n                }),\n            );\n\n            const popup = createElement('div', {\n                class: 'plyr__menu__container',\n                id: `plyr-settings-${data.id}`,\n                hidden: '',\n            });\n\n            const inner = createElement('div');\n\n            const home = createElement('div', {\n                id: `plyr-settings-${data.id}-home`,\n            });\n\n            // Create the menu\n            const menu = createElement('div', {\n                role: 'menu',\n            });\n\n            home.appendChild(menu);\n            inner.appendChild(home);\n            this.elements.settings.panels.home = home;\n\n            // Build the menu items\n            this.config.settings.forEach(type => {\n                // TODO: bundle this with the createMenuItem helper and bindings\n                const menuItem = createElement(\n                    'button',\n                    extend(getAttributesFromSelector(this.config.selectors.buttons.settings), {\n                        type: 'button',\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\n                        role: 'menuitem',\n                        'aria-haspopup': true,\n                        hidden: '',\n                    }),\n                );\n\n                // Bind menu shortcuts for keyboard users\n                controls.bindMenuItemShortcuts.call(this, menuItem, type);\n\n                // Show menu on click\n                on(menuItem, 'click', () => {\n                    controls.showMenuPanel.call(this, type, false);\n                });\n\n                const flex = createElement('span', null, i18n.get(type, this.config));\n\n                const value = createElement('span', {\n                    class: this.config.classNames.menu.value,\n                });\n\n                // Speed contains HTML entities\n                value.innerHTML = data[type];\n\n                flex.appendChild(value);\n                menuItem.appendChild(flex);\n                menu.appendChild(menuItem);\n\n                // Build the panes\n                const pane = createElement('div', {\n                    id: `plyr-settings-${data.id}-${type}`,\n                    hidden: '',\n                });\n\n                // Back button\n                const backButton = createElement('button', {\n                    type: 'button',\n                    class: `${this.config.classNames.control} ${this.config.classNames.control}--back`,\n                });\n\n                // Visible label\n                backButton.appendChild(\n                    createElement(\n                        'span',\n                        {\n                            'aria-hidden': true,\n                        },\n                        i18n.get(type, this.config),\n                    ),\n                );\n\n                // Screen reader label\n                backButton.appendChild(\n                    createElement(\n                        'span',\n                        {\n                            class: this.config.classNames.hidden,\n                        },\n                        i18n.get('menuBack', this.config),\n                    ),\n                );\n\n                // Go back via keyboard\n                on(\n                    pane,\n                    'keydown',\n                    event => {\n                        // We only care about <-\n                        if (event.which !== 37) {\n                            return;\n                        }\n\n                        // Prevent seek\n                        event.preventDefault();\n                        event.stopPropagation();\n\n                        // Show the respective menu\n                        controls.showMenuPanel.call(this, 'home', true);\n                    },\n                    false,\n                );\n\n                // Go back via button click\n                on(backButton, 'click', () => {\n                    controls.showMenuPanel.call(this, 'home', false);\n                });\n\n                // Add to pane\n                pane.appendChild(backButton);\n\n                // Menu\n                pane.appendChild(\n                    createElement('div', {\n                        role: 'menu',\n                    }),\n                );\n\n                inner.appendChild(pane);\n\n                this.elements.settings.buttons[type] = menuItem;\n                this.elements.settings.panels[type] = pane;\n            });\n\n            popup.appendChild(inner);\n            control.appendChild(popup);\n            container.appendChild(control);\n\n            this.elements.settings.popup = popup;\n            this.elements.settings.menu = control;\n        }\n\n        // Picture in picture button\n        if (this.config.controls.includes('pip') && support.pip) {\n            container.appendChild(controls.createButton.call(this, 'pip'));\n        }\n\n        // Airplay button\n        if (this.config.controls.includes('airplay') && support.airplay) {\n            container.appendChild(controls.createButton.call(this, 'airplay'));\n        }\n\n        // Download button\n        if (this.config.controls.includes('download')) {\n            const attributes = {\n                element: 'a',\n                href: this.download,\n                target: '_blank',\n            };\n\n            const { download } = this.config.urls;\n\n            if (!is.url(download) && this.isEmbed) {\n                extend(attributes, {\n                    icon: `logo-${this.provider}`,\n                    label: this.provider,\n                });\n            }\n\n            container.appendChild(controls.createButton.call(this, 'download', attributes));\n        }\n\n        // Toggle zoom button\n        if (this.config.controls.includes('zoom')) {\n            container.appendChild(controls.createButton.call(this, 'zoom'));\n        }\n\n        // Toggle fullscreen button\n        if (this.config.controls.includes('fullscreen')) {\n            container.appendChild(controls.createButton.call(this, 'fullscreen'));\n        }\n\n        // Larger overlaid play button\n        if (this.config.controls.includes('play-large')) {\n            this.elements.container.appendChild(controls.createButton.call(this, 'play-large'));\n        }\n\n        this.elements.controls = container;\n\n        // Set available quality levels\n        if (this.isHTML5) {\n            controls.setQualityMenu.call(this, html5.getQualityOptions.call(this));\n        }\n\n        controls.setSpeedMenu.call(this);\n\n        return container;\n    },\n\n    // Insert controls\n    inject() {\n        // Sprite\n        if (this.config.loadSprite) {\n            const icon = controls.getIconUrl.call(this);\n\n            // Only load external sprite using AJAX\n            if (icon.cors) {\n                loadSprite(icon.url, 'sprite-plyr');\n            }\n        }\n\n        // Create a unique ID\n        this.id = Math.floor(Math.random() * 10000);\n\n        // Null by default\n        let container = null;\n        this.elements.controls = null;\n\n        // Set template properties\n        const props = {\n            id: this.id,\n            seektime: this.config.seekTime,\n            title: this.config.title,\n        };\n        let update = true;\n\n        // If function, run it and use output\n        if (is.function(this.config.controls)) {\n            this.config.controls = this.config.controls.call(this.props);\n        }\n\n        // Convert falsy controls to empty array (primarily for empty strings)\n        if (!this.config.controls) {\n            this.config.controls = [];\n        }\n\n        if (is.element(this.config.controls) || is.string(this.config.controls)) {\n            // HTMLElement or Non-empty string passed as the option\n            container = this.config.controls;\n        } else {\n            // Create controls\n            container = controls.create.call(this, {\n                id: this.id,\n                seektime: this.config.seekTime,\n                speed: this.speed,\n                quality: this.quality,\n                captions: captions.getLabel.call(this),\n                // TODO: Looping\n                // loop: 'None',\n            });\n            update = false;\n        }\n\n        // Replace props with their value\n        const replace = input => {\n            let result = input;\n\n            Object.entries(props).forEach(([key, value]) => {\n                result = replaceAll(result, `{${key}}`, value);\n            });\n\n            return result;\n        };\n\n        // Update markup\n        if (update) {\n            if (is.string(this.config.controls)) {\n                container = replace(container);\n            } else if (is.element(container)) {\n                container.innerHTML = replace(container.innerHTML);\n            }\n        }\n\n        // Controls container\n        let target;\n\n        // Inject to custom location\n        if (is.string(this.config.selectors.controls.container)) {\n            target = document.querySelector(this.config.selectors.controls.container);\n        }\n\n        // Inject into the container by default\n        if (!is.element(target)) {\n            target = this.elements.container;\n        }\n\n        // Inject controls HTML (needs to be before captions, hence \"afterbegin\")\n        const insertMethod = is.element(container) ? 'insertAdjacentElement' : 'insertAdjacentHTML';\n        target[insertMethod]('afterbegin', container);\n\n        // Find the elements if need be\n        if (!is.element(this.elements.controls)) {\n            controls.findElements.call(this);\n        }\n\n        // Add pressed property to buttons\n        if (!is.empty(this.elements.buttons)) {\n            const addProperty = button => {\n                const className = this.config.classNames.controlPressed;\n                Object.defineProperty(button, 'pressed', {\n                    enumerable: true,\n                    get() {\n                        return hasClass(button, className);\n                    },\n                    set(pressed = false) {\n                        toggleClass(button, className, pressed);\n                    },\n                });\n            };\n\n            // Toggle classname when pressed property is set\n            Object.values(this.elements.buttons)\n                .filter(Boolean)\n                .forEach(button => {\n                    if (is.array(button) || is.nodeList(button)) {\n                        Array.from(button).filter(Boolean).forEach(addProperty);\n                    } else {\n                        addProperty(button);\n                    }\n                });\n        }\n\n        // Edge sometimes doesn't finish the paint so force a redraw\n        if (window.navigator.userAgent.includes('Edge')) {\n            repaint(target);\n        }\n\n        // Setup tooltips\n        if (this.config.tooltips.controls) {\n            const { classNames, selectors } = this.config;\n            const selector = `${selectors.controls.wrapper} ${selectors.labels} .${classNames.hidden}`;\n            const labels = getElements.call(this, selector);\n\n            Array.from(labels).forEach(label => {\n                toggleClass(label, this.config.classNames.hidden, false);\n                toggleClass(label, this.config.classNames.tooltip, true);\n            });\n        }\n    },\n};\n\nexport default controls;\n","// ==========================================================================\n// URL utils\n// ==========================================================================\n\nimport is from './is';\n\n/**\n * Parse a string to a URL object\n * @param {string} input - the URL to be parsed\n * @param {boolean} safe - failsafe parsing\n */\nexport function parseUrl(input, safe = true) {\n    let url = input;\n\n    if (safe) {\n        const parser = document.createElement('a');\n        parser.href = url;\n        url = parser.href;\n    }\n\n    try {\n        return new URL(url);\n    } catch (e) {\n        return null;\n    }\n}\n\n// Convert object to URLSearchParams\nexport function buildUrlParams(input) {\n    const params = new URLSearchParams();\n\n    if (is.object(input)) {\n        Object.entries(input).forEach(([key, value]) => {\n            params.set(key, value);\n        });\n    }\n\n    return params;\n}\n","// ==========================================================================\n// Plyr Captions\n// TODO: Create as class\n// ==========================================================================\n\nimport controls from './controls';\nimport support from './support';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport {\n    createElement,\n    emptyElement,\n    getAttributesFromSelector,\n    insertAfter,\n    removeElement,\n    toggleClass,\n    hasClass,\n} from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport fetch from './utils/fetch';\nimport i18n from './utils/i18n';\nimport is from './utils/is';\nimport { getHTML } from './utils/strings';\nimport { parseUrl } from './utils/urls';\n\nconst captions = {\n    // Setup captions\n    setup() {\n        // Requires UI support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Only Vimeo and HTML5 video supported at this point\n        if (!this.isVideo || this.isYouTube || (this.isHTML5 && !support.textTracks)) {\n            // Clear menu and hide\n            if (\n                is.array(this.config.controls) &&\n                this.config.controls.includes('settings') &&\n                this.config.settings.includes('captions')\n            ) {\n                controls.setCaptionsMenu.call(this);\n                controls.setCaptionsPositionMenu.call(this);\n            }\n\n            return;\n        }\n\n        // Inject the container\n        if (!is.element(this.elements.captions)) {\n            this.elements.captions = createElement('div', getAttributesFromSelector(this.config.selectors.captions));\n\n            insertAfter(this.elements.captions, this.elements.wrapper);\n        }\n\n        // Fix IE captions if CORS is used\n        // Fetch captions and inject as blobs instead (data URIs not supported!)\n        if (browser.isIE && window.URL) {\n            const elements = this.media.querySelectorAll('track');\n\n            Array.from(elements).forEach(track => {\n                const src = track.getAttribute('src');\n                const url = parseUrl(src);\n\n                if (\n                    url !== null &&\n                    url.hostname !== window.location.href.hostname &&\n                    ['http:', 'https:'].includes(url.protocol)\n                ) {\n                    fetch(src, 'blob')\n                        .then(blob => {\n                            track.setAttribute('src', window.URL.createObjectURL(blob));\n                        })\n                        .catch(() => {\n                            removeElement(track);\n                        });\n                }\n            });\n        }\n\n        // Get and set initial data\n        // The \"preferred\" options are not realized unless / until the wanted language has a match\n        // * languages: Array of user's browser languages.\n        // * language:  The language preferred by user settings or config\n        // * active:    The state preferred by user settings or config\n        // * toggled:   The real captions state\n\n        const browserLanguages = navigator.languages || [navigator.language || navigator.userLanguage || 'en'];\n        const languages = dedupe(browserLanguages.map(language => language.split('-')[0]));\n\n        let language = (this.storage.get('language') || this.config.captions.language || 'auto').toLowerCase();\n\n        // Use first browser language when language is 'auto'\n        if (language === 'auto') {\n            [language] = languages;\n        }\n\n        let active = this.storage.get('captions');\n        if (!is.boolean(active)) {\n            ({ active } = this.config.captions);\n        }\n\n        Object.assign(this.captions, {\n            toggled: false,\n            active,\n            language,\n            languages,\n        });\n\n        captions.setPosition.call(this, this.captionPosition);\n\n        // Watch changes to textTracks and update captions menu\n        if (this.isHTML5) {\n            const trackEvents = this.config.captions.update ? 'addtrack removetrack' : 'removetrack';\n            on.call(this, this.media.textTracks, trackEvents, captions.update.bind(this));\n        }\n\n        // Update available languages in list next tick (the event must not be triggered before the listeners)\n        setTimeout(captions.update.bind(this), 0);\n    },\n\n    // Update available language options in settings based on tracks\n    update() {\n        const tracks = captions.getTracks.call(this, true);\n        // Get the wanted language\n        const { active, language, meta, currentTrackNode } = this.captions;\n        const languageExists = Boolean(tracks.find(track => track.language === language));\n\n        // Handle tracks (add event listener and \"pseudo\"-default)\n        if (this.isHTML5 && this.isVideo) {\n            tracks.filter(track => !meta.get(track)).forEach(track => {\n                this.debug.log('Track added', track);\n                // Attempt to store if the original dom element was \"default\"\n                meta.set(track, {\n                    default: track.mode === 'showing',\n                });\n\n                // Turn off native caption rendering to avoid double captions\n                track.mode = 'hidden';\n\n                // Add event listener for cue changes\n                on.call(this, track, 'cuechange', () => captions.updateCues.call(this));\n            });\n        }\n\n        // Update language first time it matches, or if the previous matching track was removed\n        if ((languageExists && this.language !== language) || !tracks.includes(currentTrackNode)) {\n            captions.setLanguage.call(this, language);\n            captions.toggle.call(this, active && languageExists);\n        }\n\n        // Enable or disable captions based on track length\n        toggleClass(this.elements.container, this.config.classNames.captions.enabled, !is.empty(tracks));\n\n        // for custom control\n        if (is.string(this.config.controls) || is.function(this.config.controls)) {\n            if (this.config.customMenu && is.function(this.config.customMenu.caption)) {\n                this.config.customMenu.caption.call(this);\n            }\n        } else if ((this.config.controls || []).includes('settings') && this.config.settings.includes('captions')) {\n            // Update available languages in list\n            controls.setCaptionsMenu.call(this);\n        }\n    },\n\n    // Toggle captions display\n    // Used internally for the toggleCaptions method, with the passive option forced to false\n    toggle(input, passive = true) {\n        // If there's no full support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        const { toggled } = this.captions; // Current state\n        const activeClass = this.config.classNames.captions.active;\n\n        // Get the next state\n        // If the method is called without parameter, toggle based on current value\n        const active = is.nullOrUndefined(input) ? !toggled : input;\n\n        // Update state and trigger event\n        if (active !== toggled) {\n            // When passive, don't override user preferences\n            if (!passive) {\n                this.captions.active = active;\n                this.storage.set({ captions: active });\n            }\n\n            // Force language if the call isn't passive and there is no matching language to toggle to\n            if (!this.language && active && !passive) {\n                const tracks = captions.getTracks.call(this);\n                const track = captions.findTrack.call(this, [this.captions.language, ...this.captions.languages], true);\n\n                // Override user preferences to avoid switching languages if a matching track is added\n                this.captions.language = track.language;\n\n                // Set caption, but don't store in localStorage as user preference\n                captions.set.call(this, tracks.indexOf(track));\n                return;\n            }\n\n            // Toggle button if it's enabled\n            if (this.elements.buttons.captions) {\n                this.elements.buttons.captions.pressed = active;\n            }\n\n            // Add class hook\n            toggleClass(this.elements.container, activeClass, active);\n\n            this.captions.toggled = active;\n\n            // Update settings menu\n            controls.updateSetting.call(this, 'captions');\n\n            // Trigger event (not used internally)\n            triggerEvent.call(this, this.media, active ? 'captionsenabled' : 'captionsdisabled');\n        }\n    },\n\n    // Set captions by track index\n    // Used internally for the currentTrack setter with the passive option forced to false\n    set(index, passive = true) {\n        const tracks = captions.getTracks.call(this);\n\n        // Disable captions if setting to -1\n        if (index === -1) {\n            captions.toggle.call(this, false, passive);\n            return;\n        }\n\n        if (!is.number(index)) {\n            this.debug.warn('Invalid caption argument', index);\n            return;\n        }\n\n        if (!(index in tracks)) {\n            this.debug.warn('Track not found', index);\n            return;\n        }\n\n        if (this.captions.currentTrack !== index) {\n            this.captions.currentTrack = index;\n            const track = tracks[index];\n            track.mode = 'showing';\n            const { language } = track || {};\n\n            // Store reference to node for invalidation on remove\n            this.captions.currentTrackNode = track;\n\n            // Update settings menu\n            controls.updateSetting.call(this, 'captions');\n\n            // When passive, don't override user preferences\n            if (!passive) {\n                this.captions.language = language;\n                this.storage.set({ language });\n            }\n\n            // Handle Vimeo captions\n            if (this.isVimeo) {\n                this.embed.enableTextTrack(language);\n            }\n\n            // Trigger event\n            triggerEvent.call(this, this.media, 'languagechange');\n        }\n\n        // Show captions\n        captions.toggle.call(this, true, passive);\n\n        if (this.isHTML5 && this.isVideo) {\n            // If we change the active track while a cue is already displayed we need to update it\n            captions.updateCues.call(this);\n        }\n    },\n\n    // Set captions by language\n    // Used internally for the language setter with the passive option forced to false\n    setLanguage(input, passive = true) {\n        if (!is.string(input)) {\n            this.debug.warn('Invalid language argument', input);\n            return;\n        }\n        // Normalize\n        const language = input.toLowerCase();\n        this.captions.language = language;\n\n        // Set currentTrack\n        const tracks = captions.getTracks.call(this);\n        const track = captions.findTrack.call(this, [language]);\n        captions.set.call(this, tracks.indexOf(track), passive);\n    },\n\n    // Get current valid caption tracks\n    // If update is false it will also ignore tracks without metadata\n    // This is used to \"freeze\" the language options when captions.update is false\n    getTracks(update = false) {\n        // Handle media or textTracks missing or null\n        const tracks = Array.from((this.media || {}).textTracks || []);\n        // For HTML5, use cache instead of current tracks when it exists (if captions.update is false)\n        // Filter out removed tracks and tracks that aren't captions/subtitles (for example metadata)\n        return tracks\n            .filter(track => !this.isHTML5 || update || this.captions.meta.has(track))\n            .filter(track => ['captions', 'subtitles'].includes(track.kind));\n    },\n\n    // Match tracks based on languages and get the first\n    findTrack(languages, force = false) {\n        const tracks = captions.getTracks.call(this);\n        const sortIsDefault = track => Number((this.captions.meta.get(track) || {}).default);\n        const sorted = Array.from(tracks).sort((a, b) => sortIsDefault(b) - sortIsDefault(a));\n        let track;\n        languages.every(language => {\n            track = sorted.find(track => track.language === language);\n            return !track; // Break iteration if there is a match\n        });\n        // If no match is found but is required, get first\n        return track || (force ? sorted[0] : undefined);\n    },\n\n    // Get the current track\n    getCurrentTrack() {\n        return captions.getTracks.call(this)[this.currentTrack];\n    },\n\n    // Get UI label for track\n    getLabel(track) {\n        let currentTrack = track;\n\n        if (!is.track(currentTrack) && support.textTracks && this.captions.toggled) {\n            currentTrack = captions.getCurrentTrack.call(this);\n        }\n\n        if (is.track(currentTrack)) {\n            if (!is.empty(currentTrack.label)) {\n                return currentTrack.label;\n            }\n\n            if (!is.empty(currentTrack.language)) {\n                return track.language.toUpperCase();\n            }\n\n            return i18n.get('enabled', this.config);\n        }\n\n        return i18n.get('disabled', this.config);\n    },\n\n    // Update captions using current track's active cues\n    // Also optional array argument in case there isn't any track (ex: vimeo)\n    updateCues(input) {\n        // Requires UI\n        if (!this.supported.ui) {\n            return;\n        }\n\n        if (!is.element(this.elements.captions)) {\n            this.debug.warn('No captions element to render to');\n            return;\n        }\n\n        // Only accept array or empty input\n        if (!is.nullOrUndefined(input) && !Array.isArray(input)) {\n            this.debug.warn('updateCues: Invalid input', input);\n            return;\n        }\n\n        let cues = input;\n\n        // Get cues from track\n        if (!cues) {\n            const track = captions.getCurrentTrack.call(this);\n            cues = Array.from((track || {}).activeCues || [])\n                .map(cue => cue.getCueAsHTML())\n                .map(getHTML);\n        }\n\n        // Set new caption text\n        const content = cues.map(cueText => cueText.trim()).join('\\n');\n        const changed = content !== this.elements.captions.innerHTML;\n\n        if (changed) {\n            // Empty the container and create a new child element\n            emptyElement(this.elements.captions);\n            const caption = createElement('span', getAttributesFromSelector(this.config.selectors.caption));\n            caption.innerHTML = content;\n            this.elements.captions.appendChild(caption);\n\n            // Trigger event\n            triggerEvent.call(this, this.media, 'cuechange');\n        }\n    },\n\n    setPosition(position) {\n        // if already setup correct class name, just ignore\n        if (hasClass(this.elements.captions, this.config.classNames.captionPosition.replace('{0}', 'top'))) {\n            if (position === 'top') return;\n        } else if (position === 'bottom') {\n            return;\n        }\n        toggleClass(this.elements.captions, this.config.classNames.captionPosition.replace('{0}', 'top'));\n\n        // Update settings menu\n        controls.updateSetting.call(this, 'caption-position');\n    },\n\n    setDefault(defaultLanguage = null) {\n        const captionsActive = this.storage.get('captions');\n        const captionsLanguage = this.storage.get('language') || defaultLanguage;\n        // if storage has caption active and,\n        if (\n            (is.boolean(captionsActive) && captionsActive && is.string(captionsLanguage)) ||\n            (!is.boolean(captionsActive) && is.string(captionsLanguage))\n        ) {\n            const tracks = captions.getTracks.call(this, true);\n            const findLanguageList = [captionsLanguage];\n            if (defaultLanguage) {\n                findLanguageList.push(defaultLanguage);\n            }\n            Array.prototype.push.apply(findLanguageList, this.captions.languages);\n            const track = captions.findTrack.call(this, findLanguageList, true);\n            captions.set.call(this, tracks.indexOf(track));\n        }\n    },\n};\n\nexport default captions;\n","// ==========================================================================\n// Plyr default config\n// ==========================================================================\n\nconst defaults = {\n    // Disable\n    enabled: true,\n\n    // Custom media title\n    title: '',\n\n    // Logging to console\n    debug: false,\n\n    // Auto play (if supported)\n    autoplay: false,\n\n    // Only allow one media playing at once (vimeo only)\n    autopause: true,\n\n    // Allow inline playback on iOS (this effects YouTube/Vimeo - HTML5 requires the attribute present)\n    // TODO: Remove iosNative fullscreen option in favour of this (logic needs work)\n    playsinline: true,\n\n    // Default time to skip when rewind/fast forward\n    seekTime: 10,\n\n    // Default volume\n    volume: 1,\n    muted: false,\n\n    // Pass a custom duration\n    duration: null,\n\n    // Display the media duration on load in the current time position\n    // If you have opted to display both duration and currentTime, this is ignored\n    displayDuration: true,\n\n    // Invert the current time to be a countdown\n    invertTime: true,\n\n    // Clicking the currentTime inverts it's value to show time left rather than elapsed\n    toggleInvert: true,\n\n    // Aspect ratio (for embeds)\n    ratio: '16:9',\n\n    // Click video container to play/pause\n    clickToPlay: true,\n\n    // Auto hide the controls\n    hideControls: true,\n\n    // Reset to start when playback ended\n    resetOnEnd: false,\n\n    // Disable the standard context menu\n    disableContextMenu: true,\n\n    // Sprite (for icons)\n    loadSprite: true,\n    iconPrefix: 'plyr',\n    iconUrl: 'https://cdn.plyr.io/3.4.6/plyr.svg',\n\n    // Blank video (used to prevent errors on source change)\n    blankVideo: 'https://cdn.plyr.io/static/blank.mp4',\n\n    logo: {\n        url: undefined,\n        link: undefined,\n    },\n\n    // fullscreen container, default is plyr container\n    fullscreenContainer: undefined,\n\n    // Quality default\n    quality: {\n        default: 576,\n        options: [4320, 2880, 2160, 1440, 1080, 720, 576, 480, 360, 240],\n    },\n\n    // Set loops\n    loop: {\n        active: false,\n        // start: null,\n        // end: null,\n    },\n\n    // Speed default and options to display\n    speed: {\n        selected: 1,\n        options: [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2],\n    },\n\n    // Keyboard shortcut settings\n    keyboard: {\n        focused: true,\n        global: false,\n    },\n\n    // Display tooltips\n    tooltips: {\n        controls: false,\n        seek: true,\n    },\n\n    // Captions settings\n    captions: {\n        active: false,\n        language: 'auto',\n        position: 'bottom',\n        // Listen to new tracks added after Plyr is initialized.\n        // This is needed for streaming captions, but may result in unselectable options\n        update: false,\n    },\n\n    // Fullscreen settings\n    fullscreen: {\n        enabled: true, // Allow fullscreen?\n        fallback: true, // Fallback for vintage browsers\n        iosNative: false, // Use the native fullscreen in iOS (disables custom controls)\n    },\n\n    // Local storage\n    storage: {\n        enabled: true,\n        key: 'plyr',\n    },\n\n    // Default controls\n    controls: [\n        'play-large',\n        // 'restart',\n        // 'rewind',\n        'play',\n        // 'fast-forward',\n        'progress',\n        'current-time',\n        'mute',\n        'volume',\n        'captions',\n        'caption-position',\n        'settings',\n        'pip',\n        'airplay',\n        'zoom',\n        'fullscreen',\n    ],\n    settings: ['captions', 'caption-position', 'quality', 'speed'],\n\n    // Localisation\n    i18n: {\n        restart: 'Restart',\n        rewind: 'Rewind {seektime}s',\n        play: 'Play',\n        pause: 'Pause',\n        fastForward: 'Forward {seektime}s',\n        seek: 'Seek',\n        seekLabel: '{currentTime} of {duration}',\n        played: 'Played',\n        buffered: 'Buffered',\n        currentTime: 'Current time',\n        duration: 'Duration',\n        volume: 'Volume',\n        mute: 'Mute',\n        unmute: 'Unmute',\n        enableCaptions: 'Enable captions',\n        disableCaptions: 'Disable captions',\n        download: 'Download',\n        enterFullscreen: 'Enter fullscreen',\n        exitFullscreen: 'Exit fullscreen',\n        enterZoom: 'zoom',\n        exitZoom: 'reset screen size',\n        frameTitle: 'Player for {title}',\n        captions: 'Captions',\n        noCaptions: 'No captions',\n        'caption-position': 'Caption Position',\n        captionPositionLabel: {\n            top: 'Top',\n            bottom: 'Bottom',\n        },\n        settings: 'Settings',\n        menuBack: 'Go back to previous menu',\n        speed: 'Speed',\n        normal: 'Normal',\n        quality: 'Quality',\n        loop: 'Loop',\n        start: 'Start',\n        end: 'End',\n        all: 'All',\n        reset: 'Reset',\n        disabled: 'Disabled',\n        enabled: 'Enabled',\n        advertisement: 'Ad',\n        qualityBadge: {\n            2160: '4K',\n            1440: 'HD',\n            1080: 'HD',\n            720: 'HD',\n            576: 'SD',\n            480: 'SD',\n        },\n    },\n\n    // URLs\n    urls: {\n        download: null,\n        vimeo: {\n            sdk: 'https://player.vimeo.com/api/player.js',\n            iframe: 'https://player.vimeo.com/video/{0}?{1}',\n            api: 'https://vimeo.com/api/v2/video/{0}.json',\n        },\n        youtube: {\n            sdk: 'https://www.youtube.com/iframe_api',\n            api:\n                'https://www.googleapis.com/youtube/v3/videos?id={0}&key={1}&fields=items(snippet(title))&part=snippet',\n        },\n        googleIMA: {\n            sdk: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js',\n        },\n    },\n\n    // custom control menu setup function\n    customMenu: {\n        caption: null,\n    },\n\n    // Custom control listeners\n    listeners: {\n        seek: null,\n        play: null,\n        pause: null,\n        restart: null,\n        rewind: null,\n        fastForward: null,\n        mute: null,\n        volume: null,\n        captions: null,\n        download: null,\n        fullscreen: null,\n        pip: null,\n        airplay: null,\n        speed: null,\n        quality: null,\n        loop: null,\n        language: null,\n    },\n\n    // Events to watch and bubble\n    events: [\n        // Events to watch on HTML5 media elements and bubble\n        // https://developer.mozilla.org/en/docs/Web/Guide/Events/Media_events\n        'ended',\n        'progress',\n        'stalled',\n        'playing',\n        'waiting',\n        'canplay',\n        'canplaythrough',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'timeupdate',\n        'volumechange',\n        'play',\n        'pause',\n        'error',\n        'seeking',\n        'seeked',\n        'emptied',\n        'ratechange',\n        'cuechange',\n\n        // Custom events\n        'download',\n        'enterfullscreen',\n        'exitfullscreen',\n        'enterzoomfullscreen',\n        'exitzoomfullscreen',\n        'captionsenabled',\n        'captionsdisabled',\n        'languagechange',\n        'controlshidden',\n        'controlsshown',\n        'ready',\n\n        // YouTube\n        'statechange',\n\n        // Quality\n        'qualitychange',\n\n        // Ads\n        'adsloaded',\n        'adscontentpause',\n        'adscontentresume',\n        'adstarted',\n        'adsmidpoint',\n        'adscomplete',\n        'adsallcomplete',\n        'adsimpression',\n        'adsclick',\n    ],\n\n    // Selectors\n    // Change these to match your template if using custom HTML\n    selectors: {\n        editable: 'input, textarea, select, [contenteditable]',\n        container: '.plyr',\n        controls: {\n            container: null,\n            wrapper: '.plyr__controls',\n            layer: {\n                topLayer: '.plyr__controls-top',\n                bottomLayer: '.plyr__controls-bottom',\n            },\n            bottom: {\n                left: '.plyr__controls-bottom-left',\n                right: '.plyr__controls-bottom-right',\n            },\n        },\n        labels: '[data-plyr]',\n        buttons: {\n            play: '[data-plyr=\"play\"]',\n            pause: '[data-plyr=\"pause\"]',\n            restart: '[data-plyr=\"restart\"]',\n            rewind: '[data-plyr=\"rewind\"]',\n            fastForward: '[data-plyr=\"fast-forward\"]',\n            mute: '[data-plyr=\"mute\"]',\n            captions: '[data-plyr=\"captions\"]',\n            download: '[data-plyr=\"download\"]',\n            zoom: '[data-plyr=\"zoom\"]',\n            fullscreen: '[data-plyr=\"fullscreen\"]',\n            pip: '[data-plyr=\"pip\"]',\n            airplay: '[data-plyr=\"airplay\"]',\n            settings: '[data-plyr=\"settings\"]',\n            loop: '[data-plyr=\"loop\"]',\n        },\n        inputs: {\n            seek: '[data-plyr=\"seek\"]',\n            volume: '[data-plyr=\"volume\"]',\n            speed: '[data-plyr=\"speed\"]',\n            language: '[data-plyr=\"language\"]',\n            'caption-position': '[data-plyr=\"caption-position\"]',\n            quality: '[data-plyr=\"quality\"]',\n        },\n        display: {\n            currentTime: '.plyr__time--current',\n            duration: '.plyr__time--duration',\n            buffer: '.plyr__progress__buffer',\n            loop: '.plyr__progress__loop', // Used later\n            volume: '.plyr__volume--display',\n        },\n        progress: '.plyr__progress',\n        captions: '.plyr__captions',\n        caption: '.plyr__caption',\n        menu: {\n            quality: '.js-plyr__menu__list--quality',\n        },\n    },\n\n    // Class hooks added to the player in different states\n    classNames: {\n        type: 'plyr--{0}',\n        provider: 'plyr--{0}',\n        video: 'plyr__video-wrapper',\n        embed: 'plyr__video-embed',\n        embedContainer: 'plyr__video-embed__container',\n        poster: 'plyr__poster',\n        posterEnabled: 'plyr__poster-enabled',\n        ads: 'plyr__ads',\n        control: 'plyr__control',\n        controlPressed: 'plyr__control--pressed',\n        playing: 'plyr--playing',\n        paused: 'plyr--paused',\n        stopped: 'plyr--stopped',\n        loading: 'plyr--loading',\n        hover: 'plyr--hover',\n        tooltip: 'plyr__tooltip',\n        cues: 'plyr__cues',\n        hidden: 'plyr__sr-only',\n        hideControls: 'plyr--hide-controls',\n        isIos: 'plyr--is-ios',\n        isTouch: 'plyr--is-touch',\n        uiSupported: 'plyr--full-ui',\n        noTransition: 'plyr--no-transition',\n        display: {\n            time: 'plyr__time',\n        },\n        logo: 'plyr--logo',\n        menu: {\n            value: 'plyr__menu__value',\n            badge: 'plyr__badge',\n            open: 'plyr--menu-open',\n        },\n        captions: {\n            enabled: 'plyr--captions-enabled',\n            active: 'plyr--captions-active',\n        },\n        captionPosition: 'plyr__caption_position__{0}',\n        fullscreen: {\n            enabled: 'plyr--fullscreen-enabled',\n            fallback: 'plyr--fullscreen-fallback',\n        },\n        pip: {\n            supported: 'plyr--pip-supported',\n            active: 'plyr--pip-active',\n        },\n        airplay: {\n            supported: 'plyr--airplay-supported',\n            active: 'plyr--airplay-active',\n        },\n        tabFocus: 'plyr__tab-focus',\n        outerContainer: 'plyr__outer-container',\n    },\n\n    // Embed attributes\n    attributes: {\n        embed: {\n            provider: 'data-plyr-provider',\n            id: 'data-plyr-embed-id',\n        },\n    },\n\n    // API keys\n    keys: {\n        google: null,\n    },\n\n    // Advertisements plugin\n    // Register for an account here: http://vi.ai/publisher-video-monetization/?aid=plyrio\n    ads: {\n        enabled: false,\n        publisherId: '',\n    },\n};\n\nexport default defaults;\n","// ==========================================================================\n// Plyr states\n// ==========================================================================\n\nexport const pip = {\n    active: 'picture-in-picture',\n    inactive: 'inline',\n};\n\nexport default { pip };\n","// ==========================================================================\n// Plyr supported types and providers\n// ==========================================================================\n\nexport const providers = {\n    html5: 'html5',\n    youtube: 'youtube',\n    vimeo: 'vimeo',\n};\n\nexport const types = {\n    audio: 'audio',\n    video: 'video',\n};\n\n/**\n * Get provider by URL\n * @param {String} url\n */\nexport function getProviderByUrl(url) {\n    // YouTube\n    if (/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.?be)\\/.+$/.test(url)) {\n        return providers.youtube;\n    }\n\n    // Vimeo\n    if (/^https?:\\/\\/player.vimeo.com\\/video\\/\\d{0,9}(?=\\b|\\/)/.test(url)) {\n        return providers.vimeo;\n    }\n\n    return null;\n}\n\nexport default { providers, types };\n","// ==========================================================================\n// Console wrapper\n// ==========================================================================\n\nconst noop = () => {};\n\nexport default class Console {\n    constructor(enabled = false) {\n        this.enabled = window.console && enabled;\n\n        if (this.enabled) {\n            this.log('Debugging enabled');\n        }\n    }\n\n    get log() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.log, console) : noop;\n    }\n\n    get warn() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.warn, console) : noop;\n    }\n\n    get error() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.error, console) : noop;\n    }\n}\n","// ==========================================================================\n// Fullscreen wrapper\n// https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API#prefixing\n// https://webkit.org/blog/7929/designing-websites-for-iphone-x/\n// ==========================================================================\n\nimport { repaint } from './utils/animation';\nimport browser from './utils/browser';\nimport { hasClass, toggleClass, trapFocus } from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport is from './utils/is';\n\nfunction onChange(isZoom = false) {\n    if (!this.enabled) {\n        return;\n    }\n\n    if (!isZoom) {\n        // Update toggle button\n        const button = this.player.elements.buttons.fullscreen;\n        if (is.element(button)) {\n            button.pressed = this.active;\n        }\n    } else {\n        const button = this.player.elements.buttons.zoom;\n        if (is.element(button)) {\n            button.pressed = this.zoomActive;\n        }\n    }\n\n    // Trigger an event\n    if (this.isIosNative || !this.isOutterContainerSet) {\n        if (!isZoom) {\n            triggerEvent.call(this.player, this.target, this.active ? 'enterfullscreen' : 'exitfullscreen', true);\n        } else {\n            triggerEvent.call(this.player, this.target, this.zoomActive ? 'enterzoomfullscreen' : 'exitzoomfullscreen', true);\n        }\n    } else {\n        if (!isZoom) {\n            triggerEvent.call(\n                this.player,\n                this.player.elements.container,\n                this.active ? 'enterfullscreen' : 'exitfullscreen',\n                true,\n            );\n        } else {\n            triggerEvent.call(\n                this.player,\n                this.player.elements.container,\n                this.zoomActive ? 'enterzoomfullscreen' : 'exitzoomfullscreen',\n                true,\n            );\n        }\n    }\n\n    // Trap focus in container\n    if (!browser.isIos) {\n        trapFocus.call(this.player, this.target, this.active);\n    }\n}\n\nfunction toggleFallback(toggle = false) {\n    // Store or restore scroll position\n    if (toggle) {\n        this.scrollPosition = {\n            x: window.scrollX || 0,\n            y: window.scrollY || 0,\n        };\n    } else {\n        window.scrollTo(this.scrollPosition.x, this.scrollPosition.y);\n    }\n\n    // Toggle scroll\n    document.body.style.overflow = toggle ? 'hidden' : '';\n\n    // Toggle class hook\n    if (this.target === this.player.elements.container) {\n        toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\n    } else {\n        toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\n        toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.fallback, toggle);\n    }\n\n\n    // Force full viewport on iPhone X+\n    if (browser.isIos) {\n        let viewport = document.head.querySelector('meta[name=\"viewport\"]');\n        const property = 'viewport-fit=cover';\n\n        // Inject the viewport meta if required\n        if (!viewport) {\n            viewport = document.createElement('meta');\n            viewport.setAttribute('name', 'viewport');\n        }\n\n        // Check if the property already exists\n        const hasProperty = is.string(viewport.content) && viewport.content.includes(property);\n\n        if (toggle) {\n            this.cleanupViewport = !hasProperty;\n\n            if (!hasProperty) {\n                viewport.content += `,${property}`;\n            }\n        } else if (this.cleanupViewport) {\n            viewport.content = viewport.content\n                .split(',')\n                .filter(part => part.trim() !== property)\n                .join(',');\n        }\n\n        // Force a repaint as sometimes Safari doesn't want to fill the screen\n        setTimeout(() => repaint(this.target), 100);\n    }\n\n    // Toggle button and fire events\n    onChange.call(this, true);\n}\n\nclass Fullscreen {\n    constructor(player) {\n        // Keep reference to parent\n        this.player = player;\n\n        // Get prefix\n        this.prefix = Fullscreen.prefix;\n        this.property = Fullscreen.property;\n\n        // Scroll position\n        this.scrollPosition = { x: 0, y: 0 };\n\n        // Register event listeners\n        // Handle event (incase user presses escape etc)\n        on.call(\n            this.player,\n            document,\n            this.prefix === 'ms' ? 'MSFullscreenChange' : `${this.prefix}fullscreenchange`,\n            () => {\n                // TODO: Filter for target??\n                onChange.call(this);\n            },\n        );\n\n        // Fullscreen toggle on double click\n        on.call(this.player, this.player.elements.container, 'dblclick', event => {\n            // Ignore double click in controls\n            if (is.element(this.player.elements.controls) && this.player.elements.controls.contains(event.target)) {\n                return;\n            }\n\n            this.toggle();\n        });\n\n        // Update the UI\n        this.update();\n    }\n\n    // Determine if native supported\n    static get native() {\n        return !!(\n            document.fullscreenEnabled ||\n            document.webkitFullscreenEnabled ||\n            document.mozFullScreenEnabled ||\n            document.msFullscreenEnabled\n        );\n    }\n\n    // Get the prefix for handlers\n    static get prefix() {\n        // No prefix\n        if (is.function(document.exitFullscreen)) {\n            return '';\n        }\n\n        // Check for fullscreen support by vendor prefix\n        let value = '';\n        const prefixes = ['webkit', 'moz', 'ms'];\n\n        prefixes.some(pre => {\n            if (is.function(document[`${pre}ExitFullscreen`]) || is.function(document[`${pre}CancelFullScreen`])) {\n                value = pre;\n                return true;\n            }\n\n            return false;\n        });\n\n        return value;\n    }\n\n    static get property() {\n        return this.prefix === 'moz' ? 'FullScreen' : 'Fullscreen';\n    }\n\n    // Determine if fullscreen is enabled\n    get enabled() {\n        return (\n            (Fullscreen.native || this.player.config.fullscreen.fallback) &&\n            this.player.config.fullscreen.enabled &&\n            this.player.supported.ui &&\n            this.player.isVideo\n        );\n    }\n\n    // Get active state\n    get active() {\n        if (!this.enabled) {\n            return false;\n        }\n\n        // Fallback using classname\n        if (!Fullscreen.native) {\n            return hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n        }\n\n        const element = !this.prefix ? document.fullscreenElement : document[`${this.prefix}${this.property}Element`];\n\n        return element === this.target;\n    }\n\n    get zoomActive() {\n        return hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n    }\n\n    get isIosNative() {\n        return browser.isIos && this.player.config.fullscreen.iosNative;\n    }\n\n    get isOutterContainerSet() {\n        return !!this.player.config.fullscreenContainer;\n    }\n\n    // Get target element\n    get target() {\n        if (this.isIosNative) {\n            return this.player.media;\n        } else if (this.isOutterContainerSet) {\n            return this.player.config.fullscreenContainer;\n        }\n        return this.player.elements.container;\n    }\n\n    // Update UI\n    update() {\n        if (this.enabled) {\n            this.player.debug.log(`${Fullscreen.native ? 'Native' : 'Fallback'} fullscreen enabled`);\n        } else {\n            this.player.debug.log('Fullscreen not supported and fallback disabled');\n        }\n\n        // Add styling hook to show button\n        toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.enabled);\n    }\n\n    // Make an element fullscreen\n    enter() {\n        if (!this.enabled) {\n            return;\n        }\n\n        if (this.zoomActive) {\n            this.toggleZoom();\n        }\n\n        // iOS native fullscreen doesn't need the request step\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            this.target.webkitEnterFullscreen();\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, true);\n        } else if (!this.prefix) {\n            this.target.requestFullscreen();\n        } else if (!is.empty(this.prefix)) {\n            this.target[`${this.prefix}Request${this.property}`]();\n        }\n    }\n\n    // Bail from fullscreen\n    exit() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            this.target.webkitExitFullscreen();\n            this.player.play();\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, false);\n        } else if (!this.prefix) {\n            (document.cancelFullScreen || document.exitFullscreen).call(document);\n        } else if (!is.empty(this.prefix)) {\n            const action = this.prefix === 'moz' ? 'Cancel' : 'Exit';\n            document[`${this.prefix}${action}${this.property}`]();\n        }\n    }\n\n    toggleZoom() {\n        if (!this.zoomActive) {\n            toggleFallback.call(this, true);\n        } else {\n            toggleFallback.call(this, false);\n        }\n    }\n\n    // Toggle state\n    toggle() {\n        if (!this.active) {\n            this.enter();\n        } else {\n            this.exit();\n        }\n    }\n}\n\nexport default Fullscreen;\n","import captions from './captions';\nimport controls from './controls';\nimport html5 from './html5';\nimport i18n from './utils/i18n';\nimport { dedupe } from './utils/arrays';\nimport { createElement, emptyElement, getAttributesFromSelector } from './utils/elements';\nimport is from './utils/is';\nimport { extend } from './utils/objects';\n\nconst hahow = {\n    createControls(data) {\n        // Create the container\n        const container = createElement('div', getAttributesFromSelector(this.config.selectors.controls.wrapper));\n\n        const topLayer = createElement('div', getAttributesFromSelector(this.config.selectors.controls.layer.topLayer));\n        const bottomLayer = createElement(\n            'div',\n            getAttributesFromSelector(this.config.selectors.controls.layer.bottomLayer),\n        );\n        const bottomLeft = createElement('div', getAttributesFromSelector(this.config.selectors.controls.bottom.left));\n        const bottomRight = createElement(\n            'div',\n            getAttributesFromSelector(this.config.selectors.controls.bottom.right),\n        );\n\n        bottomLayer.appendChild(bottomLeft);\n        bottomLayer.appendChild(bottomRight);\n        container.appendChild(topLayer);\n        container.appendChild(bottomLayer);\n\n        // Rewind button\n        bottomLeft.appendChild(controls.createButton.call(this, 'rewind'));\n\n        // Play/Pause button\n        bottomLeft.appendChild(controls.createButton.call(this, 'play'));\n\n        // Fast forward button\n        bottomLeft.appendChild(controls.createButton.call(this, 'fast-forward'));\n\n        // Progress\n        const progress = createElement('div', getAttributesFromSelector(this.config.selectors.progress));\n\n        // Seek range slider\n        progress.appendChild(\n            controls.createRange.call(this, 'seek', {\n                id: `plyr-seek-${data.id}`,\n            }),\n        );\n\n        // Buffer progress\n        progress.appendChild(controls.createProgress.call(this, 'buffer'));\n\n        // TODO: Add loop display indicator\n\n        // Seek tooltip\n        if (this.config.tooltips.seek) {\n            const tooltip = createElement(\n                'span',\n                {\n                    class: this.config.classNames.tooltip,\n                },\n                '00:00',\n            );\n\n            progress.appendChild(tooltip);\n            this.elements.display.seekTooltip = tooltip;\n        }\n\n        this.elements.progress = progress;\n        topLayer.appendChild(this.elements.progress);\n\n        // Media current time display\n        bottomLeft.appendChild(controls.createTime.call(this, 'currentTime'));\n\n        // Media duration display\n        bottomLeft.appendChild(controls.createTime.call(this, 'duration'));\n\n        // Add lecture note button\n        const addLecturneNoteBtn = controls.createButton.call(this, 'add-lecture-note', {\n            class: 'plyr__add-lecture-note hidden',\n        });\n        addLecturneNoteBtn.appendChild(createElement('span', {}, '筆記標註'));\n        bottomRight.appendChild(addLecturneNoteBtn);\n\n        addLecturneNoteBtn.addEventListener('click', (e) => {\n            this.lectureNote.addLectureNote();\n            e.stopPropagation();\n        });\n\n        // Toggle mute button\n        bottomRight.appendChild(controls.createButton.call(this, 'mute'));\n\n        // Volume range control\n        const volume = createElement('div', {\n            class: 'plyr__volume',\n        });\n\n        // Set the attributes\n        const attributes = {\n            max: 1,\n            step: 0.05,\n            value: this.config.volume,\n        };\n\n        // Create the volume range slider\n        volume.appendChild(\n            controls.createRange.call(\n                this,\n                'volume',\n                extend(attributes, {\n                    id: `plyr-volume-${data.id}`,\n                }),\n            ),\n        );\n\n        this.elements.volume = volume;\n\n        bottomRight.appendChild(volume);\n\n        // Settings button / menu\n        const menu = createElement('div', {\n            class: 'plyr__menu',\n            hidden: '',\n        });\n\n        menu.appendChild(\n            controls.createButton.call(this, 'settings', {\n                id: `plyr-settings-toggle-${data.id}`,\n                'aria-haspopup': true,\n                'aria-controls': `plyr-settings-${data.id}`,\n                'aria-expanded': false,\n            }),\n        );\n\n        const form = createElement('form', {\n            class: 'plyr__menu__container',\n            id: `plyr-settings-${data.id}`,\n            hidden: '',\n            'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n            role: 'tablist',\n            tabindex: -1,\n        });\n\n        const inner = createElement('div');\n\n        const home = createElement('div', {\n            id: `plyr-settings-${data.id}-home`,\n            'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n            role: 'tabpanel',\n        });\n\n        // Create the tab list\n        const tabs = createElement('ul', {\n            role: 'tablist',\n        });\n\n        // Build the tabs\n        this.config.settings.forEach(type => {\n            const tab = createElement('li', {\n                role: 'tab',\n                hidden: '',\n            });\n\n            const button = createElement(\n                'button',\n                extend(getAttributesFromSelector(this.config.selectors.buttons.settings), {\n                    type: 'button',\n                    class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\n                    id: `plyr-settings-${data.id}-${type}-tab`,\n                    'aria-haspopup': true,\n                    'aria-controls': `plyr-settings-${data.id}-${type}`,\n                    'aria-expanded': false,\n                }),\n                i18n.get(type, this.config),\n            );\n\n            const value = createElement('span', {\n                class: this.config.classNames.menu.value,\n            });\n\n            // Speed contains HTML entities\n            value.innerHTML = data[type];\n\n            button.appendChild(value);\n            tab.appendChild(button);\n            tabs.appendChild(tab);\n\n            this.elements.settings.tabs[type] = tab;\n        });\n\n        home.appendChild(tabs);\n        inner.appendChild(home);\n\n        // Build the panes\n        this.config.settings.forEach(type => {\n            const pane = createElement('div', {\n                id: `plyr-settings-${data.id}-${type}`,\n                class: 'subpanel',\n                hidden: '',\n                'aria-labelled-by': `plyr-settings-${data.id}-${type}-tab`,\n                role: 'tabpanel',\n                tabindex: -1,\n            });\n\n            const back = createElement(\n                'button',\n                {\n                    type: 'button',\n                    class: `${this.config.classNames.control} ${this.config.classNames.control}--back`,\n                    'aria-haspopup': true,\n                    'aria-controls': `plyr-settings-${data.id}-home`,\n                    'aria-expanded': false,\n                },\n                i18n.get(type, this.config),\n            );\n\n            pane.appendChild(back);\n\n            const options = createElement('ul');\n\n            pane.appendChild(options);\n            inner.appendChild(pane);\n\n            this.elements.settings.panes[type] = pane;\n        });\n\n        form.appendChild(inner);\n        menu.appendChild(form);\n        bottomRight.appendChild(menu);\n\n        this.elements.settings.form = form;\n        this.elements.settings.menu = menu;\n\n        bottomRight.appendChild(controls.createButton.call(this, 'zoom'));\n\n        // Toggle fullscreen button\n        bottomRight.appendChild(controls.createButton.call(this, 'fullscreen'));\n\n        this.elements.controls = container;\n\n        if (this.isHTML5) {\n            hahow.setQualityMenu.call(this, html5.getQualityOptions.call(this));\n        }\n\n        hahow.setSpeedMenu.call(this);\n        hahow.setCaptionsMenu.call(this);\n        hahow.setCaptionsPositionMenu.call(this);\n\n        return container;\n    },\n\n    // Set the quality menu\n    setQualityMenu(options) {\n        const type = 'quality';\n        const list = this.elements.settings.panes.quality.querySelector('ul');\n\n        // Set options if passed and filter based on uniqueness and config\n        if (is.array(options)) {\n            this.options.quality = dedupe(options);\n        }\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.quality) && this.options.quality.length > 1;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Sort options by the config and then render options\n        this.options.quality\n            .sort((a, b) => a - b)\n            .forEach(quality => {\n                controls.createMenuItem.call(this, {\n                    value: quality,\n                    list,\n                    type,\n                    title: controls.getLabel.call(this, 'quality', quality),\n                });\n            });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set a list of available captions languages\n    setCaptionsMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panes.captions)) {\n            return;\n        }\n\n        // TODO: Captions or language? Currently it's mixed\n        const type = 'captions';\n        const list = this.elements.settings.panes.captions.querySelector('ul');\n        const tracks = captions.getTracks.call(this);\n\n        // Toggle the pane and tab\n        controls.toggleTab.call(this, type, true);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If there's no captions, bail\n        if (!tracks.length) {\n            controls.createMenuItem.bind(this)({\n                value: -1,\n                checked: !this.captions.toggled,\n                title: i18n.get('noCaptions', this.config),\n                list,\n                type: 'language',\n            });\n            controls.updateSetting.call(this, type, list);\n            return;\n        }\n\n        // Generate options data\n        const options = tracks.map((track, value) => ({\n            value,\n            checked: this.captions.toggled && this.currentTrack === value,\n            title: captions.getLabel.call(this, track),\n            badge: track.language && controls.createBadge.call(this, track.language.toUpperCase()),\n            list,\n            type: 'language',\n        }));\n\n        // Add the \"Disabled\" option to turn off captions\n        options.unshift({\n            value: -1,\n            checked: !this.captions.toggled,\n            title: i18n.get('disabled', this.config),\n            list,\n            type: 'language',\n        });\n\n        // Generate options\n        options.forEach(controls.createMenuItem.bind(this));\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    setCaptionsPositionMenu() {\n        if (!is.element(this.elements.settings.panes['caption-position'])) {\n            return;\n        }\n\n        const type = 'caption-position';\n\n        controls.toggleTab.call(this, type, true);\n\n        // Get the list to populate\n        const list = this.elements.settings.panes['caption-position'].querySelector('ul');\n\n        // Empty the menu\n        emptyElement(list);\n\n        const positions = ['top', 'bottom'];\n\n        // Create items\n        positions.forEach(position => {\n            controls.createMenuItem.call(this, {\n                value: position,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'caption-position', position),\n            });\n        });\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set a list of available captions languages\n    setSpeedMenu(options) {\n        // Menu required\n        if (!is.element(this.elements.settings.panes.speed)) {\n            return;\n        }\n\n        const type = 'speed';\n\n        // Set the speed options\n        if (is.array(options)) {\n            this.options.speed = options;\n        } else if (this.isHTML5 || this.isVimeo) {\n            this.options.speed = [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\n        }\n\n        // Set options if passed and filter based on config\n        this.options.speed = this.options.speed.filter(speed => this.config.speed.options.includes(speed));\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.speed) && this.options.speed.length > 1;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Get the list to populate\n        const list = this.elements.settings.panes.speed.querySelector('ul');\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Create items\n        this.options.speed.forEach(speed => {\n            controls.createMenuItem.call(this, {\n                value: speed,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'speed', speed),\n            });\n        });\n\n        controls.updateSetting.call(this, type, list);\n    },\n};\n\nexport default hahow;\n","// ==========================================================================\n// Load image avoiding xhr/fetch CORS issues\n// Server status can't be obtained this way unfortunately, so this uses \"naturalWidth\" to determine if the image has loaded\n// By default it checks if it is at least 1px, but you can add a second argument to change this\n// ==========================================================================\n\nexport default function loadImage(src, minWidth = 1) {\n    return new Promise((resolve, reject) => {\n        const image = new Image();\n\n        const handler = () => {\n            delete image.onload;\n            delete image.onerror;\n            (image.naturalWidth >= minWidth ? resolve : reject)(image);\n        };\n\n        Object.assign(image, { onload: handler, onerror: handler, src });\n    });\n}\n","// ==========================================================================\n// Plyr UI\n// ==========================================================================\n\nimport captions from './captions';\nimport controls from './controls';\nimport support from './support';\nimport browser from './utils/browser';\nimport { getElement, toggleClass } from './utils/elements';\nimport { ready, triggerEvent } from './utils/events';\nimport i18n from './utils/i18n';\nimport is from './utils/is';\nimport loadImage from './utils/loadImage';\n\nconst ui = {\n    addStyleHook() {\n        toggleClass(this.elements.container, this.config.selectors.container.replace('.', ''), true);\n        toggleClass(this.elements.container, this.config.classNames.uiSupported, this.supported.ui);\n    },\n\n    addStylehookToFullscreenContainer () {\n        // append plyr__outer-container class name to outer container\n        if (this.config.fullscreenContainer) {\n            toggleClass(this.config.fullscreenContainer, this.config.classNames.outerContainer, true);\n        }\n    },\n\n    // Toggle native HTML5 media controls\n    toggleNativeControls(toggle = false) {\n        if (toggle && this.isHTML5) {\n            this.media.setAttribute('controls', '');\n        } else {\n            this.media.removeAttribute('controls');\n        }\n    },\n\n    // Setup the UI\n    build() {\n        // Re-attach media element listeners\n        // TODO: Use event bubbling?\n        this.listeners.media();\n\n        // Don't setup interface if no support\n        if (!this.supported.ui) {\n            this.debug.warn(`Basic support only for ${this.provider} ${this.type}`);\n\n            // Restore native controls\n            ui.toggleNativeControls.call(this, true);\n\n            this.ready = true;\n\n            // Bail\n            return;\n        }\n\n        // Inject custom controls if not present\n        if (!is.element(this.elements.controls)) {\n            // Inject custom controls\n            controls.inject.call(this);\n\n            // Re-attach control listeners\n            this.listeners.controls();\n        }\n\n        // Remove native controls\n        ui.toggleNativeControls.call(this);\n\n        // Setup captions for HTML5\n        if (this.isHTML5) {\n            captions.setup.call(this);\n        }\n\n        // Reset volume\n        this.volume = null;\n\n        // Reset mute state\n        this.muted = null;\n\n        // Reset speed\n        this.speed = null;\n\n        // Reset loop state\n        this.loop = null;\n\n        // Reset quality setting\n        this.quality = null;\n\n        // Reset volume display\n        controls.updateVolume.call(this);\n\n        // Reset time display\n        controls.timeUpdate.call(this);\n\n        // Update the UI\n        ui.checkPlaying.call(this);\n\n        // Check for picture-in-picture support\n        toggleClass(\n            this.elements.container,\n            this.config.classNames.pip.supported,\n            support.pip && this.isHTML5 && this.isVideo,\n        );\n\n        // Check for airplay support\n        toggleClass(this.elements.container, this.config.classNames.airplay.supported, support.airplay && this.isHTML5);\n\n        // Add iOS class\n        toggleClass(this.elements.container, this.config.classNames.isIos, browser.isIos);\n\n        // Add touch class\n        toggleClass(this.elements.container, this.config.classNames.isTouch, this.touch);\n\n        // Ready for API calls\n        this.ready = true;\n\n        // Ready event at end of execution stack\n        setTimeout(() => {\n            triggerEvent.call(this, this.media, 'ready');\n        }, 0);\n\n        // Set the title\n        ui.setTitle.call(this);\n\n        // Assure the poster image is set, if the property was added before the element was created\n        if (this.poster) {\n            ui.setPoster.call(this, this.poster, false).catch(() => {});\n        }\n\n        // Manually set the duration if user has overridden it.\n        // The event listeners for it doesn't get called if preload is disabled (#701)\n        if (this.config.duration) {\n            controls.durationUpdate.call(this);\n        }\n    },\n\n    // Setup aria attribute for play and iframe title\n    setTitle() {\n        // Find the current text\n        let label = i18n.get('play', this.config);\n\n        // If there's a media title set, use that for the label\n        if (is.string(this.config.title) && !is.empty(this.config.title)) {\n            label += `, ${this.config.title}`;\n        }\n\n        // If there's a play button, set label\n        Array.from(this.elements.buttons.play || []).forEach(button => {\n            button.setAttribute('aria-label', label);\n        });\n\n        // Set iframe title\n        // https://github.com/sampotts/plyr/issues/124\n        if (this.isEmbed) {\n            const iframe = getElement.call(this, 'iframe');\n\n            if (!is.element(iframe)) {\n                return;\n            }\n\n            // Default to media type\n            const title = !is.empty(this.config.title) ? this.config.title : 'video';\n            const format = i18n.get('frameTitle', this.config);\n\n            iframe.setAttribute('title', format.replace('{title}', title));\n        }\n    },\n\n    // Toggle poster\n    togglePoster(enable) {\n        toggleClass(this.elements.container, this.config.classNames.posterEnabled, enable);\n    },\n\n    // Set the poster image (async)\n    // Used internally for the poster setter, with the passive option forced to false\n    setPoster(poster, passive = true) {\n        // Don't override if call is passive\n        if (passive && this.poster) {\n            return Promise.reject(new Error('Poster already set'));\n        }\n\n        // Set property synchronously to respect the call order\n        this.media.setAttribute('poster', poster);\n\n        // Wait until ui is ready\n        return (\n            ready\n                .call(this)\n                // Load image\n                .then(() => loadImage(poster))\n                .catch(err => {\n                    // Hide poster on error unless it's been set by another call\n                    if (poster === this.poster) {\n                        ui.togglePoster.call(this, false);\n                    }\n                    // Rethrow\n                    throw err;\n                })\n                .then(() => {\n                    // Prevent race conditions\n                    if (poster !== this.poster) {\n                        throw new Error('setPoster cancelled by later call to setPoster');\n                    }\n                })\n                .then(() => {\n                    Object.assign(this.elements.poster.style, {\n                        backgroundImage: `url('${poster}')`,\n                        // Reset backgroundSize as well (since it can be set to \"cover\" for padded thumbnails for youtube)\n                        backgroundSize: '',\n                    });\n                    ui.togglePoster.call(this, true);\n                    return poster;\n                })\n        );\n    },\n\n    // Check playing state\n    checkPlaying(event) {\n        // Class hooks\n        toggleClass(this.elements.container, this.config.classNames.playing, this.playing);\n        toggleClass(this.elements.container, this.config.classNames.paused, this.paused);\n        toggleClass(this.elements.container, this.config.classNames.stopped, this.stopped);\n\n        // Set state\n        Array.from(this.elements.buttons.play || []).forEach(target => {\n            target.pressed = this.playing;\n        });\n\n        // Only update controls on non timeupdate events\n        if (is.event(event) && event.type === 'timeupdate') {\n            return;\n        }\n\n        // Toggle controls\n        ui.toggleControls.call(this);\n    },\n\n    // Check if media is loading\n    checkLoading(event) {\n        this.loading = ['stalled', 'waiting'].includes(event.type);\n\n        // Clear timer\n        clearTimeout(this.timers.loading);\n\n        // Timer to prevent flicker when seeking\n        this.timers.loading = setTimeout(() => {\n            // Update progress bar loading class state\n            toggleClass(this.elements.container, this.config.classNames.loading, this.loading);\n\n            // Update controls visibility\n            ui.toggleControls.call(this);\n        }, this.loading ? 250 : 0);\n    },\n\n    // Toggle controls based on state and `force` argument\n    toggleControls(force) {\n        const { controls } = this.elements;\n\n        if (controls && this.config.hideControls) {\n            // Don't hide controls if a touch-device user recently seeked. (Must be limited to touch devices, or it occasionally prevents desktop controls from hiding.)\n            const recentTouchSeek = (this.touch && this.lastSeekTime + 2000 > Date.now());\n\n            // Show controls if force, loading, paused, button interaction, or recent seek, otherwise hide\n            this.toggleControls(Boolean(force || this.loading || this.paused || controls.pressed || controls.hover || recentTouchSeek));\n        }\n    },\n};\n\nexport default ui;\n","// ==========================================================================\n// Plyr Event Listeners\n// ==========================================================================\n\nimport controls from './controls';\nimport ui from './ui';\nimport { repaint } from './utils/animation';\nimport browser from './utils/browser';\nimport { getElement, getElements, matches, toggleClass, toggleHidden } from './utils/elements';\nimport { on, once, toggleListener, triggerEvent } from './utils/events';\nimport is from './utils/is';\n\nclass Listeners {\n    constructor(player) {\n        this.player = player;\n        this.lastKey = null;\n        this.focusTimer = null;\n        this.lastKeyDown = null;\n\n        this.handleKey = this.handleKey.bind(this);\n        this.toggleMenu = this.toggleMenu.bind(this);\n        this.setTabFocus = this.setTabFocus.bind(this);\n        this.firstTouch = this.firstTouch.bind(this);\n    }\n\n    // Handle key presses\n    handleKey(event) {\n        const { player } = this;\n        const { elements } = player;\n        const code = event.keyCode ? event.keyCode : event.which;\n        const pressed = event.type === 'keydown';\n        const repeat = pressed && code === this.lastKey;\n\n        // Bail if a modifier key is set\n        if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n            return;\n        }\n\n        // If the event is bubbled from the media element\n        // Firefox doesn't get the keycode for whatever reason\n        if (!is.number(code)) {\n            return;\n        }\n\n        // Seek by the number keys\n        const seekByKey = () => {\n            // Divide the max duration into 10th's and times by the number value\n            player.currentTime = (player.duration / 10) * (code - 48);\n        };\n\n        // Handle the key on keydown\n        // Reset on keyup\n        if (pressed) {\n            // Check focused element\n            // and if the focused element is not editable (e.g. text input)\n            // and any that accept key input http://webaim.org/techniques/keyboard/\n            const focused = document.activeElement;\n            if (is.element(focused)) {\n                const { editable } = player.config.selectors;\n                const { seek } = elements.inputs;\n\n                if (focused !== seek && matches(focused, editable)) {\n                    return;\n                }\n\n                if (event.which === 32 && matches(focused, 'button, [role^=\"menuitem\"]')) {\n                    return;\n                }\n            }\n\n            // Which keycodes should we prevent default\n            const preventDefault = [27, 32, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 56, 57, 67, 70, 73, 75, 76, 77, 79];\n\n            // If the code is found prevent default (e.g. prevent scrolling for arrows)\n            if (preventDefault.includes(code)) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n\n            switch (code) {\n                case 27:\n                    // esc escape fullscreen mode\n                    if (this.player.fullscreen.enabled) {\n                        this.player.fullscreen.exit();\n                    }\n                    break;\n                case 48:\n                case 49:\n                case 50:\n                case 51:\n                case 52:\n                case 53:\n                case 54:\n                case 55:\n                case 56:\n                case 57:\n                    // 0-9\n                    if (!repeat) {\n                        seekByKey();\n                    }\n                    break;\n\n                case 32:\n                case 75:\n                    // Space and K key\n                    if (!repeat) {\n                        player.togglePlay();\n                    }\n                    break;\n\n                case 38:\n                    // Arrow up\n                    player.increaseVolume(0.1);\n                    break;\n\n                case 40:\n                    // Arrow down\n                    player.decreaseVolume(0.1);\n                    break;\n\n                case 77:\n                    // M key\n                    if (!repeat) {\n                        player.muted = !player.muted;\n                    }\n                    break;\n\n                case 39:\n                    // Arrow forward\n                    player.forward();\n                    break;\n\n                case 37:\n                    // Arrow back\n                    player.rewind();\n                    break;\n\n                case 70:\n                    // F key\n                    player.fullscreen.toggle();\n                    break;\n\n                case 67:\n                    // C key\n                    if (!repeat) {\n                        player.toggleCaptions();\n                    }\n                    break;\n\n                case 76:\n                    // L key\n                    player.loop = !player.loop;\n                    break;\n\n                case 78:\n                    // N key\n                    if (this.player.lectureNote && this.player.lectureNote.isLoadedLectureNote && this.player.lectureNote.addLectureNoteButtonStatus === 'enable') {\n                        this.player.lectureNote.addLectureNote();\n                    }\n                    break;\n\n                    /* case 73:\n                    this.setLoop('start');\n                    break;\n\n                case 76:\n                    this.setLoop();\n                    break;\n\n                case 79:\n                    this.setLoop('end');\n                    break; */\n\n                default:\n                    break;\n            }\n\n            // Escape is handle natively when in full screen\n            // So we only need to worry about non native\n            if (!player.fullscreen.enabled && player.fullscreen.active && code === 27) {\n                player.fullscreen.toggle();\n            }\n\n            // Store last code for next cycle\n            this.lastKey = code;\n        } else {\n            this.lastKey = null;\n        }\n    }\n\n    // Toggle menu\n    toggleMenu(event) {\n        controls.toggleMenu.call(this.player, event);\n    }\n\n    // Device is touch enabled\n    firstTouch() {\n        const { player } = this;\n        const { elements } = player;\n\n        player.touch = true;\n\n        // Add touch class\n        toggleClass(elements.container, player.config.classNames.isTouch, true);\n    }\n\n    setTabFocus(event) {\n        const { player } = this;\n        const { elements } = player;\n\n        clearTimeout(this.focusTimer);\n\n        // Ignore any key other than tab\n        if (event.type === 'keydown' && event.which !== 9) {\n            return;\n        }\n\n        // Store reference to event timeStamp\n        if (event.type === 'keydown') {\n            this.lastKeyDown = event.timeStamp;\n        }\n\n        // Remove current classes\n        const removeCurrent = () => {\n            const className = player.config.classNames.tabFocus;\n            const current = getElements.call(player, `.${className}`);\n            toggleClass(current, className, false);\n        };\n\n        // Determine if a key was pressed to trigger this event\n        const wasKeyDown = event.timeStamp - this.lastKeyDown <= 20;\n\n        // Ignore focus events if a key was pressed prior\n        if (event.type === 'focus' && !wasKeyDown) {\n            return;\n        }\n\n        // Remove all current\n        removeCurrent();\n\n        // Delay the adding of classname until the focus has changed\n        // This event fires before the focusin event\n        this.focusTimer = setTimeout(() => {\n            const focused = document.activeElement;\n\n            // Ignore if current focus element isn't inside the player\n            if (!elements.container.contains(focused)) {\n                return;\n            }\n\n            toggleClass(document.activeElement, player.config.classNames.tabFocus, true);\n        }, 10);\n    }\n\n    // Global window & document listeners\n    global(toggle = true) {\n        const { player } = this;\n\n        // Keyboard shortcuts\n        if (player.config.keyboard.global) {\n            toggleListener.call(player, window, 'keydown keyup', this.handleKey, toggle, false);\n        }\n\n        // Click anywhere closes menu\n        toggleListener.call(player, document.body, 'click', this.toggleMenu, toggle);\n\n        // Detect touch by events\n        once.call(player, document.body, 'touchstart', this.firstTouch);\n\n        // Tab focus detection\n        toggleListener.call(player, document.body, 'keydown focus blur', this.setTabFocus, toggle, false, true);\n    }\n\n    // Container listeners\n    container() {\n        const { player } = this;\n        const { elements } = player;\n\n        // Keyboard shortcuts\n        if (!player.config.keyboard.global && player.config.keyboard.focused) {\n            on.call(player, elements.container, 'keydown keyup', this.handleKey, false);\n        }\n\n        // Toggle controls on mouse events and entering fullscreen\n        on.call(\n            player,\n            elements.container,\n            'mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen',\n            event => {\n                const { controls } = elements;\n\n                // Remove button states for fullscreen\n                if (controls && event.type === 'enterfullscreen') {\n                    controls.pressed = false;\n                    controls.hover = false;\n                }\n\n                // Show, then hide after a timeout unless another control event occurs\n                const show = ['touchstart', 'touchmove', 'mousemove'].includes(event.type);\n\n                let delay = 0;\n\n                if (show) {\n                    ui.toggleControls.call(player, true);\n                    // Use longer timeout for touch devices\n                    delay = player.touch ? 3000 : 2000;\n                }\n\n                // Clear timer\n                clearTimeout(player.timers.controls);\n\n                // Set new timer to prevent flicker when seeking\n                player.timers.controls = setTimeout(() => ui.toggleControls.call(player, false), delay);\n            },\n        );\n    }\n\n    // Listen for media events\n    media() {\n        const { player } = this;\n        const { elements } = player;\n\n        // Time change on media\n        on.call(player, player.media, 'timeupdate seeking seeked', event => controls.timeUpdate.call(player, event));\n\n        // Display duration\n        on.call(player, player.media, 'durationchange loadeddata loadedmetadata', event =>\n            controls.durationUpdate.call(player, event),\n        );\n\n        // Check for audio tracks on load\n        // We can't use `loadedmetadata` as it doesn't seem to have audio tracks at that point\n        on.call(player, player.media, 'canplay', () => {\n            toggleHidden(elements.volume, !player.hasAudio);\n            toggleHidden(elements.buttons.mute, !player.hasAudio);\n        });\n\n        // Handle the media finishing\n        on.call(player, player.media, 'ended', () => {\n            // Show poster on end\n            if (player.isHTML5 && player.isVideo && player.config.resetOnEnd) {\n                // Restart\n                player.restart();\n            }\n        });\n\n        // Check for buffer progress\n        on.call(player, player.media, 'progress playing seeking seeked', event =>\n            controls.updateProgress.call(player, event),\n        );\n\n        // Handle volume changes\n        on.call(player, player.media, 'volumechange', event => controls.updateVolume.call(player, event));\n\n        // Handle play/pause\n        on.call(player, player.media, 'playing play pause ended emptied timeupdate', event =>\n            ui.checkPlaying.call(player, event),\n        );\n\n        // Loading state\n        on.call(player, player.media, 'waiting canplay seeked playing', event => ui.checkLoading.call(player, event));\n\n        // If autoplay, then load advertisement if required\n        // TODO: Show some sort of loading state while the ad manager loads else there's a delay before ad shows\n        on.call(player, player.media, 'playing', () => {\n            if (!player.ads) {\n                return;\n            }\n\n            // If ads are enabled, wait for them first\n            if (player.ads.enabled && !player.ads.initialized) {\n                // Wait for manager response\n                player.ads.managerPromise.then(() => player.ads.play()).catch(() => player.play());\n            }\n        });\n\n        // Click video\n        if (player.supported.ui && player.config.clickToPlay && !player.isAudio) {\n            // Re-fetch the wrapper\n            const wrapper = getElement.call(player, `.${player.config.classNames.video}`);\n\n            // Loading state\n            on.call(this.player, this.player.media, 'waiting canplay seeked playing', event =>\n                ui.checkLoading.call(this.player, event),\n            );\n\n            // On click play, pause or restart\n            on.call(player, elements.container, 'click', event => {\n                const targets = [elements.container, wrapper];\n\n                // Ignore if click if not container or in video wrapper\n                if (!targets.includes(event.target) && !wrapper.contains(event.target)) {\n                    return;\n                }\n\n                // Touch devices will just show controls (if hidden)\n                if (player.touch && player.config.hideControls) {\n                    return;\n                }\n\n                if (player.ended) {\n                    player.restart();\n                    player.play();\n                } else {\n                    player.togglePlay();\n                }\n            });\n        }\n\n        // Disable right click\n        if (player.supported.ui && player.config.disableContextMenu) {\n            on.call(\n                player,\n                elements.wrapper,\n                'contextmenu',\n                event => {\n                    event.preventDefault();\n                },\n                false,\n            );\n        }\n\n        // Volume change\n        on.call(player, player.media, 'volumechange', () => {\n            // Save to storage\n            player.storage.set({\n                volume: player.volume,\n                muted: player.muted,\n            });\n        });\n\n        // Speed change\n        on.call(player, player.media, 'ratechange', () => {\n            // Update UI\n            controls.updateSetting.call(player, 'speed');\n\n            // Save to storage\n            player.storage.set({ speed: player.speed });\n        });\n\n        // Quality change\n        on.call(player, player.media, 'qualitychange', event => {\n            // Update UI\n            controls.updateSetting.call(player, 'quality', null, event.detail.quality);\n        });\n\n        // Update download link when ready and if quality changes\n        on.call(player, player.media, 'ready qualitychange', () => {\n            controls.setDownloadLink.call(player);\n        });\n\n        // Proxy events to container\n        // Bubble up key events for Edge\n        const proxyEvents = player.config.events.concat(['keyup', 'keydown']).join(' ');\n\n        on.call(player, player.media, proxyEvents, event => {\n            let { detail = {} } = event;\n\n            // Get error details from media\n            if (event.type === 'error') {\n                detail = player.media.error;\n            }\n\n            triggerEvent.call(player, elements.container, event.type, true, detail);\n        });\n    }\n\n    // Run default and custom handlers\n    proxy(event, defaultHandler, customHandlerKey) {\n        const { player } = this;\n        const customHandler = player.config.listeners[customHandlerKey];\n        const hasCustomHandler = is.function(customHandler);\n        let returned = true;\n\n        // Execute custom handler\n        if (hasCustomHandler) {\n            returned = customHandler.call(player, event);\n        }\n\n        // Only call default handler if not prevented in custom handler\n        if (returned && is.function(defaultHandler)) {\n            defaultHandler.call(player, event);\n        }\n    }\n\n    // Trigger custom and default handlers\n    bind(element, type, defaultHandler, customHandlerKey, passive = true) {\n        const { player } = this;\n        const customHandler = player.config.listeners[customHandlerKey];\n        const hasCustomHandler = is.function(customHandler);\n\n        on.call(\n            player,\n            element,\n            type,\n            event => this.proxy(event, defaultHandler, customHandlerKey),\n            passive && !hasCustomHandler,\n        );\n    }\n\n    // Listen for control events\n    controls() {\n        const { player } = this;\n        const { elements } = player;\n\n        // IE doesn't support input event, so we fallback to change\n        const inputEvent = browser.isIE ? 'change' : 'input';\n\n        // Play/pause toggle\n        if (elements.buttons.play) {\n            Array.from(elements.buttons.play).forEach(button => {\n                this.bind(button, 'click', player.togglePlay, 'play');\n            });\n        }\n\n        // Pause\n        this.bind(elements.buttons.restart, 'click', player.restart, 'restart');\n\n        // Rewind\n        this.bind(elements.buttons.rewind, 'click', player.rewind, 'rewind');\n\n        // Rewind\n        this.bind(elements.buttons.fastForward, 'click', player.forward, 'fastForward');\n\n        // Mute toggle\n        this.bind(\n            elements.buttons.mute,\n            'click',\n            () => {\n                player.muted = !player.muted;\n            },\n            'mute',\n        );\n\n        // Captions toggle\n        this.bind(elements.buttons.captions, 'click', () => player.toggleCaptions());\n\n        // Download\n        this.bind(\n            elements.buttons.download,\n            'click',\n            () => {\n                triggerEvent.call(player, player.media, 'download');\n            },\n            'download',\n        );\n\n        // zoom toggle\n        this.bind(\n            elements.buttons.zoom,\n            'click',\n            () => {\n                player.fullscreen.toggleZoom();\n            },\n            'zoom',\n        );\n\n        // Fullscreen toggle\n        this.bind(\n            elements.buttons.fullscreen,\n            'click',\n            () => {\n                player.fullscreen.toggle();\n            },\n            'fullscreen',\n        );\n\n        // Picture-in-Picture\n        this.bind(\n            elements.buttons.pip,\n            'click',\n            () => {\n                player.pip = 'toggle';\n            },\n            'pip',\n        );\n\n        // Airplay\n        this.bind(elements.buttons.airplay, 'click', player.airplay, 'airplay');\n\n        // Settings menu - click toggle\n        this.bind(elements.buttons.settings, 'click', event => {\n            // Prevent the document click listener closing the menu\n            event.stopPropagation();\n\n            controls.toggleMenu.call(player, event);\n        });\n\n        // Settings menu - keyboard toggle\n        // We have to bind to keyup otherwise Firefox triggers a click when a keydown event handler shifts focus\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n        this.bind(\n            elements.buttons.settings,\n            'keyup',\n            event => {\n                const code = event.which;\n\n                // We only care about space and return\n                if (![13, 32].includes(code)) {\n                    return;\n                }\n\n                // Because return triggers a click anyway, all we need to do is set focus\n                if (code === 13) {\n                    controls.focusFirstMenuItem.call(player, null, true);\n                    return;\n                }\n\n                // Prevent scroll\n                event.preventDefault();\n\n                // Prevent playing video (Firefox)\n                event.stopPropagation();\n\n                // Toggle menu\n                controls.toggleMenu.call(player, event);\n            },\n            null,\n            false, // Can't be passive as we're preventing default\n        );\n\n        // Escape closes menu\n        this.bind(elements.settings.menu, 'keydown', event => {\n            if (event.which === 27) {\n                controls.toggleMenu.call(player, event);\n            }\n        });\n\n        // Set range input alternative \"value\", which matches the tooltip time (#954)\n        this.bind(elements.inputs.seek, 'mousedown mousemove', event => {\n            const rect = elements.progress.getBoundingClientRect();\n            const percent = (100 / rect.width) * (event.pageX - rect.left);\n            event.currentTarget.setAttribute('seek-value', percent);\n        });\n\n        // Pause while seeking\n        this.bind(elements.inputs.seek, 'mousedown mouseup keydown keyup touchstart touchend', event => {\n            const seek = event.currentTarget;\n            const code = event.keyCode ? event.keyCode : event.which;\n            const attribute = 'play-on-seeked';\n\n            if (is.keyboardEvent(event) && (code !== 39 && code !== 37)) {\n                return;\n            }\n\n            // Record seek time so we can prevent hiding controls for a few seconds after seek\n            player.lastSeekTime = Date.now();\n\n            // Was playing before?\n            const play = seek.hasAttribute(attribute);\n\n            // Done seeking\n            const done = ['mouseup', 'touchend', 'keyup'].includes(event.type);\n\n            // If we're done seeking and it was playing, resume playback\n            if (play && done) {\n                seek.removeAttribute(attribute);\n                player.play();\n            } else if (!done && player.playing) {\n                seek.setAttribute(attribute, '');\n                player.pause();\n            }\n        });\n\n        // Fix range inputs on iOS\n        // Super weird iOS bug where after you interact with an <input type=\"range\">,\n        // it takes over further interactions on the page. This is a hack\n        if (browser.isIos) {\n            const inputs = getElements.call(player, 'input[type=\"range\"]');\n            Array.from(inputs).forEach(input => this.bind(input, inputEvent, event => repaint(event.target)));\n        }\n\n        // Seek\n        this.bind(\n            elements.inputs.seek,\n            inputEvent,\n            event => {\n                const seek = event.currentTarget;\n\n                // If it exists, use seek-value instead of \"value\" for consistency with tooltip time (#954)\n                let seekTo = seek.getAttribute('seek-value');\n\n                if (is.empty(seekTo)) {\n                    seekTo = seek.value;\n                }\n\n                seek.removeAttribute('seek-value');\n\n                player.currentTime = (seekTo / seek.max) * player.duration;\n            },\n            'seek',\n        );\n\n        // Seek tooltip\n        this.bind(elements.progress, 'mouseenter mouseleave mousemove', event =>\n            controls.updateSeekTooltip.call(player, event),\n        );\n\n        // Polyfill for lower fill in <input type=\"range\"> for webkit\n        if (browser.isWebkit) {\n            Array.from(getElements.call(player, 'input[type=\"range\"]')).forEach(element => {\n                this.bind(element, 'input', event => controls.updateRangeFill.call(player, event.target));\n            });\n        }\n\n        // Current time invert\n        // Only if one time element is used for both currentTime and duration\n        if (player.config.toggleInvert && !is.element(elements.display.duration)) {\n            this.bind(elements.display.currentTime, 'click', () => {\n                // Do nothing if we're at the start\n                if (player.currentTime === 0) {\n                    return;\n                }\n\n                player.config.invertTime = !player.config.invertTime;\n\n                controls.timeUpdate.call(player);\n            });\n        }\n\n        // Volume\n        this.bind(\n            elements.inputs.volume,\n            inputEvent,\n            event => {\n                player.volume = event.target.value;\n            },\n            'volume',\n        );\n\n        // Update controls.hover state (used for ui.toggleControls to avoid hiding when interacting)\n        this.bind(elements.controls, 'mouseenter mouseleave', event => {\n            elements.controls.hover = !player.touch && event.type === 'mouseenter';\n        });\n\n        // Update controls.pressed state (used for ui.toggleControls to avoid hiding when interacting)\n        this.bind(elements.controls, 'mousedown mouseup touchstart touchend touchcancel', event => {\n            elements.controls.pressed = ['mousedown', 'touchstart'].includes(event.type);\n        });\n\n        // Show controls when they receive focus (e.g., when using keyboard tab key)\n        this.bind(elements.controls, 'focusin', () => {\n            const { config, elements, timers } = player;\n\n            // Skip transition to prevent focus from scrolling the parent element\n            toggleClass(elements.controls, config.classNames.noTransition, true);\n\n            // Toggle\n            ui.toggleControls.call(player, true);\n\n            // Restore transition\n            setTimeout(() => {\n                toggleClass(elements.controls, config.classNames.noTransition, false);\n            }, 0);\n\n            // Delay a little more for mouse users\n            const delay = this.touch ? 3000 : 4000;\n\n            // Clear timer\n            clearTimeout(timers.controls);\n\n            // Hide again after delay\n            timers.controls = setTimeout(() => ui.toggleControls.call(player, false), delay);\n        });\n\n        // Mouse wheel for volume\n        this.bind(\n            elements.inputs.volume,\n            'wheel',\n            event => {\n                // Detect \"natural\" scroll - suppored on OS X Safari only\n                // Other browsers on OS X will be inverted until support improves\n                const inverted = event.webkitDirectionInvertedFromDevice;\n\n                // Get delta from event. Invert if `inverted` is true\n                const [x, y] = [event.deltaX, -event.deltaY].map(value => (inverted ? -value : value));\n\n                // Using the biggest delta, normalize to 1 or -1 (or 0 if no delta)\n                const direction = Math.sign(Math.abs(x) > Math.abs(y) ? x : y);\n\n                // Change the volume by 2%\n                player.increaseVolume(direction / 50);\n\n                // Don't break page scrolling at max and min\n                const { volume } = player.media;\n                if ((direction === 1 && volume < 1) || (direction === -1 && volume > 0)) {\n                    event.preventDefault();\n                }\n            },\n            'volume',\n            false,\n        );\n    }\n}\n\nexport default Listeners;\n","import { setAttributes, toggleClass } from './utils/elements';\n\nconst logo = {\n    setup() {\n        // add custom logo\n        if (this.config.logo && this.config.logo.url) {\n            // build logo container\n            const logoContainer = document.createElement('div');\n            toggleClass(logoContainer, this.config.classNames.logo, true);\n\n            // image put into logo container if link not present\n            let imageContainer = logoContainer;\n\n            if (this.config.logo.link) {\n                // if logo.link setup, put image into a\n                const linkElement = document.createElement('a');\n                setAttributes(linkElement, {\n                    href: this.config.logo.link,\n                });\n                logoContainer.appendChild(linkElement);\n                imageContainer = linkElement;\n            }\n\n            // build logo image\n            const logoElement = document.createElement('img');\n            setAttributes(logoElement, {\n                src: this.config.logo.url,\n            });\n            imageContainer.appendChild(logoElement);\n            this.elements.container.appendChild(logoContainer);\n        }\n    },\n};\n\nexport default logo;\n","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.loadjs = factory();\n  }\n}(this, function() {\n/**\n * Global dependencies.\n * @global {Object} document - DOM\n */\n\nvar devnull = function() {},\n    bundleIdCache = {},\n    bundleResultCache = {},\n    bundleCallbackQueue = {};\n\n\n/**\n * Subscribe to bundle load event.\n * @param {string[]} bundleIds - Bundle ids\n * @param {Function} callbackFn - The callback function\n */\nfunction subscribe(bundleIds, callbackFn) {\n  // listify\n  bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n\n  var depsNotFound = [],\n      i = bundleIds.length,\n      numWaiting = i,\n      fn,\n      bundleId,\n      r,\n      q;\n\n  // define callback function\n  fn = function (bundleId, pathsNotFound) {\n    if (pathsNotFound.length) depsNotFound.push(bundleId);\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(depsNotFound);\n  };\n\n  // register callback\n  while (i--) {\n    bundleId = bundleIds[i];\n\n    // execute callback if in result cache\n    r = bundleResultCache[bundleId];\n    if (r) {\n      fn(bundleId, r);\n      continue;\n    }\n\n    // add to callback queue\n    q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n    q.push(fn);\n  }\n}\n\n\n/**\n * Publish bundle load event.\n * @param {string} bundleId - Bundle id\n * @param {string[]} pathsNotFound - List of files not found\n */\nfunction publish(bundleId, pathsNotFound) {\n  // exit if id isn't defined\n  if (!bundleId) return;\n\n  var q = bundleCallbackQueue[bundleId];\n\n  // cache result\n  bundleResultCache[bundleId] = pathsNotFound;\n\n  // exit if queue is empty\n  if (!q) return;\n\n  // empty callback queue\n  while (q.length) {\n    q[0](bundleId, pathsNotFound);\n    q.splice(0, 1);\n  }\n}\n\n\n/**\n * Execute callbacks.\n * @param {Object or Function} args - The callback args\n * @param {string[]} depsNotFound - List of dependencies not found\n */\nfunction executeCallbacks(args, depsNotFound) {\n  // accept function as argument\n  if (args.call) args = {success: args};\n\n  // success and error callbacks\n  if (depsNotFound.length) (args.error || devnull)(depsNotFound);\n  else (args.success || devnull)(args);\n}\n\n\n/**\n * Load individual file.\n * @param {string} path - The file path\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFile(path, callbackFn, args, numTries) {\n  var doc = document,\n      async = args.async,\n      maxTries = (args.numRetries || 0) + 1,\n      beforeCallbackFn = args.before || devnull,\n      pathStripped = path.replace(/^(css|img)!/, ''),\n      isCss,\n      e;\n\n  numTries = numTries || 0;\n\n  if (/(^css!|\\.css$)/.test(path)) {\n    isCss = true;\n\n    // css\n    e = doc.createElement('link');\n    e.rel = 'stylesheet';\n    e.href = pathStripped; //.replace(/^css!/, '');  // remove \"css!\" prefix\n  } else if (/(^img!|\\.(png|gif|jpg|svg)$)/.test(path)) {\n    // image\n    e = doc.createElement('img');\n    e.src = pathStripped;    \n  } else {\n    // javascript\n    e = doc.createElement('script');\n    e.src = path;\n    e.async = async === undefined ? true : async;\n  }\n\n  e.onload = e.onerror = e.onbeforeload = function (ev) {\n    var result = ev.type[0];\n\n    // Note: The following code isolates IE using `hideFocus` and treats empty\n    // stylesheets as failures to get around lack of onerror support\n    if (isCss && 'hideFocus' in e) {\n      try {\n        if (!e.sheet.cssText.length) result = 'e';\n      } catch (x) {\n        // sheets objects created from load errors don't allow access to\n        // `cssText`\n        result = 'e';\n      }\n    }\n\n    // handle retries in case of load failure\n    if (result == 'e') {\n      // increment counter\n      numTries += 1;\n\n      // exit function and try again\n      if (numTries < maxTries) {\n        return loadFile(path, callbackFn, args, numTries);\n      }\n    }\n\n    // execute callback\n    callbackFn(path, result, ev.defaultPrevented);\n  };\n\n  // add to document (unless callback returns `false`)\n  if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n}\n\n\n/**\n * Load multiple files.\n * @param {string[]} paths - The file paths\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFiles(paths, callbackFn, args) {\n  // listify paths\n  paths = paths.push ? paths : [paths];\n\n  var numWaiting = paths.length,\n      x = numWaiting,\n      pathsNotFound = [],\n      fn,\n      i;\n\n  // define callback function\n  fn = function(path, result, defaultPrevented) {\n    // handle error\n    if (result == 'e') pathsNotFound.push(path);\n\n    // handle beforeload event. If defaultPrevented then that means the load\n    // will be blocked (ex. Ghostery/ABP on Safari)\n    if (result == 'b') {\n      if (defaultPrevented) pathsNotFound.push(path);\n      else return;\n    }\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(pathsNotFound);\n  };\n\n  // load scripts\n  for (i=0; i < x; i++) loadFile(paths[i], fn, args);\n}\n\n\n/**\n * Initiate script load and register bundle.\n * @param {(string|string[])} paths - The file paths\n * @param {(string|Function)} [arg1] - The bundleId or success callback\n * @param {Function} [arg2] - The success or error callback\n * @param {Function} [arg3] - The error callback\n */\nfunction loadjs(paths, arg1, arg2) {\n  var bundleId,\n      args;\n\n  // bundleId (if string)\n  if (arg1 && arg1.trim) bundleId = arg1;\n\n  // args (default is {})\n  args = (bundleId ? arg2 : arg1) || {};\n\n  // throw error if bundle is already defined\n  if (bundleId) {\n    if (bundleId in bundleIdCache) {\n      throw \"LoadJS\";\n    } else {\n      bundleIdCache[bundleId] = true;\n    }\n  }\n\n  // load scripts\n  loadFiles(paths, function (pathsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, pathsNotFound);\n\n    // publish bundle load event\n    publish(bundleId, pathsNotFound);\n  }, args);\n}\n\n\n/**\n * Execute callbacks when dependencies have been satisfied.\n * @param {(string|string[])} deps - List of bundle ids\n * @param {Object} args - success/error arguments\n */\nloadjs.ready = function ready(deps, args) {\n  // subscribe to bundle load event\n  subscribe(deps, function (depsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, depsNotFound);\n  });\n\n  return loadjs;\n};\n\n\n/**\n * Manually satisfy bundle dependencies.\n * @param {string} bundleId - The bundle id\n */\nloadjs.done = function done(bundleId) {\n  publish(bundleId, []);\n};\n\n\n/**\n * Reset loadjs dependencies statuses\n */\nloadjs.reset = function reset() {\n  bundleIdCache = {};\n  bundleResultCache = {};\n  bundleCallbackQueue = {};\n};\n\n\n/**\n * Determine if bundle has already been defined\n * @param String} bundleId - The bundle id\n */\nloadjs.isDefined = function isDefined(bundleId) {\n  return bundleId in bundleIdCache;\n};\n\n\n// export\nreturn loadjs;\n\n}));\n","// ==========================================================================\n// Load an external script\n// ==========================================================================\n\nimport loadjs from 'loadjs';\n\nexport default function loadScript(url) {\n    return new Promise((resolve, reject) => {\n        loadjs(url, {\n            success: resolve,\n            error: reject,\n        });\n    });\n}\n","// ==========================================================================\n// Vimeo plugin\n// ==========================================================================\n\nimport captions from '../captions';\nimport controls from '../controls';\nimport ui from '../ui';\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport loadScript from '../utils/loadScript';\nimport { format, stripHTML } from '../utils/strings';\nimport { buildUrlParams } from '../utils/urls';\n\n// Parse Vimeo ID from URL\nfunction parseId(url) {\n    if (is.empty(url)) {\n        return null;\n    }\n\n    if (is.number(Number(url))) {\n        return url;\n    }\n\n    const regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Get aspect ratio for dimensions\nfunction getAspectRatio(width, height) {\n    const getRatio = (w, h) => (h === 0 ? w : getRatio(h, w % h));\n    const ratio = getRatio(width, height);\n    return `${width / ratio}:${height / ratio}`;\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n        this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst vimeo = {\n    setup() {\n        // Add embed class for responsive\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set intial ratio\n        vimeo.setAspectRatio.call(this);\n\n        // Load the API if not already\n        if (!is.object(window.Vimeo)) {\n            loadScript(this.config.urls.vimeo.sdk)\n                .then(() => {\n                    vimeo.ready.call(this);\n                })\n                .catch(error => {\n                    this.debug.warn('Vimeo API failed to load', error);\n                });\n        } else {\n            vimeo.ready.call(this);\n        }\n    },\n\n    // Set aspect ratio\n    // For Vimeo we have an extra 300% height <div> to hide the standard controls and UI\n    setAspectRatio(input) {\n        const [x, y] = (is.string(input) ? input : this.config.ratio).split(':');\n        const padding = (100 / x) * y;\n        this.elements.wrapper.style.paddingBottom = `${padding}%`;\n\n        if (this.supported.ui) {\n            const height = 240;\n            const offset = (height - padding) / (height / 50);\n\n            this.media.style.transform = `translateY(-${offset}%)`;\n        }\n    },\n\n    // API Ready\n    ready() {\n        const player = this;\n\n        // Get Vimeo params for the iframe\n        const options = {\n            loop: player.config.loop.active,\n            autoplay: player.autoplay,\n            // muted: player.muted,\n            byline: false,\n            portrait: false,\n            title: false,\n            speed: true,\n            transparent: 0,\n            gesture: 'media',\n            playsinline: !this.config.fullscreen.iosNative,\n        };\n        const params = buildUrlParams(options);\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (is.empty(source)) {\n            source = player.media.getAttribute(player.config.attributes.embed.id);\n        }\n\n        const id = parseId(source);\n\n        // Build an iframe\n        const iframe = createElement('iframe');\n        const src = format(player.config.urls.vimeo.iframe, id, params);\n        iframe.setAttribute('src', src);\n        iframe.setAttribute('allowfullscreen', '');\n        iframe.setAttribute('allowtransparency', '');\n        iframe.setAttribute('allow', 'autoplay');\n\n        // Get poster, if already set\n        const { poster } = player;\n\n        // Inject the package\n        const wrapper = createElement('div', { poster, class: player.config.classNames.embedContainer });\n        wrapper.appendChild(iframe);\n        player.media = replaceElement(wrapper, player.media);\n\n        // Get poster image\n        fetch(format(player.config.urls.vimeo.api, id), 'json').then(response => {\n            if (is.empty(response)) {\n                return;\n            }\n\n            // Get the URL for thumbnail\n            const url = new URL(response[0].thumbnail_large);\n\n            // Get original image\n            url.pathname = `${url.pathname.split('_')[0]}.jpg`;\n\n            // Set and show poster\n            ui.setPoster.call(player, url.href).catch(() => {});\n        });\n\n        // Setup instance\n        // https://github.com/vimeo/player.js\n        player.embed = new window.Vimeo.Player(iframe, {\n            autopause: player.config.autopause,\n            muted: player.muted,\n        });\n\n        player.media.paused = true;\n        player.media.currentTime = 0;\n\n        // Disable native text track rendering\n        if (player.supported.ui) {\n            player.embed.disableTextTrack();\n        }\n\n        // Create a faux HTML5 API using the Vimeo API\n        player.media.play = () => {\n            assurePlaybackState.call(player, true);\n            return player.embed.play();\n        };\n\n        player.media.pause = () => {\n            assurePlaybackState.call(player, false);\n            return player.embed.pause();\n        };\n\n        player.media.stop = () => {\n            player.pause();\n            player.currentTime = 0;\n        };\n\n        // Seeking\n        let { currentTime } = player.media;\n        Object.defineProperty(player.media, 'currentTime', {\n            get() {\n                return currentTime;\n            },\n            set(time) {\n                // Vimeo will automatically play on seek if the video hasn't been played before\n\n                // Get current paused state and volume etc\n                const { embed, media, paused, volume } = player;\n                const restorePause = paused && !embed.hasPlayed;\n\n                // Set seeking state and trigger event\n                media.seeking = true;\n                triggerEvent.call(player, media, 'seeking');\n\n                // If paused, mute until seek is complete\n                Promise.resolve(restorePause && embed.setVolume(0))\n                    // Seek\n                    .then(() => embed.setCurrentTime(time))\n                    // Restore paused\n                    .then(() => restorePause && embed.pause())\n                    // Restore volume\n                    .then(() => restorePause && embed.setVolume(volume))\n                    .catch(() => {\n                        // Do nothing\n                    });\n            },\n        });\n\n        // Playback speed\n        let speed = player.config.speed.selected;\n        Object.defineProperty(player.media, 'playbackRate', {\n            get() {\n                return speed;\n            },\n            set(input) {\n                player.embed\n                    .setPlaybackRate(input)\n                    .then(() => {\n                        speed = input;\n                        triggerEvent.call(player, player.media, 'ratechange');\n                    })\n                    .catch(error => {\n                        // Hide menu item (and menu if empty)\n                        if (error.name === 'Error') {\n                            controls.setSpeedMenu.call(player, []);\n                        }\n                    });\n            },\n        });\n\n        // Volume\n        let { volume } = player.config;\n        Object.defineProperty(player.media, 'volume', {\n            get() {\n                return volume;\n            },\n            set(input) {\n                player.embed.setVolume(input).then(() => {\n                    volume = input;\n                    triggerEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Muted\n        let { muted } = player.config;\n        Object.defineProperty(player.media, 'muted', {\n            get() {\n                return muted;\n            },\n            set(input) {\n                const toggle = is.boolean(input) ? input : false;\n\n                player.embed.setVolume(toggle ? 0 : player.config.volume).then(() => {\n                    muted = toggle;\n                    triggerEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Loop\n        let { loop } = player.config;\n        Object.defineProperty(player.media, 'loop', {\n            get() {\n                return loop;\n            },\n            set(input) {\n                const toggle = is.boolean(input) ? input : player.config.loop.active;\n\n                player.embed.setLoop(toggle).then(() => {\n                    loop = toggle;\n                });\n            },\n        });\n\n        // Source\n        let currentSrc;\n        player.embed\n            .getVideoUrl()\n            .then(value => {\n                currentSrc = value;\n                controls.setDownloadLink.call(player);\n            })\n            .catch(error => {\n                this.debug.warn(error);\n            });\n\n        Object.defineProperty(player.media, 'currentSrc', {\n            get() {\n                return currentSrc;\n            },\n        });\n\n        // Ended\n        Object.defineProperty(player.media, 'ended', {\n            get() {\n                return player.currentTime === player.duration;\n            },\n        });\n\n        // Set aspect ratio based on video size\n        Promise.all([player.embed.getVideoWidth(), player.embed.getVideoHeight()]).then(dimensions => {\n            const ratio = getAspectRatio(dimensions[0], dimensions[1]);\n            vimeo.setAspectRatio.call(this, ratio);\n        });\n\n        // Set autopause\n        player.embed.setAutopause(player.config.autopause).then(state => {\n            player.config.autopause = state;\n        });\n\n        // Get title\n        player.embed.getVideoTitle().then(title => {\n            player.config.title = title;\n            ui.setTitle.call(this);\n        });\n\n        // Get current time\n        player.embed.getCurrentTime().then(value => {\n            currentTime = value;\n            triggerEvent.call(player, player.media, 'timeupdate');\n        });\n\n        // Get duration\n        player.embed.getDuration().then(value => {\n            player.media.duration = value;\n            triggerEvent.call(player, player.media, 'durationchange');\n        });\n\n        // Get captions\n        player.embed.getTextTracks().then(tracks => {\n            player.media.textTracks = tracks;\n            captions.setup.call(player);\n        });\n\n        player.embed.on('cuechange', ({ cues = [] }) => {\n            const strippedCues = cues.map(cue => stripHTML(cue.text));\n            captions.updateCues.call(player, strippedCues);\n        });\n\n        player.embed.on('loaded', () => {\n            // Assure state and events are updated on autoplay\n            player.embed.getPaused().then(paused => {\n                assurePlaybackState.call(player, !paused);\n                if (!paused) {\n                    triggerEvent.call(player, player.media, 'playing');\n                }\n            });\n\n            if (is.element(player.embed.element) && player.supported.ui) {\n                const frame = player.embed.element;\n\n                // Fix keyboard focus issues\n                // https://github.com/sampotts/plyr/issues/317\n                frame.setAttribute('tabindex', -1);\n            }\n        });\n\n        player.embed.on('play', () => {\n            assurePlaybackState.call(player, true);\n            triggerEvent.call(player, player.media, 'playing');\n        });\n\n        player.embed.on('pause', () => {\n            assurePlaybackState.call(player, false);\n        });\n\n        player.embed.on('timeupdate', data => {\n            player.media.seeking = false;\n            currentTime = data.seconds;\n            triggerEvent.call(player, player.media, 'timeupdate');\n        });\n\n        player.embed.on('progress', data => {\n            player.media.buffered = data.percent;\n            triggerEvent.call(player, player.media, 'progress');\n\n            // Check all loaded\n            if (parseInt(data.percent, 10) === 1) {\n                triggerEvent.call(player, player.media, 'canplaythrough');\n            }\n\n            // Get duration as if we do it before load, it gives an incorrect value\n            // https://github.com/sampotts/plyr/issues/891\n            player.embed.getDuration().then(value => {\n                if (value !== player.media.duration) {\n                    player.media.duration = value;\n                    triggerEvent.call(player, player.media, 'durationchange');\n                }\n            });\n        });\n\n        player.embed.on('seeked', () => {\n            player.media.seeking = false;\n            triggerEvent.call(player, player.media, 'seeked');\n        });\n\n        player.embed.on('ended', () => {\n            player.media.paused = true;\n            triggerEvent.call(player, player.media, 'ended');\n        });\n\n        player.embed.on('error', detail => {\n            player.media.error = detail;\n            triggerEvent.call(player, player.media, 'error');\n        });\n\n        // Rebuild UI\n        setTimeout(() => ui.build.call(player), 0);\n    },\n};\n\nexport default vimeo;\n","// ==========================================================================\n// YouTube plugin\n// ==========================================================================\n\nimport ui from '../ui';\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport loadImage from '../utils/loadImage';\nimport loadScript from '../utils/loadScript';\nimport { format, generateId } from '../utils/strings';\n\n// Parse YouTube ID from URL\nfunction parseId(url) {\n    if (is.empty(url)) {\n        return null;\n    }\n\n    const regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n        this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst youtube = {\n    setup() {\n        // Add embed class for responsive\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set aspect ratio\n        youtube.setAspectRatio.call(this);\n\n        // Setup API\n        if (is.object(window.YT) && is.function(window.YT.Player)) {\n            youtube.ready.call(this);\n        } else {\n            // Load the API\n            loadScript(this.config.urls.youtube.sdk).catch(error => {\n                this.debug.warn('YouTube API failed to load', error);\n            });\n\n            // Setup callback for the API\n            // YouTube has it's own system of course...\n            window.onYouTubeReadyCallbacks = window.onYouTubeReadyCallbacks || [];\n\n            // Add to queue\n            window.onYouTubeReadyCallbacks.push(() => {\n                youtube.ready.call(this);\n            });\n\n            // Set callback to process queue\n            window.onYouTubeIframeAPIReady = () => {\n                window.onYouTubeReadyCallbacks.forEach(callback => {\n                    callback();\n                });\n            };\n        }\n    },\n\n    // Get the media title\n    getTitle(videoId) {\n        // Try via undocumented API method first\n        // This method disappears now and then though...\n        // https://github.com/sampotts/plyr/issues/709\n        if (is.function(this.embed.getVideoData)) {\n            const { title } = this.embed.getVideoData();\n\n            if (is.empty(title)) {\n                this.config.title = title;\n                ui.setTitle.call(this);\n                return;\n            }\n        }\n\n        // Or via Google API\n        const key = this.config.keys.google;\n        if (is.string(key) && !is.empty(key)) {\n            const url = format(this.config.urls.youtube.api, videoId, key);\n\n            fetch(url)\n                .then(result => {\n                    if (is.object(result)) {\n                        this.config.title = result.items[0].snippet.title;\n                        ui.setTitle.call(this);\n                    }\n                })\n                .catch(() => {});\n        }\n    },\n\n    // Set aspect ratio\n    setAspectRatio() {\n        const ratio = this.config.ratio.split(':');\n        this.elements.wrapper.style.paddingBottom = `${100 / ratio[0] * ratio[1]}%`;\n    },\n\n    // API ready\n    ready() {\n        const player = this;\n\n        // Ignore already setup (race condition)\n        const currentId = player.media.getAttribute('id');\n        if (!is.empty(currentId) && currentId.startsWith('youtube-')) {\n            return;\n        }\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (is.empty(source)) {\n            source = player.media.getAttribute(this.config.attributes.embed.id);\n        }\n\n        // Replace the <iframe> with a <div> due to YouTube API issues\n        const videoId = parseId(source);\n        const id = generateId(player.provider);\n\n        // Get poster, if already set\n        const { poster } = player;\n\n        // Replace media element\n        const container = createElement('div', { id, poster });\n        player.media = replaceElement(container, player.media);\n\n        // Id to poster wrapper\n        const posterSrc = format => `https://img.youtube.com/vi/${videoId}/${format}default.jpg`;\n\n        // Check thumbnail images in order of quality, but reject fallback thumbnails (120px wide)\n        loadImage(posterSrc('maxres'), 121) // Higest quality and unpadded\n            .catch(() => loadImage(posterSrc('sd'), 121)) // 480p padded 4:3\n            .catch(() => loadImage(posterSrc('hq'))) // 360p padded 4:3. Always exists\n            .then(image => ui.setPoster.call(player, image.src))\n            .then(posterSrc => {\n                // If the image is padded, use background-size \"cover\" instead (like youtube does too with their posters)\n                if (!posterSrc.includes('maxres')) {\n                    player.elements.poster.style.backgroundSize = 'cover';\n                }\n            })\n            .catch(() => {});\n\n        // Setup instance\n        // https://developers.google.com/youtube/iframe_api_reference\n        player.embed = new window.YT.Player(id, {\n            videoId,\n            playerVars: {\n                autoplay: player.config.autoplay ? 1 : 0, // Autoplay\n                hl: player.config.hl, // iframe interface language\n                controls: player.supported.ui ? 0 : 1, // Only show controls if not fully supported\n                rel: 0, // No related vids\n                showinfo: 0, // Hide info\n                iv_load_policy: 3, // Hide annotations\n                modestbranding: 1, // Hide logos as much as possible (they still show one in the corner when paused)\n                disablekb: 1, // Disable keyboard as we handle it\n                playsinline: 1, // Allow iOS inline playback\n\n                // Tracking for stats\n                // origin: window ? `${window.location.protocol}//${window.location.host}` : null,\n                widget_referrer: window ? window.location.href : null,\n\n                // Captions are flaky on YouTube\n                cc_load_policy: player.captions.active ? 1 : 0,\n                cc_lang_pref: player.config.captions.language,\n            },\n            events: {\n                onError(event) {\n                    // YouTube may fire onError twice, so only handle it once\n                    if (!player.media.error) {\n                        const code = event.data;\n                        // Messages copied from https://developers.google.com/youtube/iframe_api_reference#onError\n                        const message =\n                            {\n                                2: 'The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.',\n                                5: 'The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.',\n                                100: 'The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.',\n                                101: 'The owner of the requested video does not allow it to be played in embedded players.',\n                                150: 'The owner of the requested video does not allow it to be played in embedded players.',\n                            }[code] || 'An unknown error occured';\n\n                        player.media.error = { code, message };\n\n                        triggerEvent.call(player, player.media, 'error');\n                    }\n                },\n                onPlaybackRateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get current speed\n                    player.media.playbackRate = instance.getPlaybackRate();\n\n                    triggerEvent.call(player, player.media, 'ratechange');\n                },\n                onReady(event) {\n                    // Bail if onReady has already been called. See issue #1108\n                    if (is.function(player.media.play)) {\n                        return;\n                    }\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get the title\n                    youtube.getTitle.call(player, videoId);\n\n                    // Create a faux HTML5 API using the YouTube API\n                    player.media.play = () => {\n                        assurePlaybackState.call(player, true);\n                        instance.playVideo();\n                    };\n\n                    player.media.pause = () => {\n                        assurePlaybackState.call(player, false);\n                        instance.pauseVideo();\n                    };\n\n                    player.media.stop = () => {\n                        instance.stopVideo();\n                    };\n\n                    player.media.duration = instance.getDuration();\n                    player.media.paused = true;\n\n                    // Seeking\n                    player.media.currentTime = 0;\n                    Object.defineProperty(player.media, 'currentTime', {\n                        get() {\n                            return Number(instance.getCurrentTime());\n                        },\n                        set(time) {\n                            // If paused and never played, mute audio preventively (YouTube starts playing on seek if the video hasn't been played yet).\n                            if (player.paused && !player.embed.hasPlayed) {\n                                player.embed.mute();\n                            }\n\n                            // Set seeking state and trigger event\n                            player.media.seeking = true;\n                            triggerEvent.call(player, player.media, 'seeking');\n\n                            // Seek after events sent\n                            instance.seekTo(time);\n                        },\n                    });\n\n                    // Playback speed\n                    Object.defineProperty(player.media, 'playbackRate', {\n                        get() {\n                            return instance.getPlaybackRate();\n                        },\n                        set(input) {\n                            instance.setPlaybackRate(input);\n                        },\n                    });\n\n                    // Volume\n                    let { volume } = player.config;\n                    Object.defineProperty(player.media, 'volume', {\n                        get() {\n                            return volume;\n                        },\n                        set(input) {\n                            volume = input;\n                            instance.setVolume(volume * 100);\n                            triggerEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Muted\n                    let { muted } = player.config;\n                    Object.defineProperty(player.media, 'muted', {\n                        get() {\n                            return muted;\n                        },\n                        set(input) {\n                            const toggle = is.boolean(input) ? input : muted;\n                            muted = toggle;\n                            instance[toggle ? 'mute' : 'unMute']();\n                            triggerEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Source\n                    Object.defineProperty(player.media, 'currentSrc', {\n                        get() {\n                            return instance.getVideoUrl();\n                        },\n                    });\n\n                    // Ended\n                    Object.defineProperty(player.media, 'ended', {\n                        get() {\n                            return player.currentTime === player.duration;\n                        },\n                    });\n\n                    // Get available speeds\n                    player.options.speed = instance.getAvailablePlaybackRates();\n\n                    // Set the tabindex to avoid focus entering iframe\n                    if (player.supported.ui) {\n                        player.media.setAttribute('tabindex', -1);\n                    }\n\n                    triggerEvent.call(player, player.media, 'timeupdate');\n                    triggerEvent.call(player, player.media, 'durationchange');\n\n                    // Reset timer\n                    clearInterval(player.timers.buffering);\n\n                    // Setup buffering\n                    player.timers.buffering = setInterval(() => {\n                        // Get loaded % from YouTube\n                        player.media.buffered = instance.getVideoLoadedFraction();\n\n                        // Trigger progress only when we actually buffer something\n                        if (player.media.lastBuffered === null || player.media.lastBuffered < player.media.buffered) {\n                            triggerEvent.call(player, player.media, 'progress');\n                        }\n\n                        // Set last buffer point\n                        player.media.lastBuffered = player.media.buffered;\n\n                        // Bail if we're at 100%\n                        if (player.media.buffered === 1) {\n                            clearInterval(player.timers.buffering);\n\n                            // Trigger event\n                            triggerEvent.call(player, player.media, 'canplaythrough');\n                        }\n                    }, 200);\n\n                    // Rebuild UI\n                    setTimeout(() => ui.build.call(player), 50);\n                },\n                onStateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Reset timer\n                    clearInterval(player.timers.playing);\n\n                    const seeked = player.media.seeking && [1, 2].includes(event.data);\n\n                    if (seeked) {\n                        // Unset seeking and fire seeked event\n                        player.media.seeking = false;\n                        triggerEvent.call(player, player.media, 'seeked');\n                    }\n\n                    // Handle events\n                    // -1   Unstarted\n                    // 0    Ended\n                    // 1    Playing\n                    // 2    Paused\n                    // 3    Buffering\n                    // 5    Video cued\n                    switch (event.data) {\n                        case -1:\n                            // Update scrubber\n                            triggerEvent.call(player, player.media, 'timeupdate');\n\n                            // Get loaded % from YouTube\n                            player.media.buffered = instance.getVideoLoadedFraction();\n                            triggerEvent.call(player, player.media, 'progress');\n\n                            break;\n\n                        case 0:\n                            assurePlaybackState.call(player, false);\n\n                            // YouTube doesn't support loop for a single video, so mimick it.\n                            if (player.media.loop) {\n                                // YouTube needs a call to `stopVideo` before playing again\n                                instance.stopVideo();\n                                instance.playVideo();\n                            } else {\n                                triggerEvent.call(player, player.media, 'ended');\n                            }\n\n                            break;\n\n                        case 1:\n                            // Restore paused state (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (player.media.paused && !player.embed.hasPlayed) {\n                                player.media.pause();\n                            } else {\n                                assurePlaybackState.call(player, true);\n\n                                triggerEvent.call(player, player.media, 'playing');\n\n                                // Poll to get playback progress\n                                player.timers.playing = setInterval(() => {\n                                    triggerEvent.call(player, player.media, 'timeupdate');\n                                }, 50);\n\n                                // Check duration again due to YouTube bug\n                                // https://github.com/sampotts/plyr/issues/374\n                                // https://code.google.com/p/gdata-issues/issues/detail?id=8690\n                                if (player.media.duration !== instance.getDuration()) {\n                                    player.media.duration = instance.getDuration();\n                                    triggerEvent.call(player, player.media, 'durationchange');\n                                }\n                            }\n\n                            break;\n\n                        case 2:\n                            // Restore audio (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (!player.muted) {\n                                player.embed.unMute();\n                            }\n                            assurePlaybackState.call(player, false);\n\n                            break;\n\n                        default:\n                            break;\n                    }\n\n                    triggerEvent.call(player, player.elements.container, 'statechange', false, {\n                        code: event.data,\n                    });\n                },\n            },\n        });\n    },\n};\n\nexport default youtube;\n","// ==========================================================================\n// Plyr Media\n// ==========================================================================\n\nimport html5 from './html5';\nimport vimeo from './plugins/vimeo';\nimport youtube from './plugins/youtube';\nimport { createElement, toggleClass, wrap } from './utils/elements';\n\nconst media = {\n    // Setup media\n    setup() {\n        // If there's no media, bail\n        if (!this.media) {\n            this.debug.warn('No media element found!');\n            return;\n        }\n\n        // Add type class\n        toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', this.type), true);\n\n        // Add provider class\n        toggleClass(this.elements.container, this.config.classNames.provider.replace('{0}', this.provider), true);\n\n        // Add video class for embeds\n        // This will require changes if audio embeds are added\n        if (this.isEmbed) {\n            toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', 'video'), true);\n        }\n\n        // Inject the player wrapper\n        if (this.isVideo) {\n            // Create the wrapper div\n            this.elements.wrapper = createElement('div', {\n                class: this.config.classNames.video,\n            });\n\n            // Wrap the video in a container\n            wrap(this.media, this.elements.wrapper);\n\n            // Faux poster container\n            this.elements.poster = createElement('div', {\n                class: this.config.classNames.poster,\n            });\n\n            this.elements.wrapper.appendChild(this.elements.poster);\n        }\n\n        if (this.isHTML5) {\n            html5.extend.call(this);\n        } else if (this.isYouTube) {\n            youtube.setup.call(this);\n        } else if (this.isVimeo) {\n            vimeo.setup.call(this);\n        }\n    },\n};\n\nexport default media;\n","// ==========================================================================\n// Advertisement plugin using Google IMA HTML5 SDK\n// Create an account with our ad partner, vi here:\n// https://www.vi.ai/publisher-video-monetization/\n// ==========================================================================\n\n/* global google */\n\nimport { createElement } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport i18n from '../utils/i18n';\nimport is from '../utils/is';\nimport loadScript from '../utils/loadScript';\nimport { formatTime } from '../utils/time';\nimport { buildUrlParams } from '../utils/urls';\n\nclass Ads {\n    /**\n     * Ads constructor.\n     * @param {object} player\n     * @return {Ads}\n     */\n    constructor(player) {\n        this.player = player;\n        this.publisherId = player.config.ads.publisherId;\n        this.playing = false;\n        this.initialized = false;\n        this.elements = {\n            container: null,\n            displayContainer: null,\n        };\n        this.manager = null;\n        this.loader = null;\n        this.cuePoints = null;\n        this.events = {};\n        this.safetyTimer = null;\n        this.countdownTimer = null;\n\n        // Setup a promise to resolve when the IMA manager is ready\n        this.managerPromise = new Promise((resolve, reject) => {\n            // The ad is loaded and ready\n            this.on('loaded', resolve);\n\n            // Ads failed\n            this.on('error', reject);\n        });\n\n        this.load();\n    }\n\n    get enabled() {\n        return (\n            this.player.isHTML5 && this.player.isVideo && this.player.config.ads.enabled && !is.empty(this.publisherId)\n        );\n    }\n\n    /**\n     * Load the IMA SDK\n     */\n    load() {\n        if (this.enabled) {\n            // Check if the Google IMA3 SDK is loaded or load it ourselves\n            if (!is.object(window.google) || !is.object(window.google.ima)) {\n                loadScript(this.player.config.urls.googleIMA.sdk)\n                    .then(() => {\n                        this.ready();\n                    })\n                    .catch(() => {\n                        // Script failed to load or is blocked\n                        this.trigger('error', new Error('Google IMA SDK failed to load'));\n                    });\n            } else {\n                this.ready();\n            }\n        }\n    }\n\n    /**\n     * Get the ads instance ready\n     */\n    ready() {\n        // Start ticking our safety timer. If the whole advertisement\n        // thing doesn't resolve within our set time; we bail\n        this.startSafetyTimer(12000, 'ready()');\n\n        // Clear the safety timer\n        this.managerPromise.then(() => {\n            this.clearSafetyTimer('onAdsManagerLoaded()');\n        });\n\n        // Set listeners on the Plyr instance\n        this.listeners();\n\n        // Setup the IMA SDK\n        this.setupIMA();\n    }\n\n    // Build the default tag URL\n    get tagUrl() {\n        const params = {\n            AV_PUBLISHERID: '58c25bb0073ef448b1087ad6',\n            AV_CHANNELID: '5a0458dc28a06145e4519d21',\n            AV_URL: window.location.hostname,\n            cb: Date.now(),\n            AV_WIDTH: 640,\n            AV_HEIGHT: 480,\n            AV_CDIM2: this.publisherId,\n        };\n\n        const base = 'https://go.aniview.com/api/adserver6/vast/';\n\n        return `${base}?${buildUrlParams(params)}`;\n    }\n\n    /**\n     * In order for the SDK to display ads for our video, we need to tell it where to put them,\n     * so here we define our ad container. This div is set up to render on top of the video player.\n     * Using the code below, we tell the SDK to render ads within that div. We also provide a\n     * handle to the content video player - the SDK will poll the current time of our player to\n     * properly place mid-rolls. After we create the ad display container, we initialize it. On\n     * mobile devices, this initialization is done as the result of a user action.\n     */\n    setupIMA() {\n        // Create the container for our advertisements\n        this.elements.container = createElement('div', {\n            class: this.player.config.classNames.ads,\n        });\n        this.player.elements.container.appendChild(this.elements.container);\n\n        // So we can run VPAID2\n        google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED);\n\n        // Set language\n        google.ima.settings.setLocale(this.player.config.ads.language);\n\n        // We assume the adContainer is the video container of the plyr element\n        // that will house the ads\n        this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container);\n\n        // Request video ads to be pre-loaded\n        this.requestAds();\n    }\n\n    /**\n     * Request advertisements\n     */\n    requestAds() {\n        const { container } = this.player.elements;\n\n        try {\n            // Create ads loader\n            this.loader = new google.ima.AdsLoader(this.elements.displayContainer);\n\n            // Listen and respond to ads loaded and error events\n            this.loader.addEventListener(\n                google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n                event => this.onAdsManagerLoaded(event),\n                false,\n            );\n            this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error), false);\n\n            // Request video ads\n            const request = new google.ima.AdsRequest();\n            request.adTagUrl = this.tagUrl;\n\n            // Specify the linear and nonlinear slot sizes. This helps the SDK\n            // to select the correct creative if multiple are returned\n            request.linearAdSlotWidth = container.offsetWidth;\n            request.linearAdSlotHeight = container.offsetHeight;\n            request.nonLinearAdSlotWidth = container.offsetWidth;\n            request.nonLinearAdSlotHeight = container.offsetHeight;\n\n            // We only overlay ads as we only support video.\n            request.forceNonLinearFullSlot = false;\n\n            // Mute based on current state\n            request.setAdWillPlayMuted(!this.player.muted);\n\n            this.loader.requestAds(request);\n        } catch (e) {\n            this.onAdError(e);\n        }\n    }\n\n    /**\n     * Update the ad countdown\n     * @param {boolean} start\n     */\n    pollCountdown(start = false) {\n        if (!start) {\n            clearInterval(this.countdownTimer);\n            this.elements.container.removeAttribute('data-badge-text');\n            return;\n        }\n\n        const update = () => {\n            const time = formatTime(Math.max(this.manager.getRemainingTime(), 0));\n            const label = `${i18n.get('advertisement', this.player.config)} - ${time}`;\n            this.elements.container.setAttribute('data-badge-text', label);\n        };\n\n        this.countdownTimer = setInterval(update, 100);\n    }\n\n    /**\n     * This method is called whenever the ads are ready inside the AdDisplayContainer\n     * @param {Event} adsManagerLoadedEvent\n     */\n    onAdsManagerLoaded(event) {\n        // Load could occur after a source change (race condition)\n        if (!this.enabled) {\n            return;\n        }\n\n        // Get the ads manager\n        const settings = new google.ima.AdsRenderingSettings();\n\n        // Tell the SDK to save and restore content video state on our behalf\n        settings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n        settings.enablePreloading = true;\n\n        // The SDK is polling currentTime on the contentPlayback. And needs a duration\n        // so it can determine when to start the mid- and post-roll\n        this.manager = event.getAdsManager(this.player, settings);\n\n        // Get the cue points for any mid-rolls by filtering out the pre- and post-roll\n        this.cuePoints = this.manager.getCuePoints();\n\n        // Add advertisement cue's within the time line if available\n        if (!is.empty(this.cuePoints)) {\n            this.cuePoints.forEach(cuePoint => {\n                if (cuePoint !== 0 && cuePoint !== -1 && cuePoint < this.player.duration) {\n                    const seekElement = this.player.elements.progress;\n\n                    if (is.element(seekElement)) {\n                        const cuePercentage = 100 / this.player.duration * cuePoint;\n                        const cue = createElement('span', {\n                            class: this.player.config.classNames.cues,\n                        });\n\n                        cue.style.left = `${cuePercentage.toString()}%`;\n                        seekElement.appendChild(cue);\n                    }\n                }\n            });\n        }\n\n        // Set volume to match player\n        this.manager.setVolume(this.player.volume);\n\n        // Add listeners to the required events\n        // Advertisement error events\n        this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error));\n\n        // Advertisement regular events\n        Object.keys(google.ima.AdEvent.Type).forEach(type => {\n            this.manager.addEventListener(google.ima.AdEvent.Type[type], event => this.onAdEvent(event));\n        });\n\n        // Resolve our adsManager\n        this.trigger('loaded');\n    }\n\n    /**\n     * This is where all the event handling takes place. Retrieve the ad from the event. Some\n     * events (e.g. ALL_ADS_COMPLETED) don't have the ad object associated\n     * https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdEvent.Type\n     * @param {Event} event\n     */\n    onAdEvent(event) {\n        const { container } = this.player.elements;\n\n        // Retrieve the ad from the event. Some events (e.g. ALL_ADS_COMPLETED)\n        // don't have ad object associated\n        const ad = event.getAd();\n\n        // Proxy event\n        const dispatchEvent = type => {\n            const event = `ads${type.replace(/_/g, '').toLowerCase()}`;\n            triggerEvent.call(this.player, this.player.media, event);\n        };\n\n        switch (event.type) {\n            case google.ima.AdEvent.Type.LOADED:\n                // This is the first event sent for an ad - it is possible to determine whether the\n                // ad is a video ad or an overlay\n                this.trigger('loaded');\n\n                // Bubble event\n                dispatchEvent(event.type);\n\n                // Start countdown\n                this.pollCountdown(true);\n\n                if (!ad.isLinear()) {\n                    // Position AdDisplayContainer correctly for overlay\n                    ad.width = container.offsetWidth;\n                    ad.height = container.offsetHeight;\n                }\n\n                // console.info('Ad type: ' + event.getAd().getAdPodInfo().getPodIndex());\n                // console.info('Ad time: ' + event.getAd().getAdPodInfo().getTimeOffset());\n                break;\n\n            case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n                // All ads for the current videos are done. We can now request new advertisements\n                // in case the video is re-played\n\n                // Fire event\n                dispatchEvent(event.type);\n\n                // TODO: Example for what happens when a next video in a playlist would be loaded.\n                // So here we load a new video when all ads are done.\n                // Then we load new ads within a new adsManager. When the video\n                // Is started - after - the ads are loaded, then we get ads.\n                // You can also easily test cancelling and reloading by running\n                // player.ads.cancel() and player.ads.play from the console I guess.\n                // this.player.source = {\n                //     type: 'video',\n                //     title: 'View From A Blue Moon',\n                //     sources: [{\n                //         src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.mp4', type:\n                // 'video/mp4', }], poster:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg', tracks:\n                // [ { kind: 'captions', label: 'English', srclang: 'en', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt',\n                // default: true, }, { kind: 'captions', label: 'French', srclang: 'fr', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt', }, ],\n                // };\n\n                // TODO: So there is still this thing where a video should only be allowed to start\n                // playing when the IMA SDK is ready or has failed\n\n                this.loadAds();\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:\n                // This event indicates the ad has started - the video player can adjust the UI,\n                // for example display a pause button and remaining time. Fired when content should\n                // be paused. This usually happens right before an ad is about to cover the content\n\n                dispatchEvent(event.type);\n\n                this.pauseContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:\n                // This event indicates the ad has finished - the video player can perform\n                // appropriate UI actions, such as removing the timer for remaining time detection.\n                // Fired when content should be resumed. This usually happens when an ad finishes\n                // or collapses\n\n                dispatchEvent(event.type);\n\n                this.pollCountdown();\n\n                this.resumeContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.STARTED:\n            case google.ima.AdEvent.Type.MIDPOINT:\n            case google.ima.AdEvent.Type.COMPLETE:\n            case google.ima.AdEvent.Type.IMPRESSION:\n            case google.ima.AdEvent.Type.CLICK:\n                dispatchEvent(event.type);\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    /**\n     * Any ad error handling comes through here\n     * @param {Event} event\n     */\n    onAdError(event) {\n        this.cancel();\n        this.player.debug.warn('Ads error', event);\n    }\n\n    /**\n     * Setup hooks for Plyr and window events. This ensures\n     * the mid- and post-roll launch at the correct time. And\n     * resize the advertisement when the player resizes\n     */\n    listeners() {\n        const { container } = this.player.elements;\n        let time;\n\n        // Add listeners to the required events\n        this.player.on('ended', () => {\n            this.loader.contentComplete();\n        });\n\n        this.player.on('seeking', () => {\n            time = this.player.currentTime;\n            return time;\n        });\n\n        this.player.on('seeked', () => {\n            const seekedTime = this.player.currentTime;\n\n            if (is.empty(this.cuePoints)) {\n                return;\n            }\n\n            this.cuePoints.forEach((cuePoint, index) => {\n                if (time < cuePoint && cuePoint < seekedTime) {\n                    this.manager.discardAdBreak();\n                    this.cuePoints.splice(index, 1);\n                }\n            });\n        });\n\n        // Listen to the resizing of the window. And resize ad accordingly\n        // TODO: eventually implement ResizeObserver\n        window.addEventListener('resize', () => {\n            if (this.manager) {\n                this.manager.resize(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n            }\n        });\n    }\n\n    /**\n     * Initialize the adsManager and start playing advertisements\n     */\n    play() {\n        const { container } = this.player.elements;\n\n        if (!this.managerPromise) {\n            this.resumeContent();\n        }\n\n        // Play the requested advertisement whenever the adsManager is ready\n        this.managerPromise\n            .then(() => {\n                // Initialize the container. Must be done via a user action on mobile devices\n                this.elements.displayContainer.initialize();\n\n                try {\n                    if (!this.initialized) {\n                        // Initialize the ads manager. Ad rules playlist will start at this time\n                        this.manager.init(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n\n                        // Call play to start showing the ad. Single video and overlay ads will\n                        // start at this time; the call will be ignored for ad rules\n                        this.manager.start();\n                    }\n\n                    this.initialized = true;\n                } catch (adError) {\n                    // An error may be thrown if there was a problem with the\n                    // VAST response\n                    this.onAdError(adError);\n                }\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Resume our video\n     */\n    resumeContent() {\n        // Hide the advertisement container\n        this.elements.container.style.zIndex = '';\n\n        // Ad is stopped\n        this.playing = false;\n\n        // Play our video\n        if (this.player.currentTime < this.player.duration) {\n            this.player.play();\n        }\n    }\n\n    /**\n     * Pause our video\n     */\n    pauseContent() {\n        // Show the advertisement container\n        this.elements.container.style.zIndex = 3;\n\n        // Ad is playing.\n        this.playing = true;\n\n        // Pause our video.\n        this.player.pause();\n    }\n\n    /**\n     * Destroy the adsManager so we can grab new ads after this. If we don't then we're not\n     * allowed to call new ads based on google policies, as they interpret this as an accidental\n     * video requests. https://developers.google.com/interactive-\n     * media-ads/docs/sdks/android/faq#8\n     */\n    cancel() {\n        // Pause our video\n        if (this.initialized) {\n            this.resumeContent();\n        }\n\n        // Tell our instance that we're done for now\n        this.trigger('error');\n\n        // Re-create our adsManager\n        this.loadAds();\n    }\n\n    /**\n     * Re-create our adsManager\n     */\n    loadAds() {\n        // Tell our adsManager to go bye bye\n        this.managerPromise\n            .then(() => {\n                // Destroy our adsManager\n                if (this.manager) {\n                    this.manager.destroy();\n                }\n\n                // Re-set our adsManager promises\n                this.managerPromise = new Promise(resolve => {\n                    this.on('loaded', resolve);\n                    this.player.debug.log(this.manager);\n                });\n\n                // Now request some new advertisements\n                this.requestAds();\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Handles callbacks after an ad event was invoked\n     * @param {string} event - Event type\n     */\n    trigger(event, ...args) {\n        const handlers = this.events[event];\n\n        if (is.array(handlers)) {\n            handlers.forEach(handler => {\n                if (is.function(handler)) {\n                    handler.apply(this, args);\n                }\n            });\n        }\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     * @return {Ads}\n     */\n    on(event, callback) {\n        if (!is.array(this.events[event])) {\n            this.events[event] = [];\n        }\n\n        this.events[event].push(callback);\n\n        return this;\n    }\n\n    /**\n     * Setup a safety timer for when the ad network doesn't respond for whatever reason.\n     * The advertisement has 12 seconds to get its things together. We stop this timer when the\n     * advertisement is playing, or when a user action is required to start, then we clear the\n     * timer on ad ready\n     * @param {number} time\n     * @param {string} from\n     */\n    startSafetyTimer(time, from) {\n        this.player.debug.log(`Safety timer invoked from: ${from}`);\n\n        this.safetyTimer = setTimeout(() => {\n            this.cancel();\n            this.clearSafetyTimer('startSafetyTimer()');\n        }, time);\n    }\n\n    /**\n     * Clear our safety timer(s)\n     * @param {string} from\n     */\n    clearSafetyTimer(from) {\n        if (!is.nullOrUndefined(this.safetyTimer)) {\n            this.player.debug.log(`Safety timer cleared from: ${from}`);\n\n            clearTimeout(this.safetyTimer);\n            this.safetyTimer = null;\n        }\n    }\n}\n\nexport default Ads;\n","import { createElement, getElement, toggleClass } from '../utils/elements';\nimport {triggerEvent} from '../utils/events';\n\nimport controls from '../controls';\n\nexport class LectureNoteModel {\n    constructor () {\n        this.showStatus = LectureNoteModel.ShowStatus.Edit;\n        this.noteStatus = LectureNoteModel.NoteStatus.Create;\n        this.time = 0;\n        this.note = '';\n    }\n}\n\nLectureNoteModel.ShowStatus = {\n    Edit: 'Edit',\n    Hide: 'Hide',\n};\nLectureNoteModel.NoteStatus = {\n    Create: 'Create',\n    Normal: 'Normal',\n};\n\nconst AddLectureNoteButtonStatus = {\n    Enable: 'enable',\n    Disable: 'disable',\n    Hidden: 'hidden',\n};\n\nexport default class LectureNote {\n\n    constructor (player) {\n        this.player = player;\n        this.lectureNoteList = [];\n        this.lectureNoteContainer = null;\n        this.addLectureNoteButtonStatus = AddLectureNoteButtonStatus.Hidden;\n        this.isLoadedLectureNote = false;\n\n        this.beforeAddLectureNotePlayerState = null;\n        this.beforeEditLectureNotePlayerState = null;\n    }\n\n    setup () {\n    }\n\n    clear () {\n        this.lectureNoteList = [];\n        this.lectureNoteContainer = null;\n        this.isLoadedLectureNote = false;\n        this.hiddenLectureNote();\n    }\n\n    enableLectureNote () {\n        this.addLectureNoteButtonStatus = AddLectureNoteButtonStatus.Enable;\n        this.updateAddLectureNoteButtonUI();\n    }\n\n    disableLectureNote () {\n        this.addLectureNoteButtonStatus = AddLectureNoteButtonStatus.Disable;\n        this.updateAddLectureNoteButtonUI();\n    }\n\n    hiddenLectureNote () {\n        this.addLectureNoteButtonStatus = AddLectureNoteButtonStatus.Hidden;\n        this.updateAddLectureNoteButtonUI();\n    }\n\n    updateAddLectureNoteButtonUI () {\n        const addLectureNoteButton = getElement.call(this.player, '.plyr__add-lecture-note');\n        switch (this.addLectureNoteButtonStatus) {\n            case AddLectureNoteButtonStatus.Enable:\n                toggleClass.call(this.player, addLectureNoteButton, 'disable', false);\n                toggleClass.call(this.player, addLectureNoteButton, 'hidden', false);\n                toggleClass.call(this.player, '.plyr__lecture-note-container', 'hidden', false);\n                break;\n            case AddLectureNoteButtonStatus.Disable:\n                toggleClass.call(this.player, addLectureNoteButton, 'disable', true);\n                toggleClass.call(this.player, addLectureNoteButton, 'hidden', false);\n                toggleClass.call(this.player, '.plyr__lecture-note-container', 'hidden', false);\n                break;\n            case AddLectureNoteButtonStatus.Hidden:\n                toggleClass.call(this.player, addLectureNoteButton, 'disable', true);\n                toggleClass.call(this.player, addLectureNoteButton, 'hidden', true);\n                toggleClass.call(this.player, '.plyr__lecture-note-container', 'hidden', true);\n                break;\n            default:\n                break;\n        }\n    }\n\n    setupUI () {\n        if (this.player.supported.ui) {\n            const lectureNoteContainer = this.getContainer();\n            for (let i = 0; i < this.lectureNoteList.length; i += 1) {\n                const note = this.lectureNoteList[i];\n                if (!this.isLectureNoteExists(note._id)) {\n                    const lectureNoteDOM = this.generateLectureNoteDOM(note);\n                    lectureNoteContainer.appendChild(lectureNoteDOM);\n                }\n            }\n        }\n    }\n\n    initLectureNote (lectureNotes) {\n        if (this.player.supported.ui) {\n            this.lectureNoteList = lectureNotes;\n            this.isLoadedLectureNote = true;\n            this.setupUI();\n            this.enableLectureNote();\n        }\n    }\n\n    addLectureNote () {\n        if (this.player.playing) {\n            this.beforeAddLectureNotePlayerState = 'playing';\n        } else {\n            this.beforeAddLectureNotePlayerState = 'pause';\n        }\n\n        this.player.pause();\n\n        const time = Math.round(this.player.currentTime);\n        const note = this.getSameTimeLectureNote(time);\n        if (note) {\n            const lectureNoteContainer = getElement.call(this.player, `.lecture-note[data-id=\"${  note._id  }\"]`);\n            if (lectureNoteContainer) {\n                const contentContianer = lectureNoteContainer.querySelector('.lecture-note__content-container');\n                if (contentContianer) {\n                    const clickEvent = new Event('click');\n                    contentContianer.dispatchEvent(clickEvent);\n                }\n            }\n\n        } else {\n            this.disableLectureNote();\n            triggerEvent.call(this.player, this.player.media, 'lecturenotecreate', true , {\n                lectureNote: {\n                    time,\n                },\n            });\n        }\n    }\n\n    completeAddLectureNote (lectureNote) {\n        this.enableLectureNote();\n        const newLectureNote = Object.assign({}, lectureNote, {\n            showStatus: LectureNoteModel.ShowStatus.Edit,\n        });\n        this.lectureNoteList.push(newLectureNote);\n        const lectureNoteDOM = this.generateLectureNoteDOM(newLectureNote);\n        const lectureNoteContainer = this.getContainer();\n        lectureNoteContainer.appendChild(lectureNoteDOM);\n    }\n\n    removeLectureNote (lectureNote) {\n        const lectureNoteContainer = getElement.call(this.player, `div[data-id=\"${lectureNote._id}\"]`);\n        if (lectureNoteContainer) {\n            lectureNoteContainer.parentElement.removeChild(lectureNoteContainer);\n            for (let i = 0; i < this.lectureNoteList.length; i += 1) {\n                if (this.lectureNoteList[i]._id === lectureNote._id) {\n                    this.lectureNoteList.splice(i, 1);\n                    return;\n                }\n            }\n        }\n    }\n\n    hasSameTimeLectureNote (time) {\n        for (let i = 0; i < this.lectureNoteList.length; i += 1) {\n            if (this.lectureNoteList[i].time === time) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    getSameTimeLectureNote (time) {\n        for (let i = 0; i < this.lectureNoteList.length; i += 1) {\n            if (this.lectureNoteList[i].time === time) {\n                return this.lectureNoteList[i];\n            }\n        }\n        return null;\n    }\n\n    /**\n     * @private\n     * @return {null|*}\n     */\n    getContainer () {\n        if (this.lectureNoteContainer && !this.lectureNoteContainer.parentElement) {\n            this.lectureNoteContainer = null;\n        }\n        if (this.lectureNoteContainer === null) {\n            this.lectureNoteContainer = createElement('div', {\n                'class': 'plyr__lecture-note-container',\n            });\n            const progresses = getElement.call(this.player, this.player.config.selectors.progress);\n            if (progresses) {\n                progresses.appendChild(this.lectureNoteContainer);\n            }\n        }\n        return this.lectureNoteContainer;\n    }\n\n    /**\n     * @private\n     * @param lectureNoteId\n     * @return {boolean}\n     */\n    isLectureNoteExists (lectureNoteId) {\n        return getElement.call(this.player, `.lecture-note[data-id=\"${lectureNoteId}\"]`) !== null;\n    }\n\n    /**\n     * @private\n     * @param lectureNote\n     */\n    generateLectureNoteDOM (lectureNote) {\n        const { duration } = this.player;\n        const percent = (lectureNote.time / duration) * 100 || 0;\n\n        let cancelTimeout = null;\n\n        const lectureNoteContainer = createElement('div', {\n            'data-id': lectureNote._id,\n            class: 'lecture-note',\n        });\n\n        /* lecture-note__mark */\n        const className = 'lecture-note__mark';\n        const mark = createElement('span', {\n            class: className,\n        });\n        lectureNoteContainer.appendChild(mark);\n\n        // 點擊 mark 跳到對應的播放時間\n        mark.addEventListener('click', (e) => {\n            this.player.currentTime = lectureNote.time;\n            e.preventDefault();\n            e.stopPropagation();\n        });\n        /* lecture-note__mark */\n\n        /* lecture-note__content-container */\n        const status = lectureNote.showStatus;\n        const contentContainer = createElement('div', {\n            class: `lecture-note__content-container ${status === LectureNoteModel.ShowStatus.Edit ? ' lecture-note__content-container--edit' : ''}`,\n        });\n        lectureNoteContainer.appendChild(contentContainer);\n        /* lecture-note__content-container */\n\n        /* lecture-note__content-textarea */\n        const contentTextarea = createElement('textarea', {\n            class: 'lecture-note__content-textarea',\n            placeholder: '新增筆記 (限 50 字)',\n            maxLength: 50,\n            rows: 1,\n        });\n        contentTextarea.value = lectureNote.note || '';\n        contentContainer.appendChild(contentTextarea);\n        /* lecture-note__content-textarea */\n\n        /* lecture-note__content-show-text */\n        const contentShowText = createElement('span', {\n            class: 'lecture-note__content-show-text',\n        });\n        contentShowText.innerHTML = lectureNote.note;\n        contentContainer.appendChild(contentShowText);\n        /* lecture-note__content-show-text */\n\n        /* lecture-note__trash-icon-wrapper */\n        const trashIconWrapper = createElement('span', {\n            class: 'lecture-note__trash-icon-wrapper',\n        });\n        const trashIcon = controls.createIcon.call(this.player, 'trash');\n        trashIconWrapper.appendChild(trashIcon);\n        contentContainer.appendChild(trashIconWrapper);\n        // 點擊垃圾桶 icon 刪除 lecturenote\n        trashIconWrapper.addEventListener('click', (e) => {\n            triggerEvent.call(this.player, this.player.media, 'lecturenotedelete', true ,{\n                lectureNote,\n            });\n            this.removeLectureNote(lectureNote);\n        });\n        /* lecture-note__trash-icon-wrapper */\n\n        // 點擊 container 開啟編輯模式\n        contentContainer.addEventListener('click', (e) => {\n            if (lectureNote.showStatus !== LectureNoteModel.ShowStatus.Edit) {\n                if (this.player.playing) {\n                    this.beforeEditLectureNotePlayerState = 'playing';\n                } else {\n                    this.beforeEditLectureNotePlayerState = 'pause';\n                }\n                this.player.pause();\n                toggleClass(contentContainer, 'lecture-note__content-container--edit', true);\n                lectureNote.showStatus = LectureNoteModel.ShowStatus.Edit;\n                contentTextarea.style.height = 'auto';\n                contentTextarea.style.height = `${contentTextarea.scrollHeight}px`;\n                contentTextarea.focus();\n            }\n        });\n\n\n        setTimeout(() => {\n            contentTextarea.focus();\n        }, 50);\n\n        contentTextarea.addEventListener('keyup', () => {\n            contentTextarea.style.height = 'auto';\n            contentTextarea.style.height = `${contentTextarea.scrollHeight}px`;\n        });\n\n        let isInComposition = false;\n        contentTextarea.addEventListener('compositionstart', (e) => {\n            isInComposition = true;\n        });\n\n        contentTextarea.addEventListener('compositionend', (e) => {\n            setTimeout(() => {\n                isInComposition = false;\n            }, 10);\n        });\n\n        contentTextarea.addEventListener('keydown', (e) => {\n            if (!isInComposition && e.key === 'Enter') {\n                lectureNote.note = contentTextarea.value;\n                contentShowText.innerHTML = lectureNote.note;\n                toggleClass(contentContainer, 'lecture-note__content-container--edit', false);\n                lectureNote.showStatus = LectureNoteModel.ShowStatus.Hide;\n                toggleClass(lectureNoteContainer, 'hover', true);\n                cancelTimeout = setTimeout(() => {\n                    toggleClass(lectureNoteContainer, 'hover', false);\n                }, 1000);\n                triggerEvent.call(this.player, this.player.media, 'lecturenoteupdate', true, {\n                    lectureNote,\n                });\n                console.group('keydown enter');\n                console.log(this.beforeAddLectureNotePlayerState, this.beforeEditLectureNotePlayerState);\n                console.groupEnd();\n                try{\n                    if (this.beforeAddLectureNotePlayerState) {\n                        if (this.beforeAddLectureNotePlayerState === 'playing') {\n                            this.player.play();\n                        }\n                        this.beforeAddLectureNotePlayerState = null;\n                    }\n                    if (this.beforeEditLectureNotePlayerState) {\n                        if (this.beforeEditLectureNotePlayerState === 'playing') {\n                            this.player.play();\n                        }\n                        this.beforeEditLectureNotePlayerState = null;\n                    }\n                } catch (e) {\n                    // ignore\n                }\n                e.preventDefault();\n            }\n            if (e.key === 'Escape') {\n                contentTextarea.value = lectureNote.note;\n                toggleClass(contentContainer, 'lecture-note__content-container--edit', false);\n                lectureNote.showStatus = LectureNoteModel.ShowStatus.Hide;\n            }\n        });\n\n        contentTextarea.addEventListener('blur', (e) => {\n            lectureNote.note = contentTextarea.value;\n            contentShowText.innerHTML = lectureNote.note;\n            toggleClass(contentContainer, 'lecture-note__content-container--edit', false);\n            lectureNote.showStatus = LectureNoteModel.ShowStatus.Hide;\n            toggleClass(lectureNoteContainer, 'hover', true);\n            cancelTimeout = setTimeout(() => {\n                toggleClass(lectureNoteContainer, 'hover', false);\n            }, 1000);\n            triggerEvent.call(this.player, this.player.media, 'lecturenoteupdate', true, {\n                lectureNote,\n            });\n            e.preventDefault();\n        });\n\n        mark.addEventListener('mouseenter', (e) => {\n            if (cancelTimeout) {\n                clearTimeout(cancelTimeout);\n                cancelTimeout = null;\n            }\n            toggleClass(contentContainer, 'lecture-note__content-container--show', true);\n            const container = this.getContainer();\n            const leftLimit = ((container.offsetWidth - 200) / container.offsetWidth) * 100 || 0;\n            if (percent > leftLimit) {\n                toggleClass(contentContainer, 'lecture-note__content-container--near-end', true);\n            } else {\n                toggleClass(contentContainer, 'lecture-note__content-container--near-end', false);\n            }\n            e.preventDefault();\n        });\n\n        mark.addEventListener('mouseleave', (e) => {\n            cancelTimeout = setTimeout(() => {\n                toggleClass(contentContainer, 'lecture-note__content-container--show', false);\n            }, 500);\n\n            e.preventDefault();\n        });\n\n        contentContainer.addEventListener('mouseenter', (e) => {\n            if (cancelTimeout) {\n                clearTimeout(cancelTimeout);\n                cancelTimeout = null;\n            }\n            toggleClass(contentContainer, 'lecture-note__content-container--show', true);\n            const container = this.getContainer();\n            const leftLimit = ((container.offsetWidth - 200) / container.offsetWidth) * 100 || 0;\n            if (percent > leftLimit) {\n                toggleClass(contentContainer, 'lecture-note__content-container--near-end', true);\n            } else {\n                toggleClass(contentContainer, 'lecture-note__content-container--near-end', false);\n            }\n            e.preventDefault();\n        });\n\n        contentContainer.addEventListener('mouseleave', (e) => {\n            cancelTimeout = setTimeout(() => {\n                toggleClass(contentContainer, 'lecture-note__content-container--show', false);\n            }, 500);\n\n            e.preventDefault();\n        });\n\n        lectureNoteContainer.style.left = `calc(${percent}%)`;\n        return lectureNoteContainer;\n    }\n}\n","// ==========================================================================\n// Plyr source update\n// ==========================================================================\n\nimport captions from './captions';\nimport { providers } from './config/types';\nimport controls from './controls';\nimport html5 from './html5';\nimport media from './media';\nimport support from './support';\nimport ui from './ui';\nimport { createElement, insertElement, removeElement, setAttributes } from './utils/elements';\nimport is from './utils/is';\nimport { getDeep } from './utils/objects';\n\nconst source = {\n    // Add elements to HTML5 media (source, tracks, etc)\n    insertElements(type, attributes) {\n        if (is.string(attributes)) {\n            insertElement(type, this.media, {\n                src: attributes,\n            });\n        } else if (is.array(attributes)) {\n            attributes.forEach(attribute => {\n                insertElement(type, this.media, attribute);\n            });\n        }\n    },\n\n    // Update source\n    // Sources are not checked for support so be careful\n    change(input) {\n        if (!getDeep(input, 'sources.length')) {\n            this.debug.warn('Invalid source format');\n            return;\n        }\n\n        // Cancel current network requests\n        html5.cancelRequests.call(this);\n\n        const tracks = Array.from(this.media.querySelectorAll('track'));\n        removeElement(tracks);\n        this.captions.currentTrack = -1;\n\n        // Destroy instance and re-setup\n        this.destroy.call(\n            this,\n            () => {\n                this.lectureNote.clear();\n                // Reset quality options\n                this.options.quality = [];\n\n                // Remove elements\n                removeElement(this.media);\n\n                // Reset class name\n                if (is.element(this.elements.container)) {\n                    this.elements.container.removeAttribute('class');\n                }\n\n                // retain old provider and type\n                const prevType = this.type;\n                const prevProvider = this.provider;\n\n                // Set the type and provider\n                const { sources, type } = input;\n                const [{ provider = providers.html5, src }] = sources;\n                const tagName = provider === 'html5' ? type : 'div';\n                const attributes = provider === 'html5' ? {} : { src };\n\n                Object.assign(this, {\n                    provider,\n                    type,\n                    // Check for support\n                    supported: support.check(type, provider, this.config.playsinline),\n                });\n\n                if (prevType === type && prevProvider === provider && provider === providers.html5) {\n                    /**\n                     * if provider is html5 and setting is same as prev source,\n                     * retain media element (because ios system has limited resource,\n                     * can't create many video resource)\n                     */\n                    setAttributes(this.media, attributes);\n                } else {\n                    this.media = null;\n                    this.media = createElement(tagName, attributes);\n                }\n\n                // Inject the new element\n                this.elements.container.appendChild(this.media);\n\n                // Autoplay the new source?\n                if (is.boolean(input.autoplay)) {\n                    this.config.autoplay = input.autoplay;\n                }\n\n                // Set attributes for audio and video\n                if (this.isHTML5) {\n                    if (this.config.crossorigin) {\n                        this.media.setAttribute('crossorigin', '');\n                    }\n                    if (this.config.autoplay) {\n                        this.media.setAttribute('autoplay', '');\n                    }\n                    if (!is.empty(input.poster)) {\n                        this.poster = input.poster;\n                    }\n                    if (this.config.loop.active) {\n                        this.media.setAttribute('loop', '');\n                    }\n                    if (this.config.muted) {\n                        this.media.setAttribute('muted', '');\n                    }\n                    if (this.config.playsinline) {\n                        this.media.setAttribute('playsinline', '');\n                    }\n                }\n\n                // Restore class hook\n                ui.addStyleHook.call(this);\n                ui.addStylehookToFullscreenContainer.call(this);\n\n                // Set new sources for html5\n                if (this.isHTML5) {\n                    source.insertElements.call(this, 'source', sources);\n                    this.media.setAttribute('src', sources[0].src);\n                }\n\n                // Set video title\n                this.config.title = input.title;\n\n                // Set up from scratch\n                media.setup.call(this);\n\n                // restore video quality\n                const quality = this.storage.get('quality');\n                if (is.number(quality)) {\n                    this.media.quality = quality;\n                }\n\n                let defaultCaption = null;\n                // HTML5 stuff\n                if (this.isHTML5) {\n                    // Setup captions\n                    if ('tracks' in input) {\n                        source.insertElements.call(this, 'track', input.tracks);\n                        const defaultTracks = input.tracks.filter(track => track.default);\n                        if (defaultTracks.length > 0 ){\n                            defaultCaption = defaultTracks[0].srclang;\n                        }\n                        captions.update.call(this);\n                    }\n\n                    // Load HTML5 sources\n                    this.media.load();\n                }\n\n                // If HTML5 or embed but not fully supported, setupInterface and call ready now\n                if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n                    // Setup interface\n                    ui.build.call(this);\n                }\n\n                // Update the fullscreen support\n                this.fullscreen.update();\n                captions.setDefault.call(this, defaultCaption);\n                const speed = this.storage.get('speed');\n                if (is.number(speed)) {\n                    this.speed = speed;\n                    controls.updateSetting.call(this, 'speed', speed);\n                }\n                this.lectureNote.setupUI();\n            },\n            true,\n        );\n    },\n};\n\nexport default source;\n","// ==========================================================================\n// Plyr\n// plyr.js v3.4.6\n// https://github.com/sampotts/plyr\n// License: The MIT License (MIT)\n// ==========================================================================\n\nimport captions from './captions';\nimport defaults from './config/defaults';\nimport { pip } from './config/states';\nimport { getProviderByUrl, providers, types } from './config/types';\nimport Console from './console';\nimport controls from './controls';\nimport Fullscreen from './fullscreen';\nimport hahow from './hahowCustomControl';\nimport Listeners from './listeners';\nimport logo from './logo';\nimport media from './media';\nimport Ads from './plugins/ads';\nimport LectureNote from './plugins/lectureNote';\nimport source from './source';\nimport Storage from './storage';\nimport support from './support';\nimport ui from './ui';\nimport { closest } from './utils/arrays';\nimport { createElement, hasClass, removeElement, replaceElement, toggleClass, wrap } from './utils/elements';\nimport { off, on, once, triggerEvent, unbindListeners } from './utils/events';\nimport is from './utils/is';\nimport loadSprite from './utils/loadSprite';\nimport { cloneDeep, extend } from './utils/objects';\nimport { parseUrl } from './utils/urls';\n\n// Private properties\n// TODO: Use a WeakMap for private globals\n// const globals = new WeakMap();\n\n// Plyr instance\nclass Plyr {\n    constructor(target, options) {\n        this.timers = {};\n\n        // State\n        this.ready = false;\n        this.loading = false;\n        this.failed = false;\n\n        // Touch device\n        this.touch = support.touch;\n\n        // Set the media element\n        this.media = target;\n\n        // String selector passed\n        if (is.string(this.media)) {\n            this.media = document.querySelectorAll(this.media);\n        }\n\n        // jQuery, NodeList or Array passed, use first element\n        if ((window.jQuery && this.media instanceof jQuery) || is.nodeList(this.media) || is.array(this.media)) {\n            // eslint-disable-next-line\n            this.media = this.media[0];\n        }\n\n        // Set config\n        this.config = extend(\n            {},\n            defaults,\n            Plyr.defaults,\n            options || {},\n            (() => {\n                try {\n                    return JSON.parse(this.media.getAttribute('data-plyr-config'));\n                } catch (e) {\n                    return {};\n                }\n            })(),\n        );\n\n        // Elements cache\n        this.elements = {\n            container: null,\n            captions: null,\n            buttons: {},\n            display: {},\n            progress: {},\n            inputs: {},\n            settings: {\n                popup: null,\n                menu: null,\n                panels: {},\n                buttons: {},\n            },\n        };\n\n        // Captions\n        this.captions = {\n            active: null,\n            currentTrack: -1,\n            meta: new WeakMap(),\n        };\n\n        // Fullscreen\n        this.fullscreen = {\n            active: false,\n        };\n\n        // Options\n        this.options = {\n            speed: [],\n            quality: [],\n        };\n\n        // Debugging\n        // TODO: move to globals\n        this.debug = new Console(this.config.debug);\n\n        // Log config options and support\n        this.debug.log('Config', this.config);\n        this.debug.log('Support', support);\n\n        // We need an element to setup\n        if (is.nullOrUndefined(this.media) || !is.element(this.media)) {\n            this.debug.error('Setup failed: no suitable element passed');\n            return;\n        }\n\n        // Bail if the element is initialized\n        if (this.media.plyr) {\n            this.debug.warn('Target already setup');\n            return;\n        }\n\n        // Bail if not enabled\n        if (!this.config.enabled) {\n            this.debug.error('Setup failed: disabled by config');\n            return;\n        }\n\n        // Bail if disabled or no basic support\n        // You may want to disable certain UAs etc\n        if (!support.check().api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        // Cache original element state for .destroy()\n        const clone = this.media.cloneNode(true);\n        clone.autoplay = false;\n        this.elements.original = clone;\n\n        // Set media type based on tag or data attribute\n        // Supported: video, audio, vimeo, youtube\n        const type = this.media.tagName.toLowerCase();\n\n        // Embed properties\n        let iframe = null;\n        let url = null;\n\n        // Different setup based on type\n        switch (type) {\n            case 'div':\n                // Find the frame\n                iframe = this.media.querySelector('iframe');\n\n                // <iframe> type\n                if (is.element(iframe)) {\n                    // Detect provider\n                    url = parseUrl(iframe.getAttribute('src'));\n                    this.provider = getProviderByUrl(url.toString());\n\n                    // Rework elements\n                    this.elements.container = this.media;\n                    this.media = iframe;\n\n                    // Reset classname\n                    this.elements.container.className = '';\n\n                    // Get attributes from URL and set config\n                    if (url.search.length) {\n                        const truthy = ['1', 'true'];\n\n                        if (truthy.includes(url.searchParams.get('autoplay'))) {\n                            this.config.autoplay = true;\n                        }\n                        if (truthy.includes(url.searchParams.get('loop'))) {\n                            this.config.loop.active = true;\n                        }\n\n                        // TODO: replace fullscreen.iosNative with this playsinline config option\n                        // YouTube requires the playsinline in the URL\n                        if (this.isYouTube) {\n                            this.config.playsinline = truthy.includes(url.searchParams.get('playsinline'));\n                            this.config.hl = url.searchParams.get('hl'); // TODO: Should this be setting language?\n                        } else {\n                            this.config.playsinline = true;\n                        }\n                    }\n                } else {\n                    // <div> with attributes\n                    this.provider = this.media.getAttribute(this.config.attributes.embed.provider);\n\n                    // Remove attribute\n                    this.media.removeAttribute(this.config.attributes.embed.provider);\n                }\n\n                // Unsupported or missing provider\n                if (is.empty(this.provider) || !Object.keys(providers).includes(this.provider)) {\n                    this.debug.error('Setup failed: Invalid provider');\n                    return;\n                }\n\n                // Audio will come later for external providers\n                this.type = types.video;\n\n                break;\n\n            case 'video':\n            case 'audio':\n                this.type = type;\n                this.provider = providers.html5;\n\n                // Get config from attributes\n                if (this.media.hasAttribute('crossorigin')) {\n                    this.config.crossorigin = true;\n                }\n                if (this.media.hasAttribute('autoplay')) {\n                    this.config.autoplay = true;\n                }\n                if (this.media.hasAttribute('playsinline') || this.media.hasAttribute('webkit-playsinline')) {\n                    this.config.playsinline = true;\n                }\n                if (this.media.hasAttribute('muted')) {\n                    this.config.muted = true;\n                }\n                if (this.media.hasAttribute('loop')) {\n                    this.config.loop.active = true;\n                }\n\n                break;\n\n            default:\n                this.debug.error('Setup failed: unsupported type');\n                return;\n        }\n\n        // Check for support again but with type\n        this.supported = support.check(this.type, this.provider, this.config.playsinline);\n\n        // If no support for even API, bail\n        if (!this.supported.api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        this.eventListeners = [];\n\n        // Create listeners\n        this.listeners = new Listeners(this);\n\n        // Setup local storage for user settings\n        this.storage = new Storage(this);\n\n        // Store reference\n        this.media.plyr = this;\n\n        // Wrap media\n        if (!is.element(this.elements.container)) {\n            this.elements.container = createElement('div');\n            wrap(this.media, this.elements.container);\n        }\n\n        // Add style hook\n        ui.addStyleHook.call(this);\n        ui.addStylehookToFullscreenContainer.call(this);\n\n        // Setup media\n        media.setup.call(this);\n\n        // Listen for events if debugging\n        if (this.config.debug) {\n            on.call(this, this.elements.container, this.config.events.join(' '), event => {\n                this.debug.log(`event: ${event.type}`);\n            });\n        }\n\n        // Setup interface\n        // If embed but not fully supported, build interface now to avoid flash of controls\n        if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n            ui.build.call(this);\n        }\n\n        logo.setup.call(this);\n\n        // Container listeners\n        this.listeners.container();\n\n        // Global listeners\n        this.listeners.global();\n\n        // Setup fullscreen\n        this.fullscreen = new Fullscreen(this);\n\n        // Setup ads if provided\n        if (this.config.ads.enabled) {\n            this.ads = new Ads(this);\n        }\n\n        this.lectureNote = new LectureNote(this);\n\n        // Autoplay if required\n        if (this.config.autoplay) {\n            this.play();\n        }\n\n        // Seek time will be recorded (in listeners.js) so we can prevent hiding controls for a few seconds after seek\n        this.lastSeekTime = 0;\n    }\n\n    // ---------------------------------------\n    // API\n    // ---------------------------------------\n\n    /**\n     * Types and provider helpers\n     */\n    get isHTML5() {\n        return Boolean(this.provider === providers.html5);\n    }\n\n    get isEmbed() {\n        return Boolean(this.isYouTube || this.isVimeo);\n    }\n\n    get isYouTube() {\n        return Boolean(this.provider === providers.youtube);\n    }\n\n    get isVimeo() {\n        return Boolean(this.provider === providers.vimeo);\n    }\n\n    get isVideo() {\n        return Boolean(this.type === types.video);\n    }\n\n    get isAudio() {\n        return Boolean(this.type === types.audio);\n    }\n\n    /**\n     * Play the media, or play the advertisement (if they are not blocked)\n     */\n    play() {\n        if (!is.function(this.media.play)) {\n            return null;\n        }\n\n        // Return the promise (for HTML5)\n        return this.media.play();\n    }\n\n    /**\n     * Pause the media\n     */\n    pause() {\n        if (!this.playing || !is.function(this.media.pause)) {\n            return;\n        }\n\n        this.media.pause();\n    }\n\n    /**\n     * Get playing state\n     */\n    get playing() {\n        return Boolean(this.ready && !this.paused && !this.ended);\n    }\n\n    /**\n     * Get paused state\n     */\n    get paused() {\n        return Boolean(this.media.paused);\n    }\n\n    /**\n     * Get stopped state\n     */\n    get stopped() {\n        return Boolean(this.paused && this.currentTime === 0);\n    }\n\n    /**\n     * Get ended state\n     */\n    get ended() {\n        return Boolean(this.media.ended);\n    }\n\n    /**\n     * Toggle playback based on current status\n     * @param {boolean} input\n     */\n    togglePlay(input) {\n        // Toggle based on current state if nothing passed\n        const toggle = is.boolean(input) ? input : !this.playing;\n\n        if (toggle) {\n            this.play();\n        } else {\n            this.pause();\n        }\n    }\n\n    /**\n     * Stop playback\n     */\n    stop() {\n        if (this.isHTML5) {\n            this.pause();\n            this.restart();\n        } else if (is.function(this.media.stop)) {\n            this.media.stop();\n        }\n    }\n\n    /**\n     * Restart playback\n     */\n    restart() {\n        this.currentTime = 0;\n    }\n\n    /**\n     * Rewind\n     * @param {number} seekTime - how far to rewind in seconds. Defaults to the config.seekTime\n     */\n    rewind(seekTime) {\n        this.currentTime = this.currentTime - (is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Fast forward\n     * @param {number} seekTime - how far to fast forward in seconds. Defaults to the config.seekTime\n     */\n    forward(seekTime) {\n        this.currentTime = this.currentTime + (is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Seek to a time\n     * @param {number} input - where to seek to in seconds. Defaults to 0 (the start)\n     */\n    set currentTime(input) {\n        // Bail if media duration isn't available yet\n        if (!this.duration) {\n            return;\n        }\n\n        // Validate input\n        const inputIsValid = is.number(input) && input > 0;\n\n        // Set\n        this.media.currentTime = inputIsValid ? Math.min(input, this.duration) : 0;\n\n        // Logging\n        this.debug.log(`Seeking to ${this.currentTime} seconds`);\n    }\n\n    /**\n     * Get current time\n     */\n    get currentTime() {\n        return Number(this.media.currentTime);\n    }\n\n    /**\n     * Get buffered\n     */\n    get buffered() {\n        const { buffered } = this.media;\n\n        // YouTube / Vimeo return a float between 0-1\n        if (is.number(buffered)) {\n            return buffered;\n        }\n\n        // HTML5\n        // TODO: Handle buffered chunks of the media\n        // (i.e. seek to another section buffers only that section)\n        if (buffered && buffered.length && this.duration > 0) {\n            return buffered.end(0) / this.duration;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Get seeking status\n     */\n    get seeking() {\n        return Boolean(this.media.seeking);\n    }\n\n    /**\n     * Get the duration of the current media\n     */\n    get duration() {\n        // Faux duration set via config\n        const fauxDuration = parseFloat(this.config.duration);\n\n        // Media duration can be NaN or Infinity before the media has loaded\n        const realDuration = (this.media || {}).duration;\n        const duration = !is.number(realDuration) || realDuration === Infinity ? 0 : realDuration;\n\n        // If config duration is funky, use regular duration\n        return fauxDuration || duration;\n    }\n\n    /**\n     * Set the player volume\n     * @param {number} value - must be between 0 and 1. Defaults to the value from local storage and config.volume if not set in storage\n     */\n    set volume(value) {\n        let volume = value;\n        const max = 1;\n        const min = 0;\n\n        if (is.string(volume)) {\n            volume = Number(volume);\n        }\n\n        // Load volume from storage if no value specified\n        if (!is.number(volume)) {\n            volume = this.storage.get('volume');\n        }\n\n        // Use config if all else fails\n        if (!is.number(volume)) {\n            ({ volume } = this.config);\n        }\n\n        // Maximum is volumeMax\n        if (volume > max) {\n            volume = max;\n        }\n        // Minimum is volumeMin\n        if (volume < min) {\n            volume = min;\n        }\n\n        // Update config\n        this.config.volume = volume;\n\n        // Set the player volume\n        this.media.volume = volume;\n\n        // If muted, and we're increasing volume manually, reset muted state\n        if (!is.empty(value) && this.muted && volume > 0) {\n            this.muted = false;\n        }\n    }\n\n    /**\n     * Get the current player volume\n     */\n    get volume() {\n        return Number(this.media.volume);\n    }\n\n    /**\n     * Increase volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    increaseVolume(step) {\n        const volume = this.media.muted ? 0 : this.volume;\n        this.volume = volume + (is.number(step) ? step : 0);\n    }\n\n    /**\n     * Decrease volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    decreaseVolume(step) {\n        this.increaseVolume(-step);\n    }\n\n    set fullscreenContainer (container) {\n        if (is.element(container)) {\n            this.config.fullscreenContainer = container;\n            ui.addStylehookToFullscreenContainer.call(this);\n        }\n    }\n\n    /**\n     * Set muted state\n     * @param {boolean} mute\n     */\n    set muted(mute) {\n        let toggle = mute;\n\n        // Load muted state from storage\n        if (!is.boolean(toggle)) {\n            toggle = this.storage.get('muted');\n        }\n\n        // Use config if all else fails\n        if (!is.boolean(toggle)) {\n            toggle = this.config.muted;\n        }\n\n        // Update config\n        this.config.muted = toggle;\n\n        // Set mute on the player\n        this.media.muted = toggle;\n    }\n\n    /**\n     * Get current muted state\n     */\n    get muted() {\n        return Boolean(this.media.muted);\n    }\n\n    /**\n     * Check if the media has audio\n     */\n    get hasAudio() {\n        // Assume yes for all non HTML5 (as we can't tell...)\n        if (!this.isHTML5) {\n            return true;\n        }\n\n        if (this.isAudio) {\n            return true;\n        }\n\n        // Get audio tracks\n        return (\n            Boolean(this.media.mozHasAudio) ||\n            Boolean(this.media.webkitAudioDecodedByteCount) ||\n            Boolean(this.media.audioTracks && this.media.audioTracks.length)\n        );\n    }\n\n    /**\n     * Set playback speed\n     * @param {number} speed - the speed of playback (0.5-2.0)\n     */\n    set speed(input) {\n        let speed = null;\n\n        if (is.number(input)) {\n            speed = input;\n        }\n\n        if (!is.number(speed)) {\n            speed = this.storage.get('speed');\n        }\n\n        if (!is.number(speed)) {\n            speed = this.config.speed.selected;\n        }\n\n        // Set min/max\n        if (speed < 0.1) {\n            speed = 0.1;\n        }\n        if (speed > 2.0) {\n            speed = 2.0;\n        }\n\n        if (!this.config.speed.options.includes(speed)) {\n            this.debug.warn(`Unsupported speed (${speed})`);\n            return;\n        }\n\n        // Update config\n        this.config.speed.selected = speed;\n\n        // Set media speed\n        this.media.playbackRate = speed;\n    }\n\n    /**\n     * Get current playback speed\n     */\n    get speed() {\n        return Number(this.media.playbackRate);\n    }\n\n    /**\n     * Set playback quality\n     * Currently HTML5 & YouTube only\n     * @param {number} input - Quality level\n     */\n    set quality(input) {\n        const config = this.config.quality;\n        const options = this.options.quality;\n\n        if (!options.length) {\n            return;\n        }\n\n        let quality = [\n            !is.empty(input) && Number(input),\n            this.storage.get('quality'),\n            config.selected,\n            config.default,\n        ].find(is.number);\n\n        if (!options.includes(quality)) {\n            const value = closest(options, quality);\n            this.debug.warn(`Unsupported quality option: ${quality}, using ${value} instead`);\n            quality = value;\n        }\n\n        // Update config\n        config.selected = quality;\n\n        // Set quality\n        this.media.quality = quality;\n\n        // Save to storage\n        this.storage.set({ quality });\n    }\n\n    /**\n     * Get current quality level\n     */\n    get quality() {\n        return this.media.quality;\n    }\n\n    /**\n     * Toggle loop\n     * TODO: Finish fancy new logic. Set the indicator on load as user may pass loop as config\n     * @param {boolean} input - Whether to loop or not\n     */\n    set loop(input) {\n        const toggle = is.boolean(input) ? input : this.config.loop.active;\n        this.config.loop.active = toggle;\n        this.media.loop = toggle;\n\n        // Set default to be a true toggle\n        /* const type = ['start', 'end', 'all', 'none', 'toggle'].includes(input) ? input : 'toggle';\n\n        switch (type) {\n            case 'start':\n                if (this.config.loop.end && this.config.loop.end <= this.currentTime) {\n                    this.config.loop.end = null;\n                }\n                this.config.loop.start = this.currentTime;\n                // this.config.loop.indicator.start = this.elements.display.played.value;\n                break;\n\n            case 'end':\n                if (this.config.loop.start >= this.currentTime) {\n                    return this;\n                }\n                this.config.loop.end = this.currentTime;\n                // this.config.loop.indicator.end = this.elements.display.played.value;\n                break;\n\n            case 'all':\n                this.config.loop.start = 0;\n                this.config.loop.end = this.duration - 2;\n                this.config.loop.indicator.start = 0;\n                this.config.loop.indicator.end = 100;\n                break;\n\n            case 'toggle':\n                if (this.config.loop.active) {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = null;\n                } else {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = this.duration - 2;\n                }\n                break;\n\n            default:\n                this.config.loop.start = 0;\n                this.config.loop.end = null;\n                break;\n        } */\n    }\n\n    /**\n     * Get current loop state\n     */\n    get loop() {\n        return Boolean(this.media.loop);\n    }\n\n    /**\n     * Set new media source\n     * @param {object} input - The new source object (see docs)\n     */\n    set source(input) {\n        source.change.call(this, input);\n    }\n\n    /**\n     * Get current source\n     */\n    get source() {\n        return this.media.currentSrc;\n    }\n\n    /**\n     * Get a download URL (either source or custom)\n     */\n    get download() {\n        const { download } = this.config.urls;\n\n        return is.url(download) ? download : this.source;\n    }\n\n    /**\n     * Set the poster image for a video\n     * @param {input} - the URL for the new poster image\n     */\n    set poster(input) {\n        if (!this.isVideo) {\n            this.debug.warn('Poster can only be set for video');\n            return;\n        }\n\n        ui.setPoster.call(this, input, false).catch(() => {});\n    }\n\n    /**\n     * Get the current poster image\n     */\n    get poster() {\n        if (!this.isVideo) {\n            return null;\n        }\n\n        return this.media.getAttribute('poster');\n    }\n\n    /**\n     * Set the autoplay state\n     * @param {boolean} input - Whether to autoplay or not\n     */\n    set autoplay(input) {\n        const toggle = is.boolean(input) ? input : this.config.autoplay;\n        this.config.autoplay = toggle;\n    }\n\n    /**\n     * Get the current autoplay state\n     */\n    get autoplay() {\n        return Boolean(this.config.autoplay);\n    }\n\n    /**\n     * Toggle captions\n     * @param {boolean} input - Whether to enable captions\n     */\n    toggleCaptions(input) {\n        captions.toggle.call(this, input, false);\n    }\n\n    /**\n     * Set the caption track by index\n     * @param {number} - Caption index\n     */\n    set currentTrack(input) {\n        captions.set.call(this, input, false);\n    }\n\n    /**\n     * Get the current caption track index (-1 if disabled)\n     */\n    get currentTrack() {\n        const { toggled, currentTrack } = this.captions;\n        return toggled ? currentTrack : -1;\n    }\n\n    set captionPosition(input) {\n        this.captions.position = input;\n        this.storage.set({\n            captionPosition: input,\n        });\n        captions.setPosition.call(this, this.captions.position);\n    }\n\n    get captionPosition() {\n        return this.storage.get('captionPosition') || this.config.captions.position;\n    }\n\n    /**\n     * Set the wanted language for captions\n     * Since tracks can be added later it won't update the actual caption track until there is a matching track\n     * @param {string} - Two character ISO language code (e.g. EN, FR, PT, etc)\n     */\n    set language(input) {\n        captions.setLanguage.call(this, input, false);\n    }\n\n    /**\n     * Get the current track's language\n     */\n    get language() {\n        return (captions.getCurrentTrack.call(this) || {}).language;\n    }\n\n    /**\n     * Toggle picture-in-picture playback on WebKit/MacOS\n     * TODO: update player with state, support, enabled\n     * TODO: detect outside changes\n     */\n    set pip(input) {\n        // Bail if no support\n        if (!support.pip) {\n            return;\n        }\n\n        // Toggle based on current state if not passed\n        const toggle = is.boolean(input) ? input : !this.pip;\n\n        // Toggle based on current state\n        // Safari\n        if (is.function(this.media.webkitSetPresentationMode)) {\n            this.media.webkitSetPresentationMode(toggle ? pip.active : pip.inactive);\n        }\n\n        // Chrome\n        if (is.function(this.media.requestPictureInPicture)) {\n            if (!this.pip && toggle) {\n                this.media.requestPictureInPicture();\n            } else if (this.pip && !toggle) {\n                document.exitPictureInPicture();\n            }\n        }\n    }\n\n    /**\n     * Get the current picture-in-picture state\n     */\n    get pip() {\n        if (!support.pip) {\n            return null;\n        }\n\n        // Safari\n        if (!is.empty(this.media.webkitPresentationMode)) {\n            return this.media.webkitPresentationMode === pip.active;\n        }\n\n        // Chrome\n        return this.media === document.pictureInPictureElement;\n    }\n\n    /**\n     * Trigger the airplay dialog\n     * TODO: update player with state, support, enabled\n     */\n    airplay() {\n        // Show dialog if supported\n        if (support.airplay) {\n            this.media.webkitShowPlaybackTargetPicker();\n        }\n    }\n\n    /**\n     * Toggle the player controls\n     * @param {boolean} [toggle] - Whether to show the controls\n     */\n    toggleControls(toggle) {\n        // Don't toggle if missing UI support or if it's audio\n        if (this.supported.ui && !this.isAudio) {\n            // Get state before change\n            const isHidden = hasClass(this.elements.container, this.config.classNames.hideControls);\n\n            // Negate the argument if not undefined since adding the class to hides the controls\n            const force = typeof toggle === 'undefined' ? undefined : !toggle;\n\n            // Apply and get updated state\n            const hiding = toggleClass(this.elements.container, this.config.classNames.hideControls, force);\n\n            // Close menu\n            if (hiding && this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\n                controls.toggleMenu.call(this, false);\n            }\n\n            // Trigger event on change\n            if (hiding !== isHidden) {\n                const eventName = hiding ? 'controlshidden' : 'controlsshown';\n                triggerEvent.call(this, this.media, eventName);\n            }\n\n            return !hiding;\n        }\n\n        return false;\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    on(event, callback) {\n        on.call(this, this.elements.container, event, callback);\n    }\n\n    /**\n     * Add event listeners once\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    once(event, callback) {\n        once.call(this, this.elements.container, event, callback);\n    }\n\n    /**\n     * Remove event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    off(event, callback) {\n        off(this.elements.container, event, callback);\n    }\n\n    /**\n     * Destroy an instance\n     * Event listeners are removed when elements are removed\n     * http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\n     * @param {function} callback - Callback for when destroy is complete\n     * @param {boolean} soft - Whether it's a soft destroy (for source changes etc)\n     */\n    destroy(callback, soft = false) {\n        if (!this.ready) {\n            return;\n        }\n\n        const done = () => {\n            // Reset overflow (incase destroyed while in fullscreen)\n            document.body.style.overflow = '';\n\n            // GC for embed\n            this.embed = null;\n\n            // If it's a soft destroy, make minimal changes\n            if (soft) {\n                if (Object.keys(this.elements).length) {\n                    // Remove elements\n                    removeElement(this.elements.buttons.play);\n                    removeElement(this.elements.captions);\n                    removeElement(this.elements.controls);\n                    removeElement(this.elements.wrapper);\n\n                    // Clear for GC\n                    this.elements.buttons.play = null;\n                    this.elements.captions = null;\n                    this.elements.controls = null;\n                    this.elements.wrapper = null;\n                }\n\n                // Callback\n                if (is.function(callback)) {\n                    callback();\n                }\n            } else {\n                // Unbind listeners\n                unbindListeners.call(this);\n\n                // Replace the container with the original element provided\n                replaceElement(this.elements.original, this.elements.container);\n\n                // Event\n                triggerEvent.call(this, this.elements.original, 'destroyed', true);\n\n                // Callback\n                if (is.function(callback)) {\n                    callback.call(this.elements.original);\n                }\n\n                // Reset state\n                this.ready = false;\n\n                // Clear for garbage collection\n                setTimeout(() => {\n                    this.elements = null;\n                    this.media = null;\n                }, 200);\n            }\n        };\n\n        // Stop playback\n        this.stop();\n\n        // Provider specific stuff\n        if (this.isHTML5) {\n            // Clear timeout\n            clearTimeout(this.timers.loading);\n\n            // Restore native video controls\n            ui.toggleNativeControls.call(this, true);\n\n            // Clean up\n            done();\n        } else if (this.isYouTube) {\n            // Clear timers\n            clearInterval(this.timers.buffering);\n            clearInterval(this.timers.playing);\n\n            // Destroy YouTube API\n            if (this.embed !== null && is.function(this.embed.destroy)) {\n                this.embed.destroy();\n            }\n\n            // Clean up\n            done();\n        } else if (this.isVimeo) {\n            // Destroy Vimeo API\n            // then clean up (wait, to prevent postmessage errors)\n            if (this.embed !== null) {\n                this.embed.unload().then(done);\n            }\n\n            // Vimeo does not always return\n            setTimeout(done, 200);\n        }\n    }\n\n    /**\n     * Check for support for a mime type (HTML5 only)\n     * @param {string} type - Mime type\n     */\n    supports(type) {\n        return support.mime.call(this, type);\n    }\n\n    /**\n     * Check for support\n     * @param {string} type - Player type (audio/video)\n     * @param {string} provider - Provider (html5/youtube/vimeo)\n     * @param {bool} inline - Where player has `playsinline` sttribute\n     */\n    static supported(type, provider, inline) {\n        return support.check(type, provider, inline);\n    }\n\n    /**\n     * Load an SVG sprite into the page\n     * @param {string} url - URL for the SVG sprite\n     * @param {string} [id] - Unique ID\n     */\n    static loadSprite(url, id) {\n        return loadSprite(url, id);\n    }\n\n    /**\n     * Setup multiple instances\n     * @param {*} selector\n     * @param {object} options\n     */\n    static setup(selector, options = {}) {\n        let targets = null;\n\n        if (is.string(selector)) {\n            targets = Array.from(document.querySelectorAll(selector));\n        } else if (is.nodeList(selector)) {\n            targets = Array.from(selector);\n        } else if (is.array(selector)) {\n            targets = selector.filter(is.element);\n        }\n\n        if (is.empty(targets)) {\n            return null;\n        }\n\n        return targets.map(t => new Plyr(t, options));\n    }\n}\n\nPlyr.defaults = cloneDeep(defaults);\nPlyr.hahow = hahow;\nexport default Plyr;\n"]}